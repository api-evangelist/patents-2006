---

title: Method and system for distribution of map content to mobile communication devices
abstract: A system and method are set forth for distributing map content from a server to a communication device by transmitting a request from the communication device to the map server for a maplet index of map data covering a specified area and identified by coordinates for defining the map data, receiving the request at the map server and in response transmitting the maplet index to the communication device, wherein the maplet index defines content available the maplet without including all of the data points therein.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08788613&OS=08788613&RS=08788613
owner: BlackBerry Limited
number: 08788613
owner_city: Waterloo
owner_country: CA
publication_date: 20060707
---
This application claims the benefit of U.S. Provisional Patent Application No. 60 787 541 filed Mar. 31 2006 the contents of which are incorporated herein by reference.

A portion of this specification contains material that is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document as it appears in the Patent and Trademark Office patent file or records but otherwise reserves all copyrights whatsoever.

The following is directed in general to mobile communication devices and more particularly to a method for distribution of map content to mobile devices.

Mobile communication devices have become popular for business and personal use due to a relatively recent increase in number of services and features that the devices and mobile infrastructures support. Handheld mobile communication devices sometimes referred to as mobile stations are essentially portable computers having wireless capability and come in various forms. These include Personal Digital Assistants PDAs cellular phones and smart phones.

More recently global positioning system GPS receivers have been integrated within such mobile communication devices for providing enhanced location based services LBS . In operation a map application within the mobile communication device sends a request to a map server for information relating to a city restaurant street address route etc. If the device is location aware the request includes the current location of the device. The map server extracts generic map content from a Geographical Information Systems GIS map database e.g. Navtech TelAtlas etc. at a specified level of resolution zoom level . Custom graphics associated with the query such as highlighted route pushpin for current position or street address etc. are post processed and merged by the server with the generic map content. Relevant screen graphics are then labeled and the merged map graphic is compressed and delivered to the device for display.

One problem associated with the foregoing technical approach to providing mobile mapping service is that the delivered map graphic DMG is in the form of a bit mapped flat file at a specific zoom level that is not scalable in either lateral pan or vertical zoom contexts . After the map graphic has been downloaded to the device subsequent pan or zoom operations from the device will result in further requests to the server. For example if a DMG is delivered to the device as a 2 Kbyte map at the lowest level Level 0 resolution field of view e.g. 1 meter pixel then if the user wishes to zoom in to the next highest level Level 1 resolution field of view the server is required to deliver four 2 Kbytes maps e.g. 2 meters pixel . If the user requests Level 2 then 16 2 Kbyte maps of data must be downloaded to the device and so on. From the foregoing it is evident that the inability to provide scaling of bit map data according to conventional techniques gives rise to non linear growth in the amount of data that is required to be downloaded to the device. Also by merging the labels with the delivered map graphic any labeling that extends between two DMG files is cut off when one of the files is displayed at the device. Furthermore shipping label sets with all DMG s only to have them discarded by the device is a waste of bandwidth. A relatively low percentage of map graphics actually get labeled particularly on the small size screen of a mobile device thereby causing label clutter collisions.

It will also be appreciated that the downloading of large amounts of map data according to conventional techniques consumes significant over the air OTA bandwidth requiring considerable time to complete the download. Furthermore the storing of such large amounts of map data on the device undermines device capability to cache the data.

Moreover the DMG often is not geocoded with latitude longitude association thereby inhibiting implementation of device features like dynamic updating of current position while the device is in motion or position resolution of any location tag information on the device such as personal points of interest etc. In addition features on DMG that haven t been labeled cannot be queried.

As set forth in greater detail below a method apparatus and data structure are provided for efficient rendering of map artifacts while minimizing connection time of a mobile communication device to a map server. Preferably map data on the server is accessed by the device on demand and the device uses local caching and applies context filtering of map data on the server.

According to an aspect of this specification a Maplet data structure is provided that contains all of the graphic and labeled content associated with a geographic area e.g. map features such as restaurants point features streets line features or lakes polygon features . Maplets are structured in Layers of DEntries Data Entries identified by a Layer ID to enable data from different sources to be deployed to the device and meshed for proper rendering. Each DEntry is representative of one or more artifact or label or a combination of both and includes coordinate information also referred to a bounding box or bounding area to identify the area covered by the DEntry and a plurality of data Points that together represent the artifact or label. For example a DEntry may be used to represent a street on a city map or a plurality of streets wherein the various Points within the DEntry are separated into different parts representing various portions of the artifact e.g. portions of a street . As discussed in greater detail below a mobile device may issue a request for the map server to download only those DEntries that are included within a specified area or bounding box representing an area of interest that can be represented by for example a pair of bottom left top right coordinates.

As discussed in greater detail below with reference to the mobile device issues one or more AOI Area of Interest requests DEntry or data requests and Maplet Index requests to the map server as set forth in greater detail below for selective downloading of map data based on user context. Thus rather than transmitting the entire map data with each request from the device local caching may be used within the mobile device in conjunction with context filtering of map data on the server. For example if a user s mobile device is GPS enabled and the user is traveling in an automobile at 120 km hr along a freeway then context filtering can be employed to prevent downloading of map data relating to passing side streets. Or if the user is traveling in an airplane at 30 000 then context filtering can be employed to prevent downloading of map data for any streets whatsoever. Also a user s context can be defined for example in terms of occupation e.g. a user whose occupation is transport truck driver can employ context filtering to prevent downloading of map data for side streets on which the user s truck is incapable of traveling or a user whose occupation is to replenish supplies of soft drink dispensing machines can employ context filtering to download public map data showing the user s geographical area of responsibility with irrelevant features such as lakes or parks filtered out and private map data containing the location of soft drink dispensing machines superimposed on the public map data.

The Maplet Index request results in a Maplet Index i.e. only a portion of the Maplet that provides a table of contents of the map data available within the Maplet rather than the entire Maplet being downloaded from the map server to the device thereby conserving OTA Over the Air bandwidth and device memory caching requirements. The Maplet Index conforms to the same data structure as a Maplet but omits the data Points. Consequently the Maplet Index is small e.g. 300 400 bytes relative to the size of a fully populated Maplet or a conventional bit map and includes DEntry bounding boxes and attributes size complexity etc. for all artifacts within the Maplet. As the field of view changes e.g. for a location aware device that displays a map while moving the device client software assesses whether or not it needs to download additional data from the server. Thus as discussed above if the size attribute or complexity attribute of an artifact that has started to move into the field of view of the device but is not yet being displayed is not relevant to the viewer s current context then the device can choose not to display that portion of the artifact. On the other hand if the portion of the artifact is appropriate for display then the device accesses its cache to determine whether the DEntries associated with that portion of the artifact have already been downloaded in which case the cached content is displayed. Otherwise the device issues a request for the map server to download all of the DEntries associated with the artifact portion.

By organizing the Maplet data structure in Layers it is possible to seamlessly combine and display information obtained from public and private databases. For example it is possible for the device to display an office building at a certain address on a street e.g. 1z order attribute from public database adjacent a river e.g. 2z order attribute from public database with a superimposed floor plan of the building to show individual offices e.g. 11z order attribute from a private database accessible through a firewall .

Alternatively where no corporate servers provided the request from a device may be passed via relay to a public MDS server which sends the request to the LBS load balancing server and therefrom to one of the plurality of public LBS servers providing location based services LBS to handle the request.

A person of skill in the art will understand that the architecture depicted in is illustrative only of an exemplary embodiment and that numerous other architecture configurations are possible which for example may include or exclude secure communication channels replace or omit specific servers or nodes e.g. the relay in certain implementations etc.

In the example of all of the map data for the entire world is divided and stored as a grid within the various map servers according to various levels of resolution zoom as set forth below in Table A. Thus a single A level Maplet represents a 0.05 0.05 degree grid area a single B level Maplet represents a 0.5 0.5 degree grid area a single C level Maplet represents a 5 5 degree grid area a single D level Maplet represents a 50 50 degree grid area and a single E level Maplet represents the entire world in a single Maplet. It is understood that Table 1 is only an example of a particular Maplet grid configuration. Other or different grid configurations can also be developed. As discussed in greater detail below a Maplet comprises of a set of Layers with each Layer containing a set of DEntries and each DEntry containing a set of Points.

As discussed above and in greater detail with reference to three types of requests may be generated by a mobile communication device for receipt by map server AOI requests DEntry requests and Maplet Index requests. The requests may be generated separately or in various combinations as discussed in greater detail below. An AOI area of interest request calls for all DEntries in a given area bounding box for a predetermined or selected set of z order Layers. The AOI request is usually generated when the device moves to a new area so as to fetch DEntries for display before the device client knows what is available in the Maplet. The Maplet Index has the exact same structure as a Maplet but does not contain complete DEntries i.e. the data Points actually representing artifacts and labels are omitted . Thus a Maplet Index defines what Layers and DEntries are available for a given Maplet. A data or DEntry request is a mechanism to bundle together all of the required Dentries for a given Maplet. Additional details of an exemplary message exchange between device and map server are provided in as discussed in greater detail below.

Typically AOI and Maplet Index requests are paired together in the same message although they need not be while DEntry requests are generated most often. For example when a device moves into an area in connection with which no information has been stored on the device client the Maplet Index request returns a Maplet Index that indicates what data the client can specifically request from the server while the AOI request returns any DEntries within the area of interest for the specified Layers if they exist . In the example requests shown on the desired Maplet is identified within a DEntry request by specifying the bottom left Maplet coordinate. In addition the DEntry request may include a layer mask so that unwanted Layers are not downloaded a DEntry mask so that unwanted data Points are not downloaded and zoom values to specify a zoom level for the requested DEntry. Once the device client has received the requested Maplet Index the client typically then issues multiple DEntry requests to ask for specific DEntries since the client knows all of the specific DEntries that are available based on the Maplet Index .

According to an exemplary embodiment a collection of 20 20 A level Maplets representing a 1 1 degree square is compiled into a Maplet Block File .mbl . An .mbl file contains a header which specifies the offset and length of each Maplet in the .mbl file. The same 20 20 collection of Maplet index data is compiled into a Maplet Index file .mbx . The .mbl and .mbx file structures are set forth in Tables B and C respectively.

In Table B the offset of Maplet 0 is 0x00000000 since according to the illustrated embodiment the data structure is based on the assumption that the base address for the actual Maplet data is 0x00000C80. Therefore the absolute address for Maplet 0 data is Maplet 0 Address Base Address 0x00000C80 Maplet 0 Offset 0x00000000 and additional Maplet addresses are calculated as Maplet n 1 Offset Maplet n Offset Maplet n Length. If a Maplet has no data or does not exist the length parameter is set to zero 0x00000000 .

In Table C the offset of Maplet Index 0 is 0x00000000 since according to an exemplary embodiment the data structure is based on the assumption that the base address for the actual Maplet index data is 0x00000C80. Therefore the absolute address for Maplet Index 0 data is Maplet Index 0 Address Base Address 0x00000C80 Maplet Index 0 Offset 0x00000000 and additional Maplet index addresses are calculated as Maplet Index n 1 Offset Maplet Index n Offset Maplet Index n Length. If a Maplet Index has no data or does not exist the length parameter is set to zero 0x00000000 .

Table D provides a high byte level description of a Maplet where the specific field descriptions for the Layer Entry DEntry and Points are set forth in greater detail below.

For purposes of explanation shows the complete data set for Maplet 0 including the Layer Entrys DEntrys and Points and Maplet size. However in practice only the graphical map data is displayed on mobile device for ease of viewing and in order to reduce clutter.

As shown in the Points of each DEntry are divided into parts. For example the last DEntry Layer 2 DEntry 2 has a total of 103 Points divided into 3 parts one part of 88 Points one of 2 Points and one of 13 Points. With graphical map data a series of Points may represent one line connecting all of the Points or alternatively a series of lines parts . Parts are represented by setting a bit in the Points data structure to indicate the end of a Part i.e. the Most Significant Bit MSB in the exemplary embodiment of as described in greater detail below.

As discussed above the Maplet Index Data Structure is identical to the Maplet Data Structure except that the DEntries contain no Points i.e. set of data Points oPoints or Labels and are therefore all exactly 12 bytes. and Table F show the equivalent Maplet Index for the Maplet shown in including the size of the Maplet Index file 92 bytes which is significantly less than the size of the complete Maplet 544 bytes .

In this example each Layer Entry is 20 bytes long and consists of 6 fields as shown in and Table G below including attributes used for rendering DEntries associated with that Layer Entry on a display of mobile device . In this example the DEntry rendering attributes are part of and associated with a particular Layer Entry but could alternatively be located within a different portion of the Maplet Index data structure and be associated with either more than one or all of the Layer Entries or specific DEntries of a particular Maplet. In the example of Table G the rendering attributes include a zoom index a shape type a line type and a color field but it is understood that the number and type of attributes used may be customized to meet different rendering requirements. Also in Table G it should be noted that Latitude and Longitude are specified in decimal degrees with 5 decimal places of accuracy 1 100 000of a degree . The Bottom Left Latitude and Longitude of the Layer are identical to the Bottom Left Latitude and Longitude of the Maplet. The address of the 1DEntry of the Layer is calculated as follows 1DEntry Address for Layer Maplet Base Address 8 of Layers 20 DOFFSET.

In this example the DEntry data structure consists of 12 bytes as shown in and further described in Table I below. A DEntry specifies the number of Points the type of Points i.e. set of data points oPoints or a Label and the bounding box for these Points with different types of DEntry data being provided Labels and Points as described in greater detail below.

It should be noted that in this example the offset Latitude and Longitude representing the boundary box are specified in decimal degrees with 5 decimal places of accuracy 1 100 000of a degree . The Bottom Left Latitude and Longitude of a DEntry are added to the Bottom Left Latitude and Longitude of the Layer to obtain the absolute Latitude and Longitude.

According to an exemplary embodiment there are two types of data specified by the DETYPE field oPoints and strLabels. oPoints are used to represent and reconstruct a point line or polygon whereas the strLabel data structure is used to represent label data.

The oPoint data structure is illustrated in and described in Table J below while the strLabel data structure is illustrated in and described in Table L.

In and Table J X and Y are relative offsets in Longitude and Latitude respectively from the previous oPoint. The first oPoint is relative to the bottom left coordinates of the DEntry. It should be noted that the X and Y co ordinates are first scaled by a Zoom Scale which is determined by the ZOOMINDEX of the Layer Entry. The ZOOMINDEX and scaling Zoom Scale are shown in Table K below extracted from Table G .

The ENDOFPART bit is used to separate the individual Points in the series of Points of a DEntry. When the ENDOFPART bit is set it indicates that a particular Point is the last in a series of connected Points. This informs the map application within device that instead of drawing a line to the next point it should move to the next point without drawing a line . The reason this bit is needed is because within a DEntry which is essentially an area there will be multiple lines or polygons or points with the DEntry. This bit is used to separate the shapes.

The ENDOFGREF bit is used only for a series of points that represent a polygon STYPE SHPT POLYGON to indicate that the next part is a Hole Polygon rather than a regular Polygon. A Hole Polygon is needed since certain areas represented by polygons may have holes in them e.g. a section of a river represented by a polygon with an island in the middle represented by a hole polygon .

If both ENDOFPART and ENDOFGREF are set then the next polygon is a hole polygon. If only the ENDOFPART bit is set then the next polygon is a regular polygon.

In this example the strLabel Point consists of an X and Y Longitude and Latitude value and 24 Characters of the Label Text. The X and Y co ordinates provide an exact location to plot the label.

According to an exemplary embodiment the typedef statements for the Layer Entry DEntry Point and Label data structures are as follows 

The provision of location based services LBS uses a client service architecture where the client component comprises a map application running on the mobile device for providing the end user with the capability to perform location related tasks. Although the server component is shown residing on public LBS server it may also reside either on a corporate enterprise server such as server shown in or a corporate LBS server such as server shown in . The server component houses location related data contains the business logic to manipulate this data and fulfills LBS requests from the client . Also as shown in the map application is capable of meshing map data from multiple servers .

Communications between the mobile communication device and each server are either http based or TCP IP socket based. The former is used for LBS data requests and device location reporting initiated by the device and are exchanged as messages over the network carrier Internet connection and the public Network Operations Center NOC or corporate enterprise server . These communications adhere to a set of well to find LBS communications protocols supporting both single and batch requests as discussed in greater detail below.

In addition the LBS system preferably interfaces with external systems such as a Data Authority not shown to obtain and synchronize location data as well as to provide an administrative interface for a system administrator to configure the LBS server .

As discussed briefly above in connection with mobile communication device is preferably a two way communication device having at least voice and advanced data communication capabilities including the capability to communicate with other computer systems. Depending on the functionality provided by mobile communication device it may be referred to as a data messaging device a two way pager a cellular telephone with data messaging capabilities a wireless Internet appliance or a data communication device with or without telephony capabilities . Mobile communication device may communicate with any one of a plurality of LBS servers within its geographic coverage area as discussed above in connection with .

Mobile communication device will normally incorporate a transceiver which includes a receiver a transmitter and associated components such as an antenna . As will be apparent to those skilled in the field of communications particular design of transceiver depends on the communication network in which the mobile communication device is intended to operate.

Mobile communication device may send and receive communication signals over the network after required network registration or activation procedures have been completed. Signals received by antenna through the network are input to transceiver which may perform such common receiver functions as signal amplification frequency down conversion filtering channel selection analog to digital A D conversion and the like. A D conversion of a received signal allows more complex communication functions such as demodulation and decoding to be performed. In a similar manner signals to be transmitted or processed including modulation and encoding for example via a Digital Signal Processor not shown . These DSP processed signals are input to transceiver for digital to analog D A conversion filtering amplification and transmission over communication network via antenna .

Network access is associated with a subscriber or user of a mobile communication device and therefore mobile communication device requires a Subscriber Identity Module or SIM card to be inserted in a SIM interface not shown in order to operate in the network. Mobile communication device is a battery powered device so it also includes a battery interface for receiving one or more rechargeable batteries . Such a battery provides electrical power to most if not all electrical circuitry in mobile communication device and the battery interface not shown provides for a mechanical and electrical connection.

Mobile communication device includes a microprocessor which controls overall operation. Communication functions including at least data and voice communications are performed through transceiver . Microprocessor also interacts with additional device subsystems such as a display a flash memory a random access memory RAM a keyboard a speaker a microphone and any other device subsystems that may be desirable such as auxiliary input output I O subsystems serial port and or short range communications.

Operating system software used by microprocessor is preferably stored in a persistent store such as flash memory which may alternatively be a read only memory ROM or similar storage element not shown . Those skilled in the art will appreciate that the operating system specific device applications or parts thereof may be temporarily loaded into a volatile store such as RAM .

Microprocessor in addition to its operating system functions preferably enables execution of software applications on mobile communication device . A predetermined set of applications which control basic device operations including at least data and voice communication applications will normally be installed on mobile communication device during its manufacture. A preferred application that may be loaded onto mobile communication device may be a personal information manager PIM application having the ability to organize and manage data items relating to the user such as but not limited to e mail calendar events voice mails appointments and task items. Naturally one or more memory stores are available on mobile communication device and SIM to facilitate storage of PIM data items and other information.

As discussed above memory includes a plurality of applications or routines associated with visually displayed icons for the processing of data. These applications may be in any of a variety of forms such as without limitation software firmware and the like including for example an e mail application a calendar application an address book application a tasks application a memo application and a search application . An operating system OS program also resides in memory . The mobile communication device of the present disclosure is also adapted to render visual maps in its visual display and utilizes a map application stored in memory to facilitate map rendering and related functionality. Preferably map application incorporates several functional modules including a Map Viewer a Route Module and a Locate Module as shown in .

Map Viewer receives Latitude and Longitude data as inputs from any one or more of multiple sources such as Point of Interest POI servers local cache embedded GPS units etc. The Map Viewer uses the Latitude and Longitude data as arguments to render map graphics either cached or requested from server as discussed above .

Locate Module converts street or civic addresses to Latitude and Longitude coordinates through a Locate Server or other device that may or may not be part of LBS server .

Route Module converts a pair of to and from coordinates i.e. civic or street addresses to a pair of Latitude and Longitude coordinates and also generates a set of decision points e.g. left right etc. at relevant intersections to enable rendering by way of graphics on Map Viewer or to provide turn by turn directions in text format.

The Map Viewer Route Module and Locate Module constitute but one example of a number of possible implementations of Map Application all of which would be obvious to a person of ordinary skill in the art.

As shown in a user may search for an address book entry click the device thumbwheel to select and view a home map for that address book entry which results in the Map Viewer Module displaying the home address for the address book entry . If the user clicks the thumbwheel again and selects to review the work map for that address book entry the Map Viewer Module displays the work address for the address book entry .

With reference to user interaction with a graphical user interface is described for the purpose of displaying map data embedded in an e mail message. In an e mail is received. The user opens the e mail by manipulating a thumbwheel or other user input device. In the event that the e mail contains a map URL the user can select the map URL and click a View Map menu item in response to which the Map Viewer Module displays the map embedded in the e mail .

In user interaction with the device client graphical user interface is shown for the purpose of embedding map data into an e mail message. In the user is viewing a displayed map on device . The user selects an E Mail Location menu item by manipulating a thumbwheel or other user input device. An e mail message is then created with the map URL embedded in the body of the message . The e mail is addressed and then sent to its intended recipient .

Returning briefly to the Map Viewer Module links all other LBS modules i.e. Locate Module Route module together for the purpose of displaying a map with points of interest to the user labeling and highlighting the map data supporting interactive map use e.g. pan zoom search etc. supporting integration with LBS enabled applications Address Book Email and maintaining a persistent storage cache of previously viewed maps. Map data is stored into the local cache store prior to exiting the module. If a map of a location requested for a particular zoom level is not available in the local cache store but a map of the same or generally the same location is available at another for example coarser zoom level i.e. the device may have previously cached map data at a different zoom level but the map data requested is for a zoom level that is not available in the cache Map Viewer Module takes the best available map e.g. coarser map for another zoom level if available and displays it to the user while querying the server with a Maplet Index request and optionally an AOI request for the detailed map background process . If there are no maps to display Map Viewer Module depicts an hour glass with a modal message box e.g. Awaiting response from server . . . . Map Viewer Module is also responsible for managing waypoints and querying the LBS server for map data.

As discussed above in connection with the following three query scenarios may be supported in this example wherein Map Application running on mobile device queries the LBS server for map data 1 Maplet Index request Get Maplet Indexes within an indicated field of view or bounding box 2 DEntry or data request Get DEntry data for these Maplet Indexes and 3 AOI data request Get all map data at predetermined or selected layers within an area of interest or bounding box which is typically the current field of view for device independently of obtaining the Maplet Indexes .

In operation with reference to in conjunction with in response to a new go to request step the Map Application checks its local store i.e. cache to see if it already has the Maplet Index for a particular location step . The new go to request may be generated in response to the user of mobile communication device moving into a new geographical area selection of the View Map menu item in the Address Book or other action . Also it will be understood that the map application may require Maplet Indexes for more than one Maplet. Thus with reference to the exemplary scenario of the user s field of view overlaps four Maplets such that Maplet Indexes are required from each of the four Maplets.

If the requested map data is not already stored in the local cache the Map Application takes the best available map and displays it to the user and at the same time generates a Maplet Index request step . Optionally the map application may also simultaneously generate an AOI request for DEntries for a specified set of Layers if they exist in a given area bounding box specified in the request from mobile communication device which results in faster downloading and rendering of coarse level map data. An advantage of generating the AOI request simultaneously with the Maplet Index request is that map server is accessed only once.

The map server or multiple servers retrieves the requested Maplet Indexes and optionally the AOI data for the four maplets from its associated location data repository and collates the results to build the Maplet Index and optionally the AOI Response Message . Finally the server returns the Maplet Index with without the AOI Response Message to the device .

After rendering map data resulting from an AOI request the downloaded Maplet Index data may be used to further refine the rendered map information through subsequent DEntry requests.

Specifically upon receiving the Maplet Index Response Message or in the event the cache already contains the Maplet Indexes the Map Application determines what DEntries map data it needs based for example on user context preferences etc. as discussed above and then generates the list of the DEntries associated with the specified field of view step .

For each DEntry in the cache step the Map Application assembles the data and displays the map of the selected location on the screen of device step as shown for example in E etc.

If the requested DEntries are not already stored in the local cache then the Map Application generates a DEntry request step and upon receipt of the requested DEntries then renders the map graphic step .

To summarize the operational steps set forth above a Maplet Index request is first generated followed by specific DEntry requests based on knowledge of the Maplets resulting from the contents of the downloaded Maplet Indexes. In some instances such as when the mobile device moves into a new geographical area the Maplet Index request may be accompanied by an AOI request so that a coarse map graphic may be quickly rendered within the new field of view e.g. for particular layers of the Maplet followed by additional DEntry requests based on the downloaded Maplet Index for further refining the rendered map graphic e.g. to obtain data Points representing artifacts and labels from additional layers of the Maplet .

A person skilled in the art having read this description may conceive of variations and alternative embodiments. For example it is contemplated that Maplet Indexes may be pre loaded onto mobile communication device so as to be available at all times rather than requiring downloading from the server .

All such variations and alternative embodiments are believed to be within the ambit of the claims appended hereto.

