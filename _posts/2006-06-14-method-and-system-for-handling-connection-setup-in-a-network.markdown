---

title: Method and system for handling connection setup in a network
abstract: Certain embodiments of a method and system for handling connection setup in a network may comprise a host that generates connection acceptance criteria and/or a services list that may be transferred to a network interface hardware device for determining whether a remote peer connection request may be accepted. The network interface hardware device may generate connection primitives to complete the network connection setup after accepting the connection request. The network interface hardware device may wait for a response from the host before generating the connection primitives. The network interface hardware device may copy the host during connection setup. The host may provide and indication to the network interface hardware device to deny the connection request or to drop the connection after the connection has been setup. The network interface hardware device may maintain a connection state generated when the connection setup is completed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07636323&OS=07636323&RS=07636323
owner: Broadcom Corporation
number: 07636323
owner_city: Irvine
owner_country: US
publication_date: 20060614
---
This patent application makes reference to claims priority to and claims benefit from U.S. Provisional Patent Application Ser. No. 60 690 465 filed Jun. 14 2005 and U.S. Provisional Patent Application Ser. No. 60 718 418 filed Sep. 19 2005.

Certain embodiments of the invention relate to network communication. More specifically certain embodiments of the invention relate to a method and system for handling connection setup in a network.

In some conventional networking systems a network host may become overwhelmed when handling the processing of setting up and or tearing down network connections. This is may be particularly true as the number of connections handled by the host increases. This may also be the case when a loaded server is busy with an application processing and has limited free cycles available for servicing new connection set up requests. For example when a server is flooded with a large number of service requests such as during a denial of service DoS attack the ability of the server to handle requests on behalf of existing connections and or to handle new requests on behalf of newly added traffic is diminished and some portion of legitimate requests for new connection set up and or requests for servicing existing connections may be prevented from being processed. In this regard the server may need to implement acceptance measures to identify legitimate connection set up and or servicing requests in order to allocate connection resources to those connection requests that meet the acceptance requirements.

In networking systems that handle transport control protocol Internet protocol TCP IP connections for example the host may utilize a hardware device such as a network interface card NIC to increase the available resources that may be utilized to perform the networking operations and to improve the server performance on the network and application s response time as well as to improve the utilization of the CPU memory and other server resources. This approach may allow the host to manage a larger number of connections with remote clients by dynamically distributing the networking resources available in the host and the NIC and or to free up more cycles for application processing. However while NIC resources may be utilized for moving data on the networking connections a communication stack may be used to manage the connection setup. For example the communication stack may maintain a connection state comprising information regarding the connection setup. In this regard the communication stack may manage the setup of several connection layers associated with a network connection such as those utilized by the International Standard Organization s Open System Interconnect ISO OSI model. For example the communication stack may manage layer or the data link layer information layer or the network layer information and or layer or transport layer information for example.

A connection setup may be initiated when a remote peer or client on a TCP IP network which may be referred to as the active side for example sends a connection request such as a TCP synchronization SYN segment to the server which may be referred to as the passive side for example. The server s NIC on the passive side may receive the TCP SYN segment and may transfer the TCP SYN segment to the communication stack to process the request. When the request is accepted the communication stack may generate a SYN with a TCP acknowledge SYN ACK segment that may be transferred to the NIC which may forward it to the remote peer that is to the active side. The exemplary handshake for connection set up herein described may be completed when the remote peer or client sends a TCP ACK segment back to the passive side. After receiving the TCP ACK segment from the client the communication stack may complete the network connection setup process. The connection state associated with that client s network connection which may comprise the transport network and data link layer state or parts of it for example may reside with the communication stack and may be managed and or maintained by the communication stack.

After receiving the first SYN segment from a remote peer the passive side may generally allocate some resources in order to store the parameters of the connection to be established. The allocated resources may be required to allow the passive side to execute the TCP connection setup state machine when the passive side later accepts the TCP ACK completing the connection request. A DoS may be created by consuming a large portions of available resources for storing the pending connection set up request on the host without ever completing the connection handshake.

A similar procedure may be followed to complete a network connection setup when the host issues a connection request to a remote peer and the remote peer responds by accepting the request. In this instance the communication stack also maintains and or manages the connection state associated with the client s network connection. While the destination may be known and denial of service concerns may not be as relevant the acceptance of the connection and or the execution of the protocol stack connection set up state machine may consume resources of the initiator.

Further limitations and disadvantages of conventional and traditional approaches will become apparent to one of skill in the art through comparison of such systems with some aspects of the present invention as set forth in the remainder of the present application with reference to the drawings.

A system and or method is provided for handling connection setup in a network that may result in improvements in speed robustness and security performance substantially as shown in and or described in connection with at least one of the figures as set forth more completely in the claims.

These and other advantages aspects and novel features of the present invention as well as details of an illustrated embodiment thereof will be more fully understood from the following description and drawings.

Certain embodiments of the invention may be found in a method and system for handling connection setup in a network. For support of a passive side in a communication between two peers a host may generate a services list and or acceptance criteria that may be transferred to a network interface hardware NIHW device such as a network interface card NIC for example for determining whether a remote peer connection request may be handled by the NIHW device.

The services list may comprise but need not be limited to Socket Listen call parameters TPC ports on a particular IP address or a range or a list of IP addresses and or level L parameters such as virtual local area network VLAN for example. The acceptance criteria may comprise additional parameters such as a list or description of qualifying remote IP addresses or subnets for example. The services list and acceptance criteria need not be limited to these parameters and may comprise additional parameters. In this regard the U.S. application Ser. No. 11 341 113 filed on Jan. 27 2006 discloses a method and system for mitigating denial of service in a communication network and is hereby incorporated herein by reference in its entirety. The services list and or acceptance criteria may be transferred to the NIHW by a communication stack for example.

As a result of the transfer of a services list and or acceptance criteria the NIHW device may generate connection primitives on the network based on the specific protocol requirements to complete the network connection setup after accepting the connection request from the remote peer. The NIHW device may utilize at least one of a plurality of schemes. For example the NIHW device may copy the host during connection setup on requests received from the wire and or on its intended responses. This may enable use of the screening services utilized by the host today to identify and prevent attacks against its resources. For example these services may utilize filtering hash services for instance for creating SYN cookies and or heuristics but need not be so limited. The NIHW device may wait for a response from the host before generating the connection primitives or may proceed with generating responses to the connection request. The host may indicate to the NIHW device to drop the connection request or to drop the connection after the connection has been setup. The NIHW device may maintain a connection state generated when the connection setup is progressing or when it is completed.

The NIHW device may minimize its exposure to certain types of attacks such as a SYN flood for example by minimizing the amount of state maintained for connections not fully established such as TCP Half Open connections for example. Using SYN cookies or other mechanisms may minimize the amount of state maintained for example. The NIHW device may allow a limited number of connections to be established in an expeditious way before it turns on more defensive mechanisms for example SYN cookies. Moreover the NIHW device may wait for the host approval before allocating space for state and or other resources or before replying to the remote peer connection request. The NIHW device may also employ additional criteria that may have been received from the host as part of the acceptance criteria or not before replying to a connection request. The additional criteria may comprise for example limiting the scope of remote clients to be serviced expeditiously or in general by using remote IP source address filtering. The additional criteria may also comprise limiting the scope of services such as TCP ports for example and or limiting the number of outstanding requests per time unit and or per remote client or per a group of remote clients such as a remote IP subnet for example. The NIHW device need not be limited to these defensive mechanisms. In this regard the NIHW device may be enabled to support at least the defensive and DoS prevention capabilities of the communication stack that it services.

A similar approach may be followed to complete a network connection setup when the host issues a connection request to a remote peer and the remote peer responds to the request. While the active side exposure that is the host exposure to such attacks may be lower in such instances the NIHW device may consult with the host before completing the connection request or after the connection has been completed as described above.

The networking system may be adapted to operate or support various networking protocols. For example the networking system may be adapted to support transport control protocol Internet protocol TCP IP connections or stream control transmission protocol SCTP . In this regard the networking system may be adapted to support Internet control message protocol ICMP address resolution protocol ARP and or path maximum transmission unit PMTU discovery protocol for example. The ICMP protocol may refer to an ISO OSI layer protocol that may allow routers for example to send error and or control messages about packet processing on IP networks. The ARP protocol may refer to a low level protocol within the TCP IP suite that may map IP addresses to corresponding Ethernet addresses. The SCTP may support the transport of public switched telephone networks PSTN signaling messages over connectionless packet networks such as IP networks for example. The PMTU may refer to a maximum unit of data that may be sent given a physical network medium. In other embodiments SCTP may be used as the transport protocol rather than TCP.

The host may be adapted to setup parameters for network connections. For example the host may setup transport layer parameters comprising information that support time stamping window scaling delayed acknowledgment policy flow control scheme to be used congestion handling selective acknowledgement SACK buffers to be used and or other transport related parameters. The host may also setup network layer parameters comprising information that supports IPv4 or IPv6 for example and options such as no fragments and or hop limit. The host may also setup data link layer parameters comprising information that supports virtual local area networks VLAN and source address to be used for example.

The CPU may comprise suitable logic circuitry and or code that may be adapted to support the management and or performance of networking operations associated with remote peers or clients on a network. The CPU may also be adapted to support the management and or performance of service applications that may be provided to the remote clients on the network.

The memory may comprise suitable logic circuitry and or code that may be adapted to store information regarding the networking operations and or service applications supported by the CPU . The chipset may comprise suitable logic circuitry and or code that may be adapted to provide services in support of the CPU operations. For example the CPU and or the chipset may be adapted to support memory management. In another embodiment of the invention the chipset may be directly connected to the memory unlike the architecture shown in and the CPU may access the memory by using the chipset services. For example the chipset may be adapted to support PCI master and arbitrator graphics interface I O master for USB audio and or peripheral devices for example. In this regard the chipset may comprise at least one integrated circuit IC that provides services in support of the CPU operations. In some instances the services provided by the chipset may be implemented in separate ICs. The choice of one or more ICs for implementing the chipset may be based on the number and or type of services provided. In some instances at least some of the functionality of the chipset may be integrated within the operations supported by the CPU and or the memory for example.

The NIHW device may comprise suitable logic circuitry and or code that may be adapted to support the performance of networking operations associated with remote peers or clients on a network. The resources provided by the NIHW device may support the networking operations of a maximum number remote peers or clients on a network. The NIHW device may be adapted to communicate with the host . In this regard the NIHW device may be adapted to communicate with the CPU the memory and or the chipset . In some instances the number of network connections that may be supported by the NIHW device may be different than the number of network connections that may be supported by the host . For example when the host may support 10 000 connections and the NIHW device may support 1 000 connections then a connection ratio of 10 1 is supported by the networking system . In another example the host may support 2 000 connections and the NIHW device may support 1 000 connections then a connection ratio of 2 1 is supported by the networking system . The connection ratio of a networking system that comprises a host and an NIHW device may be utilized when determining a connection setup model for a particular application. In some instances the NIHW device may support a large enough number of connections that may practically be larger than the requirements and or capacity that may have been provided by the host .

The AC the CS the packet screening block and or the security crypto service block may be controlled by an operating system OS running on the CPU for example. In this regard the AC the CS the packet screening block and or the security crypto service block may correspond to computer programs that may be stored in a machine readable storage medium such as memory . Each of the computer programs may comprise at least one code section for processing information. The code section may be executable by a machine such as the CPU . The AC the CS the packet screening block and or the security crypto service block may communicate with the NIHW device . The AC may utilize an application programming interface API to communicate with the CS for example using a sockets API or another API for control of network. The AC may also utilize an API to communicate with the NIHW device . This operation is similar to a remote direct memory access RDMA operation where a hardware device communicates directly with an application for low latency data transfer and the communication stack is involved in the set up and in other control aspects of the connection.

In operation the host may determine a services list and or acceptance criteria that may be transferred to the NIHW device via the CS . In one embodiment of the invention the NIHW device may engage in connection setup for the services list provided by the host but the host may perform the final acceptance of the connection. This approach may comprise engaging services provided by the packet screening block for example to determine that no attack is under way before the CS and or the AC may provide the final decision regarding acceptance of the connection. The packet screening block may also be utilized after the connection has been accepted.

In another embodiment of the invention the NIHW device may receive the final acceptance criteria and may utilize the acceptance criteria to accept or reject the connection not precluding the NIHW device interaction with a host service such as the packet screening block for example for further admission control. In another embodiment of the invention the NIHW device may use a security service on the host such as the security crypto service block for example to assist the NIHW device in providing denial of service and or other services related to connection acceptance on the NIHW device .

The services list and or acceptance criteria may be utilized when a remote peer requests a connection with the host . The connection setup may then occur in the NIHW device . For example a remote peer or client on a TCP IP network may send a connection request such as a TCP synchronization SYN segment to the NIHW device . The NIHW device may receive the TCP SYN segment and may process the request. The NIHW device may utilize the host resident packet filtering services such as the packet screening block for example and or the host resident security and cryptography services such as the security crypto service block for example. For example the NIHW device may be adapted to perform SYN cookies in order to limit the state it keeps for a connection request before it verifies it is not related to an attack. The security crypto service block may be utilized to compute the hash associated with a SYN cookie for example. The NIHW device may now utilize acceptance criteria to decide whether to provide the request. When the NIHW device determines to engage in the next step in the connection setup the NIHW device may generate a TCP synchronization and acknowledge SYN ACK segment that may be transferred to the remote peer. The remote peer or client may complete the connection by sending a TCP ACK segment back to the NIHW device . After receiving the TCP ACK segment from the client the NIHW device may complete the network connection with the remote peer. Completing the connection may involve additional processing on the NIHW device such as engaging directly or indirectly that is via the CS with packet filtering services security and cryptography services and or with the AC before the connection may be established and accepted.

A similar operation may occur when the host requests a connection setup with a remote peer via the NIHW device . In this regard the NIHW device may communicate with the remote peer or client to complete the network connection.

Once the connection is setup the AC may provide a service to a remote client via the NIHW device . The host or the communication stack may perform a connection tear down. In that case the connection state handled by the NIHW device may be placed in a shared memory that is if not in shared memory already or in another location accessible to the host where the host may engage in executing the connection tear down primitives. A connection teardown may also occur in the NIHW device . Connection tear down may occur as a result of at least one of a plurality of events such as a fatal error on the link a signal form the remote peer for example a TCP RST signal or a TCP FIN signal a remote application tear down and or local application tear down for example. During the connection setup operation and or the connection teardown operation the NIHW device may communicate with the CS . In some instances the host may determine that a connection setup request from a remote client should be denied or that a current connection should be terminated. In those instances the host via the CS may provide an indication to the NIHW device specifying that the connection request should be denied or that an existing connection should be torn down. In one embodiment of the invention the teardown request passed from the CS to the NIHW may involve socket like parameters such as IP address pair for the local and remote peers as well as TCP port pair for the remote and the local peers for example.

A maximum or cap on the total number of network connections that may be setup by the NIHW device may be established per unit of time and or as a general cap. When the number of connection requests exceeds the established maximum number the additional connection requests may then be handled by the CS may be dropped and or may be queued up by the NIHW device for processing at a later time by the NIHW device . This queuing may be provided by utilizing local resources on the NIHW device and or by utilizing resources on the host such as the host memory for example. In this regard a portion of the host memory may be shared between the NIHW device and the CPU or may be made accessible by the NIHW device only.

The AC and or the CS may need to obtain information on the connection state for their operation and or may need to allocate resources such as buffers to the NIHW device . In this regard at least a portion of the connection state may be copied to the shared memory . The host may post additional resources such as general resources or per connection resources in the shared memory for the NIHW device to access. The NIHW device may post additional information such as errors exceptions and or statistics in the shared memory for the host to access.

The CS and or the NIHW device may be adapted to maintain updates to for example the routing table in ARP to the MTU and or to other maintenance messages provided by ICMP for example. In this regard updates may be communicated via the shared memory or may be communicated directly.

In step the NIHW device may be in a waiting state where it waits to receive a connection request from a remote peer on the network before proceeding to step . In step the NIHW device may utilize the acceptance criteria transferred from the host may utilize its own denial of service prevention capabilities may utilize a host resident security crypto service packet filtering connection accommodation firewall or any other service the host may employ to identify attacks and mitigate attacks and or additional criteria to accept the connection request. The response from the host need not comprise any transport layer state information. The NIHW device may utilize any denial of service prevention measures that may be available. Moreover security measures such as authentication out of band may be utilized for providing credentials for authorized and or authenticated remote machines or connections to be accepted.

In step the NIHW device may determine whether the connection is accepted. When the NIHW device in step does not accept the connection the flow process may proceed to step . In step the NIHW device may drop the connection request or may forward or transfer the connection request to the CS to process the connection request. In this regard the CS may determine whether the connection request is accepted or denied and may proceed to establish the connection with the remote peer. The NIHW device may maintain statistics and or other information on connection request rejected and may share the information with the host for example.

In step when the NIHW device accepts the connection request the NIHW device may copy the connection request to the CS . The NIHW may copy the transport segment as received from the wire for example a TCP SYN or may just make select information available to the CS for example a 4 tuple of remote and local IP addresses and remote and local TCP ports and or additional parameters such as TCP options and or remote TCP window size for example. The NIHW device may wait for the CS to respond to the connection request. In step the CS may determine whether the connection request should be granted or not. The CS may utilize some heuristics for example the host acceptance criteria and or additional criteria when determining whether the connection request should be granted. The CS may utilize packet filtering connection accommodation control and or DoS services like netfilter. The CS may also consult with the AC for example. When the CS the AC and or the host determines that the connection request should not be granted the flow process may proceed to step .

In step the CS may send a response to the NIHW device indicating that the connection request should be denied. The indication may comprise the connection identifier such as local and remote IP addresses and TCP ports for example but need not comprise any transport state information. The indication may include information form the packet filtering connection accommodation control and or DoS services used by the NIHW device to enable the NIHW device to update its tables for better handling of future connection requests. The NIHW may not reply to the connection request or may reset the connection and remove any state it may have for that connection request. When the CS determines that the connection request should be granted the flow process may proceed to step .

In step the CS may send a response to the NIHW device indicating that the connection request should be granted. The indication may comprise the connection identifier such as local and remote IP addresses and TCP ports but need not comprise any transport state information. However the indication may comprise some additional information such as results of the processing performed by for example the security crypto service block by the packet screening block by connection accommodation control and or by DoS. In step the NIHW device may generate transport level primitives to complete the connection setup with the remote peer on the network. For example for TCP IP networks the NIHW device may generate a TCP ACK signal to be sent to the remote peer and may receive a TCP ACK signal from the remote peer to complete the connection setup. In step the NIHW device may copy packets segments and or other state or data information related to the connection setup in the shared memory and or in another location that may be accessible and shared by the host . The step may be skipped and or may be optional in some embodiments of the invention. After step in step the connection state may be generated when the connection setup is completed and may be managed and or maintained by the NIHW device . In step the NIHW device may copy the connection state or may just copy the socket parameters describing it such as a 4 tuple for example to the shared memory and or to another location that may be accessible by the host . In another embodiment of the invention the step may be skipped and or may be optional.

After step in step post connection setup operations may occur. For example the host may send a message to the NIHW device to terminate a connection. In another example the NIHW device may post messages to the buffers allocated by the host and may notify the host of events in accordance with policies relevant to the connection type. In another example additional resources may be communicated to the NIHW device from the AC and or from the host . In another example the CS or the AC may request transmission of data to the remote peer. In some instances the host may direct the NIHW device to move the connection state and pending data to the host into the shard memory . The NIHW device may perform a connection teardown without direction from the host as a result of a link event or when determining that a connection may be involved in attacking the host or the NIHW device or for another reason. Moreover the NIHW device may utilize directions acquired from the host to close a connection or to move a connection state to the host so that the host may teardown the connection. After step the flow process may proceed to end step .

Since there may be a maximum number of connections supported or maintained by the NIHW device certain criteria may be needed to determine what steps to take with connections requests in excess of those that may be handled by the NIHW device . When determining what connections may be handled by for example the CS in the host static criteria or dynamic criteria may be utilized. The static criteria may be based on the type of application supported by the host . For example when the host operates as an email server connections not related to that service or application may be handled to the host . In addition consideration may be given to the varying needs of the host in such applications. The dynamic criteria may be based on having the NIHW device set up the network connection. In this regard the host may decide to keep a connection state in the NIHW device or move the connection state to the host for example for load balancing reasons. When connection states are moved to the host the NIHW device may be able to handle new connection requests. In case of a failover the NIHW device may move the connection state to the shared memory and the LBFO software operating on the host can move the connection state to the CS or to another NIHW device for example.

In step the NIHW device may be in a waiting state where it waits to receive a connection request from a remote peer on the network before proceeding to step . In step the NIHW device may utilize the acceptance criteria transferred from the host may utilize its own denial of service prevention capabilities may utilize a host resident security crypto service packet filtering connection accommodation firewall or any other service the host may employ to identify attacks and mitigate attacks and or additional criteria to accept the connection request. The NIHW device may utilize any denial of service prevention measures that may be available. Moreover security measures such as authentication out of band may be utilized for providing credentials for authorized and or authenticated remote machines or connections to be accepted.

In step the NIHW device may determine whether the connection is accepted. When the NIHW device in step does not accept the connection the flow process may proceed to step . In step the NIHW device may drop the connection request or may forward or transfer the connection request to the CS to process the connection request. In this regard the CS may determine whether the connection request is accepted or denied and may proceed to establish the connection with the remote peer. The NIHW device may maintain statistics and or other information on connection request rejected and may share the information with the host for example.

In step when the NIHW device accepts the connection request the NIHW device may copy the connection request to the CS . The NIHW may copy the transport segment as received from the wire for example a TCP SYN or may just make select information available to the CS for example a 4 tuple of remote and local IP addresses and remote and local TCP ports and or additional parameters such as TCP options and or remote TCP window size for example. In this regard the NIHW device need not wait for the CS to respond to the connection request. In step the NIHW device may generate transport level primitives to complete the connection setup with the remote peer on the network. In step the NIHW device may copy packets segments and or other state or data information related to the connection setup to the shared memory and or to another location that may be accessible by the host . The CS may utilize packet filtering connection accommodation control and or DoS services like netfilter or it may consult with the AC for example. As described in some of the steps such as the steps and or may be skipped and or may be optional.

In step the CS may determine based on the information provided by the NIHW device and or by consulting with the AC whether the connection request should be granted or not by utilizing some heuristics as packet filtering connection accommodation control and or DoS services like netfilter for example the host acceptance criteria and or additional criteria while the NIHW device completes the connection setup and generates the connection state to be managed and or maintained by the NIHW device . Post connection setup operations may also occur and may be substantially similar to the operations described in step in the flow process in .

In step the CS may send a signal or indication to the NIHW device to drop or terminate the connection request when the CS determines that the request should not be granted. The indication may comprise the connection identifier for example the local and remote IP addresses and TCP ports but need not include any transport state information. However the indication may comprise some additional information such as results of the processing performed by the security crypto service block or by the packet screening block by connection accommodation control and or DoS. The NIHW device may utilize the information to update its tables for future reference in handling new connection requests. In step the NIHW device may copy the connection state or may copy just the socket parameters describing it for example the 4 tuple to the shared memory and or to another location that may be accessible by the host . After step the flow process may proceed to end step .

In step NIHW device may copy or transfer the connection request to the CS . The NIHW device may copy the transport segment as received from the wire for example a TCP SYN or may just make select information available to the CS such as the 4 tuple of remote and local IP addresses and remote and local TCP ports and or additional parameters like TCP options and or remote TCP window size for example. In some embodiments of the invention the step and or the step may be skipped and or may be optional. In this regard the NIHW device need not wait for the CS to respond to the connection request. In step the NIHW device may generate transport level primitives to complete the connection setup with the remote peer on the network. The NIHW device need not copy packets segments and or other state or data information related to the connection setup to the shared memory and or to another location that may be accessible by the host . The connection state may be generated when the connection setup is completed and may be managed and or maintained by the NIHW device . Moreover post connection setup operations may occur and may correspond to the operations described in step in the flow process in . For example the operating system in the host may be utilized to terminate a connection. In another example the NIHW device may post messages to the buffers allocated by the host and may notify the host of events in accordance with policies relevant to the connection type.

In another example additional resources may be communicated to the NIHW device from the AC and or from the host . In another example the CS or the AC may request transmission of data to the remote peer. In some instances the host may direct the NIHW device to move the connection state to the host into the shared memory . Moreover the NIHW device may perform a connection teardown without direction from the host as a result of a link event or determining a connection may be involved in attacking the host or the NIHW or for another reason or may utilize directions acquired from the host to close a connection or to move a connection state to the host so that the host may teardown the connection. In this regard the CS may generate a signal or indication to the NIHW device to terminate a connection during the post connection setup operations in step . In step the NIHW device may copy the connection state to the shared memory and or to another location that may be accessible by the host . After step the flow process may proceed to end step . The CS may utilize packet filtering connection accommodation control and or DoS services like netfilter or may consult with the AC . The host may later send a message or signal to the NIHW device to terminate the connection based on its analysis of the connection information provided. The indication may comprise the connection identifier for example local and remote IP addresses and TCP ports but need not comprise any transport state information. However the indication may comprise additional information such as results of the processing performed by the security crypto service block by the packet screening block by connection accommodation control and or DoS. The NIHW device may utilize this information to better handle future connection set up requests.

In addition to passive side operations a networking system where a connection state is maintained by a network interface hardware device may also be utilized for active side networking connection set up requests. For example referring to the host may provide a connection setup request to the NIHW device . The connection setup request may comprise information regarding the application or service requested and or the initial allocated resources such as socket connect request for example. The host may also provide connection parameters such as IP address of local and remote peers transport ports for example TCP ports or SCTP ports for local and remote peers and or layer parameters such as source address destination address VLAN and or quality of service QoS parameters. In another embodiment the NIHW device may be adapted to query a table comprising connection request parameters where the table may be located in the host . An active role may be required for clustering applications for example. In a clustering application servers may need to communicate with each other. A server may then generate a socket style connection request to the NIHW device in order to establish a connection with another server.

In some networks peers may exchange so called private data . In some instances this exchange may occur after the connection is established by the transport service. However in other cases such private data may be piggy backed on one or more of the transport connection set up primitives. For example MPA request and reply may be an upper layer protocol carrying and exchanging such private data that may be piggy backed for speeding up connection setup for better interoperability and or for other reasons. When private data is present for the passive or the active side the NIHW device may process it completely and or partially or may transfer it to host . After receiving private data the NIHW device may wait for further indications from the entity processing it before sending the next connection setup primitive.

The NIHW device may provide credentials to the passive side either in band or out of band to facilitate a successful connection set up. In step the connection is established between the remote client and the NIHW device via a proper exchange of signals or segments. The NIHW device may place segments related to the connection setup that were received from the network or wire and or generated by the NIHW device in the shared memory or in another location accessible by the host . In this regard the NIHW device may also place connection state data or other similar data in the shared memory or in another location accessible by the host . The NIHW may copy the transport segment as received from the wire such as TCP SYN ACK for example or may just make select information available to the CS such as 4 tuple of remote and local IP addresses and remote and local TCP ports an or additional parameters like TCP options and or remote TCP window size for example.

In step all connection states are maintained by the NIHW device including some initial buffers and in some instances additional buffers. In step the NIHW device may notify the OS in the host of the new connection either during the process of setting up the connection by indicating every segment reception or transmission event or after the connection step is completed. Step may correspond to an action by the host to terminate the connection after the connection setup is complete or in real time during the process of setting up the connection. Termination during the process of setting up the network connection may result from information in at least one of the segments received or transmitted by the NIHW device or from information posted be the NIHW device to the host or to the shared memory . The CS may utilize packet filtering connection accommodation control and or DoS services like netfilter or consult with the AC for example. The indication to drop a connection may comprise the connection identifier for example local and remote IP addresses and TCP ports but need not comprise any transport state information. However the indication may comprise additional information for example results of the processing performed by the security crypto service block or by the packet screening block by connection accommodation control and or DoS. The NIHW device may utilize information provided to better handle future connection set up requests.

In step the NIHW device may post messages to a buffer allocated by the host OS such as in the CS for example according to policies that may be relevant to the connection type for example. Step may result when additional resources such as buffers for example may be needed and may be communicated directly from the AC or provided by the host . In step the connection state associated with the network connection requested by the active side may stay in the NIHW device during the duration of the connection or may be moved to the host . In step the NIHW device may perform a connection teardown autonomously or directed by the host . The OS in the host may also direct the NIHW device to move the connection state to the host for the host to teardown the connection. Moreover either the host or the NIHW device may initiate moving the connection state to the host . After step the process may proceed to end step .

The approach described herein for handling connection setup in a network may also be implemented in instances when a server a client and or any network attached device for example utilizes multiple operating systems running concurrently as is common in virtualization for instance to so that each operating system supports a different application or applications or a completely different environment and OS for example. The multiple operation systems may be referred to as guest operating systems GOSs . This approach maintains the level of protection provided when server operations are not consolidated while also enabling the optimization of the usage of the processing resources available to the server. The use of multiple guest operating systems may be referred to as OS virtualization because each GOS perceives to have full access to the server s hardware resources such as a network interface hardware NIHW device or network interface card NIC for example. In this regard a GOS may or may not be aware of the presence of any other GOS running on the server. In order to implement OS virtualization a software layer may be needed to arbitrate access to the server s hardware resources. This software layer may be referred to as a hypervisor or virtual machine VMM monitor for example. The hypervisor may enable the multiple GOSs to access the hardware resources in a time sharing manner. The hypervisor or VM monitor may enable creating a software representation of a NIHW device that may be utilized by a GOS. This software representation of the NIHW device may be referred to as a virtual NIHW device. 

The host system may comprise suitable logic circuitry and or code that may enable data processing and or networking operations for example. In some instances the host system may also comprise other hardware resources such as a graphics card and or a peripheral sound card for example. The host system may support the operation of the first GOS the second GOS and the third GOS via the hypervisor . The number of GOSs that may be supported by the host system by utilizing the hypervisor need not be limited to the exemplary embodiment described in . For example two or more GOSs may be supported by the host system . The host system may perform substantially similar operations related to handling connection setup in a network as the host in for example.

The hypervisor may operate as a software layer that may enable OS virtualization of hardware resources in the host system and or virtualization of hardware resources communicatively connected to the host system such as the NIHW device for example. The hypervisor may also enable data communication between the GOSs and hardware resources in the host system and or hardware resources communicatively connected to the host system . For example the hypervisor may enable packet or segment communication between GOSs supported by the host system and the NIHW device via the TX queue and or the RX queue . In other embodiments of the invention a virtualization system at may comprise least one of privileged GOS with a dedicated queue or queues to the NIHW device while other GOSs in the system may communicate with the privileged GOS in order to access the NIHW services or some of the NIHW services.

The host processor may comprise suitable logic circuitry and or code that may enable control and or management of the data processing and or networking operations associated with the host system . The host processor may correspond to the CPU in the host for example. The host memory may comprise suitable logic circuitry and or code that may enable storage of data utilized by the host system . The host memory may be partitioned into a plurality of memory portions. For example each GOS supported by the host system may have a corresponding memory portion in the host memory . Moreover the hypervisor may have a corresponding memory portion in the host memory . In this regard the hypervisor may enable data communication between GOSs by controlling the transfer of data from a portion of the memory that corresponds to one GOS to another portion of the memory that corresponds to another GOS. At least portions of the host memory may correspond to the memory and or the shared memory for example.

The NIHW device may comprise suitable logic circuitry and or code that may enable communication of data with a network. The NIHW device may correspond to the NIHW device described in for example. The NIHW device may enable basic level L switching operations for example. The TX queue may comprise suitable logic circuitry and or code that may enable posting of data for transmission via the NIHW device . The RX queue may comprise suitable logic circuitry and or code that may enable posting of data received via the NIHW device for processing by the host system . In this regard the NIHW device may post data received from the network in the RX queue and may retrieve data posted by the host system in the TX queue for transmission to the network. At least some portions of the TX queue and the RX queue may be in the host memory and or some portions of it may be integrated into the NIHW device for example. The NIHW memory may comprise suitable logic circuitry and or code that may enable storage of data utilized by the NIHW device . The connection state may be substantially similar to the connection state described in for handling network connection setups.

The first GOS the second GOS and the third GOS may each correspond to an operating system that may enable the running or execution of operations or services such as applications email server operations database server operations and or web server operations for example. The first GOS may comprise a virtual NIHW device an application of the consumer AC and a communication stack CS . The second GOS may comprise a virtual NIHW device an AC and a CS . The third GOS may comprise a virtual NIHW device an AC and a CS . The virtual NIHW device the virtual NIHW device and the virtual NIHW device may correspond to software representations of the NIHW device resources for example. In this regard the NIHW device resources may comprise the TX queue and the RX queue . The AC the AC and the AC may operate substantially as the AC described in for handling network connection setups.

Similarly the CS the CS and the CS may operate substantially as the CS described in for handling network connection setups.

Virtualization of the NIHW device resources via the virtual NIHW device the virtual NIC device and the virtual NIC device may enable the hypervisor to provide L switching support provided by the NIHW device to the first GOS the second GOS and the third GOS .

The approach described herein for handling connection setup in a network may enable a network interface hardware device to manage and or maintain a network connection via a local connection state in instances when a connection request is received from the network and in instances when a connection request is generated or requested by a host system.

Accordingly the present invention may be realized in hardware software or a combination of hardware and software. The present invention may be realized in a centralized fashion in at least one computer system or in a distributed fashion where different elements are spread across several interconnected computer systems. Any kind of computer system or other apparatus adapted for carrying out the methods described herein is suited. A typical combination of hardware and software may be a general purpose computer system with a computer program that when being loaded and executed controls the computer system such that it carries out the methods described herein.

The present invention may also be embedded in a computer program product which comprises all the features enabling the implementation of the methods described herein and which when loaded in a computer system is able to carry out these methods. Computer program in the present context means any expression in any language code or notation of a set of instructions intended to cause a system having an information processing capability to perform a particular function either directly or after either or both of the following a conversion to another language code or notation b reproduction in a different material form.

While the present invention has been described with reference to certain embodiments it will be understood by those skilled in the art that various changes may be made and equivalents may be substituted without departing from the scope of the present invention. In addition many modifications may be made to adapt a particular situation or material to the teachings of the present invention without departing from its scope. Therefore it is intended that the present invention not be limited to the particular embodiment disclosed but that the present invention will include all embodiments falling within the scope of the appended claims.

