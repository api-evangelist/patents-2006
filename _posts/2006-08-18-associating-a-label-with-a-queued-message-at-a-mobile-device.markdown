---

title: Associating a label with a queued message at a mobile device
abstract: Responsive to the sensing of an occurrence of an event, an action may be executed according to which a message is generated. The message may be generated with a format that is based on an application definition document. According to the application definition document, a label may be generated for associating with the message. The message and label may then be stored in a queue in a manner that allows the label to be associated with the message. Subsequent to the message having been stored, a representation of the queue may be displayed for review by a user interested in the status of the message, or the queue in general. The label associated with the message is displayed in the representation rather than the actual code of the message, thereby allowing the viewer of the display to make an informed decision regarding further activity to carried out on the message.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07899474&OS=07899474&RS=07899474
owner: Research In Motion Limited
number: 07899474
owner_city: Waterloo, Ontario
owner_country: CA
publication_date: 20060818
---
A portion of the disclosure of this patent document contains material that is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by any one of the patent document or the patent disclosure as it appears in the Patent and Trademark Office patent file or records but otherwise reserves all copyright rights whatsoever.

The present disclosure relates to storage of a message in a queue at a mobile communication device before transmission of the message and more particularly to the association of a label with the stored message.

A mobile communication device typically maintains a queue of outbound data to be sent to a destination. The data stored in the queue may for instance be messages destined for a server. Such messages may include messages that are formed as requests for information from the server and messages that are formed as updates to information previously stored on the server. Broadly the messages may be considered elements of a data transaction between the server and the mobile device. Typically the queue is used only in a transient manner while the mobile device is in coverage range. The queue is of particular use when the mobile device is not in communication with the server. That is when the mobile device is not within a coverage range of any suitable wireless communications base stations. Typically after being out of coverage range when the mobile device enters a coverage range the mobile device automatically sends the queued messages to the server.

Unfortunately queuing may be required for extended periods. For instance the mobile device may be out of coverage for the extent of a long journey aboard an airplane. By the time a given queued message is sent the given queued message may be out of date.

A user of the mobile device may elect to inspect the queue and thereby determine for example that there are five outgoing messages in the queue. It is common that the outgoing messages are formatted in the known Extensible Markup Language XML or a variant thereof. As such when the queue is inspected by the mobile device user each outgoing message may be displayed in raw XML. This format may be difficult for an average mobile device user to comprehend. The situation may be compared to a network print queue in which items representing print jobs are undecipherable by a typical network user. As a result the user may not understand the nature of the messages that are queued and may be ill informed to re attempt transmission or take other courses of action for urgent messages.

Each type of message to be transmitted from a mobile device may be defined to be associated with a label where the label may provide a generic description e.g. New mail message Status update etc. to display when a message of that type is present in a queue of outbound messages. Responsive to the sensing of an occurrence of an event a message is generated. The message may be generated with a format that is based on an application definition document. According to the application definition document a label may be generated for associating with the message. The message and label may then be stored in a queue in a manner that allows the label to be associated with the message. Subsequent to the message having been stored a representation of the queue may be displayed for review by a user interested in the status of the message or the queue in general. The label associated with the message is displayed in the representation rather than the actual code of the message thereby allowing the viewer of the display to make an informed decision regarding further activity to carried out on the message.

In accordance with an aspect of the present disclosure there is provided a method of handling outgoing messages. The method includes receiving a document that defines an explicit format for outgoing messages said format including delimiters for defining the beginning and end of a message generated according to said format and generating according to the format a message. The method further includes generating a label for the message based on information provided in the document storing the message in a queue and storing the label in the queue associated with the message. In other aspects of the application a mobile communication apparatus is provided to carry out the method and a computer readable medium is provided to allow a processor in a mobile communication device to carry out the method.

Other aspects and features of the present disclosure will become apparent to those of ordinary skill in the art upon review of the following description of specific embodiments of the application in conjunction with the accompanying figures.

The base station subsystem communicates with the wireless core network subsystem . In an exemplary Global System for Mobile communications GSM implementation the wireless core network subsystem includes among other components a mobile services switching center a home location register a visitor location register and a Short Messaging Service Center. As illustrated in the wireless core network subsystem may be connected to the data communication network and to a Public Switched Telephone Network PSTN .

The mobile device may be associated with an enterprise that is in communication with the data communication network . The enterprise may for instance include a firewall or proxy server connecting to the data communication network and to a local area network LAN . The LAN may allow communication between a mobile device server an enterprise server and a transaction server within the enterprise.

The housing may be elongated vertically or may take on other sizes and shapes including clamshell housing structures . The keyboard may include a mode selection key or other hardware or software for switching between text entry and telephony entry.

In addition to the microprocessor other parts of the mobile device are shown schematically in . These include a communications subsystem a short range communications subsystem the keyboard and the display along with other input output devices including a set of auxiliary I O devices a serial port a speaker and a microphone as well as memory devices including a persistent flash memory and a Random Access Memory RAM and various other device subsystems . The mobile device is preferably a two way radio frequency RF communication device having voice and data communication capabilities. In addition the mobile device preferably has the capability to communicate with other computer systems via the Internet.

Operating system software executed by the microprocessor is preferably stored in a computer readable medium such as the flash memory but may be stored in other types of memory devices such as a read only memory ROM or similar storage element. In addition system software specific device applications or parts thereof may be temporarily loaded into a volatile store such as the RAM . Communication signals received by the mobile device may also be stored to the RAM .

The microprocessor in addition to its operating system functions enables execution of software applications on the mobile device . A predetermined set of software applications that control basic device operations such as a voice communications module A and a data communications module B may be installed on the mobile device during manufacture. An application client subsystem module C may also be installed on the mobile device during manufacture to implement aspects of the application. In particular the application client subsystem module C may include virtual machine software.

Additional software modules illustrated as an other software module N which may be for instance a personal information manager PIM application may be installed during manufacture. The PIM application is preferably capable of organizing and managing data items such as e mail messages calendar events voice mail messages appointments and task items. The PIM application is also preferably capable of sending and receiving data items via a wireless carrier network represented in by the base station antenna . Preferably the data items managed by the PIM application are seamlessly integrated synchronized and updated via the wireless carrier network with the mobile device user s corresponding data items stored at or associated with the enterprise server .

Communication functions including data and voice communications may be performed through the communication subsystem and possibly through the short range communications subsystem . The communication subsystem includes a receiver a transmitter and one or more antennas illustrated as a receive antenna and a transmit antenna . In addition the communication subsystem also includes a processing module such as a digital signal processor DSP and local oscillators LOs . The specific design and implementation of the communication subsystem is dependent upon the communication network in which the mobile device is intended to operate. For example the communication subsystem of the mobile device may be designed to operate with the Mobitex DataTAC or General Packet Radio Service GPRS mobile data communication networks and may also be designed to operate with any of a variety of voice communication networks such as Advanced Mobile Phone Service AMPS Time Division Multiple Access TDMA Code Division Multiple Access CDMA Personal Communications Service PCS GSM etc. Other types of data and voice networks both separate and integrated may also be utilized with the mobile device .

When the required network registration or activation procedures have been completed the mobile device may send and receive communication signals over the wireless carrier network. Signals received from the base station antenna by the receive antenna are routed to the receiver which provides for signal amplification frequency down conversion filtering channel selection etc. and may also provide analog to digital conversion. Analog to digital conversion of the received signal allows the DSP to perform more complex communication functions such as demodulation and decoding. In a similar manner signals to be transmitted to the base station antenna are processed e.g. modulated and encoded by the DSP and are then provided to the transmitter for digital to analog conversion frequency up conversion filtering amplification and transmission to the base station antenna via the transmit antenna .

In addition to processing communication signals the DSP provides for control of the receiver and the transmitter . For example gains applied to communication signals in the receiver and the transmitter may be adaptively controlled through automatic gain control algorithms implemented in the DSP .

In a data communication mode a received signal such as an SMS message or web page download is processed by the communication subsystem and is input to the microprocessor . The received signal is then further processed by the microprocessor in preparation for output to the display or alternatively to some of the auxiliary I O devices . A device user may also compose data items such as e mail messages or SMS messages using the keyboard and or some other auxiliary I O device such as a touchpad a rocker switch a thumb wheel or some other type of input device. The composed data items may then be transmitted to the base station antenna via the communication subsystem .

In a voice communication mode overall operation of the mobile device is substantially similar to the data communication mode except that received signals may be output to the speaker and signals for transmission may be generated by the microphone . Alternative voice or audio I O subsystems such as a voice message recording subsystem may also be implemented on the mobile device . In addition the display may also be utilized in voice communication mode for example to display the identity of a calling party the duration of a voice call or other voice call related information.

The short range communications subsystem enables communication between the mobile device and other proximate systems or devices which need not necessarily be similar devices. For example the short range communications subsystem may include an infrared device and associated circuits and components or a Bluetooth communication module to provide for communication with similarly enabled systems and devices.

The virtual machine software of the application client subsystem module C may include conventional XML parser software event handler software screen generation engine software and object classes. The software when executed leads to a virtual machine which as illustrated in includes an XML parser an event handler a screen generation engine and instances of the object classes. The instances correspond to XML elements supported by the virtual machine software and possibly other XML elements contained within an application definition document. Supported XML elements are detailed in Appendix A hereto attached. A person of ordinary skill will readily appreciate that those XML elements identified in Appendix A are exemplary only and may be extended or shortened as desired. An XML element is a form of markup language element.

From the perspective of the mobile device the transaction server is positioned behind the firewall . In operation the transaction server may exchange data traffic with the enterprise server . Additionally the transaction server may exchange data traffic with the backend application server . In an exemplary case the virtual machine executing on the microprocessor of the mobile device generates a request message and stores the request message in a queue of outbound messages. A message transmission object then transmits the request message to the transaction server via the base station subsystem the wireless network subsystem the data communication network the firewall and the local area network . Responsive to receiving the request message the transaction server may execute a database query on a database. The response to the database query may for instance be an indication of server side applications that are available to the mobile device . Data representative of the indication may then be transmitted by the transaction server in a response message to the mobile device .

Upon receipt of the response message at the mobile device the screen generation engine of the virtual machine may present a list of available server side applications in a user interface on the display of the mobile device . In response to being presented with the list of available server side applications a user at the mobile device may select a given server side application for which to register. Responsive to the user selecting the given server side application the virtual machine generates a registration request message containing a registration request for the given server side application and stores the registration request message in the outbound message queue. The message transmission object then transmits the registration request message to the transaction server . The transaction server in response to receiving the registration request message queries the server database for a user interface definition associated with the given server side application and the mobile device . Thereafter the transaction server creates an application definition document which includes the user interface definition and transmits a message that includes the application definition document to the mobile device .

At the mobile device the application definition document carrying message is received step . After receiving the application definition document carrying message the XML parser of the virtual machine may parse the text of the application definition document and the screen generation engine may generate according to the user interface definition a user interface for presentation on the display of the mobile device . Some time after receipt of the application definition document and using the user interface a user could trigger the transmission by the mobile device of a login request to transaction server . The login request is received by the transaction server and subsequently transmitted to the server hosting the given server side application e.g. the enterprise server or the backend application server . The server hosting the given server side application according to the logic embedded within the given server side application returns a login response to the transaction server which login response the transaction server transmits to the mobile device . Subsequent traffic related to the given server side application for instance messages to be transmitted from the mobile device to the server hosting the given server side application also flows through the transaction server .

As may be understood from the preceding the transaction server may be considered to manage the flow of data between an application executed at a server and an interface to that application presented at the mobile device . Among other operating systems the transaction server may be implemented on Microsoft Windows 2000 or Windows 2003 server. The collection of functions executed at the transaction server may be considered to include application management access control event monitoring session control transaction queuing data routing user management and network connectivity monitoring.

In overview the application client subsystem module C may provide instructions to allow the microprocessor to generate a message of a given type for transmission to the transaction server . In conjunction with storing the generated message in the outbound message queue the microprocessor may also store a label such that the label is associated with the stored message. The microprocessor may use a label specified in the application definition document for messages of the given type.

As is known in the art the outbound message queue may be implemented as a queue table in a relational database say in the persistent flash memory . Relational databases may be structured to include tables which contain records. As such an outbound message may be stored in a Message field of a message record in the queue table. Advantageously a new field a Label field may be defined for the message record where the Label field is arranged for storage of a label associated with the message stored in the Message field of the message record.

When the mobile device user elects to review the contents of the queue table a user interface executed on the mobile device may display the label representative of the message. The mobile device user may then take further action. For instance the mobile device user may interact with the user interface to delete from the queue table a message deemed to be out of date. Alternatively the mobile device user may interact with the user interface to request that transmission of the messages in the queue table be re attempted. Ideally the label is sufficient to allow the user to understand the nature of the queued message so that the user may make a subsequent informed decision.

As discussed above an application definition document provides a user interface definition. Overall the application definition document may define for a particular server side application a user interface for controlling application functionality and display format including display flow the format of data to be exchanged over the data communications network and the format of data to be stored locally at the mobile device . The virtual machine may use the operating system software also executed by the microprocessor and associated application programming interfaces APIs to interact with elements of the mobile device in accordance with the received application definition document. In this way the mobile device may present interfaces for a variety of applications executed at a variety of remote application servers.

While creating an application definition document a developer may have an opportunity to define a number of types of messages to be sent by the mobile device to the transaction server some of which may be destined for the backend application server or the enterprise server . To implement aspects of the present disclosure at design time a developer may specify for a specific type of message a label to be associated with a queued message.

As presented in the previously cited US patent application Publication 2003 0060896 an exemplary application definition document may be formed using a markup language such as the known XML or a variant thereof. In accordance with an embodiment of the present disclosure defined XML elements are interpreted by the virtual machine and may be used as building blocks to present at the mobile device an interface to server side applications.

Instances of virtual machine object classes allow the mobile device to process each XML element of a set of supported XML elements. Each of the object classes may be defined to include for each supported XML element attributes which may be used to store parameters defined by the application definition document and functions which allow the XML element to be processed at the mobile device . As such the developer may specify a label as an attribute of a XML element in an application definition document.

Appendix B provides an exemplary application definition document whose format should be familiar to those skilled in the art of developing markup language documents. The text begins a definition of a screen named GETQUOTE . As part of the screen definition and further as part of a definition of a MENU element for a menu with a NAME attribute of mnuMainMenu a MENUITEM element with NAME attribute GetQuote is defined. The MENUITEM element with NAME attribute GetQuote includes an EVENT element with a TYPE attribute MENUITEMSELECTED . The EVENT element with a TYPE attribute MENUITEMSELECTED is associated with three ACTION elements having TYPE attributes of OPEN SAVE and ARML .

According to the above application definition document portion the XML element that defines an ACTION element with TYPE attribute ARML includes an attribute MSG whose value field is provided as Message To SP.MAIL.TO . The value field of the MSG attribute may contain a label representative of the nature of the message.

Notably the value field of the MSG attribute is arranged to be completed dynamically from data provided by the user for instance into edit boxes presented on the display of the mobile device. The value field of the MSG attribute includes a placeholder delimited by square brackets i.e. and . The placeholder reference a data source from which data for filling the corresponding section of the value field should be obtained. A suitable data source might be a user interface field on a current screen a user interface field on a previous screen or a table in a device based logical database. The virtual machine after reading the data source name searches for the field corresponding to the referenced data source and replaces the placeholder with data contained within the named field. In this example the value field of the MSG attribute references SP.MAIL.TO . As such content for the value field of the MSG attribute may be read from a field named TO on a screen named SP.MAIL .

Additionally the PKG element to be generated responsive to an event of type BUTTONCLICK is also arranged to be completed dynamically based on data provided by the user.

In operation the virtual machine executed on the microprocessor may control the presentation on the display of the mobile device of a button displaying a caption Send according to the above exemplary application definition document portion. The user of the mobile device may select the button such that an event of the type BUTTONCLICK is detected by the operating system of the mobile device . The operating system may indicate the detected event to the event handler of the virtual machine . The event handler may based on the definition of the BTN element in the application definition document portion arrange for the performance of an action defined by an ACTION element by the virtual machine .

According to the ACTION element of type ARML defined in the application definition document portion above the event handler instantiates an instance of an object class corresponding to the ACTION element of type ARML. The instance then calls a message generation method to generate a message step for transmission to the transaction server .

The above application definition document portion provides a format according to which the message generation method may generate the message. According to the format the message is a PKG element delimited by tags. The PKG element has a TYPE attribute. Within the PKG element the message payload is a MSG element. The MSG element has attributes named ID SUBJECT BODY and TO . Each of the attributes references a placeholder.

The message generation method may based on the format add text to a string variable. As mentioned above elements of the application definition document including elements of the action have been parsed by the XML parser . The message generation method adds successive portions of the message to the string variable such as then 

An exemplary message generated according to message format provided in the above exemplary application definition document portion may appear as follows 

When the string variable contains the entire message that is the message generation method has added the text to the string variable the virtual machine may then call a label generation method of the instance to generate a label step to associate with the exemplary message. In some cases the label may be static and relate directly to the type of message for instance a registration request message may be defined to have a MSG attribute with value field containing Registration Message . In the case of the exemplary message however the label is dynamic. The virtual machine may dynamically resolve the message attribute value field containing Message To SP.MAIL.TO to a label reading Message To John Doe based on the text entered by the user in the TO editbox.

The virtual machine may then call a message record creation method of the instance to create step a message record. The message record may include the generated message and the label among other data. The virtual machine may then call a message record storage method to store step the message record in the queue table. Among the other data the record creation method may include a time stamp in a Time Stamp field of the message record.

Concurrently an instance of a message transmission object class i.e. a message transmission object may be arranging the transmission of the message portion of the oldest message record in the queue table to the transaction server . The message transmission object may for instance determine which message record is the oldest in the queue table by considering a time added time stamp stored in each message record in the queue table. As such the queue table may be considered to act as a First In First Out FIFO queue in that the message transmission object attempts to transmit the message at the top of the queue i.e. the message portion of the oldest message record first.

Where the transmission of the message is successful the message transmission object deletes the message record from the queue table and arranges the transmission of the message portion of the oldest message record in the queue table given that the former oldest message record has been deleted from the queue table.

Where the transmission of the message is unsuccessful the message transmission object may delay re attempting transmission of the message portion of the oldest message record in the queue table for a predetermined waiting time. Additionally the message transmission object may store the time of the last attempt to transmit the message in a Last Attempt Time field associated with the Message field. The message transmission object may also read a value from a Transmission Attempt Number field associated with the Message field increment the value by one and store the incremented value in the Transmission Attempt Number field.

Rather than delaying re attempting transmission for a predetermined waiting time the message transmission object may wait for a signal from the operating system of the mobile device where the signal indicates that communications to the network have been re established.

At a subsequent time the mobile device user may manipulate the input devices of the mobile device to request to review the contents of the queue table. Upon receiving the request step an instance of a queue management object class i.e. a queue management object may then determine the contents of the queue table step . That is the queue management object may query the database in which is stored the queue table to determine which messages previously stored in the queue table have not yet been transmitted and consequently deleted from the queue table. For each message in a Message field in the queue table the response to the database query may indicate the contents of the associated Time Stamp field the contents of the associated Label field the contents of the associated Last Attempt Time field and the contents of the associated Transmission Attempt Number field.

Where the exemplary message discussed above is in the queue table the screen generation engine may then present a screen step on the display of the mobile device in which screen the label Message To John Doe is presented representative of the exemplary message along with the time at which the message was stored in the queue table the time of the last attempted transmission and the number of attempted transmissions.

The mobile device user may react to the screen by providing input step . For instance the user may request that the exemplary message labeled Message To John Doe be deleted from the queue table say if the exemplary message is deemed by the user to be out of date. Accordingly the queue management object may delete the exemplary message from the queue table step . Alternatively the mobile device user may request that transmission of the messages in the queue table be re attempted. The event handler may then provide step the queue management object with a request to re attempted transmission. Responsive to the request the queue management object may re attempt transmission of the oldest message in the queue table.

Notably the exemplary message may not be the oldest message in the queue table and as such may not immediately benefit from the transmission re attempt. However where the mobile device has returned into coverage range of a base station and the queue management object would otherwise continue delaying attempting retransmission until the expiry of the predetermined waiting time the exemplary message may be transmitted sooner in the case of the request for a re attempt at transmission than in the case of no such request.

The value field of the MSG attribute is evaluated at runtime as are the other dynamic elements of the message. Notably the value field of the MSG attribute is not transmitted to the transaction server or to the backend application server for use in an application. Indeed the value field of the MSG attribute is used by the virtual machine only when generating a display of queue table contents on the mobile device .

Ideally the label associated with messages of a predetermined type is sufficient to allow the user to understand the nature of the queued message so that the user may make a subsequent informed decision.

Other modifications will be apparent to those skilled in the art and therefore the invention is defined in the claims.

