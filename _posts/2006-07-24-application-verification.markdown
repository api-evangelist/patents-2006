---

title: Application verification
abstract: A device that is configured for wireless communication and for execution of at least one client application is disclosed. The device comprises an integrated security function configured to process a request for verification of a client application from an external device. A server configured to request for a verification of a client application from an integrated security function of a device is also disclosed. The server is adapted to receive a response from the device, to compare the response to reference data, and to decide, based on the comparison, if the client application is allowed to use a service.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08191109&OS=08191109&RS=08191109
owner: Nokia Corporation
number: 08191109
owner_city: Espoo
owner_country: FI
publication_date: 20060724
---
The present invention relates to verification of applications and in particular but not exclusively to verification of trustworthiness of a client application in a user device.

A user device provided with appropriate communication equipment can be used for communication via a communication system. A communication system can be seen as a facility that enables communication sessions between two or more entities such as mobile devices or other nodes associated with the communication system. The communication may comprise for example communication of voice multimedia content and other data. A session may for example be a telephone call type session between two users a multi party session for example a conference call or a data communication session between at least one user and a node such as an application server AS . The communication between the communication system and the user device may be over a wireless interface or via a fixed connection.

Various types of services can be provided to users of devices. An example of services is where content such as images videos audio files or other data may be downloaded from an application server. Examples of content downloading include downloading of screensavers wallpaper games applications video or music download services. Users may also send data to other entities via a communication system. For example a user may create something such as take a photo or make a video and send his creation in a digitized form i.e. as content data to a server. The work may then be downloaded from the server by other parties interested of the same subject.

Services that are provided via a communications system are typically implemented using a client server model. In client server model a server in a network may control user accounts and billing and manage a catalogue of premium content from which a user can make purchases. A bespoke client application is downloaded or preinstalled on a user device and acts as an agent between the user and the server. When the user purchases content the client requests the content from the server which passes the premium content to the client for use. For example in a music player application this would typically be an mp3 file which the client stores to the local file system encrypted and allows the user to play but not copy to other devices.

High level object oriented programming languages are commonly used in creating the required software applications. Java programming language is an example of such object oriented languages. There is increasing interest to be able to use Java or another object oriented language to create new and exciting services for mobile users.

A problem with the client server scenario is that it may be difficult if not impossible to identify whether an application running on the user device has been tampered with or not. This may be especially a concern with mobile user devices. A tampered hacked application can save content unprotected or abuse the service in some other way. For example it can send false account details falsify identity numbers e.g. International Mobile Equipment Identity IMEI and so forth.

Furthermore whilst object oriented languages such as the Java may be ideal for the deployment of client applications they also make it easy for hackers to reverse engineer modify and re install hacked versions of the client. To the server these hacked clients are indistinguishable from legitimate clients. This may make it very difficult to devise a client server based service which is secure from attack.

A further drawback is caused by the fact that applications based on Java or similar language are also relatively easy to distribute over the internet. This makes it easy for hackers to distribute their hacked client to others who can then install the hacked client on their own devices and also gain free access to the service provided. In other words to gain free access does not necessarily require expensive or specialist equipment it may just require a standard mobile device for example a standard mobile phone or other relatively simple device an internet connection and some knowledge of where to get a hacked application from.

Currently a number of mechanisms have been proposed to overcome this problem. None of the proposals however appears capable of preventing client applications being modified and run on user devices.

In accordance with a proposal encryption keys are added into the client application. However putting the encryption scheme into the client application and thus available for third parties increases the risk of sensitive information of the security scheme ending into the hands of the hackers.

A possibility is to try to design the service such that it is less vulnerable to attack. For example many music download services offer free previews that are designed such that instead of letting the user listen to the whole track the web based service may offer only a limited time of preview. The services then charges the user before full content is downloaded. This may be effective in most fixed broadband internet applications. However this may create problems in a wireless environment. For example the limitation means that the client must download the content twice i.e. once as a limited preview and once as the full content. This may be expensive time consuming and may unnecessarily consume wireless communication capacity. Secondly charging for content before downloading may not be acceptable because the connection to a mobile device may not be reliable in all circumstances. Instead mobile users may expect to be charged only when the download completes. However this may be easy to hack so to the server the download always appears to fail.

A possibility is to make every client unique. One way to prevent wide spread breakout of a service is to put a unique key into every client. The client must send this key to the server during server connection. When the service operator suspects a client is hacked the operator can add the key of the client to a blacklist in the server thus limiting the damage caused. However this scheme may not be practical in the mass market mobile applications. For example Java applications such as MIDP2.0 must be signed. To include a different key in every copy of the application would require that a unique key is added to the application and each application signed with a certificate by the maker before it is distributed to the user. This may considerably decrease the desirability of the application.

The service provider may also decide not to use a client application that is based on an object oriented language or other similar language for the service. Instead the service provider will only provide the service on user devices where key parts of the service application are fixedly integrated into an operating system or other platform of the device. If an integrated platform is used this means that the service application must be part of every device and cannot be installed post production as an after market enhancement.

The term platform is understood to mean something on which something else runs. Thus it can refer to the hardware and or software environment in which a program runs. For example the hardware is a platform on which a software runs. The hardware and operating system provides a platform on which an application runs. Java Virtual Machine is an example of a platform on which java applications may run.

Open Mobile Alliance OMA has defined a Digital Rights Management DRM protocol which attempts to protect content by never sending the critical e.g. the keys rights object information to applications running on mobile devices. Instead content is sent directly to the platform for example operating system of the mobile device. In the case of mobile devices the operating system is provided by the device manufacturer and cannot be easily modified later on. Although this may make the system relatively secure the OMA DRM cannot be used for many services because it does not offer the ability for a 3party client application in the terminal to control the download display or other usage of the content. Furthermore it does not easily allow a mechanism for 3party branding or value adding.

In accordance with an embodiment there is provided a device that is configured for wireless communication and for execution of at least one client application. The device comprises an integrated security function configured to process a request for verification of a client application from an external device.

In accordance with an embodiment there is provided a server that is configured to request for a verification of a client application from an integrated security function of a device to receive a response from the device to compare the response to reference data and to decide based on the comparison if the client application is allowed to use a service.

In accordance with an embodiment there is provided a method for verifying trustworthiness of an application. The method comprises processing by an integrated security function of a device a request for verification of a client application in the device sending a response to the request for verification to an external device and deciding at the external device based on the response if the client application is trustworthy.

In accordance with a more detailed embodiment the integrated security function is configured to provide the client application with a security token. The client application may send the security token to the external device. The client application may insert the security token in a connection request.

The integrated security function may send a signature and or hash associated with said client application to the external device in response to said request for verification.

A client application may send additional security information to the external device. The additional security information may comprise a key for signing of messages between the client application and the external device. In an embodiment the security function may send further security information to the external device. The further security information may comprise information of at least one of the make of the device the type of the device model the model of the device the version of the device an identity associated with the device.

The embodiments of the invention provide a mechanism for authentication of a client application provided in a device.

An explanation of a possible system for enabling communications between a mobile user device and a service provider server is given below. Typically a communication system includes a plurality of various internal entities for controlling and or carrying communications between two or more communicating parties for example a user device and an application server. The various control entities may be interconnected. One or more gateway nodes may be provided for connecting a network to other networks for example for connecting a public switched telephone network PSTN a public landline mobile network PLMN and or other communication networks such as an IP Internet Protocol and or other packet switched data networks to each other. In such arrangements a communications network a user device is connected to can be seen as providing an access network enabling a user to access other networks hosts or services offered by specific service providers.

Principles of a wireless communication system will now be explained with reference to a cellular system. Cellular mobile devices will be referred to below as mobile stations. In a cellular system a base station is typically arranged to serve a plurality of mobile stations via wireless interfaces between the mobile stations and base station. In other words the base station provides radio access for mobile stations. It is appreciated that although only shows a base station a typical mobile communication network usually includes a number of base stations. The mobile stations are typically capable of moving from the coverage of a base station to coverage of another base station.

The cellular network can be understood to comprise an access network that is connected to an external data network for example to a packet switched data network PSDN via a gateway node. In a packet data network a packet data carrier may be established to carry traffic flows consisting of data packets over the network. Each data packet is provided with appropriate routing information such as destination address and port information so that the various entities in the route to the destination know where the data packet shall be forwarded.

In the intermediate cellular network located between the server and the base station is not shown for clarity. Instead a connection is only shown. The connection provides packet switched data transmission in the packet switched domain.

The mobile station may access various services including services offered by the server via the connection provided by the communication system. The mobile station may thus be used for example for tasks such as making and receiving phone calls for receiving and sending data from and to a server and for experiencing multimedia content. Any appropriate mobile station equipment adapted for communication based on an appropriate protocol for example the internet protocol IP may be used to connect to a server via the access network. For example a user may connect to the server by means of mobile devices such as a personal computer a personal data assistant PDA a mobile phone portable computer combinations thereof or the like.

The following example is given with reference to a device that enables use of client applications . In a preferred embodiment the device support for client applications is provided based on Java programming language. In an embodiment the device is a mobile device such as a mobile phone multimedia terminal PDA smartphone or the like. It shall be appreciated that the invention is not limited to mobile devices but embodiments of the invention may be used also in other devices such as TV set top boxes.

In an embodiment a server can request that the device authenticates a client application running on the device. A mechanism where the device is asked to authenticate a client application can be used to ensure that the client application is legitimate before any sensitive information is passed thereto. Once the client application is authenticated the client application is trusted not to tamper with the data or store data in an unsecure format. The security function of the device is an integrated part thereof and may be included into the device for example by the manufacturer of the device. According to a possibility the security function is included in an operating system of the device which the users cannot tamper with.

Such an authentication mechanism can be implemented in various manners. shows a flowchart for an example that is described below with reference to Java technology. It is understood that this is only an example and that similar principles can be applied to other programming technologies for example compiled languages such as C and Symbian operating systems.

In step a client application registers with a security function of a device such as a mobile device. For example the client application may register with a verification service provided within a platform of the device. The client application may use a java Application Programming Interface API for the registration.

The verification service may assign the client application at this stage with a token. The token may comprise for example a unique number that is randomly generated by the verification service. The token can be used to prove that the server has been given permission by the client application to supply the details thereof. The token can also be used to provide the server with a unique way to identify the client application it wants to have information on.

In step the client application provided in the device sends a connection request to the server. The request may include the token provided by the verification service. The server may then contact at step the verification service of the device that requested for verification of the application. The contact is preferably made via a pre allocated port number. The server can now use the token to identify the client application to be verified.

The server may contact the user device based on any appropriate mechanism. For example the server may send the request as a user datagram protocol UDP or a transport control protocol TCP message to a port number of the device. The port may be reserved specifically for this purpose. Applications and services running on the device can register to listen to a particular socket bound to a port number. All messages sent to that socket and or port are then routed to the application service.

At step the verification service of the device creates a hash of the application s executable file. The verification service may use any appropriate hashing algorithm for this. For example in the case of Mobile Information Device Profile MIDP Secure Hashing Algorithm 1 SHA 1 may be used for the hash. This is advantageous since the Java platform is already capable of using this algorithm to check the signatures of applications. The device platform may then send the hash back as a response to the server at step .

The server checks at step the hash against a list of known approved hashes for example a list of hashes generated by all approved applications. If a match is found then a decision to accept the connection and usage of the service can be made step . If no match is found the request for connections is refused step .

In a further embodiment the client application may pass in step extra information. For example the client application may send a random key which can be used to sign future messages between the client application and the server. This may be advantageous in ensuring that the application has not been stopped and replaced with a different application by the user after the verification is done. According to a possibility a key may be sent to the verification service by the server in step and the verification service may then pass this key to the application as well as giving the hash of the application back to the server at step .

Extra information can be sent to the server also at step . This extra information can include for example name vendor and signature details for the applications. The extra information may also include information about the device for example the make model software version identity information such as International Mobile Equipment Identity IMEI International Mobile Subscriber Identity IMSI and so on.

In step the token can be returned to the server encrypted using a private key which is unique to the device. A database of public keys may be used to allow the server to authenticate the device and verify the details thereof such as the make model and so forth. This may be used to prevent people using for example PDAs or similar devices which do not contain the verification service but only impersonate mobile devices which do.

The embodiments may provide improved security. The embodiments can be used with virtually any client server based service. The embodiments may allow a server to verify that a client application is authentic and has not been modified.

The embodiments may be applied in addition to those mentioned above to a wide variety of other services such as mobile banking.

The embodiments may be used as an economical alternative for some high cost authentication schemes solutions in some cases. Once a server has authenticated a trusted client it can send data to the client. Proprietary or open standard mechanisms can be used to then lock the content to the device.

The required data processing functions of the server and user device may be provided by means of one or more data processor entities. Appropriately adapted computer program code products may be used for implementing the embodiments when loaded to a computing device.

It is understood that although the certain embodiments have been described above with reference to the exemplifying architecture of a cellular mobile communication system the embodiments may be applied to any other suitable forms of communication systems than the one illustrated and described herein. For example the mobile device may communicate via a wireless local area network WLAN a local base station connected to a fixed line network or a satellite base system.

It is also noted herein that while the above describes exemplifying embodiments of the invention there are several variations and modifications which may be made to the disclosed solution without departing from the scope of the present invention as defined in the appended claims.

