---

title: Delayed policy evaluation
abstract: The evaluation of a policy can be delayed until all rules criteria needed for evaluation are available. Also, new types of rules criteria can be registered without requiring changes to a rules engine. A policy manager allows rules to be evaluated and decisions made at different stages of the request handling. The policy manager facilitates interaction with the rules engine until all criteria are evaluated. The policy manager also allows modules developed by third parties to provide notification when criteria can be decided and thus complete evaluation.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07603333&OS=07603333&RS=07603333
owner: Microsoft Corporation
number: 07603333
owner_city: Redmond
owner_country: US
publication_date: 20060614
---
The technical field generally relates to computer related security and more specifically to policies used to implement computer related security.

Firewalls and other software products that enforce security policies on traffic in computer systems typically provide policy models based on rules. A firewall inspects the traffic passing through it and applies the policy to the traffic. Current rule based systems typically include a fixed set of criteria from which rules can be built that is used to evaluate an access policy. Use of a fixed set of criteria prohibits implementation of new types of criteria. Current rule based systems also restrict rules criteria to items that can be evaluated only when the policy is evaluated.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description Of Illustrative Embodiments. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

A policy manager provides the ability to delay the final evaluation of a policy until all properties needed for criteria resolution are available. The policy manager comprises a generic rules extensibility mechanism that supports a rules engine and allows the addition of new criteria to a policy. The new criteria are opaque to the rules engine and thus do not require changes to be made to the rules engine. The policy manager defines the way that rules are evaluated in a way that allows the rules engine to function correctly until all criteria needed for final resolution of an evaluation request are resolved. The policy manager provides the ability to evaluate rules criteria at different stages of an evaluation request and delay final evaluation of rules if not all needed criteria are resolved. If all criteria are resolved a decision is made and if appropriate a corresponding action is called or the rule is found not matching. In the latter case the rules engine continues evaluation of the policy. If not all criteria are resolved the final evaluation of the rule is delayed and the other rules of the policy are evaluated. When all required properties for unresolved criteria are obtained an unresolved rule is evaluated by the rules engine. In an example embodiment the first matching rule defines the final result of evaluation.

A generic rules extensibility mechanism referred to as a policy manager provides the ability to register new rule criteria with a rules engine without requiring reimplementation of the entire rules engine. In an example configuration the policy manager is implemented as an application programming interface API extending the capabilities of a rules engine of a firewall. The policy manager allows firewall extension modules referred to as criteria providers to add new rules criteria which are opaque to the policy engine. The policy manager also provides the ability to evaluate rules criteria at different stages of an evaluation request and delay evaluation of rules if not all required criteria for the evaluation request are resolved. In an example embodiment rules are evaluated in a predetermined evaluation order. During the evaluation of a rule if all criteria are resolved by criteria providers a decision is made about rule matching and if appropriate a corresponding action is called or the next rule is evaluated. If not all criteria are resolved the rule is marked as unresolved and the other rules in the predetermined order are evaluated. When a criteria provider for unresolved criterion has received the needed information the criteria provider notifies the policy manager that it is ready and the rule is reevaluated.

The policy manager allows the addition of criteria providers for adding rule criteria that are matched in different stages of a request. In an example embodiment the policy manager is implemented as an application programming interface API that allows firewall extension modules to provide the outcome of a specific criterion via the criteria providers . The policy manager also allows the criteria providers to interact with the rules engine to receive notification when a certain evaluation is required and to notify the rules engine when an evaluation is complete. Evaluation is not restricted to a specific point in the processing. Rule engine marks criteria as unresolved if not all criteria needed for a rule are resolved. When a criteria provider has accumulated the needed information for the evaluation request it evaluates the criterion and notifies the rules engine via the policy manager that evaluation is complete.

The first criterion in the predetermined evaluation ordered is queried at step . The query can be in the form of a call to the criteria provider. The rules engine requests via the policy manager the first criteria provider in the predetermined evaluation order to provide a decision for the criterion. The criteria provider fetches properties of the evaluation request and can look at the existing traffic to match them against the condition of the criterion. If all required information is available step the criteria provider returns the final result step of matching or not matching to the rules engine. For example if a specific criteria provider s respective rule was to check for a particular virus and the evaluation of the criteria indicated that no virus was found this would be passed on to the rules engine via the policy manager. Accordingly traffic could be allowed to traverse the firewall.

If some properties of the evaluation request that are required by the criteria provider to evaluate a criterion are not yet known step the criteria provider returns to the rules engine stating step that there is no resolution for the criterion yet and that the criteria is unresolved.

If evaluation of a rule was not final step it is determined if more rules are to be evaluated at step . If there are more rules to be evaluated step the rules engine continues to evaluate the rules step to allow criteria providers for those rules to be called. This is advantageous because the rule that was not resolved but might later be found not matching and the following rules will provide the final result of the evaluation. Calling to criteria providers for criteria of those rules provide criteria providers the ability to take necessary actions to be able to evaluate those rules later. If evaluation of a rule is final step the process proceeds to step .

As evident from the example process depicted in the rules engine will try to resolve each criterion by calling it s criteria provider via the policy manager. Unresolved criteria step will be revisited called queried again until the rule is matched entirely or the evaluation of the rule is not longer needed. If the evaluation of the criteria provider rule is not longer needed the querying of the criteria provider is ceased. If the evaluation is no longer needed the criteria provider is sent a cancellation notice. The cancellation notice is sent from the rules engine via the policy manger. The criteria provider will then discontinue consumption of resources. A criteria provider could be sent a cancellation notice for example when an operator is shutdown or when another criteria provider has completed its evaluation in a way the makes another criteria provider s evaluation obsolete.

The input output portion is capable of providing and or receiving data as describe above utilized to implement delayed policies. The input output portion can provide data to and receive data from another computing device a storage device a criteria provider a rules engine a policy manager a network or any combination thereof for example. For example the computing device could be implemented in a firewall and the input output portion would be for receiving criteria from networks and providing receiving traffic to from networks in communication with the firewall.

Depending upon the exact configuration and type of processor the memory portion can be volatile such as RAM and or cache non volatile such as ROM flash memory etc. or a combination thereof. The computing device can have additional features functionality. For example the computing device can include additional storage removable storage and or non removable storage including but not limited to magnetic or optical disks tape flash smart cards or a combination thereof. Computer storage media such as memory portion and include volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media include but are not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices universal serial bus USB compatible memory smart cards or any other medium which can be used to store the desired information and which can be accessed by the computing device . Any such computer storage media can be part of the computing device .

The computing device also can contain communications connection s that allow the computing device to communicate with other devices. Communications connection s is an example of communication media. Communication media typically embody computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media include wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media. The term computer readable media as used herein includes both storage media and communication media. The computing device also can have input device s such as keyboard mouse pen voice input device touch input device etc. Output device s such as a display speakers printer etc. also can be included.

While it is envisioned that numerous embodiments of delayed policy evaluation are particularly well suited for computerized systems nothing in this document is intended to limit the scope thereof. On the contrary as used herein the term computer system is intended to encompass any and all devices capable of storing and processing information and or capable of using the stored information to control the behavior or execution of the device itself regardless of whether such devices are electronic mechanical logical or virtual in nature.

The various techniques described herein can be implemented in connection with hardware or software or where appropriate with a combination of both. Thus the methods and apparatuses for implementing delayed policy evaluation or certain aspects or portions thereof can take the form of program code i.e. instructions embodied in tangible media such as floppy diskettes CD ROMs hard drives or any other machine readable storage medium wherein when the program code is loaded into and executed by a machine such as a computer the machine becomes an apparatus for implementing delayed policy evaluation.

The program s can be implemented in assembly or machine language if desired. In any case the language can be a compiled or interpreted language and combined with hardware implementations. The methods and apparatuses for delayed policy evaluation also can be practiced via communications embodied in the form of program code that is transmitted over some transmission medium such as over electrical wiring or cabling through fiber optics or via any other form of transmission wherein when the program code is received and loaded into and executed by a machine such as an EPROM a gate array a programmable logic device PLD a client computer or the like the machine becomes an apparatus for implementing delayed policy evaluation. When implemented on a general purpose processor the program code combines with the processor to provide a unique apparatus that operates to invoke the functionality of delayed policy evaluation. Additionally any storage techniques used in connection with delayed policy evaluation can invariably be a combination of hardware and software.

While delayed policy evaluation has been described in connection with the example embodiments of the various figures it is to be understood that other similar embodiments can be used or modifications and additions can be made to the described embodiments for performing the same functions for implementing delayed policy evaluation without deviating therefrom. Therefore delayed policy evaluation as described herein should not be limited to any single embodiment but rather should be construed in breadth and scope in accordance with the appended claims.

