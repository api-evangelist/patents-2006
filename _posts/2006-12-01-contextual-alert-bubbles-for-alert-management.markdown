---

title: Contextual alert bubbles for alert management
abstract: Embodiments of the present invention address deficiencies of the art in respect to alert bubbles for alert management and provide a novel and non-obvious method, system and computer program product for contextual alerts for alert management. In an embodiment of the invention, an alert management data processing system can be provided. The system can include an alert bubble configured to display alert text for an associated alert, and contextual information disposed in the alert bubble interface along with the alert text. In particular, the contextual information can provide context for the associated alert.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08762841&OS=08762841&RS=08762841
owner: International Business Machines Corporation
number: 08762841
owner_city: Armonk
owner_country: US
publication_date: 20061201
---
The present invention relates to the field of alert management for computing events and more particularly to user interface alert bubbles for computing events.

Alert management in a computing system refers to the alerting of an end user through a user interface of a computing application of a computing event. Computing applications and systems often encounter computing events worth noting on the part of the end user. Historically alerting an end user of a computing event required the suspension of an executing application and the presentation of text or a visual display notifying the end user of an alert condition. While effective in a computing environment in which only a single application can execute at a time for multi tasking environments it is not reasonable to permit the interruption of all applications to present an alert.

In traditional windowing operating systems that provide multi tasking functionality alert management is incorporated into the operating system itself. In this regard the operating system can provide an application programming interface API for invoking alerts through the operating system user interface. Often in the form of an alert box or an alert balloon an alert can be provided by invoking a suitable operation through the alert management API. The alert itself can be raised from a task bar or other similar such structure.

Alerts presented through the task bar of an operating system can suffice for relatively few alerts within a period of time. Notwithstanding alerts can become intrusive where many alerts issued from multiple applications are presented repeatedly within the operating system interface. In the latter circumstance end users may be distracted in addressing each alert. To avoid the latter circumstance advanced alert management logic permits the configuration of the operating system to issue alerts only arising to a specified level of prioritization or importance. An alternative solution is to disable alerts entirely. In both cases end users may not view important alerts or otherwise end users may be compelled to view all alerts.

Advanced alert management systems rely upon statistical rating systems to determine whether or not to display an alert. Specifically each alert can be assigned a rating based upon whether or not an end user had previously designated the alert as one which ought to be suppressed or viewed. The preferences of an end user can change over time however and a static rating system can result in the unintended suppression of important alerts. Likewise a static rating system can result in the unintended viewing of unimportant alerts.

Alert bubbles the user interface to an alert management system appear and vanish according to user preferences intended to limit or at least somewhat control the interruptions caused by the appearance of an alert. The manual specification of preferences for alert bubble appearances remains too coarse in application to be truly effective. In this regard the information presented in an alert bubble generally includes only some text from the content of the alert itself possibly along with a time stamp. Users remain unaware by reference to the alert bubble itself as to whether the underlying alert is of interest. Thus alert bubbles typically lack enough context to allow the end user to decide whether or not to permit the interruption proposed by the alert bubble.

Embodiments of the present invention address deficiencies of the art in respect to alert bubbles for alert management and provide a novel and non obvious method system and computer program product for contextual alerts for alert management. In an embodiment of the invention an alert management data processing system can be provided. The system can include an alert bubble configured to display alert text for an associated alert and contextual information disposed in the alert bubble interface along with the alert text. In particular the contextual information can provide context for the associated alert.

In one aspect of the embodiment the system also can include a rating control disposed in the alert bubble. In another aspect of the embodiment the system also can include a suspension control disposed in the alert bubble. In either circumstance the contextual information can include historical alert text or a series of historical alert text for the associated alert along with a scroll bar configured to provide scrollable access to historical alert text in the series. In yet another aspect of the embodiment the system yet further can include an activatable context source control disposed in the alert bubble and configured upon activation to display context for a source of the associated alert for instance the activity from which the alert was triggered the location of the object from where inside an activity the alert had been triggered the context of the object within the activity the people associated with the activity and the like. Finally in even yet another aspect of the embodiment the system yet further can include an activatable context rules control disposed in the alert bubble and configured upon activation to display an applied rule permitting the alert bubble to display.

In another embodiment of the invention an alert management method for providing context to alert bubbles can be provided. The method can include receiving an alert notification for an associated alert determining both alert text for the associated alert along with context for the alert displaying both the alert text and the context in an alert bubble and subsequently vanishing the alert bubble. In one aspect of the embodiment determining the context for the alert can include determining historical alert text for the alert. In another aspect of the embodiment determining the context for the alert can include determining a series of historical alert text for the alert.

In yet another aspect of the embodiment the method further can include activating a context source control in the alert bubble. In response to the activation of the context source control a display of a source of the alert can be provided. Finally in even yet another aspect of the embodiment the method further can include activating a context alert control in the alert bubble. As before in response to the activation of the context alert control a display of a rule applied to the alert to permit a display of the alert bubble can be provided.

Additional aspects of the invention will be set forth in part in the description which follows and in part will be obvious from the description or may be learned by practice of the invention. The aspects of the invention will be realized and attained by means of the elements and combinations particularly pointed out in the appended claims. It is to be understood that both the foregoing general description and the following detailed description are exemplary and explanatory only and are not restrictive of the invention as claimed.

Embodiments of the present invention provide a method system and computer program product for contextual alert bubbles for alert management. In accordance with an embodiment of the present invention contextual information can be provided for an alert within an alert bubble in addition to alert text for the alert bubble. Specifically the alert source for the alert can be rendered accessible from within the alert bubble as can a reason that the alert bubble has been permitted to appear. Additionally recent alerts can be ordered and rendered accessible from within the alert bubble along with alert text for a most recent alert. In this way the contextual information can provide an end user viewing the alert bubble with a clear understanding of the importance of an alert associated with the display of the alert bubble.

In further illustration is a schematic illustration of an alert management data processing system configured with contextual alert bubbles. The data processing system can include an alert server coupled to one or more application hosts over a computer communications network . Each of the application hosts can host one or more application views to corresponding applications such as those hosted locally or those provided by an application server in a composite aggregation environment. Each of the application hosts further can include an alert monitor . The alert monitor can include program code enabled to subscribe to one or more alerts in the alert server on behalf of one or more of the applications associated with the application views . In one aspect of the invention the subscription can be that of a subscription of a really simple syndication RSS compliant feed or an Atom compliant feed.

The alert server can include both a set of filter rules for one or more alerts defining whether to suppress or display a respective unfiltered alert and a data store of statistical ratings for previously filtered alerts. Predictive alert filter logic also can be coupled to the alert server . The predictive alert filter logic can include program code enabled to train the prediction of an alert filter for an unfiltered alert based upon the statistical ratings for previously filtered alerts. Utilizing the predictive alert filter it can be predicted whether or not to filter an unfiltered alert without exclusively relying upon the presence of a static filter rule for the unfiltered alert. In fact the ratings produced by the predictive alert filter can be used to statistically determine whether or not to suppress or display an alert even in the complete absence of a static filter rule for the unfiltered alert.

In operation the alert monitor within an application host can subscribe to an alert on behalf of an application and corresponding one of the application views with the alert server . The alert server in turn can process incoming alerts from the alert monitor in order to determine whether or not to render an alert for the corresponding one of the application views within a contextual alert bubble interface . To manage the receipt of a multiplicity of alerts an alert queue not shown can be established to queue unfiltered alerts prior to adaptively managing the processing of the unfiltered alerts.

The contextual alert bubble interface can provide a contextually rich alert bubble that can include not only alert text associated with a received alert but also contextual data helpful in providing context for the alert text. Examples include providing historical alert text providing an indication of the source application or source data for the alert and providing the particular one of the rules giving rise to the display of the contextual alert bubble interface . In more particular illustration is a flow chart illustrating a process for providing contextual alert bubbles in an alert management system.

Beginning in block an alert notification can be received for an alert. In block display rules can be retrieved for the alert to determine whether or not to display the alert. In block the retrieved rules can be applied to the alert. In decision block if it is determined not to display the alert based upon the application of the rules to the alert in block an alert bubble can be suppressed from display and the process can return to block . Otherwise in block the context for the alert can be retrieved. In this regard the context can include related past alerts a source of the alert or the rule giving rise to the determination to display the alert. Thereafter in block the alert can be displayed along with the retrieved context. Finally in block the alert can vanish and the process can repeat through block .

Turning now to multiple different exemplary alert bubbles are shown each depicting a different arrangement of incorporating contextual data with an alert. Considering first an alert bubble is shown. The alert bubble can include alert text associated with an alert. Additionally rating controls can be disposed within the alert bubble along with a suspension control . The suspension control can provide a user interface for determining when and for how long to suspend the display of alerts irrespective of the content of an alert whereas rating controls provide a user interface through which an end user can rate an alert associated with the alert bubble for use by the alert server when considering whether or not to subsequently issue a similar alert.

Turning now to contextual information for an alert can be provided within the alert bubble along with the alert text . The contextual information can include for example historical alert text relating to a prior issued alert. Alternatively as shown in the contextual information can include a series of previously issued historical alert text viewable through the activation of a scroll bar embedded in the alert bubble . Notably the alert bubble of and also can include a context source control and a context rules control .

The context source control when activated can result in the display of a source for the alert whereas the context rules control when activated can result in the display of a rule applied in allowing the display of the alert. Specifically referring to an alert source pop up can be provided responsive to the activation of the context source control and can provide a source indication for the alert associated with the alert text . Likewise referring to an alert rules pop up can be provided responsive to the activation of the context rules control and can provide an indication of the rules applied when permitting the display of the alert associated with the alert text .

Embodiments of the invention can take the form of an entirely hardware embodiment an entirely software embodiment or an embodiment containing both hardware and software elements. In a preferred embodiment the invention is implemented in software which includes but is not limited to firmware resident software microcode and the like. Furthermore the invention can take the form of a computer program product accessible from a computer usable or computer readable medium providing program code for use by or in connection with a computer or any instruction execution system.

For the purposes of this description a computer usable or computer readable medium can be any apparatus that can contain store communicate propagate or transport the program for use by or in connection with the instruction execution system apparatus or device. The medium can be an electronic magnetic optical electromagnetic infrared or semiconductor system or apparatus or device or a propagation medium. Examples of a computer readable medium include memory devices wherein the memory devices include a semiconductor or solid state memory magnetic tape a removable computer diskette a random access memory RAM a read only memory ROM a rigid magnetic disk and an optical disk. Current examples of optical disks include compact disk read only memory CD ROM compact disk read write CD R W and DVD.

A data processing system suitable for storing and or executing program code will include at least one processor coupled directly or indirectly to memory elements through a system bus. The memory elements can include local memory employed during actual execution of the program code bulk storage and cache memories which provide temporary storage of at least some program code in order to reduce the number of times code must be retrieved from bulk storage during execution. Input output or I O devices including but not limited to keyboards displays pointing devices etc. can be coupled to the system either directly or through intervening I O controllers. Network adapters may also be coupled to the system to enable the data processing system to become coupled to other data processing systems or remote printers or storage devices through intervening private or public networks. Modems cable modem and Ethernet cards are just a few of the currently available types of network adapters.

