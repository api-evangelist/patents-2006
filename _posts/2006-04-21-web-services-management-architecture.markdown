---

title: Web services management architecture
abstract: A system for web services management is provided. The system includes a plurality of web services, a catalog of business services, and an orchestration service. Each business service corresponds to one or more web services. The orchestration service can invoke an appropriate web service when a business service is selected from the catalog.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07571123&OS=07571123&RS=07571123
owner: Sprint Communications Company L.P.
number: 07571123
owner_city: Overland Park
owner_country: US
publication_date: 20060421
---
The present disclosure is directed to web services and more particularly but not by way of limitation to a system and method for facilitating the use of an enterprise s internal web services by an external customer.

The term web services can refer to services that a service provider makes available to customers or applications via the world wide web. Examples of services that might be provided include the ability of a customer or application to enter an order the ability to check on the status of an order the ability to manage customer account information the ability to create and manage trouble tickets and the ability to manage billing information.

Prior to the introduction of web services such services would typically be performed manually. For example if a customer wished to check on the status of an order the customer might telephone an account manager at the company with which the order was placed. The customer would inform the account manager of the information that was requested and the account manager might relay the request to an internal group appropriate for the type of request. The internal group might then manually retrieve the requested information and return the information to the account manager who would then provide the information to the customer.

The use of web services can allow such a request to be handled in an automated fashion. An application executing on a customer s computer system might automatically send an order status request for example to a service provider s computer system. The request might be sent via well known protocols such as XML UDDI or SOAP. Upon receiving the request the service provider s computer system might automatically retrieve the appropriate information and return it to the customer s computer system. A custom application programming interface API might be created to allow communication between the two computing systems.

An embodiment of the present disclosure provides a system for web services management. The system includes a plurality of web services a catalog of business services and an orchestration service. Each business service corresponds to one or more web services. The orchestration service can invoke an appropriate web service when a business service is selected from the catalog.

In another embodiment a method for managing web services is provided. The method includes providing a catalog of business services wherein each business service corresponds to one or more web services selecting a business service from the catalog and performing a web service corresponding to the selected business service.

These and other features and advantages will be more clearly understood from the following detailed description taken in conjunction with the accompanying drawings and claims.

It should be understood at the outset that although an exemplary implementation of one embodiment of the present disclosure is illustrated below the present system may be implemented using any number of techniques whether currently known or in existence. The present disclosure should in no way be limited to the exemplary implementations drawings and techniques illustrated below including the exemplary design and implementation illustrated and described herein.

Under the prior art a customer wishing to make use of a web service might update an API in its internal computing systems with an appropriate web services request. The API might be capable of mediating communication with the computing systems of the enterprise to which the web services request is being sent so that updating the customer s API causes a corresponding update in the enterprise s computing systems. Upon receipt of a web services request in this manner the enterprise s front end computing systems can communicate with its back end computing systems to cause the back end systems to perform the actions needed to fulfill the request. The back end systems might return information to the front end systems which then return the information to the customer.

Previously an enterprise offering web services might provide its customers with a different API for each different type of web services request a customer might make. For example one type of API might be used for order entry requests another type of API might be used for order status requests etc. In addition the APIs might need to be customized for each customer. Prior to providing an API the enterprise might meet with a customer determine the customer s requirements that might be met through the use of web services develop a set of custom APIs for the customer to use when making web services requests provide the APIs to the customer and ask the customer to use the APIs when making web services requests.

The customization of APIs based on web service request type and on customer needs can result in a large number of different APIs. Each different API might require a different type of interaction with a customer. For example even though each API is customized each customer may need to perform additional customizations to allow the API to interact with its computing systems. Each customer might also need to enter identification information and other data into the API with each web services request.

In embodiments of the present disclosure one or more web services provided by an enterprise are represented by a business service. A customer of the enterprise is provided with a catalog of business services from which a business service desired by the customer can be selected. Selection of a business service can cause one or more web services to be carried out. A one to one correspondence may exist between a business service visible through the catalog and a web service maintained by the enterprise. Alternatively a single business service might be an aggregation of multiple web services.

In an embodiment an orchestration service mediates communication between the catalog and the web services. The orchestration service has access to profile version and security information related to the customer and the customer s business services requests. The profile information allows customer specific data to be stored so that the customer is not required to re enter the data with each business service request. The version information allows the customer to choose from a plurality of versions of the business services. The security information ensures that the customer is authorized to access a selected web service.

When one or more web services returns data to a customer the data might first pass through a presentation service. The presentation service can aggregate data from disparate web services into a single data presentation. The presentation service can also present the data to the customer in a format specified by the customer.

Such a web services management system can allow an enterprise to take on new users of web services and manage existing users with little or no involvement from an IT group. The need for an enterprise to provide multiple customized APIs for multiple different web services can be reduced or eliminated.

In some embodiments the logic that makes the catalog appear resides entirely within the computing system of the enterprise providing the web services . In other embodiments a portion of the logic that makes the catalog appear resides in the computing systems of the customer or elsewhere. This is illustrated by the dashed line in which indicates that all of portions of the catalog may reside within the enterprise computing system . The enterprise computing system may be a portion of the overall computing system used by a telecommunications company or other enterprise.

Each business service listed in the catalog might correspond to one or more web services . For example a telecommunications company might provide one web service that allows its customers to check on the status of frame relay orders and another web service that allows its customers to check on the status of ATM orders. One business service might correspond to the frame relay order status web service and another business service might correspond to the ATM order status web service . Alternatively a single business service might correspond to both the frame relay order status web service and the ATM order status web service .

A customer can browse through the catalog and select a business service. To assist the customer in selecting an appropriate business service the catalog might include descriptions of the business services that the enterprise computing system makes available. The selection of a business service causes the invocation of one or more web services . Continuing the above example a customer that places both frame relay orders and ATM orders might see a generic order status business service listed in the catalog . Selection of this order status business service might cause the invocation of both the frame relay order status web service and the ATM order status web service .

When a customer uses the catalog to request that a business service be carried out the request in some embodiments passes through an orchestration service . The orchestration service then determines which web service or web services will be invoked to carry out the business service request. In other embodiments the orchestration service may be bypassed as indicated by the dashed line in . In these embodiments the selection of a business service directly invokes a web service without making use of the services provided by the orchestration service .

If more than one web service needs to be invoked to fulfill a business service request the orchestration service can determine the proper sequence in which the web services should be invoked. For example a business service might invoke an order status web service and then if the order status indicates that the order has not been filled by an agreed upon date the business service might invoke a trouble ticket web service . The orchestration service can ensure that the order status web service is invoked first and can then invoke the trouble ticket web service if necessary.

In an embodiment the orchestration service uses a profile component a version component and a security component to determine which web services to invoke the manner in which the web services are to be invoked and the information that might be included in an invocation. The profile component maintains a profile for each customer that might use the catalog of business services. Each customer might make use of a different set of business services and underlying web services . The profile can maintain information about the business services that are used by each customer . Thus each customer might see a different list of business services in the catalog based on each customer s profile. A profile might also include contractual commitments such as service level agreements between an enterprise and a customer .

The profile information contained in the profile component can also be used to assist customers in placing orders. For example the enterprise that maintains the web services might supply consumer products to multiple customers that maintain retail stores. A particular customer might operate multiple retail stores in multiple geographic locations. The customer s profile might contain information about purchasing trends inventory levels contract expiration dates and other information for the enterprise s products and services sold at each of the customer s stores. When a particular store places an order via the catalog the orchestration service can retrieve profile information for that store from the profile component and inform the customer of products with low inventory levels products that are more likely to be purchased and other information that might impact the content of the order.

A business service listed in the catalog might be a generic service available for use by different customers . For example all customers might use the same order status business service. Alternatively a generic business service might be customized for different customers so that the custom business service versions have different or additional attributes included with the attributes that are available in the generic version of a business service. For example each customer might use a slightly different version of the order status business service or some customers might use the generic order status business service and other customers might use a custom order status business service.

A single customer might also want different versions of a business service to be available to different internal entities such as departments or geographic regions. For example an older version of a business service with only limited capabilities might be available to internal entities that use older computing systems and a newer version of that business service with enhanced capabilities might be available to internal entities that use newer computing systems. The version component maintains information about the different versions of business services used by different customers and by different entities internal to a customer .

A customer browsing the catalog of business services might see only the version or versions of the business services that pertain to that customer . Other versions of the same business service that pertain to other customers would be invisible. For example a customer might use a generic version of a business service in most circumstances and a custom version of that business service in special circumstances. The customer might see both versions of the business service in the catalog and might select the version that is appropriate for the circumstances.

In an embodiment the orchestration service uses profile information in the profile component to determine which version of a business service to use for a customer . That is each customer s profile may specify which versions of a business service are to be provided to the customer under which circumstances. For example the profile component might specify that an older version of a business service will be provided when the customer is using an older computing system and that a newer version of a business service will be provided when the customer is using a newer computing system. By consulting the profile component the orchestration service can ensure that the appropriate version of a business service is listed in the catalog each time a customer browses the catalog . The maintenance of version information in the profile component eliminates the need for the customer to specify the version of a business service that the customer wishes to use.

As an example a particular customer might select from the catalog a business service called order status . The orchestration service would then retrieve that customer s profile from the profile component . The profile might include information about the customer s location preferences previous orders and other data that might be pertinent to the business service request. The orchestration service might then combine the business service request with the profile information into what can be referred to as the context of the request. The orchestration service might then use the context to determine which web service or web services to invoke to fulfill the business service request.

If more than one web service is invoked the orchestration service might aggregate the results of the plurality of web service invocations to produce a single result that is returned to the customer . Alternatively as described below a presentation service might perform this aggregation. In this way a single order status request can return the status of all orders a customer might have placed even when multiple web services need to be invoked to retrieve information about different types of orders. This can significantly decrease the application development work that would otherwise need to be done by the customer since the customer only needs to complete the profile and then select an appropriate business service to invoke. The web services management system can then invoke the appropriate web services .

The orchestration service can consult the security component to determine whether a customer is authorized to gain access to the web services associated with a selected business service. When a customer uses multiple profiles the security component might determine which profile is used on which occasion. The security component might also enforce privacy rules such as government regulations regarding access to customer data. In an embodiment the security component might make use of commercial off the shelf security applications such as Identity Minder or Site Minder that are already deployed by the enterprise maintaining the web services .

In addition to managing profile version and security information the orchestration service might perform other functions. For example the orchestration service might re launch a failed request for a business service. The orchestration service might also conduct monitoring of the business requests for quality assurance and or trending purposes. The orchestration service might also provide reports of business service related transactions.

The orchestration service fulfills requests for business services by accessing the appropriate web services which might also be referred to as transaction services. In an embodiment the web services are equivalent to the web services that an enterprise might use if the web services management system were not in place. That is an enterprise might make its previously existing web services available to customers via the catalog . The catalog and the orchestration service allow customers to use the web services without needing to know operational details of the web services . Customers need to do little or no API programming or other customization to use the web services .

When a request for a business service results in a web service returning data to a customer the data might first pass through a presentation service . The presentation service can aggregate data from disparate web services into a single presentation in a format specified by the customer . For example one customer might wish to receive data in a spreadsheet while another customer might want data in an XML format. Customers can inform the presentation service one time of the format in which they would like to receive data and the presentation service can thereafter provide the data in the specified format. The profile component might maintain these format preferences.

The system described above may be implemented on any general purpose computer with sufficient processing power memory resources and network throughput capability to handle the necessary workload placed upon it. illustrates a typical general purpose computer system suitable for implementing one or more embodiments disclosed herein. The computer system includes a processor which may be referred to as a central processor unit or CPU that is in communication with memory devices including secondary storage read only memory ROM random access memory RAM input output I O devices and network connectivity devices . The processor may be implemented as one or more CPU chips.

The secondary storage is typically comprised of one or more disk drives or tape drives and is used for non volatile storage of data and as an over flow data storage device if RAM is not large enough to hold all working data. Secondary storage may be used to store programs that are loaded into RAM when such programs are selected for execution. The ROM is used to store instructions and perhaps data that are read during program execution. ROM is a non volatile memory device that typically has a small memory capacity relative to the larger memory capacity of secondary storage. The RAM is used to store volatile data and perhaps to store instructions. Access to both ROM and RAM is typically faster than to secondary storage .

I O devices may include printers video monitors liquid crystal displays LCDs touch screen displays keyboards keypads switches dials mice track balls voice recognizers card readers paper tape readers or other well known input devices.

The network connectivity devices may take the form of modems modem banks ethernet cards universal serial bus USB interface cards serial interfaces token ring cards fiber distributed data interface FDDI cards wireless local area network WLAN cards radio transceiver cards such as code division multiple access CDMA and or global system for mobile communications GSM radio transceiver cards and other well known network devices. These network connectivity devices may enable the processor to communicate with the Internet or one or more intranets. With such a network connection it is contemplated that the processor might receive information from a network or might output information to a network in the course of performing the above described method steps.

Such information which may include data or instructions to be executed using processor for example may be received from and outputted to the network for example in the form of a computer data baseband signal or signal embodied in a carrier wave. The baseband signal or signal embodied in the carrier wave generated by the network connectivity devices may propagate in or on the surface of electrical conductors in coaxial cables in waveguides in optical media for example optical fiber or in the air or free space. The information contained in the baseband signal or signal embedded in the carrier wave may be ordered according to different sequences as may be desirable for either processing or generating the information or transmitting or receiving the information. The baseband signal or signal embedded in the carrier wave or other types of signals currently used or hereafter developed referred to herein as the transmission medium may be generated according to several methods well known to one skilled in the art.

The processor executes instructions codes computer programs or scripts that it accesses from hard disk floppy disk optical disk these various disk based systems may all be considered secondary storage ROM RAM or the network connectivity devices .

While several embodiments have been provided in the present disclosure it should be understood that the disclosed systems and methods may be embodied in many other specific forms without departing from the spirit or scope of the present disclosure. The present examples are to be considered as illustrative and not restrictive and the intention is not to be limited to the details given herein but may be modified within the scope of the appended claims along with their full scope of equivalents. For example the various elements or components may be combined or integrated in another system or certain features may be omitted or not implemented.

Also techniques systems subsystems and methods described and illustrated in the various embodiments as discrete or separate may be combined or integrated with other systems modules techniques or methods without departing from the scope of the present disclosure. Other items shown or discussed as directly coupled or communicating with each other may be coupled through some interface or device such that the items may no longer be considered directly coupled to each other but may still be indirectly coupled and in communication whether electrically mechanically or otherwise with one another. Other examples of changes substitutions and alterations are ascertainable by one skilled in the art and could be made without departing from the spirit and scope disclosed herein.

