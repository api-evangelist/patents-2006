---

title: Network integrated data compression system
abstract: A data compression system enables user-level applications to compress and decompress files to save storage space even for user-level applications that are not modified to use compressed files. User preferences associated with a user terminal are established for the compression of data, e.g. video data, wherein the user preferences comprise selective enablement of compression for at least one file type. An exemplary system determines the type of a digital data file, e.g. a digital video data file, being output from an application or input to an application, and performs transparent file-type-based compression or decompression of the digital data file, if enabled by the established user preferences. Files of the selected file types are stored with compressed formats and may even have different names, but are shown to user-level applications to have the same file names and file sizes as original uncompressed files. Therefore, the existing applications can perform operations without any disruptions. The transparent compression can be implemented within a variety of dedicated and/or distributed network configurations, as well as on a single workstation.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07394408&OS=07394408&RS=07394408
owner: Zaxel Systems, Inc.
number: 07394408
owner_city: Los Altos Hills
owner_country: US
publication_date: 20061110
---
This application claims priority to U.S. Provisional Patent Application No. 60 756 886 entitled Network Integrated Video Compression filed 5 Jan. 2006 which is incorporated herein in its entirety by this reference thereto.

The invention relates to the field of compression systems. More particularly the invention relates to a structure and process for the controlled compression of digital data files such as but not limited to video files in any of a network environment and a standalone computer system.

The amount of uncompressed digital video data stored at film studios and postproduction facilities is currently increasing rapidly. This causes tremendous financial burdens because new investment for storage and network equipment must be made which also results in a significant increase in electricity bills.

The currently preferred technology to cope with the expansion of digital video data is mathematically lossless compression. In mathematically lossless compression digital video files are compressed for transmission and storage while the contents are the same as the original files when they are decompressed. Thus both storage space and transmission time are saved.

However mathematically lossless compression technology has been difficult to incorporate within computing systems since application programs from disparate vendors are required to be modified.

Traditional compression typically comprises blind content compression systems. Existing blind content compression systems such as zip tar etc. typically perform generic compression to files without consideration as to the precise file structure of the files themselves. However file formats often have widely varying construction such that generic blind compression provides a wide spectrum of performance. The generic nature of such blind compression often doesn t work particularly for video compression.

OS supported codecs such as Directshow filters are typically implemented for specific compression of consumer video files and can inherently result in performance bottlenecks and or quality limitations. For example Directshow a multimedia architecture available through Microsoft Inc. of Redmond Wash. such as provided for a variety of Windows operating systems typically divides multimedia system processing tasks through a set of filters.

Application specific application programming interfaces APIs e.g. such as Adobe Premiere SDK typically depend upon third party APIs for performance and require integration and support that is specific to applications for which they are implemented.

While some compression programs are ideally suited for a specified file format e.g. .tgz .bmp etc. a user is required to knowledgably know what file type each file is and then is required to apply the desired compression program to create a compressed file to be stored.

It would be advantageous to provide a system that performs file type based compression without ongoing user intervention. As well it would be beneficial to provide a compression system that is easily scaled to provide file type based compression for one or more users with minimal hardware requirements.

For example the motion picture industry commonly produces vast amounts of video data files for each of numerous film projects at any given time. Raw film and digital footage are often collected stored and edited. The required storage for such memory intensive operations is staggering and the industry continually has to invest in hardware and software dedicated to these tasks.

It would therefore be beneficial to provide a compression system that can be readily implemented to be integrated with existing equipment for a wide variety of computer systems across a wide variety of system environments e.g. networks to save both money and time for such entities.

As well it would be extremely beneficial to provide networked compression and storage which can offload hardware and software requirements for dedicated terminals.

It would also be advantageous to provide a data compression system and an associated process that provide transparent file type based compression for one or more users. The development of such a data compression system would constitute a major technological advance.

A system and process are provided for transparent data compression within networked systems. This system enables user level applications to compress and decompress files to save storage space even if the user level applications are not modified to use compressed files. User preferences associated with a user terminal are established for the compression of data e.g. video data wherein the user preferences comprise selective enablement of compression for at least one file type. An exemplary system determines the type of a digital data file e.g. a digital video data file being output from an application or input to an application and performs transparent file type based compression or decompression of the digital video data file if enabled by the established user preferences. Files of the selected file types are stored with compressed formats and may even have different names but are shown to all user level applications to have the same file names and file sizes as original uncompressed files. Therefore the existing applications can perform operations without any disruptions. The transparent compression can be implemented within a variety of dedicated and or distributed network configurations as well as on a single workstation.

In some system embodiments one or more compression servers comprise Zaxel Compression Servers such as ZLC Server available through Zaxel Systems Inc. of Sunnyvale Calif.

In the exemplary systems shown in and the configuration utility typically runs as a user mode application on the user workstation i.e. terminal . The configuration utility allows users USR to set i.e. select such as with a server marker server names e.g. and or to enable disable compression or decompression . The configuration utility may preferably comprise a front end for critical error reporting from the rest of the system .

Based on system functions the configuration utility interacts i.e. communicates with the redirector and or the interceptor . For example as seen in and the configuration utility may transfer 24 settings such as entered by a user USR through a configuration interface e.g. to the redirector . Data files from the configuration utility application are directly received by the interceptor .

The interceptor is typically associated with input output IO for the system such as to see all input headed into the file system e.g. such as incoming files to be selectively compressed or requests for files and to see all output delivered by the system e.g. such as outgoing files to be delivered back toward the user USR such as through a user application to . The interceptor selectively forwards IO headed to the redirector based on user settings e.g. such as but not limited to dpx cin tif .tgz and or .bmp compression enablement settings .

In some exemplary system embodiments the interceptor is implemented as a filter driver such as running in kernel mode. In some system embodiments the interceptor comprises a standard filter driver component such as used for encryption antivirus and or archiving systems.

In some system embodiments the redirector may comprise a service application at a user workstation such as seen in or a service application at the compression server such as seen in . The redirector typically communicates with the interceptor such as through IOCTL and with the compressor via standard sockets. In most system embodiments the redirector keeps work out of the kernel.

As seen in the exemplary systems shown in and the compressor typically comprises a server service application at a compression server which in some system embodiments comprises a dedicated server . The compression server may preferably comprise a Zaxel server as described above. The compressor application typically handles all the compressed file translation for which the compressor is assigned by the system such as for selective compression and decompression as provided by the system and preferably as selected by a user USR e.g. through the configuration utility .

The integrated data compression system can be implemented across a wide variety of system architectures. For example is a basic schematic diagram of a network integrated data compression system for a single client terminal . is a basic schematic diagram of an exemplary embodiment of an integrated data compression system for multiple client terminals such as through a switch e.g. a fiber channel switch . As seen in the exemplary networked integrated data compression system shown in one or more user terminals i.e. workstations e.g. may be connected through a switch to the compression server such as for interconnection between redirectors and the compressor module as seen in the exemplary system shown in or for associated interconnections between the configuration utility and the interceptor and redirector as seen in the exemplary system shown in . As seen in some embodiments of the integrated data compression system that serve multiple client terminals are implemented across a network such as but not limited to a local area network LAN a wide area network WAN and or the Internet. An alternate embodiment of the integrated data compression system comprises one computer enclosure such that a terminal compression server and storage of are enclosed in one computer system.

The exemplary configuration interface shown in comprises means for selecting i.e. naming one or more file types e.g. to be performed on files for the user USR at the user workstation such as through a user application . The configuration interface shown through the system display of the workstation may preferably comprise a graphic user interface GUI such as to display one or more selectable file types e.g. and means for selecting desired file types as offered by the system . The exemplary selection means shown in comprises check boxes e.g. associatively related to file types e.g. that can be selected or deselected by a user USR typically through user input such as but not limited to keyboard input and or mouse input . While the exemplary selection means shown in comprises check boxes the selection means may comprise any of a wide variety of selection formats.

The exemplary configuration interface shown in comprises means for selecting i.e. naming one or more compression servers e.g. to be used by the system for compression and decompression of files for the user USR at the user workstation such as through a user application . The configuration interface shown through the system display of the workstation preferably comprises a graphic user interface GUI such as to display one or more selectable names e.g. corresponding to compression servers e.g. and means for selecting desired compression servers as offered by the system . The exemplary selection means shown in comprises check boxes e.g. associatively related to compression servers e.g. that can be selected or deselected by a user USR typically through user input such as but not limited to keyboard input and or mouse input . While the exemplary selection means shown in comprises check boxes the selection means may comprise any of a wide variety of selection formats.

While selection of compression servers e.g. is typically made by a user USR through the configuration utility such as through a configuration interface associated with the configuration utility the selection i.e. designation of storage is typically determined through the user application . For example in various system embodiments a user USR may select through a user application e.g. Adobe Premiere local storage associated with a workstation storage associated with a network of associated workstations e.g. one or more dedicated servers or other storage such as storage accessible across a network e.g. storage associated with the system and or compression server or other storage across a network .

In the integrated data compression system the files in storage are compressed and may have different file names. However the filter mechanism shows these compressed files as the original files with original file names and original file sizes to applications . When application programs access these files as before assuming they are the original non compressed file e.g. in the form ABC.DPX the redirector changes the file access to the compressed file e.g. ABC.DPZ and decompresses and presents the original file e.g. ABC.DPX to the application program . The application program does not know that either the compression or decompression take place. The integrated data compression system therefore provides transparent compression and decompression since the application programs do not realize that compression and decompression occur while storage and communication are utilized more efficiently.

Furthermore the types of files that are to be compressed such as DPX files or TIFF files can be selectively defined. Since different types of files have different formats for laying out the header information video and audio compression and decompression programs need to know which file types they are compressing to perform compression efficiently. In the integrated data compression system the redirector checks the file type e.g. such as for DPX files TIFF files or other file types and then invokes file type specific compression and decompression programs which is referred to in the integrated data compression system as file type based compression.

As seen in if a determination of file type of the data file is made the system determines if compression is allowed such as selected by the user USR for the file type of the data file such as through the redirector . If the file type based compression is not allowed the data file is transferred for file storage e.g. to storage determined through the user application . If the file type based compression is allowed the data file is compressed using the selected compression type and transferred to file storage e.g. to storage determined through the user application .

The integrated data compression system and associated processes can provide transparent and file type based compression and decompression to a wide variety of data files such as but not limited to any of image files audio files video files animation files multimedia files medical imaging files security camera files and digital camera files .

The integrated data compression system and associated processes typically allow for compression and decompression work to be done on a compression server rather than on the user s desktop i.e. workspace whereby the user CPU is released from compression work and is therefore available for third party software .

As well one or more compression servers can be shared between client workstations i.e. client machines such as compression servers seen in .

As seen in a user USR at a client terminal i.e. workstation typically interacts with a data file within a user application such as working with a video or image data file through associated video or image editing or compositing software . Through typical user operations of saving closing and or storing of a data file the virtual view of the file such as seen by the user USR may preferably present the file as a full size uncompressed data file which in is represented by data file XY.DPX

As seen in while the virtual view presents a virtual file to the user USR the integrated data compression system and associated processes access the data file e.g. such as through an interceptor filter e.g. a Windows filter to process the data file access as an access to the real data file such as represented by data file XY.DPZ in a real space view . The integrated data compression system and associated processes shown in therefore provide transparent compression and decompression such as defined by or otherwise allowed through the associated configuration utility application .

As seen in in embodiments of the integrated data compression system and associated processes that provide transparent compression and decompression such as compression and decompression a user USR may experience a data file as full size within a workspace such as through a user application . Through transparent compression decompression within the virtual view the user USR experiences a virtual data file as full size through the user workstation such as within a directory .

However as seen in the real view in transparent and file type based compression and decompression are performed as defined by or otherwise allowed through the associated configuration utility application which yields a real data file within the real view which in compressed form is shown in its true size which may be significantly compressed based on the compression settings and data file format.

The integrated data compression system provides significant advantages for a wide variety of users USR and entities. For example while a group of one or more users USR at client workstations may desire the benefits of specific compression systems and processes such as for specific video compression e.g. Zaxel s mathematically lossless compression ZLC such users USR or user entities are often not prepared to invest in new hardware and often prefer to use their existing hardware e.g. workstations servers and or storage such as preexisting video systems from established vendors.

For example full featured video editing and authoring tools are often complex and may take years to develop. Users USR of such dedicated hardware are often reluctant to modify or upgrade such hardware and software such as to attempt to integrate dedicated compression systems or to discard existing systems that work to attempt to gain performance through new and often costly hardware and software. The integrated data compression system inherently provides a significant advantages for such systems and users USR since the system is readily integrated with existing hardware and software while providing networked data file compression that may preferably perform file type based compression duties as allowed or selected through the configuration utility and may also preferably provide transparent compression decompression .

Some functional embodiments of the integrated data compression system and associated processes are implemented over an Ethernet such as to provide networked processing of data files . As well the system performance is tunable such as over a fiber channel. Stability testing of some system embodiments is provided through synthetic input and output IO . In addition application specific testing and acceptance tests are typically performed to ensure successful integration for different system environments.

In some embodiments of the integrated data compression system and associated processes most software components comprise Windows 32 or MFC software and can provide automated and or manual kernel dumping based on system requirements and or user expertise. Documentation is preferably provided such as through HTML or integrated within the system software e.g. context sensitive indexed and or menu driven for any or all modules and is preferably generated for specially formatted comments in new source files.

The integrated data compression system and associated processes provide transparent compression . Digital video files that are transferred between the application programs and the storage are intercepted by the interceptor of the transparent compression system and compressed without the need to modify the existing application programs . Application programs continue to view these files with the original names and sizes even though they are compressed and may have different names. When these files are accessed they are loaded into memory and decompressed in the background. As seen in the application programs process the files as original uncompressed files

Although the integrated data compression system and its methods of use are described herein in connection with workstations client machines servers storage devices and other networked microprocessor based devices the system and techniques can be implemented for a wide variety of hardware and systems or any combination thereof as desired.

Accordingly although the data compression has been described in detail with reference to a particular preferred embodiment persons possessing ordinary skill in the art to which this invention pertains will appreciate that various modifications and enhancements may be made without departing from the spirit and scope of the claims that follow.

