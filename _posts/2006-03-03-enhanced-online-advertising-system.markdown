---

title: Enhanced online advertising system
abstract: The system provides an automatically targeted network for text and graphical advertising based on cost-per-action bidded pricing, wherein actions comprise any of acquisitions, purchases, downloads, registrations, donations, clicks, and impressions. Contextual, search and behavioral relevance features are integrated to optimize ad selection for advertisers, who enter action objectives, associated bids, and creatives or catalog assets. The assets are automatically analyzed and stored, and ads are automatically constructed for catalog assets. When an ad request is received from a user terminal in regard to a publisher asset, e.g. a web page, the ad request is matched to a stored contextual analysis of at least a portion the publisher asset if available, and preferably to a profile associated with the user of the user terminal. The best advertisements are determined, based upon a predicted response, and are then served, i.e. displayed, at the user terminal, based upon available ad space.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08768766&OS=08768766&RS=08768766
owner: Turn Inc.
number: 08768766
owner_city: San Mateo
owner_country: US
publication_date: 20060303
---
This application claims priority from U.S. Provisional Patent Application Ser. No. 60 659 638 entitled Method and Apparatus for Online Advertising filed 7 Mar. 2005 which is incorporated herein in its entirety by this reference thereto.

The invention relates to the networked advertising systems. More particularly the invention relates to improved integration and display of information from publishers and advertisers based on automated relevance analysis.

While various forms of online advertising have been used for several years most types of conventional online advertising offer only limited relevance to consumers. The relevance technology behind traditional graphical ads e.g. such as for banner ads has changed little in the last decade.

Search engine ads such as those supplied by current search engine entities e.g. Google and Overture are typically more relevant than graphical ads but are often less relevant than the search results provided by the associated search engines themselves.

The model of how ads are priced affects not only the economics of associated advertisers and publishers but also the relevance of the ads to consumers.

Cost per impression CPM pricing is the oldest pricing model and is still widely used for graphic ads. An advertiser pays a set rate each time an ad is shown to a consumer. CPM prices are typically negotiated for individual ads or ad campaigns with each publisher by the publisher s sales force.

CPM priced ads are rarely priced accurately to reflect their true value to advertisers publishers and consumers. For example publishers sales teams are motivated primarily by commissions that arise from closing deals and reducing sales costs and thus ad inventory gets sold in large bundles that don t distinguish the relevance and value of individual ads. As well advertisers are required to monitor the effectiveness of CPM ads such as by tracking rates of clicks and conversions of clicks to purchases and or actions and most advertisers find it difficult to monitor performance effectively.

Cost per click CPC pricing currently accounts for more than half of all online ad revenue. In a Cost per click CPC system advertisers pay a set rate each time the consumer clicks on the ad. Cost per click CPC systems are often associated with bidding markets in which the advertiser bids against other advertisers for how much they re willing to pay per click. Most CPC ad revenue today comes from keyword bidding in which advertisers bid for clicks from ads attached to particular keywords.

Compared to CPM pricing CPC pricing more closely aligns the interests of the advertiser the publisher and the consumer since the ads that are more relevant to consumers get higher click rates and thus higher CPC prices and thus advertisers pay prices that more closely match the actual value delivered by the ads.

In principle an advertiser who fully tracks ad clicks and conversions from clicks to purchases may not care whether they paid per impression or per click since they would know precisely the value of each. But in practice most advertisers still don t do such full tracking and thus they rely on click rates as approximations for the relevance of an ad.

CPC pricing still suffers a serious problem clicks originating from different Web sites in an ad network have different values to a publisher but the publisher must pay a single uniform CPC price regardless of where the ad is displayed.

For example an advertiser of genealogical services has found that users who click on an ad placed at AOL.com are much more likely to subscribe to the services than users who click on the same ad at Google.com because the demographics of the users at the two sites are so different. However the advertiser must pay the same price for those clicks and thus may be underpaying for the clicks at AOL.com and or overpaying for the clicks at Google.com.

Such systems are therefore economically inefficient and greatly affect the relevance of the ads actually shown to consumers. Conventional ad networks typically use a bidded CPC as a primary determiner of which ads get shown the higher the CPC the more likely an ad will be shown. Thus in the example above the genealogy ads on AOL.com are not shown as much as they should be because the advertiser is paying less per click than their true value to the advertiser. Similarly the ads on Google.com are shown more than they should because the advertiser is paying more per click than their true value to the advertiser.

To address this problem a conventional ad network could in principle allow advertisers to pay different CPC s for each of the thousands of publishers sites in its network. However such an approach makes the bidding even more complicated than it already is and depresses bid prices by subdividing the bidding market allowing advertisers to pick and choose which sites run their ads with far fewer advertisers bidding for a given keyword in any one submarket.

Similarly uniform CPC pricing is not a good fit with behavioral targeting of ads. In behavioral targeting ads are targeted to individual users based on their demographics and past behavior such as which pages they ve recently visited and what they ve purchased. Typically users may be segmented into dozens or hundreds of segments while ads are differentially targeted to the segments. Since some segments are more likely to purchase after clicking on an ad than other segments advertisers want to pay a different CPC for each segment. But as discussed above that greatly complicates an already complicated bidding process and depresses bid prices.

As well CPC pricing is very susceptible to click fraud . Using simple off the shelf software an unscrupulous business can easily generate large volumes of fake clicks on its competitor s ads forcing the competitor to pay for clicks that aren t generating any real business. More seriously an unscrupulous publisher can run CPC ads from an ad network and create fake clicks in an attempt to get more revenue from the ad network which shares its revenue with its publishers . Click fraud is widely recognized as a serious problem and ad networks like Google and Yahoo invest large amounts to attempt to detect and prevent such fraud.

Ad networks such as Google and Overture require advertisers to pick keyword phrases that control when the ad is shown and a maximum per click price for each keyword phrase. Both tasks are quite difficult for the average advertiser.

The keyword phrases associated with an ad trigger when the ad is displayed to a user. On a search engine the phrases are matched against the users queries and on Web pages they are matched against the content of the pages. Picking good keywords is essential for making the ads relevant to the end users.

A single ad for one product might require dozens of triggering keyword phrases. A typical small advertiser might have dozens of ads and hundreds of keyword phrases and medium and large sized advertisers could have tens or hundreds of thousands of phrases. It s quite difficult for the typical advertiser to think of all the different phrases that should trigger the display of an ad. For example a single ad for Apple ipod might require the following keyword phrases Apple ipod iPod mp3 player Apple Apple mp3 player music player Apple music player portable music player music appliance and similar keyword phrases for all of the iPod s competitors.

The advertiser then needs to pick the maximum cost per click she s willing to pay for each different keyword phrase. Typically a sophisticated advertiser will measure the rate at which people who click on an ad triggered by a given keyword phrase go on to make a purchase the so called conversion rate . Knowing the conversion rate for a keyword phrase and the maximum amount the advertiser is willing to pay for a purchase of the advertised product or service the advertiser can then choose the maximum CPC that is profitable for clicks on that keyword phrase. For example suppose an advertiser is willing to pay 10 to acquire a purchase of one of its products and suppose that 10 of users who click on an ad triggered by a given keyword phrase actually go on to make a purchase. In this case the advertiser would be willing to pay up to 1 for each click.

In practice most advertisers find it very difficult to pick thousands of keyword phrases track conversion rates on them and adjust the maximum CPCs accordingly. The advertisers ads products prices and Web site all of which affect conversion rates are constantly changing and a sophisticated advertiser will constantly monitor and adjust keyword phrases and CPCs. However as reported by JupiterResearch at Search Engine Strategies Conference 13 16 Dec. 2004 Chicago Ill. Only one of four search marketers bids and measures intelligently i.e. 3 of 4 of search marketers currently use unsophisticated search engine marketing SEM tactics.

A number of ad networks including Google use the rate of clicks on an ad as a partial measure of the ad s relevance to users. While this has worked well when the ads were shown mostly on a few search engines it doesn t work nearly as well when the ads are shown on thousands of Web sites and it doesn t work well with behavioral targeting.

Some conventional ad networks choose which ads to show on a page by first finding ads whose keywords match the text on the page. Then the network ranks those matching ads by estimating the effective revenue per impression it would get from each ad if it were to be shown on that page and then picks the ads with the highest revenue per impression referred to as either effective CPM or ECPM.

Google estimates the effective revenue per impression using the click rate of the ad and the bid price of the ad s keywords ECPM click rate of the ad bid price per click for the ad keywords

 Click rate is defined as clicks per impression and bid price per click is defined as dollars per click so effective revenue per impression is thus ECPM dollars impression clicks impression dollars click

To measure click rate such an ad network may run thousands of initial test impressions of an ad to get an accurate measure of a click rates which are typically on the order of 0.1 to 1 for non search ads . While the use of test impressions may work adequately on a single search engine such systems quickly become cumbersome when applied to a network of thousands of publishers or when applied to behavioral targeting.

The click rate for ads often varies considerably from one publisher s site to the next from one section of a site to the next and from one page to another. Similarly click rates can vary significantly among the hundreds of user segments inferred by behavioral targeting.

It would therefore be advantageous to provide an ad network that could measure an ad s click rate separately for each of the thousands of likely combinations of publishers sections within sites pages within sections and user segments wherein such an ad network could optimize the ranking of ads for each different combination of ad page and user segment.

However in practice getting a separate measurement of click rate for each combination isn t practical. Any given page may be read by hundreds of segments of users and there may be hundreds to tens of thousands of reasonably likely ads for that page so millions of test impressions of that page would be required just to measure click rate. Not only would it take too long to run those test impressions e.g. perhaps weeks but it would also cost too much since such a system would be sacrificing significant revenue by running too many ads that generate too few clicks. And on smaller Web sites with fewer visitors there simply aren t enough impressions available.

Thus when estimating ECPM to select ads conventional ad networks are limited to using the average click rate of ads over the entire network or large subsets of the network rather than for each combination of page and user segment. Since actual click rates can vary greatly across combinations the use of average click rate yields an inferior selection of ads for any given page and user.

As a consequence of their reliance on average click rates conventional ad networks will find it difficult to introduce behavioral targeting. Such conventional ad networks also find it difficult to accommodate advertisers with very large numbers of ads since each ad consumes test impressions in order to measure their click rates.

Current advertising technologies are quite limited in how they match ads with Web pages and users. There are four main approaches 

For example an advertiser of video games may preferably run its ads on sites whose audiences have a disproportionate number of 18 25 year old males. Sometimes this matching employs quantitative data obtained from providers like comScore but often it is intuitive. For example movie advertisers typically run their ads in the entertainment section of a Web site.

For example an advertiser of Apple iPods will likely have purchased the keyword iPod and its ad will run on pages that contain the keyword iPod and on search results for user queries containing iPod .

As discussed above conventional ad networks typically observe the actual click rate on an ad to judge its relevance.

With behavioral targeting the past behavior of an individual user is used to predict to which ads a user is likely to respond. For example a user who has visited auto buying sites frequently in the past month may be more likely to respond to ads for auto loans.

Any one ad network typically uses just one or two of these approaches. Large CPM brand advertisers still rely primarily on matching demographics. For example Advertising.com relies primarily on observed click rates. Tacoda Revenue Science and Claria rely on past behavior. Google relies on text matching with keywords purchased by the advertiser and on click rate.

In contrast to such conventional ad networks current state of the art consumer search engines typically use dozens of features to judge the relevance of indexed pages to a user s query. For example search engines such as Yahoo and Google use many different measures of text match between the query and the different parts of the entire indexed pages and the text of links that point at the pages. Such search engines use numerous measures of the number and quality of incoming Web links and may even use click rates to help identify more popular documents.

A modern search engine may have 50 or more such variables for judging relevance as compared to the handful of variables used by ad technology. As a result the results yielded by such search engines are often significantly more relevant than that of the accompanying text ads.

While the disclosed prior art systems and methodologies provide placement of ads within web sites based on a variety of pricing methods the ads often have limited relevance to customers and require significant effort and expertise from advertisers thereby minimizing the value of the ads to advertisers publishers customers and the ad network.

It would be advantageous to provide a network ad network that combines state of the art search technology with a radically different pricing model wherein ads are much more relevant to consumers much simpler and more effective for advertisers and thus more profitable for publishers. The development of such a system would constitute a major technological advance.

In addition it would be advantageous to provide an advertising system across a network that analyzes both publisher content and advertiser content past user behavior profile information of users past rates of performance of ads time of day and day of week and or many other factors to determine relevance of ads to be displayed with publisher content wherein the relevance is based on a prediction of response by the user. Furthermore it would be advantageous to select one or more of the ads for display with the publisher content based on such a prediction. The development of such a system would constitute a further technological advance.

The enhanced online advertising system provides an automatically targeted network for text and graphical advertising that is based on cost per action CPA bidded pricing wherein the action comprises any action of the user desired by the advertiser such as but not limited to acquisition purchase download registration donation click and branding impression. A search component integrates contextual search and behavioral relevance features to optimize ad selection for advertisers. An advertiser campaign associated with an advertiser entity typically comprises one or more advertisements such as desired to be placed at one or more other locations across a network of publishers and an advertiser s web site associated with a click of one of the placed advertisements by the customer user. Through the advertiser interface an advertiser enters objectives i.e. desired actions e.g. a customer purchase or signup that results from customer selection of a placed ad customer navigation to the web site through the landing page and a resultant action desired by the advertiser. The advertiser also enters a desired bid value e.g. price or commission percentage for each of the entered objectives and one or more advertisements i.e. ad creatives. The system automatically analyzes i.e. configures the assets associated with the entered advertiser campaign including the web site and the advertisements.

A publisher entity comprises a publisher web site having one or more publisher web pages which also comprises one or more ad spaces. When the enhanced online advertising system receives an ad request from a publisher associated with placement on a publisher web page the system retrieves a stored analysis of the context of the associated publisher web page. The analysis may preferably integrate other relevant information associated with the publisher such as further analysis of the publisher web site or other factors such as but not limited to target audience geographic location link count past aggregate click and action rates on ads time of day and day of week etc.

When a user views a web page an ad request is generated which is matched to results of the analysis associated with the page. The user is preferably matched to a profile that represents the user s past behavior and one or more advertisements are selected based upon a predicted response of the user. The selected ads are also preferably ranked such as by ECPM where ECPM Average Cost per Action CPA Number of Actions 1000 Number of Impressions Served 

The top ranked ads are then returned to the user i.e. displayed based upon the available ad space. The enhanced online advertising system provides search technology based relevance and integrates search contextual and behavioral attributes. As well no manual targeting is required. While keyword and or category hints may be utilized if available they are not required. An ad having a higher rank gets more play so an advertiser may increase the rank of a desired advertisement by increasing the bid price and or improving the quality of the ad.

The exemplary web page seen in also includes one or more graphical display ads which often act as links to an advertising site . While the exemplary graphic display ads seen in comprise a banner ad and one or more other ads a wide variety of ads may be displayed on the web page .

In addition to a ranked summary list of search result elements a search engine web page also commonly includes one or more sponsored links such as arranged in one or more highly visible regions e.g. such as in a banner region and or a side bar region of the web page

Advertisers typically are required to enter a large number of keywords and or phrases to be associated with each ad to be placed and also typically enter a value e.g. set or bid price.

The ad network places or sends selected ones of the submitted ads to one or more publishers who in turn present content and one or more ads to consumer terminals . Based on selected actions by a user USR such as a view click or purchase an advertiser is made aware or updated of the action i.e. results. Based on agreement with the advertiser network payment is typically made or credited to the ad network responsive to the tracked actions . As well the ad network typically compensates the publishers for providing ad space e.g. that results in actions .

As seen in the enhanced online advertising system typically comprises system infrastructural components a relevance module system storage and associated system applications . The exemplary system infrastructural components shown in comprise an ad generation module a page analysis cache an ad serving module and an action tracking module . The exemplary relevance module comprises an ad analysis module a page analysis module an ad selection module and an ad ranking module . As also seen in system applications typically comprise user applications advertiser publisher applications business operations applications and technical operations .

In the enhanced online advertising system shown in publisher pages and or sites that are submitted sent or otherwise accessed by the system are received by the page analysis cache . In some system embodiments the system provides ad generation based on all or part of a catalog that is submitted or otherwise authorized by a publisher . The system may also receive previously prepared ads from an advertiser .

The ad analysis module analyzes received or generated ads and stores the analyzed ads for further use as shown generally as system storage .

The page analysis module analyzes submitted publisher pages and or sites and also typically stores the results in system storage such as in a publisher analysis database . Analyzed publisher pages are provided to the ad selection module which selects one or more ads based at least in part on information accessed from storage to the analyzed pages . An ad ranking module receives the selected ads and ranks the selected ads wherein the ranking is preferably based on ECPM as described below. Based on available ad space e.g. and on the associated analyzed publisher page one of more of the ads having the highest ranking are provided by the ad serving module whereby the served ads are presented in conjunction with the analyzed publisher page to a user USR.

User actions such as but not limited to clicks sales sign ups and or confirmations are received by a action tracking module which also preferably provides feedback for the system .

A enhanced online advertising system and associated processes e.g. provide an automatically targeted network for text and graphical advertising that is preferably based on cost per action CPA bidded pricing wherein the action comprises any of acquisition purchase download registration donation click CPC and branding impression CPM . A search i.e. relevance component integrates contextual search and or behavioral relevance features to optimize ad selection for advertisers .

Preferred embodiments of the enhanced inline advertising system comprise a unique combination of key elements including a pricing model based on bidded cost per action CPA in which advertisers bid and pay only for true results a state of the art search technology that predicts ad relevance using dozens of pieces of evidence and increased ad coverage via automatic generation of ads and the uniform handling of all formats of ads including but not limited to text ads graphical ads hybrid ads and rich media ads as seen in .

Through the advertiser interface an advertiser such as through an advertiser terminal enters e.g. step objectives i.e. desired actions e.g. a product purchase or email signup that results from customer clicking i.e. selection of a placed ad customer navigation to the advertiser web site through the landing page and a resultant desired action as specified by the advertiser .

In preferred embodiments of the enhanced online advertising system advertisers bid for the cost per action CPA prices that they are willing to pay for their respective actions . The more the advertiser bids the more likely ads are shown and the more actions generated. This bidded market is more efficient at getting advertisers to disclose the true value of the ads and thus the enhanced online advertising system is better able to select ads that are truly relevant to users USR and profitable to publishers .

In some preferred embodiments of the enhanced online advertising system an advertiser can associate a CPA bid price with an ad in variety of ways such as by a maximum bid CPA a variable bid CPA bid an ad based CPA bid associating a bid with an ad and or a beacon based fixed bid associating a fixed bid with a beacon .

With a maximum bid CPA the advertiser associates a different maximum CPA price with each of a plurality of ads e.g. for tens hundreds thousands or millions of ads . For example a large retailer may have a separate ad for each of the millions of products e.g. in an associated catalog wherein each ad may have a different associated CPA reflecting the value to the retailer of a purchase action of that product . Some advertisers such as lead generation advertisers may have single objective goal and may set a single maximum CPA that applies to all their ads .

With maximum bid CPA in the enhanced online advertising system an advertiser doesn t always pay the maximum CPA . For example in some system embodiments for any action resulting from placement of an ad the system reduces the actual CPA to be paid to be just one increment more e.g. one cent more than the minimum necessary to keep the ad s position i.e. ranking relative to other ads on the publisher page . Thus an advertiser can set a maximum bid that reflects the true value of the associated action while being assured that the advertiser only pays a market price relative to other advertiser bidders .

Variable bid CPA is typically a beacon based commission bid wherein a variable amount is associated with a beacon . With variable bid CPA the advertiser decides in real time how much to pay for an action resulting from placement of an ad . For example a retailer may define an action to be completing a purchase whereby the retailer will pay for each such action a percentage of the gross margin of the products in the consumer s shopping cart . As well a retailer that desires to build its customer base may pay a low price or nothing for purchase actions by existing customers USR and a higher price e.g. 25US for each new customer USR who purchases as a result of an ad where such a payment e.g. 25 US represents a portion of the expected lifetime value the new customer USR will bring to the retailer .

Compared to setting a fixed maximum CPA variable CPA more accurately reflects the value of an action resulting from an ad . For example a retailer might create two different ads for the same product . One ad might appeal to price sensitive customers USR who end up purchasing just the product advertised whereas the other ad might appeal to price insensitive customers USR who end up purchasing much more than just the advertised product . By paying for each action separately as it occurs the advertiser automatically conveys to the system the true underlying value of each different ad . The advertiser is not required to know ahead of time how much each ad is worth and doesn t need to measure the value as the system inherently provides the value on behalf of the advertiser .

Regardless of bid method the advertiser knows that the larger its bid the more likely its ads will be shown on any given publisher page and if shown preferably the higher or more visible on the page relative to other ads . Thus the more the advertiser bids i.e. agrees to pay the more actions are generated by the system . The advertiser can therefore readily decide on the tradeoff between bid price and number of actions based on its own business goals.

As discussed above advertisers that use conventional advertising networks are typically required to input a large amount of information in regard to their own perceived relevance of their ads and their own perceived relative relevance to possible publisher sites e.g. such as to input a large number of key words associated with ads and their respective advertiser web site . Existing ad technologies require a large amount of manual effort by an advertiser to generate and target ads and the relevance is limited to the expertise of the advertiser .

In contrast the enhanced online advertising system significantly simplifies interactions and inputs from an advertiser . As the system automatically analyzes i.e. configures the assets associated with the entered advertiser campaign such as to provide contextual analysis of any and all content the relevance of the advertiser campaign and ads are automatically determined. As will be described below overall relevance in the enhanced online advertising system is not limited to the analysis of advertiser assets as the system preferably provides a comprehensive determination of relevance such as including relevance to publisher assets and relevance to users USR.

If a determination is made that prior analysis is ready e.g. has already been performed and is considered to be fresh i.e. current the system may proceed to determine the best ad or ads to serve such as seen in process .

If the determination is made that prior analysis is not ready e.g. that some or all of the analysis has either not been performed or is not considered to be fresh i.e. current the system may preferably proceed to serve an ad of general relevance during a first ad call until contextual analysis can be performed. In some system embodiments ads that are determined to be of general relevance are selectable by publishers wherein the system allows each publisher to define one or more default ads . The system can then show one or more of the default ads for any publisher page that hasn t yet been analyzed until the system has finished analyzing the page . Some system embodiments may alternatively select general ads based on the title of the page which can be passed in the ad call and or based on one or more other feature elements associated with the publisher which the system has knowledge of and which require no additional analysis.

As needed such as for new publisher content or for contextual analysis that is determined to preferably require updating the system provides an automated contextual analysis of the web page corresponding to the available ad space . The system also preferably provides secondary analysis of other relevant publisher assets such as but not limited to contextual analysis of one or more other publisher web pages associated with the publisher web site and an integration of secondary data . The results of the page analysis and secondary analysis are then stored such as preferably for a limited time e.g. such as for any of an hour a day a week or a month to ensure the current relevance of the stored publisher information .

The exemplary file seen in typically comprises information regarding a catalog of one or more advertiser assets i.e. products e.g. and is typically arranged in a file format comprising records e.g. respectively associated with assets such as products or services . Each product record comprises fields e.g. correspondingly associated with products such as but not limited to an SKU a product name a product description a list price a sale price a stock indicator a landing URL a category and or the URL of a thumbnail image of the product .

While some advertisers may have a relatively limited number of available products or services many advertisers such as retail stores and or web sites often have hundreds of thousands or even millions of products whereby the application of human expertise in the establishment and promotion of more than a limited percentage of a catalog is often unfeasible or impossible.

The enhanced online advertising system inherently provides great value to advertising entities having catalogs of products and or services whereby a catalog file may be received and automatically analyzed to automatically produce advertisements which may be efficiently stored and served by the system .

As seen in the exemplary process flow diagram of the system receives a catalog file from an advertiser and the advertiser is able to input at step goals for one or more catalog items such as by setting objectives i.e. actions and by assigning corresponding bids .

The bid price of an ad is preferably assigned from a price field e.g. in the catalog . This is important for both ad based CPA bids and commission based CPA bids both of which require that each ad have an assigned CPA .

An advertiser can preferably send new versions of the catalog file periodically e.g. once a day or once a week. The system identifies which items e.g. in the catalog are new which have been modified and which have been deleted and updates the ads accordingly.

The system preferably performs an analysis of the content of each of the assets i.e. products in the catalog as with analysis of received creatives . The analysis typically comprises an analysis of any or all product fields e.g. such as fields to be included in the ad as well as other field information . The analysis may also preferably comprise extensive contextual analysis of any or all advertiser assets such as but not limited to any elements of the advertiser web site landing pages and or other advertiser web pages .

The system then typically produces at step ads for the analyzed assets i.e. products . As seen in the system may also determine an appropriate format for one or more of the ads for an advertiser such as to apply an ad template . The determination of ad formats may preferably include input from any of the advertiser a secondary source e.g. such as an ad design firm associated with the advertiser internal ad format input e.g. such as to provide one or more ad styles and in some system embodiments may also receive input from content analysis .

In some system embodiments business rules are expressed in a scripting language at step responsive to which the system selects one or more fields from an asset record corresponding to a catalog item and transforms one or more of the fields such as with an ad template to produce a corresponding catalog ad .

As also seen in the system similarly stores the catalog ads and can integrate and serve the ads alongside other submitted ad creatives as desired as shown schematically by the ad serving module .

For ads that appear very frequently on publisher pages that get lots of traffic the system may preferably use observed action rates of the ad on those pages such as in preference to predicted action rates.

For ads that appear very frequently on publisher pages that get lots of traffic i.e. clicks the system may preferably incorporate observed action rates of the ads on those pages in addition to the predicted action rates . In such cases the observed action rates may often be more accurate.

For each such pair of target page and ad the system preferably tracks the past number of impressions and resulting actions . To get a final probability of action for estimating ECPM the system applies a blending function B to the predicted probability p the number of impressions i and number of resulting actions a 

While there are a number of possible blending functions a preferred blending function B tests impressions i and actions a for statistical significance. For example in one blending embodiment if the significance exceeds a threshold e.g. 5 percent with 95 percent confidence the system uses the observed action rate otherwise the system uses the predicted probability .

A user USR may then select i.e. click on a served ad typically by a user input such as in response to an impression . The system provides a link from which the user browser navigates to the advertiser site such as through a designated landing page associated with the ad .

As seen in the exemplary system embodiment shown in the click and or navigation are typically tracked back typically by a redirect URL served by the system such as to track the click as a desired action and or for tracking of click to action . When the redirect URL is fetched the system records the click and then responds with an HTTP redirect to the browser at the user terminal which tells the browser to fetch the original landing page URL.

In regard to the exemplary click to action seen in for a user USR who initially clicks on an ad to navigate to an advertiser site and who at a later time e.g. one or two weeks later returns to the advertiser site and proceeds to purchase one or more items within a click to action time the action is properly captured such that payment may be received from the advertiser and such that payment may be made to the publisher .

Also in regard to the click to action association window shown schematically in an advertiser can preferably specify the number of days that can elapse between the user clicking on an ad and then coming back to the advertiser s web site to complete the action . For example a typical retailer may set the association window to 45 days such that as long as a user USR who clicks on the retailer s ad makes a purchase within 45 days the system gets credit e.g. payment for that action .

As seen on the exemplary landing page in the page typically comprises text copy one or more images and purchase information regarding a product e.g. such as a bicycle associated with the served ad . For products associated with catalog ads the text copy images and purchase information may typically correspond to field information from a catalog file FIG. .

As also seen in the exemplary advertiser web site in a user USR may add one or more products to a shopping cart such as during navigation through one or more advertiser web pages . For example the user USR may be provided with contextual links or user initiated searches from a first product e.g. to one or more other products e.g. such as a bike helmet . The user USR may then typically navigate to a confirmation page such as having a shopping cart which may include one or more beacons associated with actions such as a beacon associated with lead generation at the advertiser site e.g. by a customer USR providing an email address and or other contact information a beacon responsive to the entry of payment information and or a beacon responsive to a final confirmation of a purchase checkout of one or more items in the shopping cart .

The beacons i.e. action tags are responsive to one or one actions which serve to confirm the actions and are tracked back to the enhanced online advertising system . As seen in during the process of an exemplary purchase a user USR ended up with four purchased products such as the bicycle directly associated with the served ad a related helmet product as well as 2 bike jerseys. Based upon the entered bid and bid type e.g. percentage or commission of the ad item or of the entire shopping cart a payment credit or similar transaction is typically made from the associated advertiser to the system . Similarly a payment credit or similar transaction is also made toward the publisher such as from the system typically for compensation related to placement i.e. serving of the ad .

As seen in the enhanced online advertising system greatly simplifies the generation and targeting of ads and provides significantly greater ad relevance for served ads resulting in ads that are more meaningful to consumers USR more effective for advertisers and thus more lucrative for publishers .

While existing ad technologies require a large amount of manual effort to generate and target ads they provide at best mediocre relevance. In contrast the enhanced online advertising system simplifies the generation and targeting of ads and also provides significantly greater ad relevance for ads to be served resulting in ads that are more meaningful to consumers USR more effective for advertisers and thus more lucrative for publishers .

In the enhanced online advertising system advertisers preferably only pay for actual business results based upon cost per action CPA which may include but is not limited to a cost per ad impression CPM or a cost per ad click CPC . With CPA pricing the advertiser pays for consumer actions resulting from the ads that are meaningful to their business and are measured easily. Typical actions comprise any of making a purchase downloading a free coupon registering for a community Web site requesting a quote for an auto loan or mortgage e.g. a lead viewing a movie trailer and acquiring a new customer.

Some embodiments of the enhanced online advertising system also provide the selected use of alternate pricing models by an advertiser . For example an advertiser can effectively choose to use cost per ad impression CPM or cost per ad click CPC such as by defining a desired action associated with an ad to be viewing or clicking on the ad .

CPA pricing has long been attractive to direct response advertisers those who justify the spending on advertising based on immediate measurable results. With CPM or CPC pricing the advertiser must work hard to target the ads and measure their effectiveness so as not to waste money on impressions or clicks that don t generate business. With CPA pricing the ad network assumes all the risk of targeting the ads measuring their effectiveness and generating revenue for publishers . Advertisers do not typically care about these issues since advertisers are typically only required to pay for actual business results.

A number of existing ad networks provide CPA pricing but with significant limitations. With such conventional networks CPA prices are negotiated manually between the network and the advertiser resulting in inaccurate estimates of the effective impression revenue of the ad ECPM . Since ECPM is typically used for selecting ads to be displayed the inaccuracies result in suboptimal relevance for the consumer and revenue for the publisher. These other networks generally have a single uniform CPA price applied to the entire run of an ad throughout the network.

The enhanced online advertising system provides the advertiser with several mechanisms widely used in the industry for associating actions with impressions or clicks of ads and counting the resulting actions.

The enhanced online advertising system typically provides two kinds of beacons such as using images and or JavaScript. The beacons are placed on an ad web page typically on a confirmation page associated with an action selected by the advertiser to confirm the completion of the action by the user USR such as located on a purchase confirmation page or a download confirmation page .

An image beacon comprises a small transparent image placed on the confirmation page . The image is served from the enhanced online advertising network with a system URL. When the user s browser fetches the confirmation page the browser also fetches the beacon image which signals to the system the completion of an action . The system typically associates the action with either an ad impression or click using system cookies that were set in the user s browser when an ad for that advertiser was displayed or clicked.

A JavaScript beacon is a JavaScript function served from an URL associated with the system and placed on the confirmation page . When the user s browser fetches the confirmation page the function executes and examines the browser for system cookies in order to associate the action with an ad impression or click .

The system can also utilize some kinds of third party beacons which operate in a similar manner. As well instead of beacons and cookies some system embodiments add a unique code in the landing page URL of an ad that identifies the particular click through . The advertiser s web server can read the code and track the code through to completion of an action . The advertiser can then send the system a data feed of completed actions along with their unique codes.

In some system embodiments to use the system s variable CPA pricing an advertiser adds a parameter to the confirmation page s beacon that indicates the amount the advertiser will pay for that particular action .

For example a retailer may preferably select to pay variable CPA that comprises a percentage of the gross margin of the products in the consumer s shopping cart . When a consumer user USR completes an action the advertiser s Web application generates a confirmation page including the HTML for the system beacon . The Web application computes the amount the advertiser is paying for the action and adds the value as a parameter to the HTML code for the beacon . When the user s browser retrieves the confirmation page it also retrieves the beacon which communicates to the enhanced online advertising system the actual CPA associated with the action for which the advertiser is paying.

This approach provides the advertiser with the utmost flexibility in computing variable CPA while disclosing nothing except the final CPA amount to the enhanced online advertising system . In some system embodiments the advertiser s Web application computes the actual amount of the CPA dynamically at the time of the action using business data and rules contained within the application . The business rules can be as simple or as sophisticated as the advertiser is willing to implement. In some system embodiments the only information typically transmitted to the enhanced online advertising system is the computed CPA amount . For example a retailer paying a percentage of its shopping cart gross margin typically transmits the CPA amount to the enhanced online advertising system and is not typically required to transmit information regarding the specific products in the cart their purchase price or the gross margin.

In an event wherein an advertiser tries to cheat enhanced online advertising system and its publishers by withholding some or all beacons acknowledging completed actions for an ad the advertiser is inherently only cheating itself. For example in such an event the enhanced online advertising system notices that the rate of actions has fallen and thus computes a lower ECPM ranking for the ad whereby the ad is then less likely to be displayed if at all. An advertiser therefore inherently lowers the bid price associated with an ad by attempting to cheat on the reporting of beacons .

Similarly if a variable CPA advertiser puts a lower price in its beacon in an attempt to cheat the enhanced online advertising system such an advertiser simply lowers the expected CPA from the ad and thus the ad s ECPM ranking whereby the ad is less likely to be shown .

As discussed previously click fraud is a serious problem for ad networks using CPC pricing. For example it s very easy for a fraudster using off the shelf software to generate bots that repeatedly click on ads thereby sapping the budgets of advertisers and possibly generating fraudulent revenue for unscrupulous publishers . But compared to click fraud it s much harder to perpetrate CPA fraud with the enhanced online advertising system as such fraud is much easier to detect.

For example a fraudster first might grab a copy of the system beacon and write a bot to retrieve it repeatedly in the hope that it would generate multiple action reports. As with click fraud this is easy to detect since multiple beacon retrievals come from the same source IP address. As well for many if not most advertisers such a fraudster would have to make a purchase to obtain a copy of the beacon .

A more sophisticated fraudster would realize this and may alternately write a bot that fetches the beacon from multiple machines perhaps hundreds or thousands of them zombies taken over by spyware . The enhanced online advertising system easily detects this as well by only recognizing a small number of actions to be recorded for each unique ad click or impression . When the enhanced online advertising system serves an ad click or impression the system typically writes a system cookie containing a 64 bit random number identifying the click or impression . When the corresponding beacon is repeatedly fetched such as by a bot the enhanced online advertising system typically accepts only the first action report with that 64 bit number in the beacon s cookie while discarding subsequent action reports . Therefore if a fraudster tries to fabricate 64 bit click impression ids the probability of guessing a valid id is extremely small. As well all of the tracking data corresponding to the landing URL and cookie is preferably cryptographically encrypted and signed such that it is virtually impossible for a fraudster to fabricate an identification of a click or impression .

A less sophisticated fraudster might focus his attention on beacons for advertisers whose actions don t require a purchase such as a free coupon download. Such a fraudster may attempt to write a bot that clicks on an ad and then clicks on the associated beacon . As before simple IP address filtering by the system identifies such fraudsters.

While more sophisticated fraudsters may attempt use a large number i.e. an army of zombie terminals such actions are readily directly defeated by advertisers using a CAPCHA or other similar mechanism that verifies if a human USR rather than a bot is interacting with its ad Web pages . For example CAPCHAs often require the user USR to enter a scrambled sequence of letters that only human users USR can read.

The enhanced online advertising system displays highly relevant ads to users USR by applying state of the art search technology. To select ads for a publisher web page and a user USR the enhanced online advertising system gathers a large amount information about the page the publisher the advertiser and or the user and may preferably include many other factors. The gathered and stored information is referred to herein as the context . The enhanced online advertising system then uses the context like a search query such as to search in real time or to search and then briefly cache through millions of ads to find the few ads that are most relevant to display .

The enhanced online advertising system preferably defines the relevance of an ad for a given context to be exactly the effective revenue e.g. the ECPM which the enhanced online advertising system expects to receive if it displays the ad in that context.

An ad by its very nature represents a commercial exchange with the user USR. An ad is therefore important to the user USR to the degree that the user USR finds it useful in completing a commercial exchange. If a consumer USR clicks on an ad she or he thinks is interesting but then fails to complete the exchange then most likely that ad is not of ultimate value to the consumer USR. That is the more likely a consumer USR is to complete a commercial exchange i.e. an action via an ad the more value the ad has to the consumer USR and the higher the effective revenue.

As well a commercial exchange involving small amounts of money is typically less important to a user USR than one involving large amounts. For example a typical user USR cares much more about purchasing a 30 000 car than a 10 book. The CPA price of an ad is typically directly proportional to the value of the commercial exchange . Thus the higher the CPA price the higher the value to the user USR of the underlying commercial exchange and the higher the effective revenue.

Thus both the rate at which consumers USR respond to an ad and the monetary value of the ad determine the importance of the ad to the consumer . Therefore in preferred embodiments of the enhanced online advertising system factors that determine the effective revenue of an ad are dependent on both the rate at which consumers USR respond to an ad and the monetary value of the ad .

Some conventional ad technologies typically require test campaigns to measure how well an ad performs in a given context. Such testing often limits the relevance of the ads the number of ads and the number of publisher pages that can be effectively targeted.

In contrast the enhanced online advertising system is able to predict the revenue related to an ad impression for an ad that has never even been seen before in a context e.g. a publisher page and user USR that have also not been seen before. The enhanced online advertising system can therefore inherently be scaled to provide highly accurate and relevant targeting for virtually an unlimited number of ads and publisher pages and users USR. Advertisers can freely generate many different ads to accomplish the same goal such as to find out which ads work best in which contexts at a cost much lower than other ad solutions.

As well the enhanced online advertising system preferably provides a predictive technology that is based on machine learning . While traditional ad solutions typically use only a few variables such as key words and phrases manually entered by an advertiser the enhanced online advertising system is inherently scalable to incorporate a significantly large number e.g. dozens or even hundreds of relevance features into the predictions of relevance.

As seen in actions are tracked back to the system which in addition to other system functions e.g. such as but not limited to tracking of revenue can also preferably be used for machine learning whereby the system provides feedback to improve the predicted response of selected ads at step .

Machine learning produces a function P that preferably takes as input all of the relevance features of the ad the advertiser the target page the publisher and the user USR and predicts the probability that the user USR will take action on that ad in that context. These features are represented as a feature vector of numbers and the function P maps the feature vector to a predicted probability of action . The feature vectors may typically comprise hundreds of elements each.

In some system embodiments the machine learning algorithm produces P using training data e.g. comprising at least a portion of the tracked actions that typically comprises a very large number e.g. 100K or more of examples where each example corresponds to an ad presented in a context to a user USR and whether or not the user USR took action . Each example is represented as an input feature vector and output of 0 no action or 1 action . The training data preferably comes from the ad network itself by randomly sampling the examples from the millions of presentations of ads the network makes every day.

The machine learning algorithm is retrained frequently as frequently as once a day which allows the system to continually optimize the prediction function P based on the current advertisers and publishers the current users USR and the current time of year.

In some system embodiments many different machine learning algorithms are applied to the tracked training data such that the system can apply whatever algorithm that provides the best results .

Furthermore some embodiments of the enhanced online advertising system preferably incorporate both text features and behavioral features e.g. past behavior of users to determine and present ads having the greatest predicted value to each user USR. In addition machine learning allows the system to quickly incorporate new relevance features such as for embodiments of the system used for different markets e.g. interactive television.

Some embodiments of the enhanced online advertising system provide a wide variety of relevance features such as but not limited to term matching category matching concept matching context identification brand power time action history and or user behavior.

In term matching the system may preferably consider term matches between a publisher site associated with an ad call and advertising sites associated with ad creatives wherein the term matching may consider any of 

Category matching between system entities e.g. between publisher assets and advertiser assets may be based on externally defined categories such as ODP Yahoo advertising industry codes and or may be based on categories constructed by the system such as automatically constructed i.e. clustered categories and or manually constructed ad vertical categories. In some system embodiments categories are represented by any of a simple list a hierarchy and or or a multi hierarchy in which a subcategory may be included in more than one supercategory. Such hierarchies are sometimes called taxonomies .

Some system embodiments provide URL matching based on determined distances such as corresponding to ODP categories. If a page is determined to belong to two or more categories the distance may be calculated based on best match or weighting e.g. such as wherein the determined weight is a measure of the parts of the taxonomy path that are in common. For example the system may consider length of path in common divided by the average of various path lengths.

In some system embodiments category variables may also drive weighting of other features wherein the system may list the categories as feature values so the learning algorithm i.e. relevance component can use other variables differently based on the category value. As well some system embodiments take into account the past aggregate action rates on each pair of target page category and ad category.

Category matching in the enhanced online advertising system may also take into account market basket analysis of categories and or URL based page classification using URL components e.g. such as based on prior knowledge of an advertiser .

In embodiments of the enhanced online advertising system that provide concept matching the system may provide page level concept extraction and matching such as for between any of a target page an ad creative such as comprising ad fields e.g. ad copy and a landing page . As well the system may provide paragraph level concept extraction and matching such as for but not limited to blog and or news bulletin formats . In some embodiments of the enhanced online advertising system concepts are recognized by building extended word connectivity graphs e.g. such as using WordNet and finding the near disjoint subgraphs.

In embodiments of the enhanced online advertising system that provide context identification the system may consider the content and user interface i.e. layout of the context such as for any type of context e.g. email search blog RSS news and or product review. In some systems the type of context is obtained by any of programmatically detecting the type by using third party classification e.g. such as provided by comScore and or by manual classification. For example the context may be recognized by user intent and or propensity to click . Contextual identification may also be used by the system in regard to the position of available ad space such as at the top right left or bottom of a publisher page such as wherein the position is determined by the system or provided to the system by code associated with the publisher page .

Some embodiments of the enhanced online advertising system may preferably consider brand power in relevance determinations such as based on the name or associated identity of a publisher and or advertiser and or by rates of user traffic to the publisher or advertiser sites e.g. Nielsen comScore or Alexa and or by the measures of Web links referencing the publisher sites and or advertiser sites .

Some embodiments of the enhanced online advertising system may preferably consider time in relevance determinations e.g. the time of day day of week the number of days before or after a holiday or annual event the particular holiday or annual event and the season of the year.

As well some embodiments of the enhanced online advertising system may preferably consider action histories in relevance determinations. For example the system may preferably record each measure of action history e.g. such as clicks actions and revenue which may be tracked and calculated per unit time and or total and may also preferably be weighted by an exponentially decreasing function. In some system embodiments the action histories are preferably input into the relevance function such as to create a positive feedback loop. In some system embodiments action histories comprise any of 

Furthermore some embodiments of the enhanced online advertising system may preferably consider the behavior of users USR. For example the system may preferably provide matching between geographic locations of the user USR and the advertiser such as based on IP addresses.

As well the past performance of an advertiser with users USR in the same geographic location as the current user USR such as based on IP address may be considered to be relevant. For example the IP address of the current user USR may be determined to be relevant in conjunction with the past performance of ads by the advertiser e.g. the system may observe a distribution of the response to an advertiser s ads by geographic location using the IP address of the users USR who have completed actions wherein a ranking feature comprises the percent of all users USR who have responded to the advertiser USR who are in the same geographic region as the current user USR. Such location based relevance may preferably be used for advertisers and or ads that have a geographic appeal such as for ads for a service based company that are particularly relevant to regions in which the company serves or for business entities that have regional stores near a user USR.

The system may also consider any of recency frequency and or monetary behavior of a user USR such as by a site or page category. For example a browser at a user terminal corresponding to a user USR can be tagged using anonymous cookies whereby the recency frequency and or monetary behavior of a user USR is reported and tracked such as in regard to a user profile anonymously associated with the USR which is stored and then preferably integrated with relevance determinations .

The system may also preferably integrate matching of demographics between advertiser product line and publisher publisher site and or section . Demographics may include the distribution of age gender household income geographic region or level of education across the visitors to the advertiser or publisher sites. For example the system may provide demographic matching based on external information e.g. data from comScore or may determine demographic matching based on data provided by advertisers and publishers .

As well the system may also preferably integrate the purchase habits of users USR through the use of external data e.g. PRIZM.

In some preferred system embodiments of the enhanced online advertising system every time the system receives an ad call from a publisher page the system conducts a real time auction among advertisers for the ad slots on the page . The advertisers ads that will deliver the greatest revenue per ad impression RPAI what the industry calls ECPM or cost per thousand impressions are chosen for the page .

In the enhanced online advertising system however advertisers are not required to submit their bids in units of RPAI. Instead advertisers typically bid and pay for actions which are not necessarily limited to impressions or clicks what the industry calls CPA or cost per action . The system then automatically translates CPA bids into RPAI bids based on an estimation of the probability that an action will occur given an ad impression .

In preferred system embodiments of the enhanced online advertising system the system allows the advertiser to bid a maximum CPA for actions whereby the advertiser will not be required pay more than a specified maximum CPA for an action . As well for actions associated to an ad click the total CPA the advertiser actually pays is reduced from the maximum to an incremental value more than that needed to maintain ranking for the ad above the next highest ranked ad .

The system typically measures actions using beacons and advertisers associate CPA bids for actions with the corresponding beacons . For a given ad campaign the system preferably provides advertisers with different selectable methods for assigning CPA bids to actions such as by ad based CPA beacon based fixed CPA or beacon based commission CPA .

In ad based CPA bidding there is one beacon in the campaign and a CPA bid is assigned to each ad within the application. Whenever an ad is clicked and eventually triggers a beacon the system uses the assigned CPA of the ad times a bid factor associated with the ad as the CPA bid for the beacon .

For example for a retailer that is resistant or unable to put a variable CPA beacon on their confirmation page the retailer can pay different CPAs in ad based CPA based on the likely product that is purchased whereby actions are associated to the most recent ad clicked.

In beacon based fixed CPA bidding there are multiple beacons in a campaign with a different CPA bid assigned within the advertiser application . When a beacon is triggered the CPA bid is determined to be the amount assigned to the beacon times the associated ad s bid factor.

For example an exemplary private search entity may have three different actions they want to track downloading a search toolbar signing up for an email list and doing paid search on the entity s site. Using beacon based fixed CPA each action may be designated as a different amount by the entity . A user USR clicking on an ad could end up generating one or more of the actions and different ads may lead to different average mixes of actions e.g. one ad can drive users USR primarily to the download while another ad can drive users USR primarily to an email list.

In beacon based commission CPA bidding there is one beacon in the ad campaign and the total value of the action to the advertiser such as the total value in a shopping cart is passed dynamically via the parameter in the beacon call . The action s CPA bid is equal to that value times the bid factor of the associated ad .

For example a sophisticated retailer may want to assign a true value to each action e.g. such as the total value in the shopping cart and pay for the advertising accordingly such as for some ads that statistically yield a larger value shopping cart than other shopping carts .

For all three methods of assigning bids described above the system allows the advertiser to associate a bid factor with an ad the ad group or the campaign . A bid factor allows the advertiser to make instant adjustments to CPA bids without reloading ad catalogs or changing server based business rules setting commission CPA . For example a catalog retailer using ad based CPA can assign the list price of each item being advertised to the corresponding ad . The retailer can then set a bid factor to be a percentage of the list price that should be paid as the CPA . Similarly a retailer using beacon based commission CPA passes the value of the shopping cart in the beacon call and sets the bid factor to be the percentage of the shopping cart that is bid as the CPA .

With all the bidding methods described above the advertiser can preferably define the maximum number of actions from any one beacon that can be associated with a single ad click. This action cap defaults to 1. When the action cap is set greater than 1 a variable number of actions can be associated with an ad click and thus the total CPA associated with the ad click is variable. Similarly with commission CPA the total CPA associated with an ad click is variable.

As noted above the system may preferably rank each ad according to the estimated effective revenue the system will receive by displaying the ad RPAI . The system estimates an ad s RPAI as the probability of a user USR taking at least one action on the ad times the estimated total likely bidded CPA TLBC that the advertiser is willing to pay for actions resulting from the ad as shown RPAI ad Pr actions 1 ad shown on target page TLBC ad 

The probability of at least one action occurring from the ad is preferably estimated by a machine learned model and refined by observations.

Estimation of the total likely bidded CPA resulting from actions associated to an ad is not always straightforward since multiple actions and actions with varying CPA can be associated with a single click on an ad . As well different ads can drive much different mixes of actions and varying CPA . For example a beacon with varying CPA may generate maximum CPA values varying from 1 to 100 with an average of 53. Rather than assuming that 100 is the maximum CPA the advertiser is willing to pay the system may preferably assume the maximum is 53 such as to avoid an overestimation of the maximum CPA that could over rank the ad .

For ads that generate a large number of actions the system may preferably estimate TLBC based on past history of the ad . However many ads do not have enough actions or any actions at all for the system to observe a valid average. In such cases the system may preferably estimate the TLBC for an ad from aggregate behavior of all ads in the same ad campaign .

The formulae for the estimates of TLBC are based on the application assigned CPA of ads and beacons which allows the advertiser to adjust those assigned CPAs up or down and achieve instant changes in total likely bidded CPA.

Each method of pricing requires a different way of estimating TLBC. The estimates below use observed data for an individual ad or if there isn t enough such data the observed data for the containing campaign . As well sophisticated estimates can be made by using observed data from the ad group from the advertiser from similar advertisers and or from similar ads with other advertisers .

In ad based CPA the estimated total likely bidded CPA TLBC is defined as the assigned bid of the ad times the average number of actions associated with each ad impression generating at least one action 

In situations where there aren t enough action generating clicks on ad to get a statistically valid average e.g. if the denominator is 

In a beacon based fixed CPA pricing model the estimated total likely bidded CPA TLBC is defined as the sum over all beacons for an ad campaign of the CPA of the beacon times the average rate at which the beacon is triggered for that ad as shown 

If there aren t enough action generating clicks on ad to get a statistically valid average e.g. if the denominator is 

In a beacon based commission pricing method the system requires advertisers to assign a CPA to each ad as well as pass a total value in the associated beacon call . The assigned CPA is typically the list price of the item in the catalog being advertised and the bid factor is the percentage of the shopping cart the advertiser wishes to pay the system as a commission. The estimated TLBC is therefore the assigned CPA of the ad times a bid adjustment factor as shown TLBC ad assigned CPA ad adjustment factor ad bid factor ad 

The bid adjustment factor for beacon based commission pricing represents how much the shopping cart e.g. all actions or purchases that are triggered by an ad typically differs from the assigned CPA of the ad as shown 

The estimates of total likely bidded CPA TLBC typically require computing moving averages of various statistics of actions associated to clicks generating at least one action . To compute these averages the system preferably records at least the following information about each action as shown 

Since actions are relatively rare events the system may preferably retain these records for very long periods of times.

As an example of a moving average computation over N days e.g. N 30 W can represent the number of days in a campaign s click to association window. The current average is computed over a period of click times that starts W days ago and extends to W N 1 days ago. An attempt to use more recent data would not be valid since not all of the actions for recent clicks would have occurred yet.

In the above example if there isn t at least W N days of data for the campaign e.g. such as because the campaign is new or because the statistics have been reset then the oldest N days or parts thereof may preferably be used to compute the average.

The moving averages are computed very efficiently by the system such as by maintaining in a database the summaries of the numerators and denominators for ads and campaigns covering the time period of the moving average. Periodically such as once a day the action records are scanned wherein actions whose time of click starts exactly W days ago are added to the summaries and actions whose time of click starts W N days ago are removed from the summaries.

For an exemplary system that has 10ad calls per month such a system may have approximately 10actions per month or about 30K actions per day. Thus there would be at most 10ad summaries maintained at any one time and at most 60K action records to process on a daily basis e.g. every night.

The ad level averages are preferably reset whenever the text of the ad or its landing page change. The campaign level averages are preferably reset whenever a campaign changes significantly e.g. when more than 25 of the ads have had their averages reset. The system such as through client services preferably includes means to reset the averages of ads and or campaigns such as by commands or controls.

In some system embodiments the system preferably monitors such resetting activity such as to monitor whenever the averages are reset for possible attempts to game the system by an advertiser .

Some embodiments of the enhanced online advertising system preferably use a type of second price auction by which advertisers are able to price their actions according to their true value to the advertiser . In a second price auction the goods go to the highest bidder but the highest bidder pays just a little more than the second highest bidder. The highest bidder thus has assurance that he or she does not pay too much by submitting a bid that reflects the true valuation of the good or service.

In such a system the system promises advertisers that they will pay a CPA for one or more actions associated with an ad which are just high enough to maintain the ad s ranking above the next highest ranked ad . When an ad is displayed the system computes an estimated reduced bid amount that the advertiser should pay for actions associated to that impression of the ad using the following formula 

The discount factor and the bid factor are recorded in the redirect URL of the ad and then in the user cookie when the user clicks on the URL. When an action for that click occurs the advertiser is invoiced for the action with the discount applied as shown discount factor ad assigned CPA action bid factor ad Details of Advertising Entities in the Enhanced Online Advertising System.

As well all components are preferably designed with fail over in mind. In addition all critical data is preferably stored on redundant storage which is preferably local to a particular server and or stored at a cluster accessible storage e.g. such as DB NFS SAN or similar. Ad serving is preferably de coupled from ad management such as if the ad management system goes down the ad server can continue to function. As well ad serving and ad management preferably have different uptime requirements.

As seen in a front end API server e.g. a tomcat based server runs the advertisers and publisher applications . The front end server also typically supports API based manipulation of the ads and other business objects.

One or more query coordinators i.e. QC servers distribute browser i.e. runtime ad requests across the ad servers . An ad server searches a subset of the ads in response to requests from the query coordinator and returns the best ads for the associated request to the query coordinator .

A presentation server accepts ad requests from the network and forwards them to the query coordinator . The presentation server also formats ads that are selected by the query coordinator with snippets of HTML. The presentation server also acts as a click redirector for landing page URLs and it tracks the invocations of beacons .

An observation server monitors the budgets for ads and ad campaigns click through rates click to action rates and coordinates pausing stopping ads in the system .

As well a distribution server acts as a propagator of new and updated ads and their feature vectors to the rest of the system . The distribution server also gives the target page feature vectors to the query coordinators .

A scheduler e.g. a singleton process kicks off periodic system tasks e.g. such as but not limited to hourly every eight hours nightly and or weekly.

Task servers comprise generic worker servers for performing various off line tasks in the system . All offline activities are typically designed to be executed by one or more task servers .

Servers typically use platform services APIs to perform common tasks like reading and writing business objects or communicating with other servers . For example business objects O R service reads and writes business objects in the system such as but not limited to ads accounts and or bills.

While the business objects O R service is not typically used for logging impressions or clicks the business objects O R service may be used for reading writing feature vectors if performance is sufficient. In most system embodiments the primary role of the business objects O R service is to allow applications to manipulate business objects in the system while ensuring transactions ACID and relationships between the objects.

A messaging service is used by the servers to reliably communicate with each other. Servers use reliable data storage directly or indirectly via services and are typically associated with databases and pure file system mechanisms.

An advertiser creates an ad . The front end code e.g. such as running inside a tomcat based front end server receives the ad and typically uses an O R mapping layer to save the ad . The front end server then publishes a transactional message that an ad was created and that the ad requires approval such as by an approval task server

One of the task servers such as the crawl task server may first need to fetch the landing page for the ad such as if the content on the landing page requires additional analysis . After the landing page is crawled a new request for ad approval is generated.

The ad approval request message is executed by one of the task servers e.g. running approval tasks which evaluates the ad for consistency with publishing guidelines. An ad may also be randomly selected for manual review which results in the ad being placed on the manual reviewer s queue of ads to be looked at.

If the ad is approved an ad analysis request message is published as needed such as by the approval task server to announce that a new ad that hasn t been analyzed currently exists on the system . A task server e.g. an analysis task server that responds to ad analysis and or page analysis requests picks up this ad analysis request message . The analysis task server typically analyzes and classifies ad and computes other ad features. The analysis task server then marks the analyzed ad as ready for serving and publishes a new ad available message and or other corresponding new ad information such as but not limited to the selected action and or associated ad budgets.

The distribution server and observation server pick up the new ad information . The distribution server then propagates the new ad feature vectors to the appropriate ad server that should have this new ad . As well the observation server is made aware of the new ads budget and initial observed CPA such as in case of a modified ad so that the observation server can stop the ad if the budget is exceeded.

Every time the presentation server includes an ad in HTML to be displayed the presentation server also writes to the impression log. The log is periodically rotated. The impression log is used primarily for building the ad selection model where a sample of the log records suffices. Therefore it is not necessarily to archive the impression logs. In fact it may not even be necessary to generate the log records all the time.

The presentation server transmits i.e. flushes the per ad impression counts to the observation server and may also preferably remove impressions that are deemed to be robots i.e. fraudulently fabricated or otherwise provided. Observation servers keep observed CPA information in memory and periodically send updated aggregate information to the ad servers themselves. The ad servers then preferably use the refined numbers to come up with more appropriate ads .

The presentation server first preferably filters incoming impressions clicks and actions such as to throw out robot based and easily detectable non human traffic. The remaining log items are logged to disk in a separate non incoming request thread. The logs e.g. are periodically rotated and a log rotation message is generated. The message triggers a sync of the log to centralized log storage . A set of daily tasks periodically processes the logs such as on a daily basis. Variety of daily activities are performed such as but not limited to quick reporting aggregates for near real time reporting fraud detection daily reporting aggregates for accurate reporting model building and or billing

Presentation servers also send the filtered log information to the observation servers whereby clicks and actions may preferably be sent instantly while impression data may be batched. Observation servers keep counters on each ad they see on valid impressions clicks and actions which are referred to as an ad I.O.C. triple . The observation servers in turn make decisions such as if the ad should be allowed to play or if the ad should be paused . In addition observation servers propagate the recomputed observed CPA rates to the ad servers themselves such as instantly when a click or action occurs and or batched such as for ads with impressions only.

If an ad action sends the campaign or ad budget over the daily maximum the appropriate observation server generates a pause message that is sent to the ad servers as well as the query coordinators wherein ad servers preferably no longer score the ad until a next allowed time period e.g. the next day while the query coordinators check what ads are paused before serving ads from their cache.

When an ad is deleted or paused by the advertiser such as through an the advertiser application the observation server similarly receives the message and is responsible for pausing or stopping the ad from being played.

At the core of the system the ads are scored such as by models that predict the RPAI of showing the ad for a given target page and user USR where the RPAI is estimated as the probability the user USR will take action on the ad times the total likely bidded CPA of the ad RPAI ad actions 1 ad shown on target page TLBC ad 

The probability of action is estimated using a machine learned model that takes as input a relevance feature vector that measures various attributes of an ad and the context of where the ad is being shown and the user USR it is being shown to. The relevance features can be grouped into the following categories 

To avoid execution of the most time consuming model on each ad when a target page request comes in a number of heuristics is pursued. The system typically provides multi model scoring using an iterative application of models to possible ads for a particular target page .

Multi model scoring is a process of applying different models to set of ads . Each model reduces the set of ads to a small number of final ads . Each model is more expensive to apply.

Given a target page the first i.e. qualification heuristic model processes any of exclusions out of budget constraints and other constraints to reduce the pool of ads to a smaller pool of ads that are to be scored further. The output of this model is 0 or 1 depending on whether the ad is allowed to be used in further scoring.

Next a second cheap model is applied to each of the remaining ads. The cheap model is a machine learned model using a very small number of relevance features to make a rough estimate of RPAI. A small percentage e.g. 5 percent of the ads with the highest estimated RPAI are passed to the next model.

Finally an expensive model is applied to the remaining ads. The expensive model is a machine learned model using the full set of relevance features to make refined estimates of RPAI.

The estimated RPAI for an ad is actually a confidence interval min RPAI . . . maxRPAI representing the uncertainties of the machine learned model and the methods used for estimating TLBC. At each iteration the ads with the largest maxRPAI are selected and passed to the next model.

The second major heuristic is caching of scored ads per target page . The result of scoring of a target page on an ad corpus is cached on the query coordinators . In some system embodiments the top 1K ads are placed into the cache and are used for a certain period of time before it is recomputed again. Therefore behavioral features cannot be used in such a model. To properly use behavioral features caching is not possible and the whole multi model process needs to be executed for every request.

The third major heuristic is distributing the ads across multiple servers. Ads are distributed into a cluster of ad servers .

The fourth major heuristic has to do with how term match features are represented. Term match features represent a major relevance component but are expensive to compute. In order to compute them efficiently an in memory inversed term to ads index of ad landing page terms is constructed. The target page is reduced to a small number of most important terms and is executed as a Boolean OR query over the in memory index.

The enhanced online advertising system typically comprises a number of load balancers e.g. that handle identical servers . For example as seen in load balancers are located in front of the front end server the image server and the presentation server . These load balancers which in some system embodiments are generic are typically hardware round robin based balancers that also support fail over and mark servers as suspect.

Incoming ad requests are typically load balanced to a set of presentation server machines . These machines elect a query coordinator based on the incoming target page hash . The presentation machines also compose the final HTML based on the small number of ads returned to them by the query coordinators .

The presentation server computes the target page hash and forwards the request to the same query coordinator every time unless the designated query coordinator is unreachable in which case another query coordinator server using the second hash function is selected. The system preferably selects the same query coordinator every time for a particular target page as the query coordinators cache the ads to be displayed .

Presentation servers also serve as redirectors of clicks and recorders of actions . A cluster of identical redirector servers handles a large number of incoming requests and can easily scale to handle more with addition of new hardware.

Redirector functionality by a presentation server is non blocking and returns the redirect URL as soon as it decodes the posted request. The redirector thread then adds the incoming request parameters to a list of requests to be processed for logging in another set of threads and then returns to the pool of available redirect threads. The logging thread processes the request parameters and first analysis the request a known list of robots and spammers. It can also perform simple fraud analysis. If a logging entry survives this set of checks it is then written out to a disk to a log file such as in a compressed and or optimized form. The log file is periodically rotated and a message of a redirector log rotation or completion is published and directed as necessary. Task servers process the new logs to incorporate new information in the system. The information is also sent to the observation server . While the message is typically sent immediately for clicks and actions the message may be batched for impressions .

Query coordinators comprise servers that perform smart load balancing across the ad servers in the cluster. A query coordinator is responsible for a particular set of target pages and stores information regarding these target pages in memory e.g. such as the top 30 to 50 target page concepts that are determined during an ad crawl. Such information is typically only loaded when a target page is requested and is kept in an LRU cache. A cache miss results in an attempt to load this information from distribution server . If that is proved unsuccessful then the target page has not been seen before and a message is generated in the system to analyze the page .

Assuming the target page information is available on an incoming ad request the query coordinator first consults its cache to see if the top N ads for this target page have been pre computed earlier. A cache miss results in the query coordinator quickly returning a set of popular ads to the presentation server . After the query coordinator finishes serving the request the thread continues. The query coordinator then selects an ad server cluster on which to run the ad scoring. The query coordinator passes the information on the target page and the document frequencies for the terms in the target page to each ad server in the cluster and then waits for the ad servers to give back the results. The ad servers execute all the models and the query coordinator waits with a timeout for them to finish. The query coordinator merges the results back together and keeps an even smaller number of ads and requests the ad content and observed CPA for these ads from the ad servers in a second round trip. Then the ads are cached and are ready for serving next time a request on this target page comes in.

The cache content lives for a specified amount of time. The amount of time since the last request for each target page is recorded. If a cache entry in the cache gets old and the system still receives requests for this target page the query coordinator repeats the ad scoring process. This way the cache stays current for the active target pages .

While some preferred embodiments of the enhanced online advertising system recompute the best ads every time an ad request is made other system embodiments use caching such as to provide most system performance with more limited computational resources.

The top ads in a cache entry are typically rotated for multiple requests . The rotation algorithm preferably looks at the observed CPA rates returned with the ad servers and computes the percentages of time that cached ads should be shown.

When selecting a specified number e.g. four of the best ads to show for a target page there are often many more than the desired number of ads that have approximately the same estimated revenue per ad impression RPAI . System embodiments may have uncertainty in estimated RPAI values such as due to machine learning the limited observations of ad performance and or system estimates of total likely bidded CPA TLBC . In the presence of such uncertainties the system cannot distinguish small differences in RPAI among ads .

Therefore preferred system embodiments take into account such uncertainties. For example in some system embodiments the system selects a larger number of ads actually needed wherein the selected ads have a similar predicted RPAI. The system then rotates through the selected ads when choosing the desired number of ads e.g. four ads to show on a target page . The system therefore does not lock in on a small set of ads for a target page prematurely until the system has collected enough observations about the ads to be confident of the system RPAI estimates. In some system embodiments such a rotation is preferably biased towards ads with higher RPAI estimates.

The estimated RPAI of each ad is expressed as a confidence interval of minimum and maximum RPAI shown as minRPAI ad . . . maxRPAI ad where the confidence is a threshold set by the system e.g. 95 percent. The system assumes that the revenues resulting from individual ad impressions are uniformly distributed in that interval. Other system embodiments may assume other distributions e.g. a normal distribution that more accurately model the estimates of RPAI. As discussed above RPAI is calculated as RPAI ad actions 1 ad shown on target page TLBC ad where the probability of action is based on a blending of predicted and observed probabilities and TLBC is based on observed action rates and beacon values. Each of those inputs has a confidence interval that the system can estimate and propagate through the computation of RPAI.

Some system embodiments estimate a global 95 percent confidence interval for predicted probabilities such as by performing an offline comparison of the predictions with actual probabilities. For example the system may observe that on average predicted probabilities are 10 percent of observed probabilities 95 percent of the time. In other system embodiments the system may assume an initial global constant interval e.g. 5 percent.

For observed probabilities and TLBC the system may also preferably estimate the interval based on the number of observations in the data using standard statistical techniques.

In some system embodiments the ad servers and query coordinators sort lists of ads by their mean estimated RPAI wherein the confidence intervals of ads are typically represented by a mean plus an error margin rather than as a minimum and maximum such as to avoid the computing the mean in real time with a large number of data.

As discussed above the query coordinator maintains a cache in some system embodiments to map a target page to a candidate list of at most the top N ads for that target page where N may be on the order of 100.

To compute the candidate list the query coordinator periodically calls the ad servers e.g. every 15 minutes wherein each ad sever periodically searches its associated ad index and returns a list of at most M ads on that ad server with the highest mean RPAI which is equal to minRPAI ad maxRPAI ad 2.

The value of M is preferably fairly large e.g. 50 so that M multiplied by the number of ad severs is much greater than N. The query coordinator then merges the returned lists into a single sorted list such as sorted by mean RPAI.

When an ad call for an ad unit of c ads arrives at the query coordinator the query coordinator enumerates through the candidate list of ads and for each ad space randomly chooses an RPAI from the ad s interval. The query coordinator then returns the c ads with the highest randomly chosen RPAIs.

The random value is chosen from the confidence interval based on the assumed distribution of possible values of RPAI within the interval uniform normal etc. .

In some system embodiments the list of N candidate ads is relatively short e.g. so this algorithm is executed exceedingly fast. In some system embodiments wherein the cost of computing the random values is expensive the list of ads may preferably rotated after every r ad calls e.g. every 5 ad calls .

In some system embodiments such as to reduce execution time the list of ads is rotated just once such as for every five ad calls . However since such ad rotation is typically fast and inexpensive most system embodiments may preferably provide rotation for each upon each add call .

When an ad server comes online offline it sends a message to the query coordinators in the system so that they know which ad servers should be available for ad serving. The query coordinator selects an ad server cluster that it knows can handle the request and the query coordinator monitors this request in case of failure such as if timeout is detected. If such a failure is detected the ad server is marked as suspect and typically retried within a certain period. If the ad server doesn t come back up a message is generated in which human involvement may be required. This is done in addition to the standard SNMP type monitoring that IT software performs.

Front end servers e.g. tomcat based servers serve html pages and typically use a business objects layer to manipulate database entities. Front end servers publish messages when certain important events have to occur like an approval of an ad or stopping a running ad. These messages get picked up by other running components. Front end servers also support SOAP or other protocol API requests for ad management and other tasks.

Distribution servers have a job of giving new ad landing page and target page features to the correct ad servers and query coordinators . For every ad and page in the system the most recent date of update is tracked by a distribution server and is stored in the database. Upon restart the distribution server reads the most recent date of update for all ads and target pages . Distribution servers preferably have a fast connection to the disk based feature repository storage .

When a new or updated ad exits the analysis pipeline or a new or updated target page exists the analysis pipeline a message is published on the bus of its existence. This message is picked up by the observation server that wants to enforce the budgetary constraints. A similar message also gets picked up by the distribution server which then loads the feature vector for the new object into its memory. The distribution server pushes the new ads or target pages to the ad servers or query coordinators or responds to the periodic pull time type commands from them. A query coordinator may ask if a certain page has changed since the date that is stored on the query coordinator . If the page hasn t changed then it will be told no . If the page has changed the page will be given a new feature vector . The ad servers can perform a similar process except the process is performed on an ad bucket level rather than on the level of a single target page . The ad server asks the distribution server to give it all the ads for a bucket that have changed since a given date. The ad server may get back some ads or it may get no ads . On a complete recovery of an ad server it will ask for all the ads in the bucket since the beginning of time.

The distribution server acts as an in memory database of what ads and what pages need to live where. If a distribution server crashes the distribution server simply re reads the tables with the ads and pages and catches up on the missed new ad page messages which are preserved in a persistent queue.

Observation servers keep track of all the ads ad groups and campaigns in the system . For example observation servers monitor the active vs. paused status of ads as well as observed CPA and daily or weekly budgets. If an ad needs to be paused or deleted the associated observation server communicates the deletion to the ad servers and query coordinators . If an ad has its budget exceeded the associated observation server pauses the ad on other servers .

Observation servers also propagate latest up to date observed CPA rates to the ad servers . Observation servers are notified by the presentation servers in regard to any of impressions clicks and or actions . For example clicks or actions may result in immediate notifications while impressions are typically batched.

In some embodiments of the enhanced online advertising system a single observation server can handle all the ads . In embodiments of the enhanced online advertising system that comprise a plurality of observation servers a mapping scheme maps ad ranges to the appropriate observation servers similar to the map used to distribute ads between the ad servers .

Observation servers typically load the data cubes for aggregated CPA rates on startup. Observation servers also recompute the daily CPA rate cube and store it for reporting purposes. On crash recovery the observation servers reload the cubes and catch up on the pause delete messages as well as any missed impressions clicks actions.

Ad servers respond to an incoming request from the query coordinators . Ad server functionality typically operates in a cluster of identical servers such as wherein each ad server is responsible for handling a certain subset of ads . Ad servers are typically combined into clusters of ad servers that are identical. The ad server selects the top N best ads for the request from its subset of ads and sends the associated ad ids back to the query coordinator . The entire process of scoring ads occurs very quickly typically in less than 100 ms.

There is no redundancy of ad servers within the cluster itself. The number of machines in the cluster is proportional to the number of ads in the system and the number of incoming requests for which full ad scoring has to be performed. The number of servers exceeds the number of requests that they have to handle at peek time by a margin that covers MTBF related properties of the hardware. At any given point a number of ad servers in any cluster may be down and the ads that reside on that ad server may be temporarily unavailable for serving.

Ad servers typically operate in a cluster wherein ad server are registered with a global repository of ad servers and the updated map is then given to the query coordinators . When an ad server goes down after a number of retries it is assumed to be down and the map is adjusted to exclude it.

Ad servers preferably stay in sync with the ads by continuously rebuilding the ads in memory. For example in some system embodiments some or all of the ads are divided into ad buckets with a large number e.g. 100K ads per bucket. The ads are typically placed into buckets based upon their id wherein a bucket typically comprises a contiguous range of ad ids. Ad ranges between buckets do not overlap. Therefore while earlier created buckets may get sparse e.g. as old ads are deleted newer buckets are typically more full except for the latest bucket that is always being filled up. Because the ad ids in a bucket are contiguous the system is typically able to compress the ad ids successfully when constructing the ad index.

Each ad server is allowed to have a certain number of ads. Each bucket loaded onto an ad server keeps track of how many ads it has. Thus an ad server always knows how many ads it has and if it has a spot for another bucket. When a new bucket is created it is tied to a particular ad server and it doesn t move. The bucket creation algorithm does the following 

The map from ad ranges to buckets and from buckets to servers is relatively small. For a system that has 100K ads per bucket there are 1K buckets for 100 M ads . Each bucket lives on as many servers as there are clusters. Propagating this relatively small information can be done with a few network packets.

Instead of having an offline rebuild server rebuilding typically happens continuously on a running ad server . The ad server gets the ads and features from the distribution server as described above. The ad server typically remembers a timestamp for each bucket that it has so that it can catch up to the most up to date state when it connects to the distribution server or is called by the distribution server in the case of push.

A rebuild process in an ad sever preferably works without starving the ad scoring threads. In a pull system model a rebuild thread wakes up periodically and pulls the new ad data from distribution for the buckets that it is responsible for. For each bucket the rebuild thread comprises the steps of 

The ad index comprises a hierarchy of posting lists. Each posting list maps a term or a 8 byte fingerprint of the term to a list of ads that contain the term. The complete list of ads for a given term may come from multiple posting lists. The lower level posting lists are made small enough so that the cost of inserting a new ad is low. In the steady state an ad server receives a small number of new ads per day. These new ads are preferably added to the lower level posting lists. When a lower level posting list grows beyond a certain threshold its content is merged into a higher level posting list.

The ad index can be implemented as a highly concurrent data structure where posting lists are updated in place. The ad index can also be implemented as a Lucene like structure where changes are never performed in place. Instead a new and smaller index is preferably built to accommodate the changes.

To process a modified ad e.g. such as due to a refresh of a landing page or a deletion of an ad the ad server needs to know the difference between the old version and the new version null for deletion . If the distribution server does not send the content difference along with the change request the ad server typically maintains the ad content on its local disk and computes the difference before adjusting the ad index.

Stop messages are typically broadcast in the system by the observation server so that both ad servers and query coordinators reflect in their cache all the stop requests. The final adjustments of stop requests is handled by the billing systems and reporting systems where the exact times of actions and clicks are correlated to the times of stop events.

The scheduler makes sure that tasks in the system start at a certain time. The scheduler does not run the tasks it just starts the tasks which are scheduled at regular intervals such as but not limited to 

There are typically a large number of tasks in the system that are executed by the task servers given the data required for the task. Such tasks typically comprise any of 

Some of these tasks are periodic in nature based and are triggered by the scheduler . Some of these tasks are based on the events introduced by a message in the system . Task servers are typically adapted to perform a variety of tasks such as pick up any task that implements a task interface and to perform the requested task. Task servers typically subscribe to receive various messages and to execute specific application or platform code depending on the message type. Some embodiments of the system are preferably configurable to have a given number of task servers that are capable of executing certain tasks whereby certain servers are set aside for ad approval for example and perform no other tasks.

When a system becomes aware of a new page that needs to be crawled the page enters a page analysis system. Pages typically have a designated lifecycle in the page analysis system wherein the lifecycle comprises stages. For example typical stage levels for a page comprise any of new crawled classified concepts extracted features computed and or analysis completed.

The page analysis system is backed up with persistent storage that describes what the system knows about the page and what the system has done with the page i.e. crawled content or text classification for the page . While most page and ad information is stored in the database the feature vectors are stored in disk on a shared reliable storage that is accessible by the task servers .

A single or multiple set of tasks is responsible for getting a page to the completed phase. The page analysis system is a pipelined system with a set of interfaces that a segment in the pipeline should implement. For example the first segment performs crawling. The second segment performs classification. These tasks are either performed back to back on the same machine as part of a general framework or messages are published upon the completion of each segment to be picked up by another task server. The tradeoffs are ease of scalability vs. having the data to perform the next step of the pipeline in memory.

The first step in the pipeline is crawling. The crawling task server i.e. the crawler is a very basic component that fetches the target page when a new target page appears in the system . The crawler is a task that runs on the task servers and it responds to a message or a database event that a new page needs to get crawled. It places the results of the crawl into the data storage for crawled pages. If a crawl was unsuccessful it schedules the page to be re crawled. After a certain number of attempts a page is abandoned.

Once the page is crawled the page is analyzed by the rest of the pipeline and finally when that finishes there is a message sent to the observation server and distribution server to make the ad go live. Alternatively the observation server can poll the page store periodically for changes. Note that the system does not typically use an ad unless its landing page has been crawled at least once. The landing page often contains valuable information such as user reviews. Therefore serving ads without knowing the content of a landing page may lead to poor ad selections. The principle holds true for catalog ads which can take days to crawl due to the large number of landing pages per site.

All pages typically have to be periodically re crawled. Re crawl intervals depend on the rate of ad requests from the page and how often changes are detected during re crawls. If a page appears static the system may preferably re crawl it less often. If a page changes often may preferably schedule the page for re crawling often. As well if during a re crawl it is determined that a page hasn t changed the system does not execute further analysis of the page . Note that the analysis pipeline may be different for target pages versus ads and or landing pages .

Most web sites tolerate only a small number of requests per second e.g. such as from a single IP. Therefore the system preferably throttles the traffic generated by the crawler. For example some preferred embodiments of the system allow the publisher and or the advertiser to configure the maximum number of requests per second for each domain. To increase the crawler throughput some system embodiments employ multiple external IP addresses.

The crawler may need to handle subscriber only sites. For example most of the articles on nytimes.com require a sign on credential. At a minimum the crawler should be able sign in with an account set up by our professional service.

Publishers and advertisers are preferably able to throttle the download bandwidth on a per domain basis. For example such constraints may comprise no more than K requests per second per IP address K is typically small such as 1 and or no more than M bytes per second per IP address. The system is also preferably able to cap the aggregated crawler traffic so that crawler functionality does not monopolize the network .

The system also preferably re fetches all pages periodically to ensure their content is up to date. For example target pages that are cached by the query coordinator are preferably automatically re fetched every N minutes. For target pages that have a high rate of change N is likely to be a small number e.g. . The system does not typically re fetch a target page if the target page is never used nor does the system typically refresh a target page if the target page is flushed from the cache due to the absence of a recent hit.

The landing pages for modified ads are typically treated like new landing pages wherein such landing pages are typically re fetched within minutes. As well the landing pages for modified catalog ads are typically treated like new landing pages wherein such landing pages are typically re fetched within a day. Furthermore the landing pages for all ads are typically re fetched at least once every M days e.g. at least once every 30 days. The system may increase the frequency of re fetch for a page such as if the observed frequency of change is higher.

During peak load the crawler may not be able to complete all fetches in time. In some system embodiments when such a situation arises the crawler executes the fetches in the following order 

The crawler is able to handle web sites with a reasonable authentication protocol. For example the crawler should be able to send the user name and the password over https and receives any cookie s that are returned by the site.

The crawler is able to recover from a crash gracefully without forgetting work. For example if the crawler shuts down during a page fetch the page should be re fetched automatically upon startup.

In one estimation of crawler performance an exemplary enhanced online advertising system has a workload comprising 20 000 target pages Twenty million ads of which 1 percent change per day in which all target pages are refreshed every 15 minutes and in which all landing pages are refreshed once a month. In the steady state of such a system the crawler needs to issue 20 000 240 20 000 000 0.01 20 000 000 30 5.7 million fetches day or 66 fetches second. Assuming a 2 MB sec network 16 Mb sec and an average page size of 10K bytes the crawling process takes about 8 hours for one day s worth of work. To bootstrap a 20 million ad inventory in a day the crawler is able to complete 231 fetches a second. In the exemplary system this performance may not be possible at all times such as if the majority of the ads come from a few catalog advertisers that only allow a few requests a second. Therefore for large catalog campaigns it may take a few days for their ads to go live after they are bulk loaded into the system .

All of the servers in the system are typically monitored for performance and failure. Generic monitoring software is used by the ops. Gracefully taking down some servers like the ad server results in a message published on a bus so that query coordinator knows not to attempt to use this server for serving ads.

The system architecture preferably permit occasional maintenance operations with as little down time as possible. For example the ad serving subsystem is designed to be up all the time even when the ad servers themselves are being replaced. The publisher advertiser application serve on the other hand can have scheduled down times for maintenance such as scheduled for small periods and not very often. The system typically performs the following maintenance operations 

Adding removing presentation servers is not a common activity but when it does happen the load balancers need to be told of the new server . The implementation is load balancer dependant.

Adding removing query coordinators can happen at any time the presentation servers must use a dynamically updated map to locate the query server s for a given impression request.

In some system embodiments the map is designed to first hash the target page URL into a moderate number of buckets where the number is chosen so that it is small enough to be cached in memory but also large enough to achieve a good load distribution. The system then use a persistent look up table called the server map to assign the buckets to the servers. When a new server is added or removed the system updates the look up table accordingly. The server map preferably designates both a primary and secondary query coordinator per target page range. If the primary query coordinator appears to be down the secondary associated query coordinator is then used. If the secondary query coordinator is down as well a random query coordinator is then typically used. Note that there can be multiple query coordinators in both primary and secondary buckets and that all primary query coordinators servers are preferably exhausted before secondary query coordinators servers are considered. Usage of secondary query coordinators may also be triggered by excessive load on the primary query coordinators servers .

A new ad server typically registers itself with the global repository of machines in this cluster and participates in the serve rebuild process. Query coordinators are notified when an ad server machine comes up or goes down in the cluster. Query coordinators can also preferably detect a down ad server and put it into suspect and then into a downed state.

In some system embodiments rather than having multiple instances of observation servers and distribution servers the system may have just one instance each. If one of the servers fails a replacement server may readily be installed since the system is designed to handle the downtime of these servers without affecting ad server or other operations. They are monitored and failed over in the case they go down to an available blank machine. Adding tasks servers is a matter of task servers starting and subscribing to receive messages.

In some system embodiments the system may preferably comprise at least two of each of these kinds of servers with fail over algorithms.

An upgrade release for an ad server is not preferably performed during any down time of the ad serving subsystem. Therefore removal of one or more i.e. a subset of the ad servers is preferably only performed at times when there is at least one active ad server for each redundancy group. The inactive ad server then receives the latest turn code release with the necessary changes to its state data e.g. a new log format. The upgraded ad server can then be added back to the active pool with the appropriate changes to the server map.

The incremental scheme requires the system to run with two different code releases at the same time. Therefore the ad server code allows a new release to execute the message protocol of a previous release. For example in some systems the message protocols are backward compatible e.g. for at least one version. Alternatively some system embodiments run both versions of code until all ad servers are upgraded at which point the system atomically switch to the latest e.g. more efficient protocol. In most system embodiments the same upgrade strategy is provided for presentation servers and or query coordinator servers .

Upgrading the database server normally requires a non trivial amount of down time even with active replication because the database must permit the interactive applications to read and update the latest data. Consequently the system schedules such upgrades with the end users USR who are told that the advertiser and publisher applications are inaccessible during the window of maintenance.

Although the database server is down during the upgrade the ad servers must continue to serve ads . To decouple the database server and the ad serving subsystem the system preferably follows the design principle that an active ad server never reads data or writes data directly to the database server. Instead data communication between the two subsystems is preferably asynchronous. A possible design is to have the task server push the incremental changes between the database server and the ad servers . The push can be performed at regular intervals e.g. such as for new ads or new impression counts or it can be triggered on demand by either subsystems.

The upgrade any of task servers observation servers and or distribution servers is not typically on the critical ad serving path so these systems may be safely shutdown updated as necessary and brought back up with new software.

The report store is the gatekeeper of all performance data current and historical for the system . The performance data includes the number of impressions the average rank of the displayed ad s the number of clicks the number of actions and the details of all actions . The data is preferably used by the web applications for interactive drill downs as well as background reports. To ensure a reasonable response time e.g. seconds the system may restrict the options that can be customized by the interactive reports. The background reports that support a full range of customization may take on the order of hours but not days to execute.

Interactive reports are typically further divided into two classes standard and catalog. The standard reports are for non catalog based campaigns each of which has a small ad inventory e.g. thousands. Catalog reports are preferably provided for catalog based campaigns which can have millions of ads . Again for the sake of a reasonable response time the system typically restricts the set of catalog reports. For example the system does not typically provide performance data at the ad group level for catalog reports.

At any given point in time the system s workload consists of a mixture of interactive reports and background reports. The reporting system provides the highest service level to the interactive reports. For example the system ensures that the cost of computing an interactive report is proportional to the data it requires i.e. small instead of the total amount of data large . A possible solution is to physically separate the data used by the interactive reports and the background reports note that the data can still appear to be one piece if the database supports partitioning . In addition the system may also use a clustered database where one of the sever instances is dedicated to interactive reports.

The finest granularity of performance data is a daily aggregate or a partial daily aggregate for an individual ad. The partial aggregates for the current day are maintained by the observation server during the ad serving process. These aggregates are sent to the reporting database as frequently as performance permits preferably once every few seconds so that the report store can provide up to date statistics for the current day.

At the end of the day the system performs a post mortem analysis on the click logs and the action logs to detect fraudulent or erroneous entries. After the process completes the current day s aggregates are adjusted for the differences and the result is officially added to the report store as the authoritative source for all performance data from that day. Finally the data for the current day are cleared and the same process repeats for the following day.

The observation server may maintain multiple days worth of performance data if the profit model requires the weight click or action rate over the last few days. However the permanent and authoritative storage for all performance data is the report store. If the observation server crashes it can recover its data by loading from the report store and replaying the click and action log entries that took place during the crash recovering the exact impression count from the impression logs is optional .

Any daily performance data that is older than a certain threshold e.g. 365 days is rolled off the report store and placed into archival storage i.e. non queryable storage. This can be easily done by a database that has native support for partitioning and archiving e.g. such as an Oracle or MS SQL Server. As the result of the roll off the reporting store must maintain a separate per ad fact table to store the inception to date performance data. The inception to date fact table is updated when the daily data is committed to the report store. Similarly if the data is rolled off yearly the system maintains a set of tables for the yearly summary data.

The reporting store maintains a collection of derived tables to speed up time navigation. At a minimum the reporting store maintains a number of weekly and monthly aggregate tables. The current week s aggregates are recomputed at the end of every day from the daily aggregates and the current month s aggregates are recomputed at the end of every week. This sort of computation is best done by a database that supports partitioning parallel queries and possibly materialized views.

For each per ad fact table the system maintains a small collection of roll up tables to speed up the interactive queries. For example the system may preferably maintain a per campaign performance data table and a per advertiser performance data table. However the number of report combinations may be sufficiently high such that the system does not attempt to pre compute all report combinations. Therefore the reporting system processes interactive queries with reasonable speed. In some preferred system embodiments the underlying database includes native OLAP support e.g. star joins and parallel queries.

In addition to the performance data the reporting store also serves as the permanent and authoritative store for all actions . Since the number of actions per day is expected to be very small e.g. tens of thousands a day for reporting to a single advertiser the system may not require any special support for transactions such as by aggregation from the individual transaction records.

Sizing estimate. For an exemplary system that serves 50 million ads 10 000 distinct target pages per day and a 15 minute refresh of the target pages an estimation of the size of the per ad fact table is shown as 

As most or all ads would seen in a month s time there would be about 50 million rows a month. Therefore keeping 12 months of data requires 12 50 M 600 million rows.

However the storage mechanism may vary depending on the type of data being served from the stores. The system may therefore employ multiple mechanisms for different data types within a single store wherein the choice may preferably be guided by the access patterns as follows 

Each access method must be accompanied by a backup and recovery strategy. For example to make the indices recoverable the system periodically checks point the index files and make sure that lost data from other data sources e.g. such as from the database can be replayed or re computed.

There is variety of data needed for the run time ad serving. The data is propagated to the ad servers and cached on their local disks. Computed features and feature lookup tables are examples of such type of data. This data is further cached in memory by the ad servers to improve runtime performance. The system uses message queuing to support distributed computing. Messages are persisted using message queuing software for fail over purposes as described above in regard to messaging services .

In some system embodiments Hibernate available through Jboss Inc. of Atlanta Ga. is used as the primary O R mapping layer to access the database based business objects. As well in some system embodiments business objects are modeled using a DBDesigner modeling tool available through fabforce.net and are converted into schema generation upgrade instructions and Hibernate XML configuration needed to manage these objects during runtime. Furthermore Java POJO classes may be created that represent the business objects and Hibernate runtime supports loading and saving of these objects using byte code instrumentation. The business objects are used by the front end applications and various runtime services when database access performance is not an issue.

Runtime ad serving typically uses feature vectors and optimized versions of loaded database based objects when needed and care is taken to make sure that only needed data is fetched and in the most optimal way possible. Ad serving also loads and caches when possible pre computed features and feature lookups out of the databases and files. File based data preferably has its own format and loading saving APIs per type of component.

The enhanced online advertising system is preferably highly distributed with many servers and interacting components. To simplify communication between various processes and servers the system is preferably event driven with the messaging infrastructure as the technology to support it. Open source JMS messaging implementation is utilized under the hood. Persistent or transient messaging is used depending on the desired effect of the message.

In some system embodiments two types of messages are supported. First there is transactional messaging with a message being consumed by exactly one consumer from a cluster of identical consumers. An example of this a creation of an ad that triggers exactly one approval of an ad via the approval task. The second important type of message is a multi cast message that is consumed by a number of interested parties that are subscribed to consume this type of a message.

An example would be if an ad is paused a multi cast message to all the ad servers serving this ad should stop this ad from being served . Messages are asynchronous. Asynchronous messaging is an excellent way to de couple execution paths in various servers. There are other synchronous ways of supporting communication between the components in the system. However the proposal is to use messaging architecture as it allows to write software components that do not have to be aware of each other and simple fire messages in a fire and forget mode and assume that an appropriate action is taken at a later point by another software component. Open source messaging implementations such as JGroups ActiveMQ and JORAM support 1 10K messages second per topic message size of 1K . Once the messages are properly persisted and replicated the performance goes down. The architecture is scrutinized not to use messaging excessively i.e. each impression does not result in a message in the system. Finally commercial implementations of JMS claim much higher levels of scalability.

The term server has typically been referred to herein as a combination of a machine and its primary role e.g. such as for a query coordinator an ad server and or a task server . The term service as used herein such as in relation to functionality of hardware typically refers to software that can receive and process messages e.g. the ad server service is the module that serves ad server scoring requests. Similarly the term machine as used herein typically refers to the hardware. As well the term server may comprise the main program being run by a JVM. Unless performance is sub optimal in large n cpu machines one server will be assigned per machine. System services are therefore software components that can receive and process a message sent over the system . External services can receive messages arriving from outside a server while internal services handle messages from within a server .

While services typically act as a client of the service manager i.e. an entity that manages service life cycle issues services have a primary function to process messages i.e. serving as a message system client.

Services are associated with destinations whereby services read and handle system messages that are sent to a specific destination. To facilitate availability machines may preferably by treated as generic resources that can easily be assigned responsibilities such as without significant reconfiguration.

For example in some system embodiments non tomcat servers in the network elect a single server from among themselves to act as a service manager which tracks and reports the availability of machines on the network as they come online or go offline. The service manager may preferably start various external services e.g. such as other than tomcat servlets and assign services to machines e.g. such as governed by metadata accessed from shared storage . Such metadata describes how many instances of specific services to start and provides instance specific parameters e.g. what range of target page id s to assign to a particular query coordinator . The centralization of the propagation of this information offers the possibility for heuristics that dynamically map services to machines according to load and measured performance.

The system typically provides an abstraction layer for sending messages between services and for registering services as recipients for specific destinations. For example a system MessageBus may provide an enumeration of destinations to which messages may be sent and message handlers may be registered e.g. TaskServerDest AdScoringDest ManualAdApprovalDest CPAUpdateDest.

The enhanced online advertising system typically enumerates request types whereby a given message handler can process more than one type of request. The request type is typically required even for destinations receiving only one type of request so the message system can more easily report performance data by request type.

Shared metadata characterizes each destination. For example a message that is successfully delivered to a persistent destination is typically handled by a service even if no service instances are registered to handle the destination at the time the message is sent or the message system dies or is stopped before the message is handled or all services registered for the destination die before the message is handled. This is the JMS terminology the same concept has been referred to elsewhere in this document as reliable .

In the enhanced online advertising system synchronous destinations comprise service handlers that are expected to return a response object. The sender blocks until the response is available. A multi point destination comprises a destination whose received messages are processed by multiple services concurrently e.g. in separate servers .

In some embodiments of the enhanced online advertising system requests to higher priority destinations receive preferential scheduling on the target server without starving requests to lower priority destinations such as to optimize performance on a highly loaded servers e.g. to improve throughput by restricting concurrency to reduce thread thrashing. In such embodiments the message system typically provides thread scheduling by utilizing a thread pool shared by all destinations on a server .

In some embodiments of the enhanced online advertising system an estimate is made of the percentage of time that message handlers for a destination are performing I O or otherwise waiting for external processes. Such estimations can be used to influence the number of requests that are allowed to run concurrently on the same server such as to avoid thread thrashing.

In some embodiments of the enhanced online advertising system some destinations such as queues are transactional. For such a system embodiment that uses JMS terminology messages that are removed from a transactional queue and unsuccessfully processed by a service are rolled back into the queue. Furthermore any message sends performed by the failing message handler are rolled back. In such systems message handlers preferably deal with errors internally without support from the message system since message handlers are typically better equipped than the message system to decide how to handle specific failing messages.

In some system embodiments JGroups is used to elect the Service Manager at startup and after Service Manager failures. In systems where network partitioning is important JGroups detects the merging of a partitioned network. As well in some system embodiments external means are preferably be employed to detect network partitioning sooner.

In some system embodiments JGroups is also used to implement multi point synchronous non persistent destinations. This destination configuration type is used by Query Coordinator to distribute ad scoring requests to all members of an ad server cluster for parallel processing. Each ad server knows from service startup parameters what set of ad buckets to process. As well in some system embodiments JGroups is used for persistent queues.

For asynchronous multi point destinations e.g. as by using either JMS or JGroups. the destination type is used by the observation server to send CPA updates to ad servers . Such requests are specific to a set of ad buckets and may typically be processed by two ad servers at a time the same as the number of Query Coordinators . JMS implements this with a publish subscribe topic to which ad servers would filter the requests based on the ad buckets. JGroups typically uses either multi point TCP IP or by defining multiple groups multi cast UDP .

In conventional online ad network systems advertising entities are typically required to provide expertise in the input of relevance links i.e. keywords and phrases from which conventional ad placement systems provide a limited matching of relevance to available ad space typically based solely on keyword matching between the input advertiser keywords and a search for a match to keywords and phrases in a publisher page.

As well in conventional online ad network systems advertising entities are typically required to provide expertise in bidding on a limited range of actions for which they are also responsible to track the results and attempt to determine the effectiveness of their campaigns.

In stark contrast the enhanced online advertising system does not require an advertiser to enter keyword or phrases as comprehensive analysis is automatically provided both across advertiser assets and publisher assets. The enhanced online advertising system greatly simplifies the generation and targeting of ads and provides significantly greater ad relevance for served ads resulting in ads that are more meaningful to consumers USR more effective for advertisers and thus more lucrative for publishers .

The enhanced online advertising system provides search technology based relevance and integrates search contextual and behavioral attributes. As well no manual targeting is required. While keyword and or category hints may be utilized if available they are not required.

An ad having a higher rank gets more play so an advertiser may manually or automatically increase the rank of a desired advertisement by increasing bid price or improving the quality of the ad .

Furthermore as described above the system can automatically generate catalog ads by taking advertisers product catalogs and automatically generating ads from them. This inherently allows the system to rapidly serve millions of ads and at much lower cost than alternative networks. The system therefore inherently allows advertisers to advertise the long tail of their product catalogs i.e. thereby providing ads even for products that would normally receive little attention. Advertisers conventionally have no efficient means to address advertising for the long tail of their product catalogs since manual targeting approaches are prohibitively expensive for promoting sales of all products . As well by efficiently providing more ads the system can additionally provide more revenue to more diverse publishers since such catalog ads are only possible because of the automated predictive technology within the enhanced online advertising system .

Although the exemplary enhanced online advertising system and methods of use are described herein in connection with an advertising network implemented across the Internet the system and techniques can be implemented for other content systems and or networks as well or any combination thereof as desired.

For example while the exemplary enhanced online advertising system and methods of use are described herein in connection with bidded pricing for advertising the system can alternately be used to link a wide variety of data based on analyzed relevance to one or more entities. As well the system can alternately be used to integrate a wide variety of factors that may directly and or indirectly be associated with relevance to one or more entities.

For example while exemplary embodiments of the enhanced online advertising system are described herein as applied to web pages the relevance and pricing engine of the system can similarly be applied to any context where the system can measure features of the context and then measure consumer response in semi real time such as via a TCP IP network e.g. such as for but not limited to mobile devices like cell phones interactive IPTV game boxes and or desktop applications supported by advertising.

Furthermore while the exemplary enhanced online advertising system and methods of use described herein in connection with an advertising network the system and techniques may alternately be implemented for other data or information systems such as to associate relevance of different sources and or users of information which may or may not necessarily be associated with monetary relevance to any entities.

Accordingly although the invention has been described in detail with reference to a particular preferred embodiment persons possessing ordinary skill in the art to which this invention pertains will appreciate that various modifications and enhancements may be made without departing from the spirit and scope of the claims that follow.

