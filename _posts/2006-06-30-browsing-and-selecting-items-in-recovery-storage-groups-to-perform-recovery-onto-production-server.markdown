---

title: Browsing and selecting items in recovery storage groups to perform recovery onto production server
abstract: A method and system for restoring data on a production server by recovering individual data objects from a recovery storage group to a database residing on the production server. In one example method, a recovery interface accesses a recovery storage group containing a recovered database. The recovered database has been recovered from a backup storage location and contains a copy of a database residing on the production server. The method then identifies each data object residing in the recovery storage group and displays each of the data objects on a graphical user interface configured to allow a user to select and individual data objects for recovery from the recovered database. The selected data objects are restored to the appropriate location on the production server.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07676689&OS=07676689&RS=07676689
owner: EMC Corporation
number: 07676689
owner_city: Hopkinton
owner_country: US
publication_date: 20060630
---
The present invention relates generally to systems and methods for backing up and recovering data. More specifically the present invention relates to methods and systems for selecting individual data objects from a recovery storage group and restoring selected data objects to a production server.

In this society where many personal and business interactions are data driven data can become easily lost or corrupted due to events such as system failures viruses power outages etc. Backing up data has become an important feature of computer networks because of this increasing dependence upon computers and networks to perform vital business and personal functions. The ability to easily accurately and reliably access data is expected by anyone accessing a computer and or network.

Backup and recovery of data are typically accomplished through the use of software that creates a backup copy of data and that recovers the data from the backup copy. As the amount of data continues to increase and as the applications for creating data become more complex backing up and recovering the data becomes more challenging. However after backing up certain types of databases either the entire database has to be restored or a filter can be used to restore a portion of the database. However the filter is useful only if the user knows what data is contained on the database in order to be able to configured filter parameters. Thus after a backup is created of a production server database it would be advantageous to be able to restore individual data objects from the backup database so that large amounts of data are not unnecessarily recovered from the backup database during recovery operations.

In the following detailed description of various embodiments of the invention reference is made to the accompanying drawings which form a part hereof and in which are shown by way of illustration specific embodiments of the invention. It is to be understood that other embodiments may be utilized and structural changes may be made without departing from the scope of the present invention.

Embodiments of the present invention provide for methods and systems for restoring a database residing on a production server by recovering individual data objects from a recovery storage group to a production server database. Each production server database may be protected by creating a backup copy of the database at a backup storage location. When one of the backup copies is recovered for example after a system crash or other disaster the backup copy is copied from the backup storage location to a recovery storage group residing on the production server. The present invention then identifies each data object residing in the recovery storage group and displays each of the identified data objects on a graphical user interface configured to allow a user to select and recover the data objects on an individual basis. A user can then select one or more of the displayed data objects for recovery. The selected data objects are retrieved from the recovery storage group and are restored to the appropriate location on the production server.

In one embodiment the invention is applied to a mail exchange production server environment. The present invention allows an administrator to recover individual mail exchange data objects from a recovery storage group without being required to recover an entire database or a large group of data when only a limited number of data objects need to be recovered.

As used herein the terms data and data object may include but are not limited to directories e.g. volumes file systems and the like user data system data applications services operating systems instructions and the like that can be stored on one or more storage devices of a computer. Backing up or recovering the data may include backing up or recovering any of the data herein defined or understood by those of skill in the art. Data may be organized in logical directories that do not necessarily correspond to a particular storage device. The term directory can be used interchangeably with the term volume or file system to refer to any means of logically organizing data on a computer.

Certain embodiments described herein will involve electronic communication between a client computer system hereinafter referred to as a client requesting access to a network service at a server computer system hereinafter referred to as a server . Accordingly the client sends a request to the server for access to its system resources wherein if the client is authorized and validated the server responds with a response message providing the desired information. Of course other messaging patterns between client and server are available as are well known in the art.

As used herein the term user may refer to a person operating the server e.g. administrator . Alternatively the term user may refer to a person at a client or management console. Users are able to initiate a request for backup and or restore although it will be appreciated that the server may have additional functionalities not available to the client or management console.

Referring now to a more detailed example is illustrated using a diagrammed reference to a distributed network . The distributed network may include a production server and a data protection server . The production server may communicate with one or more client systems as described above and may provide one or more primary storage databases containing data for users of the client systems.

The data included in the primary storage databases may be protected by creating a backup database at a backup storage . Each backup database includes a copy of one of the primary storage databases from the production server . The backup storage may include various types of storage devices commonly used for data backup purposes including but not limited to magnetic storage semiconductor storage optical disk storage Continuous Data Protection CDP storage Network Attached Storage Direct Attached Storage and the like and combinations thereof. The backup storage may further form a node on a network or a storage device on a storage area network SAN and may include a storage device located at an off site location for protecting against local disasters such as flood fire theft and the like. The data protection server may operate under a different operating system or platform than the production server . Further the backup storage may be located remotely from data protection server .

The data protection server may include a data protection application that may perform various backup and recovery functions. The data protection application may provide a variety of services to facilitate data protection of the production server . For example data protection application may be configured to manage mirroring operations of the data residing in primary storage databases . The data protection application may also perform automated backup and recovery operations of primary storage databases in accordance with a predefined schedule. Furthermore the data protection application may also facilitate the backup and recovery of data to and from storage locations having unique capabilities such as CDP storage. The data protection application may further be configured to deliver data protection and management for direct attached storage DAS network attached storage NAS storage area network SAN and other storage environments.

Although the data protection application may consist of backup and recovery software features from any number of manufacturers the data protection application may include various features including but not limited to advanced indexing high speed parallelism automated media management LAN free backup cluster awareness and dynamic tape drive sharing. Further the data protection application can also coordinate other functions such as but not limited to data mining data consistency analysis mirroring backup and recovery and the like.

When data residing in one of the primary storage databases is corrupted lost or otherwise must be replaced a recovery operation can be performed of the corresponding backup database residing in the backup storage . To perform a data recovery operation of one of the primary storage databases the corresponding backup database having the data being recovered is copied from the backup storage to a recovery storage group in the form of a recovered database . In one embodiment the data protection application is configured to manage the copying of the backup database to the recovery storage group .

The recovered database can then be used to restore the lost or corrupted data on the primary storage . Conventionally many production servers include a recovery interface that requires that the entire recovered database be copied to the primary storage during a recovery operation and does not provide the user with the ability to access or recover individual data objects from the recovered database . Alternatively some conventional production server environments allow a user to use a filtering technique to provide general parameters as to which data residing in the recovered database will be copied to the primary storage database that is being restored. For example a user may in a conventional environment be allowed to submit parameters in the form of a date range wherein all of the data objects residing within the recovered database that have been either created or altered within the specified date range will be copied from the recovered database to the primary storage database being restored. However the user must have specific knowledge of acceptable parameters and even in this case the user is still unable to identify or select the individual data objects that fall within the parameter range specified by the user.

Therefore in either of the above described conventional environments when performing a recovery operation the user is often required to copy a large amount of data or even the entire recovered database even when only a small number of data objects residing in the recovered database need to be recovered. Consequently processing resources time and other resources are often wasted by moving a large amount of unneeded data from the recovered database to the primary storage database being restored. Furthermore in some cases it would be desirable to be able to restore only a certain portion of the primary storage . For example at the time that data is corrupted data in the primary storage may have been changed by a user since the time at which the backup database being used for the recovery was created. For efficiency it would be desirable to be able to recover the corrupted data without losing the good changes that have occurred to the data since the last backup. Therefore under the conventional scheme while recovering the corrupted data the changes made to the non corrupted data will be lost if the user is required to restore the entire database during the recovery operation.

In order to more efficiently recover the data objects residing within the recovered database the present invention provides systems and methods for recovering individual data objects in a system that otherwise requires the recovery of larger blocks of data or entire databases. In accordance with the present invention once the recovered database is created by copying one or more of the backup databases from the backup storage to the recovery storage group the production server utilizes means for identifying each data object residing within the recovered database . In one embodiment means for identifying data objects in a recovered database include an application programming interface API that parses the data located in the recovery database into separate data objects which may include for example files folders directories user data system data applications services operating systems instructions and the like. Application programming interface can be formed as part of the recovery interface or can be programmed as a separate module that interfaces between application programming interface and recovery storage group .

In one embodiment the data parsing of the recovered database is managed by a data recovery module of a recovery interface . The data objects that are identified within the recovered database are then displayed on a graphical user interface by a display module . The graphical user interface can be part of the same programming as the recovery interface or can be configured as a separate module that is accessed by recovery interface . In one embodiment the data objects are displayed by display module hierarchically for example in accordance with the interrelationship between folders files and the like. A user may access the graphical user interface and may select individual data items located within the recovered database to be restored to one of the primary storage databases . After the user selects the data objects to be restored the data recovery module moves copies or otherwise restores the selected data items from the recovered database to the appropriate location within the primary storage databases .

In one embodiment each data object copied from the recovered database includes metadata describing its original location within the primary storage databases prior to being backed up to the backup storage . Therefore when the data objects are restored from the recovered database the production server may move or copy the data objects to their original locations on the appropriate primary storage databases . Alternatively the recovery interface may allow a user to manually control the target destination of the recovered data objects. The recovery interface can be accessed locally at the production server or remotely from data protection server .

In one embodiment as illustrated in the principles of the present invention are employed to restore individual data objects residing on a mail exchange production server . Examples of mail exchange production servers include Microsoft Exchange Lotus Notes Domino Scalix Open Xchange exchange4linux Zarafa and the like. In general the mail exchange production server includes a computer program or software agent that transfers electronic mail messages from one computer to another as well as storing and managing electronic messages. In addition to managing electronic mail a mail exchange production server may manage other types of data including calendar data journal entries notes task lists contact information and the like. Therefore the terms mail electronic mail user data exchange data and mail exchange production server should be read to include the above mentioned data types in addition to other types of data that may be managed by an exchange production server.

The exemplary mail exchange production server illustrated in divides data into storage groups and . Although the example illustrated in only includes two storage groups and the exchange production server may include more or less than two storage groups. Each storage group and contains one or more exchange databases for storing user data. As described above each exchange database may store electronic messages calendar data journal entries notes task lists contact information and the like for one or more users. Each user may access his or her data from mail exchange production server through a network connection.

In order to protect the data stored on the exemplary mail exchange production server the exchange databases are backed up to the backup storage . As described above the data protection application may manage the backup and recovery operations of the backup exchange databases . When the user data located in one of the exchange databases are lost corrupted or otherwise are in need of being recovered the corresponding backup exchange database is copied to the recovery storage group shown as recovered database . In one embodiment the data protection application manages the copying of the backup exchange database from the backup storage to the recovery storage group .

As described previously in some conventional mail exchange production environments such as Microsoft Exchange the mail exchange production server is required to replace an entire exchange database with the entire recovered database during a recovery operation. Or alternatively the administrator s control over what data items are recovered is limited to recovering data blocks using the filtering techniques described above. However in order to allow a user to recover individual data objects from the recovered database and in accordance with the present invention each of the data objects located in the recovered database is parsed in order to be able to identify the distinct data objects. Then the display module displays each of the individual data objects located in the recovered database on the graphical user interface to the administrator. The administrator is then able to select individual data objects displayed in the graphical user interface for recovery. The selected data objects can then be moved or copied from the recovered database to the appropriate exchange database .

In one embodiment after the recovered database is created by copying one or more of the backup exchange databases from the backup storage to the recovery storage group the data recovery module utilizes a Messaging Application Programming Interface MAPI for identifying each data object residing within the recovered database . The MAPI includes a set of functions for standardizing the way messages are handled by mail enabled applications. In particular the MAPI may be configured to parse the data located in the recovery database into separate identifiable data objects which may include for example files folders directories user data calendar data journal entries notes task lists contact information and the like. The MAPI provides the recovery interface with the identified data objects and the organization of the data objects so that the data objects can be displayed by display module on the graphical user interface . Although the MAPI may be developed by various companies in one embodiment the MAPI is developed by Microsoft Corporation.

To summarize the data located in the exchange databases are protected by saving copies of the exchange databases to the backup storage . When data contained in one of the exchange databases needs to be recovered the corresponding backup exchange database is copied from the backup storage to the recovered database of the recovery storage group . The present invention provides means for identifying each of the data objects contained within the recovered database e.g. MAPI . The data objects are displayed by a display module on a graphical user interface which allows a user to select individual data objects to be recovered. After receiving a selection from the user the data recovery module moves or copies the selected data items from the recovered database to the appropriate location in the exchange database .

Each node can be collapsed and expanded by selecting the minus box or a plus box respectively. Similar to many conventional hierarchical tree displays when a node is expanded one or more sub nodes associated with the expanded node are also displayed. For example by expanding the parent node Users are displayed and by expanding User the categorized user data associated with User are displayed. Each of the Users represents a separate user having an account on the exchange production server . As illustrated by the categorized user data each user has user data associated therewith which may include for example calendar data contact data deleted items drafts of electronic messages an inbox journal data junk e mail notes an outbox sent items tasks and the like.

Upon selecting one of the categorized items located within user data the data objects associated with the selected category appear within the data object list panel . For example as illustrated in upon selecting the Inbox of User the Inbox is highlighted and the messages within the inbox appear within the data objects list panel .

An administrator may select individual data objects or groups of data objects to be recovered by checking one of the checkboxes exemplified by checkbox . If the administrator would like to recover an individual data object the administrator may select the check box corresponding to the data object located within the data object list panel . As illustrated in by selecting the check boxes and for Message and Message respectively the administrator can identify that Messages and will be restored to User s inbox located on one of the exchange databases of .

Furthermore by displaying the data objects in a hierarchical manner the administrator can also recover data using various granularities other than by individual data object. In one embodiment a user can select an entire category of user data by selecting the checkbox corresponding to the category to be recovered. For example as illustrated in by selecting checkbox for the Calendar category the administrator can move or copy the entire calendar category including all the data objects e.g. appointments meetings folders and the like included within User s calendar to the appropriate location on one of the exchange databases of without having to select the individual data objects in the User s calendar.

The administrator can also recover all data for a particular user by selecting the checkbox corresponding to the user to be recovered. For example as illustrated in by selecting checkbox for User the administrator can move or copy all user data associated with User including all categorized data and their corresponding data objects to the appropriate location on one of the exchange databases of . Similarly the administrator can recover an entire database by selecting checkbox for the parent node .

After the administrator has selected the checkboxes for the individual data objects and or data groups to be recovered the administrator may initiate a recovery operation of the selected data items by selecting a Recover icon . The data recovery operation may be terminated by selecting an Abort icon . As mentioned above because the data objects may have metadata that identify the originating storage location of the data object the administrator does not need to necessarily specify a recovery destination for the data being recovered. However graphical user interface may also include icons fields and or other mechanisms for allowing an administrator to select a recovery destination.

Referring now to a method of performing data recovery of individual data objects in a data recovery system that typically requires the recovery of an entire database is illustrated. The method may be practiced for example in a distributed network including a production server and a backup storage location. The method includes at accessing a recovery storage group containing a recovered database that has been recovered from a backup storage location. Referring once again to an illustrative example of a distributed network having a production server is illustrated. The recovery storage group having a recovered database is accessed by a recovery interface .

In one embodiment accessing a recovery storage group containing a recovered database that has been recovered from a backup storage location may include copying a backed up database from a backup storage location to a recovery storage group located on the production server. As illustrated in the backed up database may contain a copy of a database originally located on the production server .

At the method further includes identifying each data object residing in the recovered database. In one embodiment identifying each data object residing in the recovered database may include utilizing an application programming interface configured for parsing a database that otherwise does not provide information regarding individual data objects. By parsing the database the application programming interface is able to identify the individual data objects residing therein.

At the method also includes displaying each of the data objects on a graphical user interface configured to allow a user to select individual data objects for recovery from the recovered database. Thus as illustrated in the data objects identified in the recovered database are displayed on a graphical user interface . As described previously the graphical user interface allows individual data objects to be selected for recovery. In one embodiment as illustrated in the data objects are organized on the graphical user interface in a hierarchical manner in order to facilitate navigation of the data objects.

At the method further includes receiving a selection of one or more of the data objects from a user via the graphical user interface. The selected data objects are then retrieved at from the recovered database. The method at further includes restoring the selected data objects to a storage location on the production server. In one embodiment the selected data objects are automatically restored to the same storage location that they originally resided in prior to being backed up to the recovered database. Alternatively the location to which the selected data objects are restored to can be manually controlled for example by a system administrator. For example an administrator could instead choose to restore the data objects to a different location.

In one embodiment the production server described in method is a mail exchange production server such as the mail exchange production server illustrated in . Similarly the recovered database is a backup copy of an exchange database residing on the mail exchange production server. The recovered exchange database may contain mail data objects from one or more users. In a conventional environment it is necessary to restore the entire recovered exchange database when performing a data recovery operation of the mail data. Therefore in order to identify the individual data objects located in the recovered exchange database the MAPI may be employed for parsing the recovered exchange database. The identified data objects may include but are not limited to folders electronic mail items calendar entries users contact data journal entries notes and tasks.

Embodiments herein may comprise a special purpose or general purpose computer including various computer hardware. Embodiments may also include computer readable media for carrying or having computer executable instructions or data structures stored thereon. Such computer readable media can be any available media that can be accessed by a general purpose or special purpose computer. By way of example and not limitation such computer readable media can comprise RAM ROM EEPROM CD ROM or other optical disk storage magnetic disk storage or other magnetic storage devices or any other medium which can be used to carry or store desired program code means in the form of computer executable instructions or data structures and which can be accessed by a general purpose or special purpose computer. When information is transferred or provided over a network or another communications connection either hardwired wireless or a combination of hardwired or wireless to a computer the computer properly views the connection as a computer readable medium. Thus any such connection is properly termed a computer readable medium. Combinations of the above should also be included within the scope of computer readable media.

Computer executable instructions comprise for example instructions and data which cause a general purpose computer special purpose computer or special purpose processing device to perform a certain function or group of functions. Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims.

The present invention may be embodied in other specific forms without departing from its spirit or essential characteristics. The described embodiments are to be considered in all respects only as illustrative and not restrictive. The scope of the invention is therefore indicated by the appended claims rather than by the foregoing description. All changes which come within the meaning and range of equivalency of the claims are to be embraced within their scope.

