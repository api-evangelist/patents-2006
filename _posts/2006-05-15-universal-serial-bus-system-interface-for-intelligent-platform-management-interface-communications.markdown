---

title: Universal serial bus system interface for intelligent platform management interface communications
abstract: Methods, systems, and apparatus are disclosed for utilizing a universal serial bus (“USB”) transport as a system interface to transmit and receive IPMI commands and responses. An intelligent platform management interface (“IPMI”) transport library is provided that receives IPMI commands from IPMI client applications executing on a host. The IPMI commands are encapsulated into vendor specific small computer systems interface (“SCSI”) commands and transmitted over the USB transport to a virtual mass storage device provided by a management device. In response to receiving the vendor specific commands, IPMI firmware executing on the management device extracts the IPMI commands and executes them. A response may be returned to the host by encapsulating the IPMI response into a vendor specific SCSI response and transmitting the response to the host.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08069257&OS=08069257&RS=08069257
owner: American Megatrends, Inc.
number: 08069257
owner_city: Norcross
owner_country: US
publication_date: 20060515
---
This application is related to co pending U.S. patent application Ser. No. 10 790 160 filed on Mar. 1 2004 and entitled Method System and Apparatus for Communicating With A Computer Management Device which is expressly incorporated herein by reference in its entirety.

Computers are often linked together through networks to allow the resources of a computer at one location to be utilized by users located at a different location. In a distributed environment such as this computers known as servers perform various tasks for client computers that communicate with the servers over a network. Servers enable sharing of files and other resources between client computers and the server. As an example a world wide web web server may provide text graphics and other resources to client computers over the Internet.

It is often necessary to manage the operation of a server computer. For instance it is often desirable to view information regarding the relative health of a server computer. This is especially true for server computers that maintain resources that are utilized by a large number of client computers such as within a corporate network or the internet. For many conventional systems the technician that needs to view the screen displays and interact with the server being managed is required to be physically located at the site of the server. However it is not always feasible for a technician to be physically present at the location of the server computer.

For example a system administrator of a corporate network may be present at one location while the servers of the corporate network may be spread around the country or even the globe. To effectively manage the servers on the corporate network the system administrator must be able to monitor each of the server computers regardless of their location. Because the system administrator cannot be physically present at each server to be managed effective management of the server computers becomes very difficult if not impossible. As a result it can be very costly to maintain servers located in disparate physical locations.

Some systems for remotely administering server computers utilize an integrated or add in management device. Such a management device can provide remote access to detailed information regarding the health and status of a managed server computer. In some cases the management device can also redirect the video output from the server computer to a remote location and allow keyboard and mouse input to be provided to the server from the remote location. In some implementations the management device may also include a baseboard management controller BMC . In general a BMC is a microcontroller that monitors the health and operation of the computer. In one implementation a BMC monitors health related aspects associated with the computer such as the temperature of components within the computer the speed of rotational components e.g. spindle motor CPU fan etc. within the system the voltage across or applied to one or more components within the system and the available or used capacity of memory devices within the system. Other parameters may also be monitored.

In order to make the data gathered by the BMC available to programs and to other computer systems a standard called the Intelligent Platform Management Interface IPMI has been created. IPMI is an industry standard for system monitoring and event recovery. The IPMI specification provides a common message based interface for accessing all of the manageable features in a compatible computer. IPMI includes a rich set of predefined commands for reading temperature voltage fan speed chassis intrusion and other parameters. System event logs hardware watchdogs and power control can also be accessed through IPMI. In this manner IPMI defines protocols for accessing the various parameters collected by a BMC through an operating system or through an external connection such as through a network or serial connection.

In order for an IPMI client application to transfer IPMI messages to a BMC one of several system interfaces must be utilized. For instance if an IPMI client application executing on a managed server desires to transmit information to a BMC regarding current CPU usage the IPMI client application must utilize a system interface to do so. IPMI however defines only three possible system interfaces a keyboard controller style KCS interface a system management interface chip SMIC interface and a block transfer BT interface. Each of these interfaces however requires that additional hardware be present on the management device or within the monitored computer system. This hardware adds to the cost of the computer system or management device. Additionally these interfaces can be very slow. In particular KCS interfaces are based on a legacy keyboard controller interface that is extremely slow. Unfortunately no other communications channels are supported by IPMI for use as a system interface.

As discussed in greater detail herein the above and other problems are solved by a method system apparatus and computer readable medium for providing a universal serial bus USB system interface for IPMI communications. Utilizing the disclosure provided herein transports that are unsupported by IPMI for use as a system interface such as the USB transport may be utilized as a system interface to transmit and receive IPMI commands and responses.

According to one aspect an improved management device is provided. The management device provided herein is operative to communicate with a host computer over a standard communication link such as a USB connection. To enable communication between the host computer and the management device the management device emulates a standard device on the communication link. For instance according to one embodiment the management device is operative to emulate a standard mass storage device such as a CD ROM device on the communication link. Because the device is a standard device the operating system of the host computer can utilize a standard operating system driver to communicate with the emulated device. No custom hardware driver is necessary to communicate with the device emulated by the management device on the communication link.

According to one aspect the emulated mass storage device can be utilized to redirect the contents of a mass storage device connected to the remote computer to the host computer. Through the use of program code executing on the management device and the remote computer the contents of a mass storage device physically connected to the remote computer such as a CD ROM device can be made available to the host computer. In particular program code executing on the management device exposes the contents of the mass storage device of the remote computer to the host computer through the emulated mass storage device on the communication link. All read and write requests from the host computer are intercepted by the management device and relayed over the network to the remote computer. From the perspective of the host computer the emulated device appears no different than a physical device actually connected to the host computer.

According to another aspect the emulated device provided by the management device on the communications link can be utilized for out of band communication between the host computer and the management device. In particular the communications link can be utilized to exchange IPMI commands and responses between the host computer and the management device. In order to provide this functionality an IPMI transport layer is provided at the host computer. The IPMI transport layer receives IPMI commands from IPMI client applications executing on the host computer. The IPMI transport layer encapsulates the IPMI commands in vendor specific commands that conform to a second communication standard and transmits the vendor specific commands to the management device over the communication link. For instance according to one implementation the IPMI transport layer encapsulates the IPMI commands into a vendor specific small computer system interface SCSI command. The vendor specific SCSI command is then transmitted over a USB connection to the emulated mass storage device in order to perform out of band communication with the management device.

When the management device receives vendor specific commands destined for the emulated device IPMI firmware executing on the management device determines whether the commands are actually intended for the emulated device such as a read or write command or whether the commands are vendor specific commands intended for out of band communication with the management device. If the commands are actually intended for communication with the emulated device these commands are processed in a manner that allows the host computer to communicate with the emulated device. If the commands are intended for communicating with the management device itself the commands are intercepted and utilized by the management device for the requested purpose. In particular the IPMI firmware on the management device extracts the IPMI command from the vendor specific command and performs the requested command. The management device may generate IPMI responses encapsulated in vendor specific SCSI commands and transmit the responses to the host computer in a similar fashion. In this manner a USB transport can be utilized as a system interface for exchanging IPMI commands between an IPMI client application and a management device.

According to another aspect the host computer is operative to expose a KCS pseudo library to IPMI client applications executing on the host. The KCS pseudo library receives KCS formatted commands from the IPMI client applications executing on the host intended for communication with the management device. The KCS pseudo library reformats the commands so that they are compatible with the IPMI transport library and passes the reformatted commands to the IPMI transport library for relaying to the management device. In this manner the IPMI client applications do not need to be reconfigured to utilize USB as a transport for IPMI messages.

According to various aspects of the disclosure presented herein a method a computer controlled apparatus and a computer readable medium having instructions capable of performing the various embodiments described herein are also provided. These and various other features as well as advantages of the disclosure presented herein will be apparent from a reading of the following detailed description and a review of the associated drawings.

As described briefly above the embodiments described herein provide methods apparatus and computer readable media for enabling the use of a USB transport as a system interface for exchanging IPMI commands and responses between a host and a management device. In the following detailed description references are made to the accompanying drawings that form a part hereof and in which are shown by way of illustration specific embodiments or examples. These embodiments may be combined other embodiments may be utilized and structural changes may be made. The following detailed description is therefore not be taken in a limiting sense and the scope of the present invention is defined by the appended claims and their equivalents.

Referring now to the drawings in which like numerals represent like elements throughout the several figures aspects of an illustrative operating environment an several implementations will be described. and the following discussion are intended to provide a brief general description of a suitable computing environment in which the disclosure presented herein may be implemented. While the embodiments described herein will be discussed in the general context of enabling communication between a host computer and a management device those skilled in the art will recognize that the embodiments presented herein may also be implemented in combination with other computer systems and program modules.

Generally program modules include routines programs components data structures and other types of structures that perform particular tasks or implement particular abstract data types. Moreover those skilled in the art will appreciate that the implementations presented herein may be practiced with other computer system configurations including hand held devices multiprocessor systems microprocessor based or programmable consumer electronics minicomputers mainframe computers and the like. The implementations presented herein may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules or data files may be located in both local and remote memory storage devices.

Turning now to a general operating environment for the implementations presented herein will be described. As shown in a system is provided that includes a host computer that is to be remotely managed. A management device also referred to alternately as a redirection device an interaction device or management hardware is interposed between a network and the host computer . A remote computer is linked to the network and the host computer may or may not be linked to the same network or another network not shown. The network may be of various forms such as a local area network LAN or wide area network WAN including the interne. A user located at the remote computer may remotely manage aspects of the operation of the host computer via the network and the management device .

The management device may be linked to the host computer through several input output I O connections of the host computer . Generally a host computer will have a video display output such as an analog or digital video graphics array VGA output. Also the host computer typically includes a PS 2 port or ordinary serial port configured as a mouse port a keyboard port and may also include a universal serial bus USB port .

The video display output provides a signal that ordinarily is passed directly to a display screen or monitor where screen frames are displayed for a user present at the host computer . However in the embodiment shown the video display output provides a video signal to a video input of the management device . The management device then passes the video signal through a video output to the display screen where a normal video display of screen frames occurs. Additional details regarding the operation of the management device and its operations upon the video signal are described in U.S. patent application Ser. No. 10 247 876 entitled Systems and Methods for Establishing Interaction Between A Local computer and a Remote Computer which is assigned to the assignee of the instant patent application and expressly incorporated herein by reference.

User input devices may also be provided for the host computer including a local mouse and local keyboard . Conventionally the local mouse and local keyboard would be directly connected to the mouse port and keyboard port of the host computer . However for the embodiment shown the local mouse and local keyboard are connected to a mouse port and keyboard port respectively of the management device and provide mouse and keyboard data to the management device through these connections. The management device then passes the mouse data and keyboard data to the respective ports of the host computer .

In addition to providing the pass through of the video signal to the display screen the management device captures screen frame data from the video signal and transfers the screen frame data across the network to the remote computer . The remote computer has a network interface linking the remote computer to the network . The network interface used by the remote computer may be of various forms such as a dial up modem or an Ethernet connection to a LAN. Various protocols of data transfer may be utilized between the management device and the remote computer such as the TCP IP protocol ordinarily used via the Internet.

The remote computer implements an application such as a dedicated application or plug in executing within a general purpose browser window such as a web browser for receiving the screen frame data through the network interface and providing a display on the display screen . The display includes the screen frame data produced by the host computer that corresponds to the screen frame data transferred by the management device . Typically the remote computer includes a video adapter that has a video output connected to the display screen to provide the video signals.

To allow the user of the remote computer to fully interact with the host computer user interface devices such as a mouse and keyboard are connected to a mouse port and keyboard port respectively of the remote computer . The user manipulates the mouse and keyboard to interact with the screen frame shown on the display screen which may be formed wholly or in part by the screen frame data received over the network . When the user activity at the remote computer is entered with respect to the screen frame data received from the management device then the processing device of the remote computer transfers the user activity data over the network to the management device that subsequently passes it to the mouse port and or keyboard port .

Once the host computer receives the user activity data through the mouse port and or keyboard port the host computer then implements the user activity as if it had occurred directly through the local mouse or local keyboard . When implemented the user activity alters the screen frame to be displayed. Therefore the video signal output by the video connector to the management device provides the screen frames that show the change caused by the user activity at the remote computer such as the mouse pointer moving or typed letters appearing in an electronic document.

The management device transfers the screen frame data showing the user activity to the remote computer where it is then provided to the display screen . Thus the user activity initially performed at the remote computer is represented on the display screen immediately as it is being performed by the user and then once again after updating the video display of the host computer and transferring the updated screen frame back to the remote computer .

In addition to receiving user input the management device may also provide for additional management with the remote computer by providing a USB connection to a USB port of the host computer . The USB connection allows the management device to emulate USB devices for the host computer such as additional mass storage devices including devices that the host computer may use when booting up. For example the remote computer may provide a floppy CD ROM or hard disk drive that contains a boot up sequence to be used by the host computer . Upon a connection being established over the network between the management device and remote computer the host computer may boot from a media source of the remote computer with the boot up sequence provided through the USB port .

The USB connection from the management device may also allow a local keyboard and mouse and or a keyboard and mouse of the remote computer to be emulated for the host computer . For example the host computer may have only USB ports instead of PS 2 ports and the management device outputs mouse and keyboard signals to the host computer through the USB connection.

To establish the USB connectivity discussed above between the management device and the host computer a USB microcontroller may be included as a part of the management device . The USB microcontroller communicates with the processing device to emulate a USB node for the host computer . Thus a media source of the remote computer may be accessible by the host computer by the USB microcontroller emulating a USB media device for the host computer .

It should be appreciated that the redirection device may comprise a device located internal to the host computer or an external device connected to the external connections of the host computer as shown in . Such a device is described in U.S. patent application Ser. No. 10 247 876 entitled Systems and Methods for Establishing Interaction Between A Local computer and a Remote Computer which is assigned to the assignee of the instant patent application and expressly incorporated herein by reference. Another embodiment may comprise a management device that is integrated with the main system board of the host computer or contained on an adapter card located within the host computer . Such a device is described in U.S. patent application Ser. No. 10 016 484 entitled Systems and Methods for Capturing Screen Displays From A Host Computing System for Display At A Remote Terminal which is also assigned to the assignee of the instant patent application and expressly incorporated herein. It should be appreciated that the physical and logical connections between the various components are essentially the same regardless of whether the management device is located internal to or external from the host computer . It should also be appreciated that other configurations may be utilized.

According to other implementations the management device may also include a baseboard management controller BMC . In general a BMC is a microcontroller that monitors the health and operation of the host computer . In one implementation a BMC in the management device monitors health related aspects associated with the computer such as the temperature of components within the computer the speed of rotational components e.g. spindle motor CPU fan etc. within the computer the voltage across or applied to one or more components within the computer and the available or used capacity of memory devices within the computer . Other parameters may also be monitored.

In order to make the data gathered by the BMC available from the management device to programs executing on the computer and to other computer systems such as the remote computer the firmware of the management device is compatible with the Intelligent Platform Management Interface IPMI . IPMI is an industry standard for system monitoring and event recovery. The IPMI specification provides a common message based interface for accessing all of the manageable features in a compatible computer. IPMI includes a rich set of predefined commands for reading temperature voltage fan speed chassis intrusion and other parameters. System event logs hardware watchdogs and power control can also be accessed through IPMI. In this manner IPMI defines protocols for accessing the various parameters collected by a BMC through an operating system or through an external connection such as through a network or serial connection. Additional details regarding IPMI can be found in the IPMI Specification Version 2.0 which is publicly available from INTEL CORPORATION and which is incorporated herein by reference.

In order for an IPMI client application executing on the host computer to transfer IPMI messages to the management device one of several system interfaces must be utilized. For instance if an IPMI client application executing on the computer needs to transmit information to the management device regarding current CPU usage the IPMI client application must utilize a system interface to do so. The IPMI Specification however defines only three possible system interfaces a keyboard controller style KCS interface a system management interface chip SMIC interface and a block transfer BT interface. Each of these interfaces however requires that additional hardware be present on the management device or within the monitored computer system. This hardware adds to the cost of the computer system or management device. Additionally these interfaces can be very slow. In particular KCS interfaces are based on a legacy keyboard controller interface that is extremely slow. Unfortunately no other communications channels are supported by IPMI for use as a system interface. As will be described in greater detail below with respect to the embodiments provided herein allow the USB connection between the host computer and the management device to be utilized as a system interface for transferring IPMI command and response messages.

Referring now to additional details regarding the operation of the host computer the management device and the remote computer will be described. As described briefly above the host computer and the remote computer may comprise standard desktop or server computers. The host computer and the remote computer may include many of the convention components of such computer systems including a central processing unit CPU a volatile memory a mass storage device a display device input devices such as a mouse and keyboard and other conventional peripherals not shown in . The mass storage devices within the host computer and the remote computer and their associated computer readable media provide non volatile storage for the host computer and the remote computer respectively. Although the description of computer readable media contained herein refers to a mass storage device such as a hard disk or CD ROM drive it should be appreciated by those skilled in the art that computer readable media can be any available media that can be accessed by the host computer and the remote computer .

By way of example and not limitation computer readable media may comprise computer storage media and communication media. Computer storage media includes volatile and non volatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to RAM ROM EPROM EEPROM flash memory or other solid state memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by the host computer and the remote computer .

A number of program modules and data files may be stored in the mass storage devices and memory of the host computer and the remote computer including an operating system suitable for controlling the operation of a networked personal or server computer such as one of the family of WINDOWS operating systems or the MS DOS operating system from MICROSOFT CORPORATION of Redmond Wash. Other operating systems may also be utilized such as the LINUX operating system.

According to various embodiments the mass storage device of the remote computer may also be operative to store a management plug in . As described briefly above the management plug in may comprise a stand alone program or a plug in operative to execute within a standard web browser. The management plug in is operative to decompress the video data transmitted by the management device and to display the video output of the host computer on the remote computer . The displayed output may include screen displays generated by the application programs a basic input output system BIOS or the operating system of the host computer .

According to aspects the management plug in is also operative to receive user input commands such as mouse cursor movements mouse button selections and keyboard commands generated at the remote computer by a user and to transmit the commands to the management device . The management device then receives the user input commands from the plug in and provides the input commands to the host computer as if the input commands were physically generated by a user at the host computer . In this manner user input commands generated by a user physically located at the remote computer may be passed through to the host computer . The management plug in may also be operative to retrieve and display IPMI data from the management device .

The management device comprises a special purpose hardware device that includes an IPMI compatible firmware stored in a non volatile memory for performing the functionality described herein. The management device also includes many of the conventional components of a special purpose computer system. For instance the management device may include a CPU a volatile and non volatile memory and an input output controller for connection to the host computer and the network as described herein. For instance the management device may include a USB hub controller for connecting to the host computer via the USB communication link . It should be appreciated that other types of communication links may be utilized for enabling communication between the host computer and the management device such as PCI IEEE 1394 USB 2.0 and others.

As discussed above the management device may emulate a mass storage device such as the emulated CD ROM device on the USB connection . The emulated CD ROM device may be utilized to redirect the contents of a mass storage device attached to the remote computer to the host computer . The emulated CD ROM device may also be utilized for providing out of band communication of IPMI commands and responses between the host computer and the management device . The emulated CD ROM device appears to the host computer as a standard USB CD ROM. Accordingly the operating system executing on the host computer utilizes a standard CD ROM driver provided by the manufacturer of the operating system utilized on the host computer for communicating with the CD ROM device . No custom hardware drivers are necessary.

As will be discussed in greater detail below in order to issue an IPMI command to the management device the IPMI client application issues commands to an IPMI transport library . The IPMI transport library is an application programming interface API operative to encapsulate the IPMI command into a vendor defined SCSI command. The vendor defined SCSI command is then transmitted over the USB connection to the emulated CD ROM device . When these commands are received at the management device the IMPI firmware receives the commands and examines them to determine whether the commands are actually intended for the emulated CD ROM device such as read and write commands. If the commands are instead IPMI commands intended for the IPMI firmware the IPMI firmware extracts the IPMI command from the vendor specific SCSI command and performs the requested IPMI command. An IPMI response may be generated by the IPMI firmware by encapsulating the response into a vendor specific SCSI response and transmitting the response via the USB connection . In this manner the host computer can utilize the USB connection to communicate IPMI commands and responses with the management device even though USB is not supported by the IPMI standard as a system interface transport mechanism.

Referring now to aspects of a software architecture utilized on the host computer and the management device for performing the functionality described herein will be presented. As shown in the IPMI client applications A B issue IPMI commands to the IPMI transport library . As discussed briefly above the IPMI transport library receives the IPMI commands and encapsulates them into vendor specific SCSI commands. The IPMI transport layer then issues the vendor specific SCSI commands to a SCSI communications layer provided by the operating system of the host computer . As described above these commands are vendor defined SCSI commands that are transmitted over a USB transport mechanism. Other types of transport mechanisms may also be utilized to transmit the SCSI commands. In turn the SCSI communications layer communicates with a standard USB driver provided by the manufacturer of the operating system executing on the host computer . Because a standard driver is utilized no additional drivers need to be installed on the host computer to enable communication with the management device .

In an alternate embodiment the IPMI client applications A B may issue IPMI commands to a KCS pseudo library executing on the host . The KCS pseudo library is an API that receives KCS formatted commands from the IPMI client applications A B executing on the host intended for communication with the management device . The KCS pseudo library reformats the KCS formatted commands so that they are compatible with the IPMI transport library and passes the reformatted commands to the IPMI transport library for relaying to the management device via the USB connection . In this manner the IPMI client applications A B can utilize the KCS style interface and do not need to be reconfigured to utilize USB as a transport for IPMI messages.

The USB driver executing on the host computer communicates with a corresponding USB driver executing on the management device . The drivers and communicate over the USB physical layer. Commands received at the USB driver are passed in turn to a management device USB interface process . The management device USB interface process is responsible for extracting the contents of the vendor specific SCSI command and determining whether the contents are intended for communication with the emulated CD ROM device or for some other purpose such as IPMI communication. If an IPMI command is encapsulated in the vendor specific SCSI command the process extracts the IPMI command and passes the IPMI command to the firmware for execution. It should be appreciated that an IPMI response from the management device to an IPMI application A B executing on the host computer may be encapsulated into a vendor specific SCSI response by the process and take the reverse path through the USB node the USB driver the SCSI communications layer the IPMI transport library and possibly the KCS pseudo library .

Referring now to additional details regarding the connection between the host computer and the management device will be described. As discussed briefly above a communication link is established between the host computer and the management device for transmitting out of band commands. According to the illustrative embodiment described herein the communication link comprises a USB connection . However it should be appreciated that the host computer and the management device may communicate over other types of communication links conforming to different standards. For instance the host computer and the management device may be connected via a FIREWIRE connection or other type of high speed interface known to those skilled in the art.

As discussed above in order to communicate with the emulated mass storage device on the USB connection the host computer issues vendor specific SCSI commands . As known to those skilled in the art although the communication link between the host computer and the management device comprises a USB connection commands may be defined by a vendor of the management device and transmitted over the USB connection utilizing the SCSI protocol. When issued these commands are typically ignored by the host computer and passed directly through to the intended device on the USB connection . It should be appreciated however that although SCSI over USB commands are utilized in one embodiment other types of commands conforming to other types of communication standards may also be issued over the communication link between the host computer and the management device . As discussed herein the vendor specific SCSI commands include an IPMI command or response encapsulated therein.

Turning now to a flow diagram will be described illustrating one method for utilizing a USB transport as a system interface to transmit and receive IPMI commands and responses. It should be appreciated that the logical operations of the various embodiments described herein including those shown in are implemented 1 as a sequence of computer implemented acts or program modules running on a computer system and or 2 as interconnected machine logic circuits or circuit modules within the computer system. The implementation is a matter of choice dependant upon the performance requirements of the implementing computer system.

Accordingly the logical operations making up the embodiments described herein are referred to variously as operations structural devices acts or modules. It will be recognized by one skilled in the art that these operations structural devices acts and modules may be implemented in software in firmware in special purpose digital logic and any combination thereof without deviating from the spirit and scope of the present invention as recited within the claims attached hereto.

Referring now to the routines and will be described. The routine illustrates the processing performed by the host computer . The routine illustrates the processing performed by the management device . The routine begins at operation where an IPMI client application calls the IPMI transport library with an IPMI command. The routine then continues to operation where the IPMI transport library encapsulates the IPMI command into a vendor specific SCSI command. At operation the host computer issues the vendor specific SCSI command over the USB connection to the emulated CD ROM device. The routine then continues to operation where it ends.

The routine begins at operation where the vendor specific SCSI command is received at the management device . The routine then continues to operation where the management device determines whether the received command is intended for the emulated device. In particular the management device determines whether the command is a read or write command intended for accessing data on the emulated device or whether the command is a vendor specific command that includes an IPMI command intended for the IPMI firmware .

From operation the routine continues to operation where the management device determines whether the received command is actually intended for the emulated CD ROM device. If the command is intended for the CD ROM device the routine branches to operation where the received command is passed to the emulated CD ROM device. In this manner the host computer can access the contents of the mass storage device redirected from the remote computer to the management device in the manner described above. From operation the routine continues to operation .

If at operation the management device determines that the received command is not intended for the CD ROM device the routine continues to operation . At operation the management device determines whether the received command comprises a vendor specific command that includes an IPMI command. If so the routine branches to operation where the vendor specific SCSI command is parsed to extract the enclosed IPMI command. Once the IPMI command has been extracted the routine continues to operation where the IPMI command is transmitted to the IPMI firmware . The IPMI command is then executed by the IMPI firmware . The routine then continues from operation to operation where it ends.

If at operation the management device determines that the received command is not a vendor specific SCSI command with an enclosed IPMI command the routine continues to operation . At operation any other type of command that is enclosed in the vendor specific SCSI command is executed by the management device . For instance other types of commands may be transmitted in a vendor specific SCSI command for changing the configuration settings of the management device . Once the commands have been executed the routine continues to operation where it ends.

Based on the foregoing it should be appreciated that the various embodiments of the invention provide methods and systems for utilizing a USB transport as a system interface to transmit and receive IPMI commands and responses. The above specification examples and data provide a complete description of the manufacture and use of the composition of the invention. Since many embodiments of the invention can be made without departing from the spirit and scope of the invention the invention resides in the claims hereinafter appended.

