---

title: Programming environment and metadata management for programmable multimedia controller
abstract: A multimedia controller, based on a general purpose computer, which is capable of interfacing with, controlling or managing a wide variety of audio, video, telecommunications, data communications or other devices. A configuration tool, based on a graphical user interface, provides a simple, schematic way to configure even highly complex systems having numerous components or devices which are to be interconnected with or interfaced to the multimedia controller. A user interface programming tool enables a user to customize the appearance and functionality of a graphical user interface to the multimedia controller. A metadata manager automatically collects metadata that is available within the multimedia controller, automatically detects the presence of new media and collects metadata from it, and may also access web resources to locate additional pertinent metadata.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07930644&OS=07930644&RS=07930644
owner: Savant Systems, LLC
number: 07930644
owner_city: Osterville
owner_country: US
publication_date: 20060913
---
This application is related to co pending application entitled System and Method for a Programmable Multimedia Controller filed Dec. 20 2005 Ser. No. 11 314 664 and co pending application entitled Programmable Multimedia Controller With Programmable Services filed Dec. 20 2005 Ser. No. 11 314 112 both of which are assigned to a common assignee and both of which are hereby incorporated by reference in their entireties.

The present invention relates generally to the fields of multimedia and communications and more specifically to a programmable multimedia controller for home commercial professional audio or video broadcast or film studio security automation or other use which is capable of interfacing with controlling and managing a wide variety of audio video telecommunications data communications and other devices.

Commercial offerings of consumer electronic devices have expanded dramatically in response to the falling cost of electronic hardware and introduction of new media. For example within only a few years compact disk CD technology largely displaced vinyl records and magnetic tapes as the music recording medium of choice but was in turn displaced by MP3 technology. Similarly digital versatile disk DVD technology largely displaced videotape as the video recording medium of choice while digital cameras have effectively replaced film cameras. The advent of new technologies and media and the corresponding consumer demand for products based on the latest advances drives manufacturers to rapidly introduce new products. As a result an overwhelming number of product types and models permeate the market.

One long standing problem which persists for many consumers is the complexity involved with interconnecting various electronic devices which are typically sold individually and not as parts of an integrated system. For example a consumer may acquire an audio receiver cable TV box television DVD player and surround sound system made by different manufacturers. The basic problem of interconnecting a group of components by a series of cables is challenging for many users let alone sufficiently understanding the various modes of operations and features which if properly used will allow the components to work best together and produce the most enjoyable entertainment experiences.

Another long standing problem with most if not all previous approaches to integrating disparate components is that some type of central controller is used which operates on software written in a high level computer language. The use of a high level computer language presents several difficulties. First it is all but certain that the manufacturer will not make the source code available to the user thus effectively preventing a user who wished to customize a system from doing so. Second even if the source code is made available the overwhelming majority of users do not have the technical expertise time or inclination to write or modify source code. Third the introduction of new devices by manufacturers almost certainly necessitate that the source code be modified in order to make the central controller compatible with such devices.

Yet another long standing problem is an absence of any widely adopted industry standard regarding control interfaces for consumer electronics devices. Manufacturers have incorporated varying communication protocols most of which are proprietary in nature do not conform to any standard and are implemented with extremely detailed source code. This absence of standards greatly complicates the problem of how to integrate and centrally control a wide variety of consumer electronics devices such that they work together and are manageable by an average user who does not possess substantial technical expertise.

In brief summary the present invention provides a multimedia controller based on a general purpose computer which is capable of interfacing with controlling or managing a wide variety of audio video telecommunications data communications or other devices. In accordance with one aspect of the present invention a configuration tool based on a graphical user interface provides a simple schematic way to configure even highly complex systems having numerous components or devices which are to be interconnected with or interfaced to the multimedia controller.

The configuration tool has access to a library of component profiles. A component profile typically describes at least some of the physical characteristics of the component the configuration of the component the set of commands that the component recognizes as well as the functions that the component is capable of performing. In one embodiment the component library may be updated through on line access to a designated website or on line service.

Using the configuration tool a user dealer installer or other person selects typically be dragging and dropping components of interest from the component library. In response a photo or other image of each component and its connectors including the connector names present on the physical component is displayed. As multiple components are selected the configuration tool uses color coding to graphically and visually indicate possible connections among the components. For example an audio output connector of one component may be highlighted with the same color as a compatible audio input connector of another component. The configuration tool may also be used to select a connector of interest and display information regarding permissible and impermissible connections for that connector.

Working interactively with the displayed components a user graphically draws desired connections between components. Once the desired connections are specified all component and connection information is supplied to a configuration compiler. The configuration compiler produces a list of services that the multimedia controller is capable of providing based on the specified components and configuration. A user may select desired services as well as customize various services to suit individual preferences.

The configuration tool may also generate an output report which contains detailed wiring or installation instructions for an installer a component summary a bill of materials for ordering and billing purposes configuration instructions information regarding third party equipment such as input assignment settings for receivers user notes printed labels for cabling and other information.

In accordance with another aspect of the invention the configuration tool and graphical user interface may be used to configure individual components or devices which interface with the programmable multimedia controller including a touchscreen remote control.

In accordance with another aspect of the invention the multimedia controller includes a metadata management facility which is capable of working with diverse media types including CD MP3 among others. In one embodiment the metadata management facility automatically collects metadata that is available within the multimedia controller automatically detects the presence of new media and collects metadata from it and may also access web resources to locate additional pertinent metadata. By making use of a file system associated with the general purpose computer that is part of the multimedia controller the metadata manager facility stores metadata in a structure which is well suited for queries. In addition the metadata manager facility makes metadata available to all types of user remote controllers which may be interfaced with the multimedia controller.

In accordance with yet another aspect of the invention a graphical programming environment is provided which enables a user to customize the appearance and functionality of a user interface to the multimedia controller. The graphical programming environment includes a library of radio buttons and other graphical controls which are accessible through an application programming interface API . Through the API a user may add or remove a radio button or control from the user interface as well as modify the appearance functionality or other attributes of the button or control.

In the illustrative embodiment the programmable multimedia controller is connected to a wide range of audio video components for example a compact disk CD player a digital versatile disc DVD player an audio video receiver a television a personal media player speakers a microphone and or a video camera . The programmable multimedia controller may also be connected to telephony devices such as a telephone network and telephone handsets . The telephone network may be a publicly switched telephone network PSTN an Integrated Services Digital Network ISDN or other communications network.

In addition the programmable multimedia controller may intercommunicate with variety of light and or home automation systems . These devices may operate via the X10 protocol developed by Pico Electronics the INSTEON protocol developed by SmartHome Inc the CEBus standard managed by the CEBus Industry Council or another well known home automation or control protocol. Similarly the controller may be connected to motor and or relay operated devices that may include for example a heating ventilation and air conditioning system HVAC system an irrigation system an automatic shade or blind system an electronic door lock or other types of devices.

A computer network such as the Internet is connected to the multimedia controller. In addition a personal computer PC video game systems home recording equipment or other devices may also be connected. Further one or more remote control units may be provided to manage the controller s functionality and or to control devices connected to the controller. Such remote control units may be interconnected to the controller via a wired network connection an infra red link a radio frequency link a Bluetooth link a ZigBee link or another appropriate data connection. Examples of such remote control units include a touchscreen remote control a simple remote control which may be electromechanical and an MP3 player or other device .

A mid plane interconnects the switches and other devices to a variety of input and output modules such as for example Digital Video Input Modules with HDMI 600 Video Output Modules with HDMI 1000 Digital Audio Input Modules 400 and Digital Audio Output Modules 900. The mid plane is further coupled to an Ethernet switch that permits switching of 10BaseT 100BaseT or Gigabyte Ethernet signals. The Ethernet switch interconnects Ethernet ports and a processing subsystem to the microcontroller . In one embodiment the processing subsystem includes a plurality of small form factor general purpose personal computers that provide redundant operation and or load balancing. In some embodiments the processing subsystem may include one or more storage devices external to the personal computers to provide expanded storage capacity for example to store digital media.

Also a number of Universal Serial Bus USB ports are interconnected to a USB hub for interconnection to the processing subsystem . A memory card interface may also be connected to the USB hub . The interface accepts one or more well known memory card formats for example CompactFlash cards Memory Stick cards Secure Digital SD cards or other formats. A USB switch is employed to switch USB links among the multiple processing components that may be present. In a similar manner a number of IEEE 1394 FireWire ports are interconnected to an IEEE 1394 hub and to an IEEE 1394 switch .

The microcontroller is further connected to a Serial Peripheral Interface SPI and Inter Integrated Circuit IC distribution circuit which provides a serial communication interface to relatively low data transfer rate devices. The SPI IC controller is connected to the mid plane connector and thereby provides control commands from the microcontroller to the modules and other devices in the programmable multimedia controller . Further connections from SPI IC controller are provided to devices such as a fan controller a temperature sensor and a power manager circuit which manage the thermal characteristics of the system and prevent overheating.

The microcontroller is also connected to Infra Red IR interface an RS232 interface and an RF interface that permit interconnection with external devices. Such interaction permits programmable multimedia controller to control external devices. In addition the interfaces may receive control signals that control the operation of the programmable multimedia controller itself. It is expressly contemplated that various other interfaces including WI FI Bluetooth ZigBee and other wired and wireless interfaces may be used with the multimedia controller .

In addition an Auxiliary Audio Video Port is provided for interconnecting one or more video game systems camcorders computers karaoke machines or other devices. A telephone interface is provided for connecting to the PSTN or a private network and to telephone handsets. Further a device control interface is provided to communicate with lighting home automation and motor and or relay operated devices. As discussed in more detail below an expansion port is provided for linking several programmable multimedia controllers together to form an expanded system. Finally a front panel display permits presentation of status configuration and or other information to a user. In one embodiment the from panel can display video data originating from any input source connected to the system such that one may preview video content on the display. In another embodiment the front panel display includes a touchscreen and a user may enter control selections by selecting icons on the screen.

System control plane includes the functionalities of a system manager a system launcher a redundancy manager a web server a touchscreen PDA server a remote system access manager and system logs . UI plane shares a UI server with service plane . Service plane includes the functionalities of a service controller which itself includes an automator runtime . Service plane also includes the functionalities of a Mac display controller an on screen display OSD application third party applications Mac applications and an audio video component controller . Through automator runtime service controller is capable of controlling Mac applications including iTunes iChat iPhoto and iDVD that support Applescript which enables application to application control. Similarly through automator runtime service controller is capable of controlling other third party applications which support AppleScript.

Media plane includes the functionality of Mac input output I O in all supported formats i.e. DVI Ethernet FireWire USB etc. . Component control plane includes the functionality of controlling audio video components .

Configuration setup plane includes the functionalities of a user configuration tool a configuration compiler a user services control application a workflow generator and a service control workflow browser search engine customization application . Configuration setup plane also passes several types of information to UI plane and service plane including system configuration automator workflow services definitions component profiles and Mac settings . As described in the above referenced co pending application Ser. No. 11 314 112 in a preferred embodiment XML files are used to represent system configuration automator workflow services definitions and component profiles .

Control API access has responsibility for an API through which multimedia controller may be controlled by a user who may choose to use a web enabled device an RF remote control type device a touchscreen a PDA or cell phone. UI plane has functional responsibility for a user interface to multimedia controller . Service plane has functional responsibility for implementing services as described above. Automator runtime is responsible for receiving requests or commands from users and mapping them to a workflow for a particular service.

Media plane has functional responsibility for Mac I O as well as the other internal and external communications interfaces supported by multimedia controller . Component control plane has functional responsibility for controlling the operations of audio or video components which may be interfaced with multimedia controller . Configuration setup plane has functional responsibility for enabling users to configure multimedia controller to select create or modify services and to select create or modify component profiles.

To begin to create a configuration a user clicks on the on the show palette button . As shown in this action causes a palette of icons representing components in a component library to appear. In this example several models of flat panel televisions are available in the component library as are a digital surround receiver an HDMI switcher and numerous other components. A user may simply drag and drop icons from component library to a desired zone within zone map . Thus through a series of such drags and drops a user may specify all of the components which he or she has or wishes to install in a specified zone. To expedite the process a user may access a menu to display only a particular type of component e.g. receivers DVD players speakers cable TV converters etc. or a menu to display only components made by a particular manufacturer.

After the user has dragged and dropped components into the zone map those components are dragged and dropped from the zone map into workspace . As each component dropped into workspace a box appears as shown in and . For example box represents a programmable multimedia controller within graphical programming environment . Similarly box represents a flat panel television. As shown each box contains a photograph or other image of the physical component to which it corresponds which provides a convenient visual reference for the user. In addition each box contains text and graphics which identify all inputs outputs and control ports present on the corresponding component. The text also identifies signal type connector type and other pertinent information about each input output and control port. The graphics include color coding which matches the colors that appear on the physical component.

Another aid which is provided to assist the user in configuration is a component inspector tool. As shown in and a user may select a component of interest in zone map and then click on a button labeled Show Inspector denoted by reference number . In response a screen as shown in will appear. A menu permits a user to examine detailed information on inputs outputs control ports and other aspects of the selected component. Through screen a user may also configure i.e. for components that require configuration such as programmable multimedia controllers modular receivers having programmable input output slots and the like or customize the selected component.

Using a mouse a user draws connections between the boxes components appearing in workspace . These connections appear as lines such as line which represents a connection between an output of an amplifier and a set of surround speakers . Another way a user may make connections is to right click on a connector displayed within a box and cause a popup menu to open which displays information on what types of connectors are compatible directly or by way of conversion as well as those which are incompatible and then select the desired connection from that menu.

A user may click on a Make Report button denoted by reference number . This action causes the underlying software to generate an output report which may contain detailed wiring instructions for the specified configuration a summary of the components in the configuration special instructions user entered notes and the like. The output report may serve a bill of materials wiring checklist and installation instruction sheet.

Once a user has completed necessary connections he or she clicks on a Compile button . This action causes the underlying software to automatically analyze the specified configuration to determine which services the configuration is capable of performing realized services and to identify other services that might be available if the configuration is modified. For a more detailed description regarding services as well as resources and requests as used herein reference should be made to co pending application Ser. No. 11 314 112.

As shown in a list of realized services is displayed to the user. When selected with a mouse a description of a realized service appears in a panel . A user may disable any realized service by use of a checkbox . A panel displays all of the resources that are associated with the selected service. By clicking on a Show Unrealized button a user may view unrealized services which are services that might be provided if the specified configuration is modified. Viewing unrealized services is useful as a tool for debugging a configuration as well as optimizing component usage and user experiences for a given set of components.

Once a user is satisfied with the configuration and customization he or she clicks on a Generate button . This action causes the underlying software to create the actual system configuration for the programmable multimedia controller and to display a screen like that shown in . As shown in the requests associated with the realized service TV Service are displayed in a panel . Within panel a user may customize a realized service by adding or deleting requests.

In addition to the uses described above graphical programming environment and configuration tool may be used to configure individual components or devices which interface with programmable multimedia controller . As shown in for example a touchscreen remote control which is sold by the assignee of the present invention may be included in component library . Once dragged and dropped into zonemap configuration tool may be used to configure options specific to such a touchscreen including user interface appearance i.e. theme and skin and user profiles. Detailed information regarding user profiles may be found in co pending application Ser. No. 11 314 112.

In accordance with another aspect of the present invention programmable multimedia controller may include a metadata management facility for collecting organizing and distributing metadata within controller as well as to user remote controls which are interfaced to controller . is a functional block diagram of a metadata management facility . A metadata manager is responsible for several functions including responding to requests for metadata received from a controller interface receiving new metadata from a data manager or content source manager and passing new metadata to a storage manager .

A data watcher is responsible for monitoring all possible media sources for the introduction of new media. For example data watcher detects the loading of a new CD into a CD player which is connected to the programmable multimedia controller the connection of an MP3 player to controller the insertion of a thumb drive into controller and the like.

When data watcher detects the presence of new media it generates a notification to data manager . Data manager responds to such a notification by creating a media object which initially contains information regarding the file type file path if applicable and the physical source of the new media. Data manager then forwards the media object to a data interpreter which corresponds to the type of media detected e.g. MP3 file . Data interpreter works to extract as much metadata as possible from the new media source. For example in the case of an MP3 file data interpreter may use the collect as much metadata as possible from the ID3 tag which is part of the file. All extracted metadata is encapsulated in an object and returned to data manager which forwards it to metadata manager .

In many cases the new media source that was detected by data watcher will not contain all metadata that exists for a particular song or album. In an effort to capture the missing metadata metadata manager may issue a request to content source manager which in turn may access one or more content sources which are external to programmable multimedia controller . Content source may represent a website or other remote information source which can be accessed over the Internet or other network. Additional metadata which content source manager captures is returned to metadata manager and eventually passed to storage manager for storage.

Storage manager has overall responsibility for storing retrieving updating or removing metadata in response to queries or messages received from metadata manager . In one embodiment in which programmable multimedia controller includes a Mac computer from Apple Computer Inc. as described in detail in co pending application Ser. No. 11 314 664 storage manager may be implemented as a database containing stub files. Such files may be indexed and queried very efficiently using Spotlight a metadata search engine included in Mac OS X.

Controller interface is responsible for communications between metadata manager and user controllers such as touchscreen remote control . Controller interface is also responsible for ensuring that all user controllers have access to the most current metadata. This may be accomplished by using rsync a synchronization function which is party of Mac OS X.

In accordance with another aspect of the present invention a graphical user interface for use with programmable multimedia controller is based on a software architecture which enables easy modification of the appearance functionality or other attributes of the interface. shows a software architecture for a graphical user interface. In a preferred embodiment in which a Mac computer is incorporated within programmable multimedia controller Adobe Photoshop software which is included in Mac OS X is used to create files . A Photoshop file is preferably created for each element or screen of a graphical user interface like the screen shown in or for some other convenient unit up to and including an entire user interface.

Each Photoshop file contains information preferably organized in groups and layers which define the appearance functionality and other attributes of each element of a graphical user interface. The information in a file may include notes labels text to speech commands system control commands graphics corresponding to different states of a radio button or other user control e.g. enabled pressed mouseover display text font size color sound effect and button control type among others.

Files which are typically stored on non volatile media such as a hard drive are read by Quartz Composer another piece of software which is also included within Mac OS X and a run time environment that loads Quartz Composer compositions. Quartz Composer functions to parse Photoshop files thereby extracting all of the embedded groups and layers for the whole file as well as for each radio button or other control.

Quartz Composer patches access the extracted information and using a Quartz Composer function called output ports pass appropriate commands and information from a patch to control API access and user interface UI server . This arrangement provides a powerful programming capability because it permits an author of a Quartz Composer composition direct access to multiple layers of graphics as well as any other information stored in a file . Stated another way by simply altering the information contained in a file an author using widely available and familiar software may easily and rapidly configure modify or customize any aspect of the graphical user interface represented by that file.

In response to commands and information received from patches via output ports control API access and UI server issue appropriate commands and information to service controller . Service controller in turn issues appropriate commands to external components to effect whatever action a user has indicated through the graphical user interface.

An output from one of patches is passed to Say Text patch which performs a text to speech function. Similarly an output from another patch is passed to Send Service Request to SVC patch which is responsible for sending appropriate commands and data to service controller . The output of a third one of patches is passed to Image With String patch which converts text extracted from file to an image for display. The output of the remaining patch is passed to a Display patch which is responsible for displaying a radio button.

The foregoing description has been directed to particular embodiments of this disclosure. It will be apparent however that other variations and modifications may be made to the described embodiments with the attainment of some or all of their advantages. Additionally the procedures or processes described above may be implemented in hardware software embodied as a computer readable medium having program instructions firmware or a combination thereof. Therefore it is the object of the appended claims to cover all such variations and modifications as come within the true spirit and scope of the invention.

