---

title: Systems and methods for remotely managing an application-specific display device
abstract: A communications device comprising an embedded application-specific device driver for an application-specific display and an embedded remote access application that execute on a processor. The embedded application-specific device driver is configured to communicate data with a communication (COM) port via a serial port and to provide a video signal to the application-specific display. The embedded remote access application is configured to remotely access the application-specific display and to communicate display data via a network.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07650444&OS=07650444&RS=07650444
owner: Digi International, Inc.
number: 07650444
owner_city: Minnetonka
owner_country: US
publication_date: 20060928
---
This document relates generally to devices and systems that communicate via a network and in particular to communication among applications over a network.

An application specific display device is a device that serves a specific purpose and includes a display screen or monitor as the primary user interface. An example of an application specific display device is a fast food restaurant kitchen display terminal. In a fast food restaurant food orders taken at the point of sale register are typically displayed on text terminals residing in the kitchen. This is in contrast to general purpose personal computers that run general operating systems such as a Windows or Linux operating system for example.

This document describes devices systems and methods that allow applications to communicate over a network. One device example includes an embedded application specific device driver for an application specific display and an embedded remote access application that execute on a processor. The embedded application specific device driver is configured to communicate data with a communication COM port via a serial port and to provide a video signal to the application specific display. The embedded remote access application is configured to remotely access the application specific display and to communicate display data via a network.

One method example includes embedding an application specific device driver for an application specific display in a communications device where the application specific device driver communicates via a serial port and embedding a remote access application in the communications device to provide access to the application specific display over a network.

This summary is intended to provide an overview of the subject matter of the present patent application. It is not intended to provide an exclusive or exhaustive explanation of the invention. The detailed description is included to provide further information about the subject matter of the present patent application.

In the following detailed description reference is made to the accompanying drawings which form a part hereof and in which is shown by way of illustration specific embodiments in which the invention may be practiced. It is to be understood that other embodiments may be utilized and structural changes may be made without departing from the scope of the present invention.

Device servers allow a host computer to communicate with devices. An example is shown in . Typically the devices are connected by serial communication lines to one or more device servers and an application running on a host computer communicates with the serial devices over the network using the device server . More than one host computer can communicate over the network with the same device connected to the device server .

Devices that communicate serially can be network enabled by connecting them to a device server and installing a serial driver on a host computer to provide serial port redirection. shows a block diagram of portions of a client server system that uses serial port redirection. The system includes an end device coupled to a device server via a serial communication link through serial ports . Examples of an end device include without limitation a printer or an application specific display device. The device server and the end device include serial ports and serial port drivers to control the communications over serial ports . The system also includes a host computer . A host application that executes on the host computer communicates with an end device application by communicating with the device server over a network . To provide serial port redirection a communication COM port client is included in the host computer and a COM port server is included in the device server . Serial port data from the host application is sent via the network to the device server . From there it is routed directly to the serial port which is connected to the end device . COM port redirection makes the serial port of the end device appear to the host application to be local to the host computer .

The communications device includes a video port such as a VGA SVGA or LCD video port to couple to a display . In one embodiment the embedded application is an ACSII terminal emulator. In another embodiment the embedded application is a vt220 terminal emulator. A video signal is sent from the communications device to the display . Examples of an application specific display include without limitation a kitchen display a point of sale display a public information display and a digital advertising display.

The embedded application communicates data with a COM port via a serial port and provides a video signal to the application specific display . A host application program and the embedded application communicate over the network . COM port redirection is established in the system by a COM port client in the host computer and a COM port server in the communications device . A COM port client typically maps the network connection directly to a physical serial port on a device server and is tightly coupled to the serial port.

The communications device includes an embedded remote access application . The remote access application executes on the processor and provides remote access by the host computer to the application specific display by communicating display data via the network . The remote access application and the COM port server are communicatively coupled to the network by the network interface . In some embodiments the embedded remote access application includes an embedded virtual network computing VNC server application to communicate over the network to a VNC client that executes on the host computer . In some embodiments the embedded remote access application includes an embedded remote desktop protocol RDP server application to communicate over the network to an RDP client that executes on the host computer .

Because it is usually desirable to use the existing communication protocol for the application specific display device and avoid having to create a new communication protocol for the system the embedded application communicates via a serial port. The serial port is provided by a virtual serial port application included in the communications device . The virtual serial port application translates data communicated between the COM port server and the embedded application . This translation makes it appear that the COM port server and the embedded application were connected by a serial communication link.

In some embodiments the virtual serial port application includes a serial port driver and a memory buffer. The serial port driver is a pseudo device driver in communication with the embedded application and implements the standard serial device interfaces e.g. open read write close etc. . The embedded application interacts with the serial port driver as if it was a standard serial port. However instead of reading from or writing to a physical device the serial port driver sends and receives data through a virtual endpoint and the memory buffer then to the COM port server and over the network . Thus the embedded application uses the same interface to communicate over a physical serial port or a virtual serial port. The COM port client communicates data to the embedded application over the network . Serial port data from the host application is sent via the network to the COM port server . From there it is routed directly to the memory buffer of the virtual serial port application which includes the serial port driver in communication with the embedded application .

It should be noted that the system is not a client server system. In a client server system as much processing as possible is offloaded from a device server onto an end device. Here the communications device includes some characteristics of a client server and some characteristics of the application specific display device.

The host computer includes a COM port client that together with the COM port server of the communications device implements COM port redirection. With COM port redirection it appears to a host application that a serial device connected to the COM port server is local to the host computer . Because the communications device includes a virtual serial port application it appears to the host application that an end device is connected locally to the host computer. However the end device is instead replaced with an embedded application .

The COM port client includes a driver to communicate with the COM port server via the network . In some embodiments the driver includes an application programming interface API by which the host application program is granted full control of a remote COM port connection including hardware and software flow control. In some embodiments the network connection between the host computer and the communications device is a bytestream connection and the network uses a TCP IP protocol running on top of an Ethernet protocol. In some embodiments the host computer includes a daemon to execute on the host computer . The daemon uses a STREAMS interface to establish a bidirectional bytestream connection between the driver and the communications device . An approach for providing communication port redirection is described in U.S. Pat. No. 6 047 319 entitled Network Terminal Server with Full API Implementation filed Jul. 17 1996 which is incorporated herein by reference.

In some embodiments the communications device includes a plurality of embedded applications that each emulates an end device. In one such embodiment the host application program communicates with the embedded applications over the network using a plurality of COM port servers and virtual serial port applications . The driver of the COM port client maps a plurality of COM ports servers of the communications device to a plurality of virtual serial port applications . In another embodiment the system includes a plurality of communications devices and the COM port client maps a plurality of COM port servers of a plurality of communications devices to a plurality of virtual serial port applications .

There does not have to be a one to one correspondence between the number of embedded applications that run on the communications device and the number of virtual serial port applications . In some embodiments the communications device includes at least one embedded application that communicates over a plurality of serial ports. A plurality of virtual serial port applications are provided to translate data communicated between a plurality of COM port servers and the embedded application . The host application program communicates with the embedded application via a network and the plurality of virtual serial port applications .

The communications device replaces the VT220 terminal and any device server. The communications device includes two physical serial ports com 0 and com 1 and one virtual serial port vcom 0 and device driver interface DDI . The communications device also includes a COM port server in communication with two serial endpoints and a virtual endpoint . A terminal emulator embedded application reads commands from a serial port processes the commands and updates the attached display . In this case the terminal emulator embedded application is reading from the virtual serial port .

The host computer includes an operating system OS and a host application . The host application sends VT220 display commands to a terminal via a serial port. The host computer includes a COM port client with three virtual COM ports configured for a remote device. The first two virtual COM ports COM and COM represent the two physical serial ports on the communications device . The third virtual COM port COM represents the virtual serial port on the communications device . The host application is configured to send VT220 display commands to the virtual COM port . The flow of display commands from the host application to the terminal emulator embedded application on the communications device is indicated by the arrows and dashed lines in .

The host application sends VT220 commands to the virtual COM port as serial data. The COM port client sends the serial data to the COM port server running on the communications device over the network and the Ethernet connections . The COM port server routes the serial data to the virtual endpoint . The virtual endpoint puts the serial data in a shared memory buffer and then signals to the virtual serial port driver a serial port mirror driver that data is available.

The terminal emulator embedded application continually performs reads on the virtual serial port . If data is available in the shared memory buffer the virtual serial port driver removes it from the shared memory buffer and sends it to the terminal emulator embedded application . The terminal emulator embedded application processes the commands in the data and displays the orders on the attached display . It then repeats the process by reading more commands. Similarly data can flow the other way from the terminal emulator embedded application on the communications device to the host application .

Because the serial port driver is a pseudo driver the communications device is flexible in regards to communication protocols. The serial communication protocol used by the COM port server can be different from the serial communication protocol used by the embedded application . In one embodiment the serial port driver and the memory buffer provide a mapping of the protocol use by the embedded application to the protocol of the COM port server . Typical serial interface settings such as baud rates flow control a number of stop bits and the like do not need to be configured between the host computer and the other communications device . This allows communication between devices and systems that otherwise could not communicate because of serial interface incompatibility.

The communications device includes an embedded remote access application to provide remote access by the host computer to the application specific display by communicating display data via the network . The remote access application and the COM port server are communicatively coupled to the network by the Ethernet interface .

At a remote access application is embedded in the communications device to provide access to the application specific display over the network. In some embodiments the network implements an internet protocol and the embedded remote access application and thereby the display is accessed on the network using an internet protocol IP address. Display data is relayed over the network to a computer where a service person is able to monitor the application specific display remotely. In some embodiments the remote access application includes a virtual network computing VNC server application to communicate over the network with a VNC client. In some embodiments the remote access application includes a remote desktop protocol RDP server application to communicate over the network with an RDP client.

According to some embodiments the method includes establishing communication COM port redirection software. To establish the redirection software a COM port server is initiated on the communications device and a COM port client on a host computer is communicatively coupled to the communications device via the network. At least one COM port connection to the COM port server is emulated in the communications device. In some embodiments emulating a COM port connection includes storing data received from the host computer in a memory buffer. At least one serial port driver is also emulated on the communications device. In some embodiments emulating a serial port driver includes taking data from the memory buffer and translating the data into a predefined format. In this way the embedded application specific device driver is able to communicate with the COM port client via the emulated serial port driver as if it was a physical serial port.

The communications device may include one or more actual physical serial ports in addition to the emulated virtual serial port. According to some embodiments the method includes using the embedded remote access application to remotely access a device coupled to the physical serial port over the network. Data communicated on the physical serial port is monitored remotely by communicating the data to a computer over the network. The communications device may include one or more universal serial bus USB ports. In some embodiments the method includes using the embedded remote access application to remotely access a device coupled to a USB port. Data communicated on the USB port is communicated to a monitoring computer over the network.

The accompanying drawings that form a part hereof show by way of illustration and not of limitation specific embodiments in which the subject matter may be practiced. The embodiments illustrated are described in sufficient detail to enable those skilled in the art to practice the teachings disclosed herein. Other embodiments may be utilized and derived therefrom such that structural and logical substitutions and changes may be made without departing from the scope of this disclosure. This Detailed Description therefore is not to be taken in a limiting sense and the scope of various embodiments is defined only by the appended claims along with the full range of equivalents to which such claims are entitled.

Such embodiments of the inventive subject matter may be referred to herein individually and or collectively by the term invention merely for convenience and without intending to voluntarily limit the scope of this application to any single invention or inventive concept if more than one is in fact disclosed. Thus although specific embodiments have been illustrated and described herein it should be appreciated that any arrangement calculated to achieve the same purpose may be substituted for the specific embodiments shown. This disclosure is intended to cover any and all adaptations or variations or combinations of various embodiments. Combinations of the above embodiments and other embodiments not specifically described herein will be apparent to those of skill in the art upon reviewing the above description.

The Abstract of the Disclosure is provided to comply with 37 C.F.R. 1.72 b requiring an abstract that will allow the reader to quickly ascertain the nature of the technical disclosure. It is submitted with the understanding that it will not be used to interpret or limit the scope or meaning of the claims. In addition in the foregoing Detailed Description it can be seen that various features are grouped together in a single embodiment for the purpose of streamlining the disclosure. This method of disclosure is not to be interpreted as reflecting an intention that the claimed embodiments require more features than are expressly recited in each claim. Rather as the following claims reflect inventive subject matter lies in less than all features of a single disclosed embodiment. Thus the following claims are hereby incorporated into the Detailed Description with each claim standing on its own.

