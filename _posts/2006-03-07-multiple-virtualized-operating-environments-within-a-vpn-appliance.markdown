---

title: Multiple virtualized operating environments within a VPN appliance
abstract: A secure socket layer virtual private network (SSL VPN) network appliance includes a set of virtual systems having respective context information. Each of the virtual systems represents a VPN for a different subscriber network. The network appliance includes a network interface to receive a first network communication associated with a first one of the virtual systems. In response to the network communication, the SSL VPN network appliance sets a context identifier that identifies the first one of the virtual systems. The network appliance further comprises a set of VPN software processes executing on the network appliance to process the first network communication, wherein the set of VPN software processes generate data access requests. A configuration access application programming interface (API) dynamically directs the data access requests from the VPN software processes to the first one of the virtual systems based on the context identifier.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07961722&OS=07961722&RS=07961722
owner: Juniper Networks, Inc.
number: 07961722
owner_city: Sunnyvale
owner_country: US
publication_date: 20060307
---
A service provider provides one or more services to subscribers over a computer network. Each of the subscribers may be a corporation or enterprise having a plurality of users. In some instances a service provider may provide a virtual private network VPN or firewall service to its subscribers thereby allowing the subscribers to avoid installing and maintaining internal VPN devices. For example the service provider may provide a set of secure socket layer SSL VPN appliances that allow each subscriber to provide secure remote access to employees and customers. The SSL VPN appliances hosted by the service provider provide a scalable platform that allows even large enterprises to offer secure extranet intranet and LAN access.

In such an environment the service provider may utilize a separate network device for each subscriber. Each network device provides a separate operating environment for delivery of a different customer specific network service such as SSL VPN services. Another approach may be to provide multiple operating systems on a single device where each operating system provides a fully independent operating environment for providing a service to a different subscriber. These approaches however suffer from scalability and complexity.

In general embodiments of the invention provide multiple logically separated subscriber specific virtual systems using by a single virtual private network VPN appliance without requiring multiple instances of an operating environment. For example a VPN network device embodying this invention supports multiple data driven virtual systems and executes a set of generalized processes capable of providing VPN services to any of the virtual systems.

The network appliance maintains a virtual system context identifier to logically direct the processes to one of the different virtual systems at a time. For example the VPN appliance includes a virtual context application programming interface API that provide access to hierarchical customer specific VPN context information. The API transparently redirects access requests to the appropriate virtual system context information based on the current virtual system context identifier. The virtual system context identifier is transparently passed within any inter process communications between the generalized processes and is recorded within timers and other resources of the appliance. In this manner the generalized set of VPN processes operate according to different virtual systems while preserving logical independence.

In one embodiment a method comprises maintaining with a network security device a set of virtual systems having respective context information wherein each of the virtual systems provides a virtual private network VPN to a different subscriber network. The method further comprises receiving with the network device a network communication associated with a first one of the virtual systems and setting in response to the network communication a context identifier identifying the first one of the virtual systems. The method further comprises processing the network communication with a set of VPN software processes wherein the set of VPN software processes generate data access requests and dynamically directing data access requests from the VPN software processes to the first one of the virtual systems based on the context identifier.

In another embodiment a network appliance comprises a set of virtual systems having respective context information wherein each of the virtual systems represents a virtual private network VPN to a different subscriber network. The network appliance further comprises a network interface to receive a first network communication associated with a first one of the virtual systems. In response the network appliance sets a context identifier is set in response to the network communication that identifies the first one of the virtual systems. The network appliance further comprises a set of VPN software processes executing on the network appliance to process the first network communication wherein the set of VPN software processes generate data access requests. A configuration access application programming interface API dynamically directs the data access requests from the VPN software processes to the first one of the virtual systems based on the context identifier.

In another embodiment a computer readable medium comprises instructions. The instructions cause a programmable processor to maintain with a network security device a set of virtual systems having respective context information wherein each of the virtual systems provides a virtual private network VPN to a different subscriber network. The instructions further cause the processor to receive with the network device a network communication associated with a first one of the virtual systems and set in response to the network communication a context identifier identifying the first one of the virtual systems. The instructions cause the processor to process the network communication with a set of VPN software processes wherein the set of VPN software processes generate data access requests and dynamically direct data access requests from the VPN software processes to the first one of the virtual systems based on the context identifier.

The details of one or more embodiments of the invention are set forth in the accompanying drawings and the description below. Other features objects and advantages of the invention will be apparent from the description and drawings and from the claims.

Each of subscribers represents an entity such as a corporate enterprise having a corresponding subscriber network A through N collectively subscriber networks that include resources A through N collectively resources . Resources may include web servers file servers email servers audio or video servers printers faxes network telephones set top boxes and other network devices.

In one example embodiment SAA provides Secure Sockets Layer Virtual Private Network SSL VPN service for each of subscriber networks . More specifically each of remote users A through N collectively remote users may use the SSL VPN services provided by SAA to remotely access and make use of resources associated with the subscribers to which the individual remote user belongs. For example remote user A is typically an employee or other affiliate of subscriber A that is located geographically remotely from the subscriber. Remote user A may access resource A using the SSL VPN service provided by SAA for subscriber network A. Similarly remote user B may access resource B using the SSL VPN service provided by SAA for subscriber network B.

As described in further detail below SAA provides multiple logically separated subscriber specific virtual systems to provide SSL VPN services to remote users . SSA executes a set of generalized software processes capable of providing VPN services to any of the virtual systems. The network appliance maintains a virtual system context identifier to logically direct the processes to one of the different virtual systems at a time. The context identifier may be a unique string number data path or other information capable eat of uniquely identifying one of the virtual systems provided by the appliance.

At any given point in time the generalized processes operate within a single SSL VPN context. In essence the SSL VPN context represents the VPN state data for a single instance of a subscriber specific SSL VPN. For example an SSL VPN context may comprise low level system information such as address ranges and network connectivity information for the specific one of subscribers networks . Moreover an SSL VPN context may comprise subscriber specific configuration parameters. These subscriber specific configuration parameters may include granular network security and management policies such as a custom authentication authorization and accounting protocols end point security checks opened or closed ports permissible protocols and so on.

SAA includes a virtual context application programming interface API that provide access to hierarchically stored customer specific VPN context information. The API transparently redirects access requests from the generalized software processes to the appropriate VPN context information based on the current virtual system context identifier. The virtual system context identifier is transparently passed within any inter process communications between the generalized processes and is recorded within timers and other resources of the appliance. In this manner the generalized set of VPN processes are data driven processes capable of operating according to different virtual systems while preserving logical independence between the virtual systems.

In some cases an SSL VPN context may be formed from subscriber specific context information as well as shared context information such as information defined by service provider administrator . In other words in this example an SSL VPN context for a virtual system in SAA is the union of the subscriber specific VPN context information and the shared context information. The subscriber specific context information of an SSL VPN context is specific to a subscriber of SSL VPN service provided by SAA . For example the SSL VPN context for subscriber A may contain security policies different from policies defined by the SSL VPN context for subscriber B.

The shared context information of an SSL VPN context is common to all SSL VPN contexts on SAA . For example the shared context information may include information relating to a shared network interface access of a service provider administrator to SAA or information relating to the coordination of subscriber specific portions of a SSL VPN context.

SAA allows subscriber administrators A through N collectively subscriber administrators to modify configuration information associated with their subscriber specific VPN context information. By modifying the configuration information associated with a given virtual system a subscriber administrator may tailor the behavior of an SSL VPN service associated with their particular subscriber network as needed. In general a subscriber administrator may not modify or view the configuration information associated with another subscriber . Thus from a perspective of a given subscriber it may appear that SAA is dedicated for the sole use of the subscriber.

The principles of this invention extend to services other than SSL VPN services. In other words the data driven set of generalized process may operate on other forms virtual systems. Other virtual systems may include a virtual extranet service a point to point tunneling protocol VPN service an authentication service an authorization service an accounting service a firewall service a traffic engineering service a network telephony service an e business service and so on.

Embodiments of this invention may present one or more advantages. For instance a service provider need not maintain a separate device for each of subscriber and may reduce the number of network appliances needed to provide logically separated subscriber specific virtual systems. In addition this system may require less computational resources and provide a more scalable solution than other solutions that use multiple operating systems on a single device to provide logically separate operating environments.

From the subscriber s perspective SAA may present one or more additional advantages. For example a subscriber may configure services provided by SAA as though the subscriber is the only user of SAA . This may offer the subscriber significantly more flexibility in configuring SAA to the needs of the subscriber. For instance the ability to flexibly tailor the behavior of SAA may simplify management of personal information for purposes of regulatory compliance. This may provide the subscriber with virtually all of the benefits of a standalone network appliance without having to maintain a device on premises.

SAA receives network communications from network through a network interface and directs the communications to the set of SSL VPN processes that provide VPN connectivity for remote users . To provide the services SSL VPN processes operate on the virtual system identified by the current valued of the context identifier. SSL VPN processes transparently pass the VPN context identifier within any inter process communications between the processes thereby maintaining consistency by operating on a single virtual system at a time. While processing communications on behalf of a subscriber one or more of SSL VPN processes generate generic request for portions of context information and each request incorporates the current context identifier. Request may be viewed as generic in that a common interface is used to the request context information for different virtual systems.

Configuration access application programming interface API intercepts the access requests and automatically redirects the accesses to the appropriate subscriber specific context information . In other words configuration access API dynamically directs access requests from each of SSL VPN processes to virtual system context information e.g. VPN state data and configuration parameters necessary to support a different customer specific virtual system. In other words configuration access API guarantees logical separation between the virtual systems. Configuration access API returns the requested subscriber specific information to the requesting SSL VPN processes .

In addition SAA provides an administrative interface by which subscriber administrators may modify subscriber specific context information . Specifically SAA receives configuration instructions from subscriber administrators through administrative interface which may present a command line interface CLI or a graphical interface. Again configuration access API intercepts the access requests and automatically redirects the accesses to the appropriate subscriber specific context information . In this manner subscriber administrators may independently manage configuration data associated with their virtual system without affecting other subscribers. In addition administrative interface allows service provider administrator to modify shared context information .

After receiving the network communication SSA determines which subscriber and more specifically which virtual system supported by the SSA is associated with the network communication. For example SSA may use a subscriber context map to map a source or destination address specified within the network communication to a particular virtual system .

Once SSA has determined particular virtual system associated with the network communication the SSA sets the virtual system context identifier to control subsequent processing of the communication . Next SSL VPN processes process the network communication in accordance with the context information for the particular virtual system with which the communication is associated .

For example for outbound messages the SSL VPN processes may access the virtual system context information to retrieve the correct SSL encryption keys and session information for SSL sessions maintained with remote users . As described above configuration access API transparently redirects data access requests from the generalized SSL VPN processes to the subscriber specific VPN context information based on the current virtual system context identifier shared between the processes . For example each data access request may specify an access path based on the particular data being sought. Based on the context identifier configuration access API may dynamically modify the access path specified within the data access request to direct the data access request to the context information associated with the virtual system associated with the communication being processed.

SSL VPN processes utilize the subscriber specific VPN context information to encrypt the outbound data and forward the encrypted data using the appropriate session information for the current virtual system.

Similarly for inbound messages the SSL VPN processes may access the virtual system context information to retrieve the correct SSL encryption keys and session information for SSL sessions based on the current context identifier. SSL VPN processes utilize the subscriber specific VPN context information to retrieve the inbound data from the SSL session and decrypt the inbound data using the appropriate keys for the current context. The SSL VPN processes then forward the decrypted data to the appropriate resource for the corresponding subscriber network .

Various embodiments of the invention have been described. These and other embodiments are within the scope of the following claims.

