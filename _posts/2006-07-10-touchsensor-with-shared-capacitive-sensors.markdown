---

title: Touch-sensor with shared capacitive sensors
abstract: A method and apparatus to implement a touch-sensor device using shared capacitive sensors. The apparatus includes a first plurality of sensor elements coupled together, a second plurality of sensor elements coupled together independently of the first plurality of sensor elements, and a third plurality of sensor elements coupled together independently of the first and second pluralities of sensor elements. The sensor elements of the first, second, and third pluralities of sensor elements are interspersed and disposed in a repetitive sequence along a movement path of a conductive object.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08040321&OS=08040321&RS=08040321
owner: Cypress Semiconductor Corporation
number: 08040321
owner_city: San Jose
owner_country: US
publication_date: 20060710
---
This invention relates to the field of user interface devices and in particular to touch sensing devices.

Computing devices such as notebook computers personal data assistants PDAs and mobile handsets have user interface devices which are also known as human interface device HID . One user interface device that has become more common is a touch sensor pad. A basic notebook touch sensor pad emulates the function of a personal computer PC mouse. A touch sensor pad is typically embedded into a PC notebook for built in portability. A touch sensor pad replicates mouse x y movement by using two defined axes which contain a collection of sensor elements that detect the position of a conductive object such as finger. Mouse right left button clicks can be replicated by two mechanical buttons located in the vicinity of the touchpad or by tapping commands on the touch sensor pad itself. The touch sensor pad provides a user interface device for performing such functions as positioning a cursor or selecting an item on a display. These touch sensor pads can include multi dimensional sensor arrays. The sensor array may be one dimensional detecting movement in one axis. The sensor array may also be two dimensional detecting movements in two axes.

In general the sensor elements can be used to determine the location or position of a conductive object such as a finger or stylus on the touch sensor pad . For ease of discussion and illustration the depicted touch sensor pad includes sensor elements to detect the location and directional movement of the conductive object along a single axis for example left right. One type of touch sensor pad that detects only directional movement but not necessarily the location of the conductive object is referred to as a directional slider. Other touch sensor pads detect movement in multiple directions such as left right and up down.

In order to determine the location and or directional movement of the conductive object relative to the sensor elements the processing device implements linear search algorithms on the sensor elements . With a linear search algorithm capacitance variations of the sensor elements are detected one by one in a linear fashion at the corresponding capsensors . By comparing the detected capacitance variation of a sensor element with a baseline capacitance and the capacitance variations on neighboring sensor elements the position of the conductive object e.g. x coordinate is determined. For example the processing device may first detect the capacitance variation on the first sensor element then on the second sensor element and so on from left to right across several sensor elements . The processing device implements this linear search algorithm by sequentially sampling the capsensors . If the conductive object is on the first sensor element then the processing device only takes one cycle to sample the first capsensor . If the conductive object is on the n th sensor element then the processing device takes as many as n cycles to sample the first through the n th capsensor . Accordingly the processing device takes on average n 1 2 cycles to locate the contacting point of the conductive object using this linear search algorithm.

Accordingly the one to one correspondence between the sensor elements capsensors and pins limits the functionality of the processing device and impacts the number of cycles used to detect the position or movement of the conductive object .

The following description sets forth numerous specific details such as examples of specific systems components methods and so forth in order to provide a good understanding of several embodiments of the present invention. It will be apparent to one skilled in the art however that at least some embodiments of the present invention may be practiced without these specific details. In other instances well known components or methods are not described in detail or are presented in simple block diagram format in order to avoid unnecessarily obscuring the present invention. Thus the specific details set forth are merely exemplary. Particular implementations may vary from these exemplary details and still be contemplated to be within the spirit and scope of the present invention.

In general this disclosure relates to touch sensing devices. In one embodiment an apparatus includes a first plurality of sensor elements a second plurality of sensor elements and a third plurality of sensor elements. The first plurality of sensor elements are coupled together. The second plurality of sensor elements are coupled together independently of the first plurality of sensor elements. The third plurality of sensor elements are coupled together independently of the first and second pluralities of sensor elements. The sensor elements of the first second and third pluralities of sensor elements are interspersed and disposed in a repetitive sequence along a movement path of a conductive object. In some embodiments the repetitive sequence in a first direction along the movement path is unique compared to a reverse sequence in a reverse direction along the movement path. The movement path may be straight or curved. In one embodiment the repetitive sequence may be 12312312 . . . where 1 refers to a sensor element from the first plurality of sensor elements 2 refers to a sensor element from the second plurality of sensor elements and 3 refers to a sensor element from the third plurality of sensor elements. The corresponding reverse sequence is 32132132 . . . which is unique from the repetitive sequence. Other embodiments may have more than three pluralities of sensor elements.

Another embodiment of the apparatus includes a plurality of capsensors a plurality of sensor elements and a sequence detector. The plurality of sensor elements are coupled to the plurality of capsensors in a pattern. In one embodiment at least two non adjacent sensor elements of the plurality of sensor elements are coupled to a shared capsensor of the plurality of capsensors and at least one other sensor element of the plurality of sensor elements is disposed between the two non adjacent sensor elements and coupled to another capsensor of the plurality of capsensors. The sequence detector is coupled to the plurality of capsensors to detect a conductive sequence of a movement of a conductive object in proximity to at least some of the plurality of sensor elements. Referring to the example above the sequence detector may detect 12312312 . . . if the movement is in a first direction and 32132132 . . . if the movement is in a second e.g. reverse direction. Another embodiment of the apparatus includes a plurality of switches coupled between the plurality of sensor elements and the plurality of capsensors. Other embodiments of the apparatus are also described.

One embodiment of a method includes detecting a conductive object at a plurality of sensor elements wherein the plurality of sensor elements are disposed in a layout according to a repetitive directional sequence and determining whether a movement of the conductive device relative to the plurality of sensor elements is in a first direction according to the repetitive directional sequence or in a second direction according to a unique reverse sequence of the repetitive directional sequence. The method also may include differentiating between the repetitive directional sequence and the unique reverse sequence. The method also may include defining the repetitive directional sequence and the unique reverse sequence according to a plurality of capsensors to which each sensor element of the plurality of sensor elements is coupled. The method also may include switching a plurality of switches to couple the plurality of sensor elements to the plurality of capsensors according to the repetitive directional sequence. Other embodiments of the method are also described.

The processing device may include analog and or digital general purpose input output GPIO ports such as programmable GPIO ports. The GPIO ports may be coupled to a programmable interconnect and logic PIL component not shown which acts as an interconnect between the GPIO ports and a digital block array not shown of the processing device . In one embodiment the digital block array may be configured to implement a variety of digital logic circuits e.g. DAC digital filters digital control systems etc. using configurable user modules UMs . Additionally the digital block array may be coupled to a system bus not shown .

The processing device also may include memory such as random access memory RAM and program flash . In one embodiment the RAM may be static RAM SRAM and the program flash may be non volatile data storage which may be used to store firmware e.g. control algorithms executable by processing core to implement some or all of the operations described herein . The processing device also may include a memory controller unit MCU coupled to the memory and and the processing core .

The processing device also may include an analog block array not illustrated which is coupled to the system bus. The analog block array may be configured to implement a variety of analog circuits e.g. ADC analog filters etc. using configurable UMs. In one embodiment the analog block array is coupled to the GPIO .

Some embodiments of the processing device include one or more capacitance sensors also capsensors . Each capsensor may include analog UO such as pins for coupling to a component outside of the processing device . For example the capsensors may be coupled to the touch sensor pad the touch sensor slider the touch sensor buttons and or other devices. The capsensor and processing core are described in more detail below.

It should be noted that the embodiments described herein can be implemented within or used in conjunction with several types of capacitive sensing devices. For example embodiments may be implemented in touch sensor pads for notebook computers a touch slider for lighting controls touch sensor buttons and so forth. Similarly the operations described herein may be implemented in several applications including notebook cursor operations lighting controls e.g. dimmers volume control graphic equalizer control speed control or other control operations benefiting from gradual adjustments or a convenient touch sensor interface. Additionally embodiments may be used in conjunction with non capacitive sensing elements including but not limited to pick buttons sliders e.g. display brightness and contrast scroll wheels multi media controls e.g. volume track advance etc. handwriting recognition and numeric keypad operation.

The electronic system may include any combination of one or more touch sensor pads touch sensor sliders and or touch sensor buttons . In some embodiments the electronic system includes a touch sensor pad coupled to the processing device via a bus . The touch sensor pad may include a multi dimension sensor array which includes sensor elements organized in two directions such as in rows and columns.

In some embodiments the electronic system includes a touch sensor slider coupled to the processing device via a bus . The touch sensor slider may include a single dimension sensor array which includes sensor elements organized in a single direction such as in a row or columns. Alternatively a single dimension sensor array may include sensor elements organized in other arrangements which correspond to a single path of movement of the conductive object. For example a slider wheel although curved may be implemented with a single dimension sensor array because the sensor elements detect movement in either a clockwise or counter clockwise direction analogous to left right or up down movements.

In some embodiments the electronic system includes a touch sensor button coupled to the processing device via the bus . The touch sensor button may include a single dimension or multi dimension sensor array. For a touch sensor button the plurality of sensor elements may be independent or coupled together to detect a presence of a conductive object anywhere over the entire surface of the sensing device. One exemplary implementation of a touch sensor button is a non contact switch which when protected by an insulating layer offer protection from severe environments.

In another embodiment the electronic system also may include non capacitance sensor elements coupled to the processing device via the bus . The non capacitance sensor elements may include buttons light emitting diodes LEDs and other user interface devices such as a mouse a keyboard or other functional keys that do not require capacitance sensing. In some embodiments the buses and may be a single bus or configured into any combination of one or more separate buses. The processing device also may provide value added functionality such as keyboard control integration LEDs battery charger and general purpose I O as illustrated as non capacitance sensor elements . In one embodiment the non capacitance sensor elements are coupled to the GPIO .

The illustrated processing device also includes internal oscillator clocks and a communication block . The oscillator clocks provide clock signals to one or more of the components of processing device . The communication block facilitates communications with one or more external components such as the host processor via the host interface I F line . Alternatively the processing block also may be coupled to the embedded controller to communicate with the external components such as the host . Interfacing to the host can be through various methods. In one exemplary embodiment interfacing with the host may be done using a standard PS 2 interface to connect to an embedded controller which in turn sends data to the host via a low pin count LPC interface. In some instances it may be beneficial for the processing device to do both touch sensor pad and keyboard control operations thereby freeing up the embedded controller for other housekeeping functions. In another exemplary embodiment interfacing may be done using a universal serial bus USB interface directly coupled to the host via the host interface line . Alternatively the processing device may communicate to external components such as the host using industry standard interfaces such as USB PS 2 inter integrated circuit I2C bus or system packet interface SPI . The host and or embedded controller may be coupled to the processing device with a ribbon or flex cable from an assembly which houses the touch sensor pad and processing device .

In one embodiment the processing device is configured to communicate with the embedded controller or the host to send data. The data may be a command or alternatively a signal. In an exemplary embodiment the electronic system may operate in both standard mouse compatible and enhanced modes. The standard mouse compatible mode utilizes the HID class drivers already built into the Operating System OS software of the host . These drivers enable the processing device and sensing device to operate as a standard cursor control user interface device such as a two button PS 2 mouse. The enhanced mode may enable additional features such as scrolling reporting absolute position or disabling the sensing device such as when a mouse is plugged into the notebook. Alternatively the processing device may be configured to communicate with the embedded controller or the host using non OS drivers such as dedicated touch sensor pad drivers or other drivers known by those of ordinary skill in the art. In other words the processing device may operate to communicate data e.g. commands or signals using hardware software and or firmware and the data may be communicated directly to a processing device of the host such as a host processor or alternatively may be communicated to the host via drivers of the host such as OS drivers or non OS drivers. It should also be noted that the host may directly communicate with the processing device via the host interface .

In one embodiment the data sent to the host from the processing device relates to commands including click double click movement of the cursor scroll up scroll down scroll left scroll right step Back and step Forward. Alternatively other user interface device commands may be communicated to the host from the processing device . These commands may be based on gestures that occur on the sensing device and are recognized by the processing device . Exemplary gestures include tap push hop and zigzag gestures. A tap gesture occurs for example when a conductive object e.g. finger is detected on the sensing device for less than a threshold time. If the time the finger is placed on the touchpad is greater than the threshold time then the detected gesture may be considered to be a movement of the cursor in one or more directions. Scroll up scroll down scroll left and scroll right step back and step forward gestures may be detected when the absolute position of the conductive object is within a pre defined area and movement of the conductive object is detected. Alternatively other gestures may be recognized. Similarly signals may be sent that indicate the recognition of operations related to these gestures.

In one embodiment the processing device may reside on a common carrier substrate such as an integrated circuit IC die substrate a multi chip module substrate or the like. Alternatively the components of the processing device may be one or more separate integrated circuits and or discrete components. In one exemplary embodiment the processing device may be a Programmable System on a Chip PSoC processing device manufactured by Cypress Semiconductor Corporation San Jose Calif. Alternatively the processing device may include one or more other processing devices such as a microprocessor or central processing unit a controller special purpose processor digital signal processor DSP an application specific integrated circuit ASIC a field programmable gate array FPGA or the like known by those of ordinary skill in the art. In another embodiment the processing device may be a network processor having multiple processors including a core unit and multiple microengines. Additionally the processing device may include any combination of general purpose processing device s and special purpose processing device s .

It should also be noted that the embodiments described herein are not limited to having a configuration of a processing device coupled to a host but may include a system that measures the capacitance on the sensing device and sends the raw data to a host computer where it is analyzed by an application. In other words the processing of the raw data may be done by the processing device and or the host .

In one embodiment a fully self contained touch sensor pad is implemented which outputs fully processed x y movement and gesture data signals or data commands to a host . In another embodiment a touch sensor pad is implemented which outputs x y movement data and also finger presence data to a host and the host processes the received data to detect gestures. In another embodiment the a touch sensor pad is implemented which outputs raw capacitance data to a host and the host processes the capacitance data to compensate for quiescent and stray capacitance as well as calculates x y movement and detects gestures by processing the capacitance data. In another embodiment a touch sensor pad is implemented which processes and outputs capacitance data to compensate for quiescent and stray capacitance to a host and the host calculates x y movement and detects gestures from the pre processed capacitance data.

In one embodiment the electronic system implements a conventional laptop touch sensor pad . Alternatively the electronic system may be implemented in a wired or wireless keyboard with an integrated touch sensor pad which is connected to a host via the wired or wireless connection. In such an implementation the processing described above as being performed by the host may be performed in part or in whole by the keyboard controller which may then pass fully processed pre processed or unprocessed data to the system host . In another embodiment the electronic system may be a mobile handset e.g. cell phone or other electronic device having a touch sensor pad which operates in two or more modes. For example the touch sensor pad may operate either as a touch sensor pad for x y positioning and gesture recognition or as a keypad or other array of touch sensor buttons and or sliders . In other words a touch sensor pad may implement touch sensor buttons and sliders at the same time on different areas of the pad or at different times in the same area of the pad . Alternatively the electronic system may be a mobile handset a personal data assistant PDA a television a remote control a monitor a handheld multi media device a handheld video player a handheld gaming device a control panel or another type of device.

The capacitance sensor may be integrated into the IC of the processing device or alternatively in a separate IC. Alternatively embodiments of the capacitance sensor may be incorporated into other integrated circuits. For example behavioral level code describing the capacitance sensor or portions thereof may be generated using a hardware descriptive language such as VHDL or Verilog and stored to a machine accessible medium e.g. CD ROM hard disk floppy disk etc. . Furthermore the behavioral level code can be compiled into register transfer level RTL code a netlist or even a circuit layout and stored to a machine accessible medium. The behavioral level code the RTL code the netlist and the circuit layout all represent various levels of abstraction to describe the capacitance sensor .

In one embodiment capacitance sensor is a capacitive switch relaxation oscillator CSR . The CSR may have an array of capacitive touch switches using a current programmable relaxation oscillator an analog multiplexer digital counting functions and high level software routines to compensate for environmental and physical switch variations. The switch array may include combinations of independent switches sliding switches e.g. touch sensor sliders and touch sensor pads implemented as a pair of orthogonal sliding switches. The CSR may include physical electrical and software components. The physical component may include the physical switch itself typically a pattern constructed on a printed circuit board PCB with an insulating cover a flexible membrane or a transparent overlay. The electrical component may include an oscillator or other means to convert a changed capacitance into a measured signal. The electrical component may also include a counter or timer to measure the oscillator output. The software component may include detection and compensation software algorithms to convert the count value into a switch detection decision. For example in the case of slide switches or x y touch sensor pads the software may calculate a position of the conductive object to greater resolution than the physical pitch of the switches.

Although the embodiments described herein use a relaxation oscillator other embodiments use other methods such as current versus voltage phase shift measurement resistor capacitor charge timing capacitive bridge divider or charge transfer. The current versus voltage phase shift measurement method may include driving the capacitance through a fixed value resistor to yield voltage and current waveforms that are out of phase by a predictable amount. The drive frequency can be adjusted to keep the phase measurement in a readily measured range. The resistor capacitor charge timing method may include charging the capacitor through a fixed resistor and measuring timing on the voltage ramp. Small capacitor values may require very large resistors for reasonable timing. The capacitive bridge divider method may include driving the capacitor under test through a fixed reference capacitor. The reference capacitor and the capacitor under test form a voltage divider. The voltage signal is recovered with a synchronous demodulator which may be done in the processing device . The charge transfer method may be conceptually similar to an R C charging circuit. In this method Cis the capacitance being sensed. Cis the summing capacitor into which charge is transferred on successive cycles. At the start of the measurement cycle the voltage on Cis reset. The voltage on Cincreases exponentially and only slightly with each clock cycle. The time for this voltage to reach a specific threshold is measured with a counter. Additional details of these and other alternative embodiments for measuring capacitance are known by those of ordinary skill in the art.

The relaxation oscillator begins by charging the capacitor from a ground potential or zero voltage and continues to charge the capacitor at the fixed charging current until the voltage across the capacitor at node reaches a reference voltage or threshold voltage V . At V the relaxation oscillator allows the accumulated charge at node to discharge e.g. the capacitor relaxes back to the ground potential and then the process repeats itself. In particular the output of the comparator asserts a clock signal F e.g. asserted high which enables the reset switch . This resets the voltage on the capacitor at node to ground and the charge cycle starts again. The relaxation oscillator outputs a relaxation oscillator clock signal having a frequency f which is dependent upon capacitance of the capacitor and the charging current .

The comparator trip time of the comparator and reset switch add a fixed delay. The output of the comparator is synchronized with a reference system clock not shown to guarantee that the comparator reset time is long enough to completely reset the charging voltage on capacitor . This sets a practical upper limit to the operating frequency. For example if the capacitance of the capacitor changes then the frequency of the relaxation oscillator clock signal will change proportionally according to Equation 1 . By comparing the frequency of the relaxation oscillator clock signal against the frequency f of the known reference system clock signal the change in capacitance can be measured. Accordingly Equations 2 and 3 below describe a proportional relationship between a change in capacitance of the capacitor and the frequency difference between the relaxation oscillator clock signal and the reference system clock signal. C f where 2 3 

In one embodiment a frequency comparator not shown may be coupled to receive the relaxation oscillator clock signal and the reference system clock signal. The frequency comparator compares the frequencies fand f and outputs a signal indicative of the frequency difference f. By monitoring the frequency difference a change in the capacitance of the capacitor can be determined. In one exemplary embodiment the relaxation oscillator may be implemented using a timer to implement the comparator and reset switch . Alternatively the relaxation oscillator may be built using other circuitry. Additional details of relaxation oscillators are known in by those of ordinary skill in the art.

The relaxation oscillator of includes all the components described with respect to as well as a selection circuit . The selection circuit is coupled to the reset switch the current source the comparator and the plurality of sensor elements N via the pins . The selection circuit may be used to allow the relaxation oscillator to measure capacitance on multiple sensor elements e.g. rows or columns . In one embodiment the selection circuit sequentially selects a sensor element of the plurality of sensor elements to provide the charge current and to measure the capacitance of each sensor element . In one exemplary embodiment the selection circuit is a multiplexer array of the relaxation oscillator . Alternatively the selection circuit may be other circuitry outside the relaxation oscillator or even outside the capacitance sensor to select the sensor element to be measured. The capacitance sensor may include one relaxation oscillator and digital counter for the plurality of sensor elements of the sensor array as shown. Alternatively capacitance sensor may include multiple relaxation oscillators and digital counters to measure the capacitance on the plurality of sensor elements of the sensor array . The multiplexer array also may be used to ground the sensor elements that are not being measured. This may be done in conjunction with a dedicated pin in the GPIO port .

In another embodiment the capacitance sensor simultaneously scans the sensor elements as opposed to sequentially scanning the sensor elements as described above. For example the sensing device may include a sensor array having a plurality of rows and columns. The rows may be scanned simultaneously and subsequently the columns may be scanned simultaneously. In one exemplary embodiment the voltages on all of the rows of the sensor array are simultaneously moved while the voltages of the columns are held at a constant voltage with the complete set of sampled points simultaneously giving a profile of the conductive object in a first dimension. Next the voltages on all of the rows are held at a constant voltage while the voltages on all the rows are simultaneously moved to obtain a complete set of sampled points simultaneously giving a profile of the conductive object in the other dimension. In another exemplary embodiment the voltages on all of the rows of the sensor array are simultaneously moved in a positive direction while the voltages of the columns are moved in a negative direction. Next the voltages on all of the rows of the sensor array are simultaneously moved in a negative direction while the voltages of the columns are moved in a positive direction. This technique doubles the effect of any transcapacitance between the two dimensions or conversely halves the effect of any parasitic capacitance to the ground. In both methods the capacitive information from the sensing process provides a profile of the presence of the conductive object to the sensing device in each dimension. Alternatively other scanning methods known by those of ordinary skill in the art may be used to scan the sensing array .

In one embodiment the digital counter is coupled to the output of the relaxation oscillator to receive the relaxation oscillator output signal F. The digital counter is configured to count at least one of a frequency or a period of the relaxation oscillator output received from the relaxation oscillator .

As previously described with respect to the relaxation oscillator when a finger or conductive object is placed on the switch the capacitance increases from Cto C C so the relaxation oscillator output signal decreases. The relaxation oscillator output signal is then fed to the digital counter for measurement. There are at least two methods frequency measurement and period measurement for counting the relaxation oscillator output signal . In one embodiment the digital counter includes two multiplexers and . The multiplexers and are configured to select the inputs for the pulse width modulator PWM and the timer for both of the measurement methods the P input corresponds to the period measurement method the F input corresponds to the frequency measurement method . Alternatively other selection circuitry may be used to select the inputs for the PWM and the timer . In another embodiment the multiplexers and are not included in the digital counter . For example the digital counter may be configured in another measurement configuration.

In the frequency measurement method the relaxation oscillator output signal is counted for a fixed period of time. The timer obtains the number of counts during the gate time. The frequency measurement method may operate well at low frequencies where the oscillator reset time is small compared to the oscillator period. The PWM is clocked for a fixed period by a derivative of the system clock V which is a divider from the system clock . In one embodiment the frequency of the system clock is 24 MHz although other frequencies may be implemented. Pulse width modulation is a modulation technique which generates variable length pulses to represent the amplitude of an analog input signal. Using the frequency measurement method the PWM outputs a representation of V. The output of the PWM enables the timer e.g. 16 bit which is clocked by the relaxation oscillator output signal . The timer is reset at the start of the sequence and the count value is read out at the end of the gate period.

In the period measurement method the relaxation oscillator output signal gates the timer which is clocked by the system clock e.g. 24 MHz . In order to improve sensitivity and resolution multiple periods of the oscillator are counted with the PWM . The output of the PWM is used to gate the timer . In this method the relaxation oscillator output signal drives the clock input of the PWM . Using the period measurement method the PWM outputs a representation of the relaxation oscillator output signal . The output of the PWM enables a timer e.g. 16 bit which is clocked at the system clock frequency e.g. 24 MHz . When the output of PWM is asserted e.g. asserted high the count starts by releasing the capture control. When the terminal count of the PWM is reached the capture signal is asserted e.g. asserted high stopping the count and setting an interrupt of the PWM . The timer value is read in this interrupt. The relaxation oscillator is indexed to the next switch e.g. from capacitor to capacitor to be measured and the count sequence is started again.

The two counting methods may have equivalent performance in sensitivity and signal to noise ratio SNR . In one embodiment the period measurement method has a slightly faster data acquisition rate but this rate may depend on the software and the values of the switch capacitances. In another embodiment the frequency measurement method has a fixed switch data acquisition rate.

The length of the counter and the detection time required for the switch are determined by sensitivity requirements. Small changes in the capacitance on capacitor result in small changes in frequency because of the proportional relationship described in relation to Equation 2 . In order to find these small changes it may be necessary to count for a considerable time.

At startup or boot the switches e.g. capacitors are scanned and the count values for each switch with no actuation are stored as a baseline array Cp . The presence of a finger on one of the switches is determined by the difference in counts between a stored value for no switch actuation and the acquired value with switch actuation referred to here as n. The sensitivity of a single switch is approximately 

The value of n should be large enough for reasonable resolution and clear indication of switch actuation. This drives switch construction decisions.

The value of Cshould be a relatively large fraction of the value of C if possible. In one exemplary embodiment the ratio of Cto Cis approximately between 0.01 to 2.0. Alternatively the values may result in other ratios. Since the value of Cis determined by the surface area of the conductive object e.g. finger and the distance from the conductive object to the conductive traces i.e. through an over lying insulator the baseline capacitance C should be minimized. The baseline capacitance includes the capacitance of the switch pad plus any parasitics including routing and chip pin capacitance.

In switch array applications variations in sensitivity among the switches should be minimized. If there are large differences in n one switch may actuate at 1.0 cm while another may not actuate until direct contact which would present a non ideal user interface device. There are numerous methods for balancing the sensitivity of the switches including precisely matching on board capacitance with PC trace length modification adding balance capacitors on each switch s PC board trace and or adapting a calibration factor to each switch to be applied each time the switch is tested. In one embodiment the PCB design may be adapted to minimize capacitance including thicker PCBs where possible. In one exemplary embodiment a PCB having a thickness of 0.062 inches is used. Alternatively other thicknesses may be used. For example a PCB having a thickness of 0.015 inches may be used.

It should be noted that the count window should be long enough for n to be a significant number. In one embodiment the significant number can be as little as 10 or alternatively as much as several hundred. In one exemplary embodiment where Cis 1.0 of C a typical weak switch and where the switch threshold is set at a count value of 20 n is found to be 

Adding a margin e.g. 500 counts for a total of 2500 counts and running the frequency measurement method at 1.0 MHz an exemplary detection time for the switch is approximately 4 microseconds. In the frequency measurement method the frequency difference between a switch with and without actuation i.e. C Cvs. C is approximately 

This shows that the sensitivity variation between one channel and another is a function of the square of the difference in the static capacitances of the two channels. This sensitivity difference can be compensated using routines in high level application programming interfaces APIs .

In the period measurement method the count difference between a switch with and without actuation i.e. C Cvs. C is approximately 

The charge currents are typically lower and the period is longer to increase sensitivity or the number of periods for which the frequency of the system clock is counted can be increased. In either method by matching the static parasitic capacitances C of the individual switches the repeatability of detection increases making all switches work at the same difference. Compensation for this variation can be done in software at runtime. The compensation algorithms for both the frequency measurement method and period measurement method may be included in the high level APIs.

Some implementations of the relaxation oscillator use a current source programmed by a fixed value resistor not shown . Adjusting the value of the resistor may change the range of capacitance to be measured.

Using the multiplexer array multiple sensor elements may be sequentially scanned to provide current to and measure the capacitance from the capacitors e.g. sensor elements as previously described. In other words while one sensor element is being measured the remaining sensor elements are grounded using the GPIO port . This drive and multiplex arrangement bypasses the existing GPIO to connect the selected pin to an internal analog multiplexer mux bus . The capacitor charging current e.g. current source and reset switch are connected to the analog mux bus . This may limit the pin count requirement to reduce the number of switches to be addressed. In one exemplary embodiment no external resistors or capacitors are required inside or outside the processing device to enable operation.

The capacitor charging current for the relaxation oscillator is generated in a register programmable current output digital to analog converter DAC or IDAC . Accordingly the current source is a current DAC or IDAC. The IDAC output current may be set by an 8 bit value provided by the processing device such as from the processing core . The 8 bit value may be stored in a register or in memory.

Estimating and measuring PCB capacitances may be difficult. The oscillator reset time may add to the oscillator period especially at higher frequencies. Also there may be some variation to the magnitude of the IDAC output current with operating frequency. Accordingly the optimum oscillation frequency and operating current for a particular switch array may be determined to some degree by experimentation.

In many capacitive switch designs the two plates e.g. and of the sensing capacitor are actually adjacent PCB pads or traces as indicated in . Typically one of these plates is grounded. Layouts for touch sensor slider e.g. linear slide switches and touch sensor pad applications have switches that are immediately adjacent to one another. In this case all of the switches that are not active are grounded through the GPIO of the processing device dedicated to that pin . The actual capacitance between adjacent plates and is small but the capacitance of the active plate and its PCB trace back to the processing device to ground when detecting the presence of the conductive object may be considerably higher e.g. C C . The capacitance of two parallel plates and is given by the following equation 

The dimensions of Equation 8 are in meters. This is a very simple model of the capacitance and actual capacitances may be influences by fringing effects that substantially increase the switch to ground and PCB trace to ground capacitance.

Switch sensitivity i.e. actuation distance may be increased by one or more of the following 1 increasing board thickness to increase the distance between the active switch and any parasitics 2 minimizing PC trace routing underneath switches 3 utilizing a gridded ground with 50 or less fill if use of a ground plane is absolutely necessary 4 increasing the spacing between switch pads and any adjacent ground plane 5 increasing pad area 6 decreasing thickness of any insulating overlay or 7 verifying that there is no air gap between the PC pad surface and the touching finger.

There is some variation of switch sensitivity as a result of environmental factors. A baseline update routine which compensates for this variation may be provided in the high level APIs.

Sliding switches may be used to facilitate gradual control adjustments. Examples include a lighting control dimmer volume control graphic equalizer and speed control. The switches within a slider are mechanically adjacent to one another. Actuation of one switch results in partial actuation of physically adjacent switches . The actual position in the sliding switch is found by computing the centroid location of the set of activated switches .

In applications for touch sensor sliders e.g. sliding switches and touch sensor pads it is often beneficial to determine finger or other capacitive object position to more resolution than the native pitch of the individual switches . The contact area of a finger on a sliding switch or a touch pad is often larger than any single switch . In one embodiment in order to calculate the interpolated position using a centroid the array is first scanned to verify that a given switch location is valid. The requirement is for some number of adjacent switch signals to be above a noise threshold. When the strongest signal is found this signal and those immediately adjacent are used to compute a centroid 

The calculated value will almost certainly be fractional. In order to report the centroid to a specific resolution for example a range of 0 to 100 for 12 switches the centroid value may be multiplied by a calculated scalar. It may be more efficient to combine the interpolation and scaling operations into a single calculation and report this result directly in the desired scale. This may be handled in the high level APIs. Alternatively other positioning methods may be used to locate the conductive object .

In one embodiment a physical touchpad assembly is a multi layered module to detect a conductive object . The multi layer stack up of a touchpad assembly includes a PCB an adhesive layer and an overlay. The PCB includes the processing device and other components such as the connector to the host which may process operations for sensing the capacitance. These components are on a non sensing side of the PCB. The PCB also includes the sensor array on the opposite side a sensing side of the PCB. Alternatively other multi layer stack ups may be used in the touchpad assembly.

The PCB may be made of standard materials such as FR4 or Kapton e.g. flexible PCB . In either case the processing device may be attached e.g. soldered directly to the sensing PCB e.g. attached to the non sensing side of the PCB . The PCB thickness varies depending on multiple variables including height restrictions and sensitivity requirements. In one embodiment the PCB thickness is at least approximately 0.3 millimeters mm . Alternatively the PCB may have other thicknesses. It should be noted that thicker PCBs may yield better results. The PCB length and width is dependent on individual design requirements for the device on which the sensing device is mounted such as a notebook or mobile handset.

The adhesive layer is directly on top of the PCB sensing array and is used to affix the overlay to the overall touchpad assembly. Typical material used for connecting the overlay to the PCB is non conductive adhesive such as 3M or . In one exemplary embodiment the adhesive thickness is approximately 0.05 mm. Alternatively other thicknesses may be used.

The overlay may be non conductive material used to protect the PCB circuitry to environmental elements and to insulate the user s finger e.g. conductive object from the circuitry. The overlay may be for example ABS plastic polycarbonate glass or polyester film such as Mylar . Alternatively other materials known by those of ordinary skill in the art may be used. In one exemplary embodiment the overlay has a thickness of approximately 1.0 mm. In another exemplary embodiment the overlay has a thickness of approximately 2.0 mm. Alternatively other thicknesses may be used.

Alternating columns in correspond to x and y axis elements. The y axis sensor elements K are illustrated as black diamonds and the x axis sensor elements L are illustrated as white diamonds. Although diamonds are used in one embodiment other embodiments may use other shapes of sensor elements and such as circles squares triangles rectangular bars or non canonical shapes. Additionally the sensor elements and may be located in one or more layers.

As illustrated in the top conductive layer includes the sensor elements and for both the columns and the rows of the sensor array as well as the connections between the sensor elements of the columns . The bottom conductive layer includes the conductive paths that connect the sensor elements of the rows . The conductive paths between the sensor elements of the rows use vias to connect to one another in the bottom conductive layer . The vias go from the top conductive layer through a dielectric layer to the bottom conductive layer . Some embodiments include coating layers and applied to the surfaces of the top and bottom conductive layers and opposite the surfaces that are coupled to the dielectric layer .

Although two layer embodiments are shown and described herein other embodiments may implement alternative connection schemes such as connecting the sensor elements of the columns using vias to the bottom conductive layer . Furthermore other embodiments may use less than or more than two layers. Additionally in one embodiment the sensing device e.g. touch sensor pad is surrounded with a ground plane so that the exterior elements and the interior elements have the same fringe capacitance to ground.

In some embodiments an IC including the processing device may be placed on the non sensor side of the PCB. This placement does not necessary have to be in the center. The processing device IC is not required to have a specific set of dimensions for a touch sensor pad nor a certain number of pins. Alternatively the IC may be placed somewhere external to the PCB.

The sensor elements are in groups according to which capsensor each sensor element is coupled to. Specifically there are three groups of sensor elements depicted. The first group is coupled to capsensor and includes sensor elements and . The second group is coupled to capsensor and includes sensor elements and . The third group is coupled to capsensor and includes sensor elements and . Thus the arrangement of the sensor elements corresponds to a left right sequence of 123123123123 using the capsensors as indices as shown in Table 1. The corresponding reverse i.e. right left sequence is 321321321321 which is unique from the left right sequence.

Having unique sequences in the two movement paths or directions in which the conductive object may be sensed allows the processing device to detect the directional movement of the conductive device based on the sequence according to the capsensors to which the sensor elements are coupled. In one embodiment the processing device includes a sequence detector which is coupled to the capsensors to determine the detected sequence related to the movement of the conductive object . In one example the processing device determines that the conductive object is sliding from left to right if the detected sequence is 123123 . . . or even if only a portion of the sequence is detected e.g. 12 23 or 31 . In contrast the processing device determines that the conductive object is moving from right to left if the detected sequence is 321321 . . . or a subset thereof e.g. 32 21 or 13 because the repeated sequence of 123 is unique from the repeated sequence of 321. Thus one embodiment of the touch sensor slider beneficially allows the processing device or another processing device to determine the directional movement of the conductive object relative to the sensor elements even though there may be relatively few capsensors which are shared among two or more sensor elements . Although the touch sensor slider may be unable to determine the exact position of the conductive object because the processing device cannot determine for example if a signal at capsensor originates from sensor element or . Therefore some embodiments of the touch sensor slider may be limited determining the direction of movement but not the exact position of the conductive object .

By using shared capsensors coupled to groups of sensor elements the processing device may be able to improve the scan rate at which the capsensors are scanned. In one embodiment the scan rate is decreased to reduce the power consumption of the processing device . For example the scan rate for three shared capsensors may be one fourth of the scan rate for twelve independent capsensors . In another embodiment the scan rate is effectively increased because there are relatively fewer capsensors so each shared capsensor is scanned more frequently than if there where an equal number of capsensors and sensor elements . For example the scan rate for three shared capsensors effectively may be four times faster than the scan rate for twelve independent capsensors .

In one embodiment the sensor elements are coupled to the capsensors via pins on the package of the processor device . By coupling the sensor elements together outside of the package of the processor device relatively fewer pins are used compared to a processing device that does not have shared capsensors . Using fewer pins for the capsensing function may free up other pins so that the processing device can implement additional functions. Alternatively the size of the processing device may be decreased if less pins are required on the package. Other embodiments may have additional benefits related to power consumption functionality size or other performance considerations.

The coupling of the sensor elements together into groups may be accomplished outside of the processing device to conserve pins or inside of the processing device . In one embodiment the sensor elements are coupled within close proximity to the sensor elements . In another embodiment the sensor elements are coupled within close proximity to the processing device . In another embodiment the sensor elements are coupled within an interconnect cable or trace between the sensor elements and the processing device .

The illustrated touch sensor pad includes sensor elements of the rows coupled to shared capsensors . For example groups of three sensor elements each are coupled to shared capsensors and respectively. Similarly groups of three sensor elements of the columns are coupled to shared capsensors and . The groupings of sensor elements in the rows and columns present four unique sequences related to the following movement paths of a conductive object left to right right to left top to bottom and bottom to top. Table 2 shows these four unique sequences using the capsensors as an index. Using the four unique sequences the sequence detector may determine the path of movement of the conductive object relative to the sensor elements .

In general the switch bank includes switch circuitry to couple one or more sensor elements to a shared capsensor . In the depicted embodiment sensor elements and are coupled to capsensor sensor elements and are coupled to capsensor and sensor elements and are coupled to capsensor . In this way the switch circuitry may determine the sequence of the sensor elements based on the capsensors to which each sensor element is coupled e.g. 123123 . In other embodiments the switch bank also may be used to couple sensor elements of the rows of a touch sensor pad to additional capsensors within the processing device .

The sequence detector then compares the detected conductive sequence related to sampled signals at the capsensors to known sequences associated with typical movement paths of the conductive object . For example the sequence detector may compare the detected sequences with a left to right sequence of 123123123 . . . and a right to left sequence of 321321321 . . . to determine how the conductive object moved relative to the sensor elements . The sequence detector determines if the detected sequence matches a first known directional sequence and if so indicates movement in the first direction. Otherwise the sequence detector determines if the detected sequence matches a second known directional sequence and if so indicates movement in the second direction. The depicted sequence detection method then ends.

Embodiments of the present invention described herein include various operations. These operations may be performed by hardware components software firmware or a combination thereof. Any of the signals provided over various buses described herein may be time multiplexed with other signals and provided over one or more common buses. Additionally the interconnection between circuit components or blocks may be shown as buses or as single signal lines. Each of the buses may alternatively be one or more single signal lines and each of the single signal lines may alternatively be buses.

Certain embodiments may be implemented as a computer program product that may include instructions stored on a machine readable medium. These instructions may be used to program a general purpose or special purpose processor to perform the described operations. A machine readable medium includes any mechanism for storing or transmitting information in a form e.g. software processing application readable by a machine e.g. a computer . The machine readable medium may include but is not limited to magnetic storage medium e.g. floppy diskette optical storage medium e.g. CD ROM magneto optical storage medium read only memory ROM random access memory RAM erasable programmable memory e.g. EPROM and EEPROM flash memory electrical optical acoustical or other form of propagated signal e.g. carrier waves infrared signals digital signals etc. or another type of medium suitable for storing electronic instructions.

Additionally some embodiments may be practiced in distributed computing environments where the machine readable medium is stored on and or executed by more than one computer system. In addition the information transferred between computer systems may either be pulled or pushed across the communication medium connecting the computer systems.

Although the operations of the method s herein are shown and described in a particular order the order of the operations of each method may be altered so that certain operations may be performed in an inverse order or so that certain operation may be performed at least in part concurrently with other operations. In another embodiment instructions or sub operations of distinct operations may be in an intermittent and or alternating manner.

In the foregoing specification the invention has been described with reference to specific exemplary embodiments thereof. It will however be evident that various modifications and changes may be made thereto without departing from the broader spirit and scope of the invention as set forth in the appended claims. The specification and drawings are accordingly to be regarded in an illustrative sense rather than a restrictive sense.

