---

title: Dynamically generating customized user interfaces
abstract: A computer implemented method of presenting an online application, includes, at a first time, receiving and presenting a first webpage of the online application having a first style, and at a second time, receiving and presenting a second webpage of the online application having a second style that is distinct from the first style. In some embodiments, the first style and second style are in accordance with a user selected variable and the user selected variable has first and second distinct values at the first and second times, respectively. In some embodiments, the user selected variable is independent of the content of the webpages. In some embodiments, the first and second distinct values are determined in accordance with a user profile. In some embodiments, the first webpage is first displayed using the first style and is then re-displayed using the second style, without changing the content of the first webpage.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07908551&OS=07908551&RS=07908551
owner: Google Inc.
number: 07908551
owner_city: Mountain View
owner_country: US
publication_date: 20060629
---
The disclosed embodiments relate generally to customizing graphical user interfaces of computer application. In particular the embodiments relate to customizing user interfaces of online applications.

Computer users are generally able to customize the graphical user interfaces of computer applications. Additionally many online applications such as web based email applications allow users to customize their interfaces or appearance of the online application with different colors fonts background images line widths and the like. These customized appearances are sometimes referred to as skins. For example with certain online applications users may select one color from a menu of different colors to be applied to the appearance of their online application. Each time the user logs onto that application or website the skin of that website appears with the color they have selected. The customized appearance remains the same as the content on the online application is changed and updated.

A computer implemented method of presenting an online application includes at a first time receiving and presenting a first webpage of the online application having a first style and at a second time receiving and presenting a second webpage of the online application having a second style that is distinct from the first style. In some embodiments the first style and second style are in accordance with a user selected variable and the user selected variable has first and second distinct values at the first and second times respectively. In some embodiments the first and second distinct values are automatically determined in accordance with a user profile.

A computer implemented method of presenting an online application is performed at a first client device and at a second client device. The first client device at a first time receives and presents a first webpage of the online application having a first style at a second time receives and presents a second webpage of the online application having a second style that is distinct from the first style. The first style and second style are determined in accordance with a variable selected by a first user and the variable selected by the first user has first and second distinct values at the first and second times respectively. The second client device at a third time receives and presents a third webpage of the online application having a third style and at a fourth time receives and presents a fourth webpage of the online application having a fourth style that is distinct from the third style. The third style and fourth style are in accordance with a variable selected by a second user who is distinct from the first user and the variable selected by the second user is distinct from the variable selected by the first user. The variable selected by the second user has third and fourth distinct values at the third and fourth times respectively.

A system e.g. a client device for presenting an online application includes memory one or more processors and one or more modules stored in memory and configured for execution by the one or more processors. The modules include instructions to at a first time receive and present a first webpage of the online application having a first style and to at a second time receive and present a second webpage of the online application having a second style that is distinct from the first style. The first style and second style are in accordance with a user selected variable and the user selected variable has first and second distinct values at the first and second times respectively.

A computer program product for use in conjunction with a computer system the computer program product includes a computer readable storage medium and a computer program mechanism embedded therein. The computer program mechanism includes instructions for at a first time receiving and presenting a first webpage of the online application having a first style and at a second time receiving and presenting a second webpage of the online application having a second style that is distinct from the first style. The first style and second style are in accordance with a user selected variable and the user selected variable has first and second distinct values at the first and second times respectively.

A computer implemented method of presenting an online application includes at a first time sending to a client a first webpage of the online application having a first style and at a second time sending to the client a second webpage of the online application having a second style distinct from the first style. In some embodiments the first style and second style are in accordance with a user selected variable and the user selected variable has first and second distinct values at the first and second times respectively. In some embodiments the first and second distinct values are automatically determined in accordance with a user profile of a user of the client device.

A computer implemented method of presenting an online application includes at a first time sending a first webpage of the online application having a first style to a first client device and at a second time sending a second webpage of the online application having a second style that is distinct from the first style to the first client device. The first style and second style are in accordance with a variable selected by a first user and the variable selected by the first user has first and second distinct values at the first and second times respectively. The method further includes at a third time sending a third webpage of the online application having a third style to a second client and at a fourth time sending a fourth webpage of the online application having a fourth style that is distinct from the third style to the second client. The third style and fourth style are in accordance with a variable selected by a second user. The second user is distinct from the first user and the variable selected by the second user is distinct from the variable selected by the first user. The variable selected by the second user has third and fourth distinct values at the third and fourth times respectively.

A system e.g. an application server for presenting an online application includes memory one or more processors and one or more modules stored in memory and configured for execution by the one or more processors. The modules include instructions to at a first time send to a client a first webpage of the online application having a first style and to at a second time send to the client a second webpage of the online application having a second style distinct from the first style. The first style and second style are in accordance with a user selected variable and the user selected variable has first and second distinct values at the first and second times respectively.

A computer program product for use in conjunction with a computer system the computer program product includes a computer readable storage medium and a computer program mechanism embedded therein. The computer program mechanism includes instructions for at a first time sending to a client a first webpage of the online application having a first style and at a second time sending to the client a second webpage of the online application having a second style distinct from the first style. The first style and second style are in accordance with a user selected variable and the user selected variable has first and second distinct values at the first and second times respectively.

The communication network may be any local area network LAN and or wide area network WAN such as an intranet an extranet the Internet or a combination of such networks. It is sufficient that the communication network provides communication capability between the clients and the server . In some embodiments the communication network uses HyperText Transport Protocol HTTP to transport information using the Transmission Control Protocol Internet Protocol TCP IP . The HTTP permits client computers to access various resources available via the communication network . The various embodiments of the invention however are not limited to the use of any particular protocol. The term resource as used throughout this specification refers to any piece of information or service that is accessible via a Uniform Resource Locator URL and can be for example a webpage a text or word processing document an email message a transcribed voice message a database an image or a computational object.

The communication network may be connected to an information server . The server may include an HTTP interface one or more online applications and a dynamic style sheet generator .

The HTTP interface facilitates communication between the communication network and the online application . The online applications may be configured to send and receive content . The online application may be a webmail application or other type of personalized online application that is utilized in displaying various content .

The dynamic style sheet generator may include or be connected to the following a style sheet library that includes one or more main style sheets and one or more differential style sheets one or more user profiles one or more event variables and an image database . The dynamic style sheet generator generates dynamic style sheets in accordance with one or more user selected variables which may be stored in the user profiles . Alternately the dynamic style sheet generator selects a dynamic style sheet from a set of previously generated dynamic style sheets stored in the library in accordance with one or more user selected variables. Optionally a main style sheet may be combined with one or more differential style sheets to produce a combined style sheet in accordance with the user selected variables. However in some embodiments a respective webpage produced by the server references both a main style sheet and a differential style sheet and therefore the dynamic style sheet generator need not generate combined style sheets in these embodiments. The various style sheets are independent of the webpage content that is sent and received.

In some embodiments the user selected variable determines what type of event variables will be required. The event variables may be updated as an event changes or as events occur. For example if a user selects weather at a particular location for example in a particular city or at a particular postal code as a variable for their skin the event variables may be temperature precipitation or humidity level. At predetermined times one or more event variables may be updated with the correct and current information accordingly in order to produce the appropriate skin. In some embodiments the dynamic style sheet generator may access a list of the URLs for images in the image database that may be included in the webpage skin.

After the variable is selected the user of the client may then send a first request to the server . In some embodiments the initial request may be a search query a request for a new webpage or some type of information request. The server then determines a current first value of the user selected variable and generates or selects a first style sometimes herein called a first dynamic style based on the first value of the user selected variable . The server sends the first webpage with the first style to the client . The client then receives and presents the first webpage with the first style .

The user may then send a second request . In some embodiments the request may be a search query a request for a new webpage or some type of information request. Additionally in some embodiments the request may be a request to refresh the appearance of the first webpage. The refresh request may be automatically sent without any user action required or it may be sent in response to an explicit user action. The server then determines the second value of the user selected variable and dynamically generates or selects a second style based on the second value of the user selected variable . The second webpage having the second style is then sent to the client . The client therefore may receive and present the webpage with the second style .

In some embodiments when request is a request for a new or updated style sheet or alternately a refresh request operation is replaced with operations for sending the generated or selected style sheet to the requesting client without sending a new or updated webpage and operation is replaced with re displaying the previously downloaded webpage with the newly received style sheet. As a result the appearance of the webpage will change at the client without the content of the webpage changing. If the user continues to view the same webpage for a sufficiently long period of time operations through may be repeated multiple times with the appearance of the webpage changing multiple times. As noted above the styles or style sheets generated or selected by this process are often independent of the webpage content.

For example in some embodiments a user may select weather as the variable for a given webpage. When a user sends a request to present that webpage the server must obtain information regarding what the weather is in the user s location. If it is raining the server may utilize the dynamic style sheet generator to generate a webpage with graphics displaying rain. In some embodiments a refresh operation may be performed to obtain current information to update the displayed webpage. In some embodiments the refresh by the client may be generated manually by the user or the refresh may be generated by code in the webpage that is executed by the browser or the client.

In some embodiments a refresh request may be distinct from reloading the entire webpage. A refresh request may be a request for new information which may include content information style information or another type of information. In some embodiments the style of the webpage may be refreshed without refreshing the content of the webpage. For example if there is no new content but the user selected variable has changed in value the style may be updated without the content being updated. As shown in and as stated above the various style sheets are independent of content .

In some embodiments if there is a persistent connection between the server and the client the server may send style sheet and or content updates to the client even in the absence of a request from the client.

At a later time the user of Client A sends a second request to the server. As stated above in some embodiments the second request may be a search query a request for a new webpage or another type of information request. In other embodiments the request may be a request to refresh the appearance of the first webpage which may be user initiated or automatic. The server then dynamically generates or selects a second style based on a second value e.g. a new current value of the first variable and sends a second webpage having the second style to Client A. Client A receives and presents the second webpage having the second style . In some embodiments instead of requesting a second webpage the client e.g. Client A requests and receives a new style sheet which is applied to the webpage without downloading or refreshing the webpage content.

Similarly a user of Client B User B selects a variable . The variable selected by the user of Client B is received and stored by the server . In some embodiments the variable may be stored in User B s profile which is separate and distinct from the profile of User A above . At a later time the User B sends a request to the server . In some embodiments the request may be a search query a request for a new webpage or another type of information request. In response to the request the server dynamically generates or selects a third dynamic style based on a current value herein called the third value of the second variable . The current value of the second variable is herein called a third value to distinguish it from the aforementioned first and second values of the first variable. The server sends the third webpage have the third style to Client B. Client B receives and presents the third webpage having the third style .

At yet a later time User B sends another request . In some embodiments the request may be a search query a request for a new webpage or another type of information request. In other embodiments the request may be a request to refresh the appearance of the third webpage which may be user initiated or automatic. In response to the request the server dynamically generates or selects a fourth style based on a current value herein called the fourth value of the second variable and sends a fourth webpage having the fourth style to Client B. Client B receives and presents the fourth webpage having the fourth style . In some embodiments when request or is a request for a new or updated style sheet or alternately a refresh request operations or are replaced with operations for sending the generated or selected style sheet to the requesting client without sending a new or updated webpage.

In this example application code for performing various functions is also established and at least a portion of the application code is executed. As part of the application code a variable may be defined and assigned a current value . The current value assigned to the variable may change from time to time. For example the variable may be a user selected variable whose value depends on a condition external to the client. In addition the previously defined function see may be called by the application code from time to time using the current value of the variable as a parameter of the function call .

In some embodiments the creation or replacement of a link to a style sheet in the HTML code for a webpage results in an HTML request to the server specifying the URL of the style sheet being requested. An HTML request with that URL may be treated by the server as a function or procedure call to a style sheet generation function or procedure. The function or procedure generates or selects a style sheet in accordance with a current value of a variable identified in the user profile of the user associated with the requesting client e.g. the user may be associated with the client by a successful login with the server .

Memory includes high speed random access memory such as DRAM SRAM DDR RAM or other random access solid state memory devices and may include non volatile memory such as one or more magnetic disk storage devices optical disk storage devices or other non volatile solid state storage devices. Memory may optionally include one or more storage devices remotely located from the CPU s . Memory or one or more of the storage devices e.g. one or more non volatile storage devices in memory includes a computer readable storage medium. In some embodiments memory or the computer readable storage medium of memory stores the following programs modules and data structures or a subset thereof 

In some embodiments the webpages may display a webmail application or other type of online application. As described above the webpages may reference a rotating set of style sheets or a sequence of style sheets generated or selected in accordance with a user selected variable. In some embodiments the one or more style sheets may be locally cached for use by the client application . In other embodiments the style sheet s may be downloaded from the server each time a webpage is downloaded or refreshed.

Memory includes high speed random access memory such as DRAM SRAM DDR RAM or other random access solid state memory devices and may include non volatile memory such as one or more magnetic disk storage devices optical disk storage devices or other non volatile solid state storage devices. Memory may optionally include one or more storage devices remotely located from the CPU s . Memory or one or more of the storage devices e.g. one or more non volatile storage devices in memory includes a computer readable storage medium. In some embodiments memory or the computer readable storage medium of memory stores the following programs modules and data structures or a subset thereof 

In some embodiments the online application may be a webmail application or other type of online application. The dynamic style sheet generator generates or selects dynamic style sheets in accordance with one or more user selected variables as explained above.

The style sheet library may store main style sheets . The main style sheets may be combined with differential style sheets to produced combined style sheets . Alternately webpages produced by the online application may reference both a main style sheet and one or more differential style sheets . The various style sheets are utilized by the dynamic style sheet generator to send and create style sheets in accordance with the user selected variables.

The user profiles database stores information specific to each user. In some embodiments an individual user profile may include a user ID one or more used selected variables and other information specific to the user. Once a user ID has been assigned to a user the user may log onto a website or online application using their user ID . The user then may select a variable user selected variable in order to customize the appearance of the website or online application. The user selected variable is then stored in the user profile for that particular user.

Each of the above identified elements in may be stored in one or more of the previously mentioned memory devices. The applications functions modules and operating systems shown in these Figures correspond to sets of instructions for performing the functions described above. The above identified modules or programs i.e. set of instructions need not be implemented as separate software programs procedures or modules and thus various subsets of these modules may be combined or otherwise rearranged in various embodiments. In some embodiments memory and or memory may store a subset of the modules and data structures identified above. Furthermore memory and or memory may store additional modules and data structures not described above.

Although show respectively a client and a server the figures are intended more as functional descriptions of the various features which may be present in a client and a set of servers than as a structural schematic of the embodiments described herein. In practice and as recognized by those of ordinary skill in the art items shown separately could be combined and some items could be separated. For example some items shown separately in could be implemented on a single server and single items could be implemented by one or more servers. The actual number of servers used to implement server and how features are allocated among them will vary from one implementation to another and may depend in part on the amount of data traffic that the system must handle during peak usage periods as well as during average usage periods.

The foregoing description for purpose of explanation has been described with reference to specific embodiments. However the illustrative discussions above are not intended to be exhaustive or to limit the invention to the precise forms disclosed. Many modifications and variations are possible in view of the above teachings. The embodiments were chosen and described in order to best explain the principles of the invention and its practical applications to thereby enable others skilled in the art to best utilize the invention and various embodiments with various modifications as are suited to the particular use contemplated.

