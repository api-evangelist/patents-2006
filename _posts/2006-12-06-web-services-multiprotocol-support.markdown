---

title: Web services multi-protocol support
abstract: A solution is provided wherein a single service implementation may be exposed to users as two or more different web service protocols. The service then appears to the user to be utilizing a desired protocol even though the service itself is potentially operating under a different protocol. A gateway may be utilized that maintains mappings between the supported protocols. When a user sends a request to a particular service, the gateway may determine whether the request is in the format of the protocol utilized by the underlying web service. If not, the gateway may convert the format to match the correct protocol. An embodiment is also possible where a single endpoint is utilized for multiple services having multiple protocols. This may be coupled with an ability to detect a protocol automatically from request contents, thus seamlessly integrating multiple protocols into a user's experience.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07685304&OS=07685304&RS=07685304
owner: Yahoo! Inc.
number: 07685304
owner_city: Sunnyvale
owner_country: US
publication_date: 20061206
---
The present invention relates to the field of web services. More specifically the present invention relates to multi protocol support for web services.

The field of Web Services involves the creation and utilization of software systems designed to support interoperable machine to machine operation over a network typically the World Wide Web hence the name Web Services . There are a variety of different protocols utilized by various Web Services vendors and customers when operating these web services. Three of the most common Web Services protocols are Simple Object Access protocol SOAP Representational State Transfer REST and Extensible Markup Language Remote Procedure Call XML RPC .

In SOAP XML based messages are exchanged typically using HyperText Transfer Protocol HTTP . The use of XML can be both a benefit and a drawback. Its format is easy for humans to read and understand but it can create slow processing times and the extra XML wrapper around every request and response can create bandwidth issues. Additionally the use of SOAP requires the knowledge of a new XML specification and many developers will need a SOAP toolkit to form requests and parse the results. In spite of these drawbacks SOAP is currently the most commonly used Web Services protocol.

In REST a Uniform Resource Identifier URI is utilized for the messaging. The most common type of URI is a Uniform Resource Locator URL which many users will recognize as the data located in a web address field of an Internet browser. For example http www.brokerage.com quote symbol QQQ may be a URI in the REST protocol for issuing a request for a stock quote. REST has the advantage of the fact that any developer can figure out how to create and modify a URI to access different web services. The major disadvantage of REST is security in that is can be dangerous to provide sensitive information as parameters in a URI. Despite this limitation REST has been gaining momentum in comparison to SOAP.

XML RPC is a predecessor of SOAP. Despite numerous improvements made by SOAP over XML RPC XML RPC is still in use in many systems simply because many vendors have been slow to adopt newer protocols a common occurrence in the computer industry.

Since it is common to see many different protocols utilized in various web services it would be beneficial to provide a way for a single web service to be easily utilized by users familiar with any of the web services protocols as opposed to limiting access to a particular web service to only those users familiar with the one particular protocol utilized by the web service.

In the past the solution to this problem has been to provide different versions of the same web service for the various protocols. For example the aforementioned stock quote web service might be implemented with a SOAP version a REST version and an XML RPC version and the user can simply select which version to access. This solution however requires additional programming and wastes resources. What is needed is a solution that avoids the drawbacks of the prior art.

A solution is provided wherein a single service implementation may be exposed to users as two or more different web service protocols. The service then appears to the user to be utilizing a desired protocol even though the service itself is potentially operating under a different protocol. A gateway may be utilized that maintains mappings between the supported protocols. When a user sends a request to a particular service the gateway may determine whether the request is in the format of the protocol utilized by the underlying web service. If not the gateway may convert the format to match the correct protocol. An embodiment is also possible where a single endpoint is utilized for multiple services having multiple protocols. This may be coupled with an ability to detect a protocol automatically from request contents thus seamlessly integrating multiple protocols into a user s experience.

Reference will now be made in detail to specific embodiments of the invention including the best modes contemplated by the inventors for carrying out the invention. Examples of these specific embodiments are illustrated in the accompanying drawings. While the invention is described in conjunction with these specific embodiments it will be understood that it is not intended to limit the invention to the described embodiments. On the contrary it is intended to cover alternatives modifications and equivalents as may be included within the spirit and scope of the invention as defined by the appended claims. In the following description specific details are set forth in order to provide a thorough understanding of the present invention. The present invention may be practiced without some or all of these specific details. In addition well known features may not have been described in detail to avoid unnecessarily obscuring the invention.

The present invention provides a single service implementation that may be exposed to users as two or more different web service protocols. The service then appears to the user to be utilizing a desired protocol even though the service itself is potentially operating under a different protocol. A gateway may be utilized that maintains mappings between the supported protocols. When a user sends a request to a particular service the gateway may determine whether the request is in the format of the protocol utilized by the underlying web service. If not the gateway may convert the format to match the correct protocol.

It should be noted that throughout this document the term gateway shall be taken to mean any software or hardware or combination thereof that is able to intercept communications between clients and web services. While some implementations may locate the gateway physically between the client and the web service there is no requirement that the physical location of the gateway be separate from either the client or the web service.

In an embodiment of the present invention users may access a web service using either SOAP REST or XML RPC requests. The web service may utilize only one of these three protocols. Nevertheless embodiments are possible where different and or additional protocols may be supported and nothing in this document should be taken as limiting the scope of protection to the three protocols listed above except where explicitly stated.

In an embodiment of the present invention the user sends commands to the gateway as opposed to directly to the web service. As such the gateway acts as a first endpoint of communications. It should be noted that the user may or may not be aware of the use of the gateway. In some embodiments Uniform Resource Locator URL rewriting may be utilized to give the appearance to the user that he is directly accessing a web service using a particular protocol when in fact his requests are being routed through the gateway which converts the requests to a different protocol.

In order to perform the necessary conversions between protocols in an embodiment of the present invention configurable mappings may be stored by the gateway. These mappings may include predefined portions and user configurable portions. The predefined portions may contain mappings between commonly used commands. The user configurable portions may contain mappings that a user has added on top of or instead of the predefined mappings. This may be particularly useful for rare commands that universal mappings may not contain or commands that ordinarily have ambiguous conversions i.e. can be theoretically converted correctly to two or more different commands with the configurable mapping clearing up the ambiguity.

In an embodiment of the present invention the gateway may intercept requests from and responses to the user in order to perform the translations. The term intercept is used loosely however since the user and web service may both be fully aware that the gateway exists and may be intentionally sending the requests and responses directly to the gateway.

At the response may be converted into the first protocol using the stored mapping. It should be noted that and only need to be performed if the protocol of response must be converted. If for example it was determined at that the web service supports the first protocol then it is likely that the responses from the web service would also be in the first protocol and thus and need not be performed. Then at the response may be sent to the first user.

A first response first protocol converter coupled to the stored mapping accessor may convert the response into the first protocol using the stored mapping. Then a first response first user sender coupled to the first response first protocol converter and to the first web service protocol determiner may send the response to the first user.

Furthermore in an embodiment of the present invention multiple services with multiple protocols may have a single endpoint. This may be coupled with the ability to detect a protocol automatically from request contents. In such an embodiment the system essentially seamlessly automates the use of multiple services while potentially hiding such details from the users.

While the invention has been particularly shown and described with reference to specific embodiments thereof it will be understood by those skilled in the art that changes in the form and details of the disclosed embodiments may be made without departing from the spirit or scope of the invention. In addition although various advantages aspects and objects of the present invention have been discussed herein with reference to various embodiments it will be understood that the scope of the invention should not be limited by reference to such advantages aspects and objects. Rather the scope of the invention should be determined with reference to the appended claims.

