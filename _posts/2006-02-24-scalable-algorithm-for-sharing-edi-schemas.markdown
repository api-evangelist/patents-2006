---

title: Scalable algorithm for sharing EDI schemas
abstract: Recreating an electronic data interchange (EDI) schema from a file. The file is received from a source and the file includes a plurality of data values. The plurality of data values is identified. The plurality of data values is analyzed to determine the structure of the EDI schema. A set of decoding rules is analyzed to the analyzed plurality of data values. The EDI schema is recreated as a function of the applied set of decoding rules and the analyzed plurality of data values.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08156148&OS=08156148&RS=08156148
owner: Microsoft Corporation
number: 08156148
owner_city: Redmond
owner_country: US
publication_date: 20060224
---
Electronic data interchange EDI is one of the ways businesses use for exchanging computer to computer business information based on approved formatting standards and schemas. For example millions of companies around the world transmit data associated with business transactions e.g. purchase orders shipping air bills invoices or the like using EDI to conduct commerce.

In a typical EDI transaction model a large business entity or an EDI integration broker trades with numerous partners and has the technical capability to handle numerous EDI transaction data in various EDI formats and schemas. These entities also known as hubs transact with one or more suppliers also known as spokes . Each of the spokes typically is a relatively small business entity that is only capable of dealing with one hub.

Before the spokes attempt to initiate transactions via EDI with the hub the hub typically transmits various EDI schemas to the spokes so that the spokes may properly format the EDI transactions according to the EDI schemas. Currently EDI schemas are large in size and the file size for each EDI schema typically ranges from 1 MB to 3 MB. In addition the hub or large trading partners customarily transmit a large amount of schemas to the spokes without taking into considerations of the spokes lack of hardware capability. As such thousands of such schemas which may occupy several gigabytes in bandwidth during transmission are transmitted from the hub to the spokes. This practice unduly burdens the spokes ability to handle schemas efficiently when their data connection bandwidth is limited.

Embodiments of the invention overcome the deficiencies of existing systems and practice by processing the schemas to enable trading partners to exchange schemas in bulk without placing transmission burdens on the spokes. Embodiments of the invention generate a simple text file embodying the information or data relating to the schemas while removing redundant and repeated information.

This summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used as an aid in determining the scope of the claimed subject matter.

Referring first to a block diagram illustrates a system for developing a file corresponding to an electronic data interchange EDI schema according to an embodiment of the invention. The system includes a hub linked to and communicating with one or more spokes . In one embodiment the hub includes a server computer or a computing device serving one or more processors e.g. processor or processing units for executing computer executable instructions for serving the spokes . In one example the spokes include a computing device having one or more components included in or coupled with a computer as shown in .

In one example the hub also includes a memory area for storing one or more EDI schemas such as an EDI schema . Initially the hub and the spokes establish agreements as to the EDI formats or standards to be used for transmitting transaction data therebetween. Once the parties determine the particular EDI formats or standards the hub selects the appropriate EDI schemas to be transmitted to the spokes . In another example the hub may choose to select all EDI schemas for all types of transactions such as purchase orders bills of lading invoices payrolls or the like to the spokes . Although the communications between the hub and the spokes can be a private or public either wired or wirelessly communications network the spokes typically lack the hardware resources to handle large amount of EDI schemas sent from the hub . In addition the type and bandwidth of computing network communications for the spokes are not equipped to handle such demand imposed by the thousands of EDI schemas which can reach several Gigabytes in data size. For example the spokes may be connected to a public communications network such as the internet via a dial up a digital subscriber line DSL or a cable connection which has a limited data transmission bandwidth.

As such the processor of the hub develops a file e.g. file or for the spokes such that the EDI schema can be re created from the file and the file size of the file is substantially smaller than the EDI schema .

Referring now to a block diagram illustrates an exemplary EDI schema to be processed by the system in according to an embodiment of the invention. In this example the EDI schema is written in an eXtensible Markup Language XML format and includes one or more XML tags which are self describing but are verbose and demand greater resource requirements in terms of disk space or memory for processing.

For example a tag statement indicates that there are three data elements minimum occurrence maximum occurrence and name. As shown in each data element includes a data value such as 0 1 and SAC04 respectively.

In developing or generating the file embodiments of the invention identify a plurality of syntax structures in the EDI schema . For the example the processor of the hub executes computer executable instructions for identifying the plurality of syntax structures such as or other XML tags defining a type of transaction associated with the EDI schema . In one example the XML tags may define a purchase order transaction schema while other XML tags may appropriately identify EDI schemas of other transaction type e.g. invoice payroll or the like .

Still referring to once the plurality of syntax structure is identified a plurality of EDI data values is extracted from the identified plurality of syntax structures according to the defined type. Once the plurality of the EDI data values is extracted embodiments of the invention generate a file corresponding to the type and include the extracted data values in the generated file such that the EDI schema can be re created from the generated file. For example the processor of the hub extracts a data value AN from a XML tag statement after identifying the syntax structure of . Likewise a XML tag statement reveals that 1 is the data value to be extracted. Similarly the processor of the hub may also extract a data value 10 from an XML tag statement after identifying the syntax structure of .

It is to be understood that embodiments of the invention may appropriately identify EDI scripting languages or programming languages other than XML such as HTML or XSLT in identify the syntax structures of the languages without departing from the scope of the invention.

Referring now to a block diagram illustrates a first exemplary file developed from the EDI schema in according to an embodiment of the invention. In this example the file includes the following extracted data values to represent the EDI schema SAC04 0 1 AN 1 10 . In one embodiment the extracted data value in the file is organized according to an encoding rule. In one example the encoding rule defines or formats the extracted data values by placing data values in the following order name minimum occurrence maximum occurrence restriction base minlength maxlength. It is to be understood that other sequencing order of extracted data values or formatting styles e.g. delimiter characters indentation carriage return symbols or the like may be employed without departing from the scope of the invention.

As shown in the content of the EDI schema includes about 273 characters excluding the spaces while the developed or generated file includes only 19 characters including the spaces. Both EDI schema and the developed file represent the essential information which defines and describes a format of a transaction type for the spokes. With such a reduced simplicity and data size embodiments of the invention ease the burden on the spokes to handle numerous EDI schemas transmission. illustrates another example of a second exemplary file representing an EDI schema having a SACLoop.

In the example illustrated in the exemplary file includes a compacted SACLoop. The SACLoop is a loop structure and includes other children structure. In this example the SACLoop includes two children SAC and CUR . In one embodiment each line representing a child is indented in the file for readability. In addition each child may also include one or more children. As such both children SAC and CUR and their respective children e.g. SAC01 to SAC16 and CUR01 to CUR21 are compacted according to the method illustrated above.

In another embodiment the size of the developed or generated file may be further reduced in size by using any generic data compression algorithm or known compression technique e.g. zip tar rar or the like to further compact the size of the file .

For example a selection component selects an EDI schema for transmission to a destination device such as a spoke at . A data component identifies a plurality of syntax structures in the selected EDI schema at . At an extracting component extracts a plurality of EDI data values from the identified plurality of syntax structures according to the defined type. A file component generates a file such as file corresponding to the type and including the extracted data values in the generated file such that the EDI schema can be re created from the generated file. In another embodiment a transmission component transmits the generated or developed file from a source e.g. the hub to the destination device e.g. the spokes .

In operation embodiments of the invention may be implemented in the following manner. A hub such as a large business entity which operates a number of computing equipment that is capable of processing thousands of EDI documents or transactions selects one or more the EDI schema for transmission to a destination device such as a spoke. Instead of transmitting the schemas in its original format the hub identifies a plurality of syntax structures in the selected EDI schema. The plurality of syntax structures defines a type of transaction associated with the EDI schema. For example the hub may select a purchase order type of schema.

The hub next extracts a plurality of EDI data values from the identified plurality of syntax structures according to the defined type. For example for a purchase order type of EDI transaction one or more particular data values are extracted according to the purchase order type. Upon extracting the hub generates a file corresponding to the type and includes the extracted data values in the generated file such that the EDI schema can be re created from the generated file.

The computer typically has at least some form of computer readable media. Computer readable media which include both volatile and nonvolatile media removable and non removable media may be any available medium that may be accessed by computer . By way of example and not limitation computer readable media comprise computer storage media and communication media. Computer storage media include volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. For example computer storage media include RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical disk storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium that may be used to store the desired information and that may be accessed by computer . Communication media typically embody computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and include any information delivery media. Those skilled in the art are familiar with the modulated data signal which has one or more of its characteristics set or changed in such a manner as to encode information in the signal. Wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media are examples of communication media. Combinations of any of the above are also included within the scope of computer readable media.

The system memory includes computer storage media in the form of removable and or non removable volatile and or nonvolatile memory. In the illustrated embodiment system memory includes read only memory ROM and random access memory RAM . A basic input output system BIOS containing the basic routines that help to transfer information between elements within computer such as during start up is typically stored in ROM . RAM typically contains data and or program modules that are immediately accessible to and or presently being operated on by processing unit . By way of example and not limitation illustrates operating system application programs other program modules and program data .

The computer may also include other removable non removable volatile nonvolatile computer storage media. For example illustrates a hard disk drive that reads from or writes to non removable nonvolatile magnetic media. also shows a magnetic disk drive that reads from or writes to a removable nonvolatile magnetic disk and an optical disk drive that reads from or writes to a removable nonvolatile optical disk such as a CD ROM or other optical media. Other removable non removable volatile nonvolatile computer storage media that may be used in the exemplary operating environment include but are not limited to magnetic tape cassettes flash memory cards digital versatile disks digital video tape solid state RAM solid state ROM and the like. The hard disk drive and magnetic disk drive and optical disk drive are typically connected to the system bus by a non volatile memory interface such as interface .

The drives or other mass storage devices and their associated computer storage media discussed above and illustrated in provide storage of computer readable instructions data structures program modules and other data for the computer . In for example hard disk drive is illustrated as storing operating system application programs other program modules and program data . Note that these components may either be the same as or different from operating system application programs other program modules and program data . Operating system application programs other program modules and program data are given different numbers here to illustrate that at a minimum they are different copies.

The computer may operate in a networked environment using logical connections to one or more remote computers such as a remote computer . The remote computer may be a personal computer a server a router a network PC a peer device or other common network node and typically includes many or all of the elements described above relative to computer . The logical connections depicted in include a local area network LAN and a wide area network WAN but may also include other networks. LAN and or WAN may be a wired network a wireless network a combination thereof and so on. Such networking environments are commonplace in offices enterprise wide computer networks intranets and global computer networks e.g. the Internet .

When used in a local area networking environment computer is connected to the LAN through a network interface or adapter . When used in a wide area networking environment computer typically includes a modem or other means for establishing communications over the WAN such as the Internet. The modem which may be internal or external is connected to system bus via the user input interface or other appropriate mechanism. In a networked environment program modules depicted relative to computer or portions thereof may be stored in a remote memory storage device not shown . By way of example and not limitation illustrates remote application programs as residing on the memory device. The network connections shown are exemplary and other means of establishing a communications link between the computers may be used.

Generally the data processors of computer are programmed by means of instructions stored at different times in the various computer readable storage media of the computer. Programs and operating systems are typically distributed for example on floppy disks or CD ROMs. From there they are installed or loaded into the secondary memory of a computer. At execution they are loaded at least partially into the computer s primary electronic memory. Aspects of the invention described herein includes these and other various types of computer readable storage media when such media contain instructions or programs for implementing the steps described below in conjunction with a microprocessor or other data processor. Further aspects of the invention include the computer itself when programmed according to the methods and techniques described herein.

For purposes of illustration programs and other executable program components such as the operating system are illustrated herein as discrete blocks. It is recognized however that such programs and components reside at various times in different storage components of the computer and are executed by the data processor s of the computer.

Although described in connection with an exemplary computing system environment including computer embodiments of the invention are operational with numerous other general purpose or special purpose computing system environments or configurations. The computing system environment is not intended to suggest any limitation as to the scope of use or functionality of any aspect of the invention. Moreover the computing system environment should not be interpreted as having any dependency or requirement relating to any one or combination of components illustrated in the exemplary operating environment. Examples of well known computing systems environments and or configurations that may be suitable for use with aspects of the invention include but are not limited to personal computers server computers hand held or laptop devices multiprocessor systems microprocessor based systems set top boxes programmable consumer electronics mobile telephones network PCs minicomputers mainframe computers distributed computing environments that include any of the above systems or devices and the like.

Embodiments of the invention may be described in the general context of computer executable instructions such as program modules executed by one or more computers or other devices. Generally program modules include but are not limited to routines programs objects components and data structures that perform particular tasks or implement particular abstract data types. Aspects of the invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules may be located in both local and remote computer storage media including memory storage devices.

An interface in the context of a software architecture includes a software module component code portion or other sequence of computer executable instructions. The interface includes for example a first module accessing a second module to perform computing tasks on behalf of the first module. The first and second modules include in one example application programming interfaces APIs such as provided by operating systems component object model COM interfaces e.g. for peer to peer application communication and extensible markup language metadata interchange format XMI interfaces e.g. for communication between web services .

The interface may be a tightly coupled synchronous implementation such as in Java 2 Platform Enterprise Edition J2EE COM or distributed COM DCOM examples. Alternatively or in addition the interface may be a loosely coupled asynchronous implementation such as in a web service e.g. using the simple object access protocol . In general the interface includes any combination of the following characteristics tightly coupled loosely coupled synchronous and asynchronous. Further the interface may conform to a standard protocol a proprietary protocol or any combination of standard and proprietary protocols.

The interfaces described herein may all be part of a single interface or may be implemented as separate interfaces or any combination therein. The interfaces may execute locally or remotely to provide functionality. Further the interfaces may include additional or less functionality than illustrated or described herein.

Referring now to a flow chart illustrates operations of recreating an EDI schema from a file such as the file according to an embodiment of the invention. At the file is received from a source such as the hub . The file includes a plurality of data values. The plurality of data values is identified to be processed at . At the plurality of data values is analyzed to determine a structure of the EDI schema. For example the data values in the file are analyzed to determine whether the EDI schema is a purchase order schema or an invoice schema. At a set of decoding rules is applied to the analyzed plurality of data values. For example the set of decoding rules identifies a set of delimiters between a character or a group of characters e.g. space or the like . At the EDI schema is recreated as a function of the applied set of decoding rules and the analyzed plurality of data values. In another embodiment the operations described in are performed by the spokes after receiving the file from the hub . In an alternative embodiment the hub transmits or sends the set of decoding rules to the spokes for decode the data values in the file.

In operation computer executes computer executable instructions such as those illustrated in the figures such as to implement aspects of the invention.

The order of execution or performance of the operations in embodiments of the invention illustrated and described herein is not essential unless otherwise specified. That is the operations may be performed in any order unless otherwise specified and embodiments of the invention may include additional or fewer operations than those disclosed herein. For example it is contemplated that executing or performing a particular operation before contemporaneously with or after another operation is within the scope of aspects of the invention.

Embodiments of the invention may be implemented with computer executable instructions. The computer executable instructions may be organized into one or more computer executable components or modules. Aspects of the invention may be implemented with any number and organization of such components or modules. For example aspects of the invention are not limited to the specific computer executable instructions or the specific components or modules illustrated in the figures and described herein. Other embodiments of the invention may include different computer executable instructions or components having more or less functionality than illustrated and described herein.

When introducing elements of aspects of the invention or the embodiments thereof the articles a an the and said are intended to mean that there are one or more of the elements. The terms comprising including and having are intended to be inclusive and mean that there may be additional elements other than the listed elements.

As various changes could be made in the above constructions products and methods without departing from the scope of aspects of the invention it is intended that all matter contained in the above description and shown in the accompanying drawings shall be interpreted as illustrative and not in a limiting sense.

