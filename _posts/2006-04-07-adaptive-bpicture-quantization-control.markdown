---

title: Adaptive B-picture quantization control
abstract: The present application is directed to techniques and tools for adapting the quantizer as well as the quantization step size used during video encoding. For example, a video encoder uses a non-uniform quantizer (having a relatively large dead zone ratio) for B-picture types, but uses a uniform quantizer for other types of pictures. In many encoding scenarios, this helps the encoder control bit rate for the B-picture types instead of resorting to higher quantization step sizes, which improves overall quality for the B-picture types.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07974340&OS=07974340&RS=07974340
owner: Microsoft Corporation
number: 07974340
owner_city: Redmond
owner_country: US
publication_date: 20060407
---
With the increased popularity of DVDs music delivery over the Internet and digital cameras digital media have become commonplace. Engineers use a variety of techniques to process digital audio video and images efficiently while still maintaining quality. To understand these techniques it helps to understand how the audio video and image information is represented and processed in a computer.

A computer processes media information as a series of numbers representing that information. For example a single number may represent the intensity of brightness or the intensity of a color component such as red green or blue for each elementary small region of a picture so that the digital representation of the picture consists of one or more arrays of such numbers. Each such number may be referred to as a sample. For a color image it is conventional to use more than one sample to represent the color of each elemental region and typically three samples are used. The set of these samples for an elemental region may be referred to as a pixel where the word pixel is a contraction referring to the concept of a picture element. For example one pixel may consist of three samples that represent the intensity of red green and blue light necessary to represent the elemental region. Such a pixel type is referred to as an RGB pixel. Several factors affect quality of media information including sample depth resolution and frame rate for video .

Sample depth is a property normally measured in bits that indicates the range of numbers that can be used to represent a sample. When more values are possible for the sample quality can be higher because the number can capture more subtle variations in intensity and or a greater range of values. Resolution generally refers to the number of samples over some duration of time for audio or space for images or individual video pictures . Images with higher resolution tend to look crisper than other images and contain more discernable useful details. Frame rate is a common term for temporal resolution for video. Video with higher frame rate tends to mimic the smooth motion of natural objects better than other video and can similarly be considered to contain more detail in the temporal dimension. For all of these factors the tradeoff for high quality is the cost of storing and transmitting the information in terms of the bit rate necessary to represent the sample depth resolution and frame rate as Table 1 shows.

Despite the high bit rate necessary for storing and sending high quality video such as HDTV companies and consumers increasingly depend on computers to create distribute and play back high quality content. For this reason engineers use compression also called source coding or source encoding to reduce the bit rate of digital media. Compression decreases the cost of storing and transmitting the information by converting the information into a lower bit rate form. Compression can be lossless in which quality of the video does not suffer but decreases in bit rate are limited by the complexity of the video. Or compression can be lossy in which quality of the video suffers but decreases in bit rate are more dramatic. Decompression also called decoding reconstructs a version of the original information from the compressed form. A codec is an encoder decoder system.

In general video compression techniques include intra compression and inter or predictive compression. For video frames intra compression techniques compress individual frames typically called I frames or key frames. Inter compression techniques compress frames with reference to preceding and or following frames and inter compressed frames are typically called predicted frames P frames or B frames.

Microsoft Corporation s Windows Media Video Version 8 WMV8 includes a video encoder and a video decoder. The WMV8 encoder uses intra and inter compression and the WMV8 decoder uses intra and inter decompression. Windows Media Video Version 9 WMV9 uses a similar architecture for many operations.

The encoder then quantizes the DCT coefficients resulting in an 8 8 block of quantized DCT coefficients . Quantization is lossy. Since low frequency DCT coefficients tend to have higher values quantization results in loss of precision but not complete loss of the information for the coefficients. On the other hand since high frequency DCT coefficients tend to have values of zero or close to zero quantization of the high frequency coefficients typically results in contiguous regions of zero values. In addition in some cases high frequency DCT coefficients are quantized more coarsely than low frequency DCT coefficients resulting in greater loss of precision information for the high frequency DCT coefficients.

The encoder then prepares the 8 8 block of quantized DCT coefficients for entropy encoding which is a form of lossless compression. The exact type of entropy encoding can vary depending on whether a coefficient is a DC coefficient lowest frequency an AC coefficient other frequencies in the top row or left column or another AC coefficient.

The encoder encodes the DC coefficient as a differential from the DC coefficient of a neighboring 8 8 block which is a previously encoded neighbor e.g. top or left of the block being encoded. shows a neighbor block that is situated to the left of the block being encoded in the frame. The encoder entropy encodes the differential.

The entropy encoder can encode the left column or top row of AC coefficients as a differential from a corresponding left column or top row of the neighboring 8 8 block. This is an example of AC coefficient prediction. shows the left column of AC coefficients encoded as a differential from the left column of the neighboring in reality to the left block . The differential coding increases the chance that the differential coefficients have zero values. The remaining AC coefficients are from the block of quantized DCT coefficients.

The encoder scans the 8 8 block of quantized AC DCT coefficients into a one dimensional array and then entropy encodes the scanned AC coefficients using a variation of run length coding . The encoder selects an entropy code from one or more run level last tables and outputs the entropy code.

Inter compression uses block based motion compensated prediction coding followed by transform coding of the residual error. illustrates motion estimation for a predicted frame .

In the encoder computes a motion vector for a macroblock in the predicted frame . To compute the motion vector the encoder searches in a search area of a reference frame . Within the search area the encoder compares the macroblock from the predicted frame to various candidate macroblocks in order to find a candidate macroblock that is a good match. The encoder outputs information specifying the motion vector entropy coded for the matching macroblock. The motion vector is differentially coded with respect to a motion vector predictor.

After reconstructing the motion vector by adding the differential to the motion vector predictor a decoder uses the motion vector to compute a prediction macroblock for the macroblock using information from the reference frame which is a previously reconstructed frame available at the encoder and the decoder.

The prediction is rarely perfect so the encoder usually encodes blocks of pixel differences also called the error or residual blocks between the prediction macroblock and the macroblock itself. The encoder encodes the residual blocks by performing a DCT on the residual blocks quantizing the DCT coefficients and entropy encoding the quantized DCT coefficients.

The preceding section mentioned quantization a mechanism for lossy compression and entropy coding also called lossless compression. Lossless compression reduces the bit rate of information by removing redundancy from the information without any reduction in fidelity. For example a series of ten consecutive pixels that are all exactly the same shade of red could be represented as a code for the particular shade of red and the number ten as a run length of consecutive pixels and this series can be perfectly reconstructed by decompression from the code for the shade of red and the indicated number ten of consecutive pixels having that shade of red. Lossless compression techniques reduce bit rate at no cost to quality but can only reduce bit rate up to a certain point. Decreases in bit rate are limited by the inherent amount of variability in the statistical characterization of the input data which is referred to as the source entropy.

In contrast with lossy compression the quality suffers somewhat but the achievable decrease in bit rate is more dramatic. For example a series of ten pixels each being a slightly different shade of red can be approximated as ten pixels with exactly the same particular approximate red color. Lossy compression techniques can be used to reduce bit rate more than lossless compression techniques but some of the reduction in bit rate is achieved by reducing quality and the lost quality cannot be completely recovered. Lossy compression is often used in conjunction with lossless compression in a system design in which the lossy compression establishes an approximation of the information and lossless compression techniques are applied to represent the approximation. For example the series of ten pixels each a slightly different shade of red can be represented as a code for one particular shade of red and the number ten as a run length of consecutive pixels. In general an encoder varies quantization to trade off quality and bit rate. Coarser quantization results in greater quality reduction but allows for greater bit rate reduction. In decompression the original series would then be reconstructed as ten pixels with the same approximated red color.

According to one possible definition quantization is a term used for an approximating non reversible mapping function commonly used for lossy compression in which there is a specified set of possible output values and each member of the set of possible output values has an associated set of input values that result in the selection of that particular output value. A variety of quantization techniques have been developed including scalar or vector uniform or non uniform and adaptive or non adaptive quantization.

According to one possible definition a scalar quantizer is an approximating functional mapping x Q x of an input value x to a quantized value Q x . shows a staircase I O function for a scalar quantizer. The horizontal axis is a number line for a real number input variable x and the vertical axis indicates the corresponding quantized values Q x . The number line is partitioned by thresholds such as the threshold . Each value of x within a given range between a pair of adjacent thresholds is assigned the same quantized value Q x . For example each value of x within the range is assigned the same quantized value . At a threshold one of the two possible quantized values is assigned to an input x depending on the system. Overall the quantized values Q x exhibit a discontinuous staircase pattern. The distance the mapping continues along the number line depends on the system typically ending after a finite number of thresholds. The placement of the thresholds on the number line may be uniformly spaced as shown in or non uniformly spaced.

A scalar quantizer can be decomposed into two distinct stages. The first stage is the classifier stage in which a classifier function mapping x A x maps an input x to a quantization index A x which is often integer valued. In essence the classifier segments an input number line or data set. shows a generalized classifier and thresholds for a scalar quantizer. As in a number line for a real number variable x is segmented by thresholds such as the threshold . Each value of x within a given range such as the range is assigned the same quantized value Q x . shows a numerical example of a classifier and thresholds for a scalar quantizer.

In the second stage a reconstructor functional mapping k k maps each quantization index k to a reconstruction value k . In essence the reconstructor places steps having a particular height relative to the input number line segments or selects a subset of data set values for reconstruction of each region determined by the classifier. The reconstructor functional mapping may be implemented for example using a lookup table. Overall the classifier relates to the reconstructor as follows Q x A x 1 .

In common usage the term quantization is often used to describe the classifier stage which is performed during encoding. The term inverse quantization is similarly used to describe the reconstructor stage whether performed during encoding or decoding.

The distortion introduced by using such a quantizer may be computed with a difference based distortion measure d x Q x . Typically such a distortion measure has the property that d x Q x increases as x Q x deviates from zero and typically each reconstruction value lies within the range of the corresponding classification region so that the straight line that would be formed by the functional equation Q x x will pass through every step of the staircase diagram as shown in and therefore Q Q x will typically be equal to Q x . In general a quantizer is considered better in rate distortion terms if the quantizer results in a lower average value of distortion than other quantizers for a given bit rate of output. More formally a quantizer is considered better if for a source random variable X the expected i.e. the average or statistical mean value of the distortion measure Ed X Q X is lower for an equal or lower entropy H of A X . The most commonly used distortion measure is the squared error distortion measure for which d x y x y . When the squared error distortion measure is used the expected value of the distortion measure is referred to as the mean squared error.

A non uniform quantizer has threshold values that are not uniformly spaced for all classifier regions. According to one possible definition a dead zone plus uniform threshold quantizer DZ UTQ is a quantizer with uniformly spaced threshold values for all classifier regions except the one containing the zero input value which is called the dead zone DZ . In a general sense a DZ UTQ is a non uniform quantizer since the DZ size is different than the other classifier regions.

A DZ UTQ has a classifier index mapping rule x A x that can be expressed based on two parameters. shows a staircase I O function for a DZ UTQ and shows a generalized classifier and thresholds for a DZ UTQ. The parameter s which is greater than 0 indicates the step size for all steps other than the DZ. Mathematically all sare equal to s for i 0. The parameter z which is greater than or equal to 0 indicates the ratio of the DZ size to the size of the other steps. Mathematically s z s. In z is 2 so the DZ is twice as wide as the other classification zones. The index mapping rule x A x for a DZ UTQ can be expressed as 

Different reconstruction rules may be used to determine the reconstruction value for each quantization index. Standards and product specifications that focus only on achieving interoperability will often specify reconstruction values without necessarily specifying the classification rule. In other words some specifications may define the functional mapping k k without defining the functional mapping x A x . This allows a decoder built to comply with the standard specification to reconstruct information correctly. In contrast encoders are often given the freedom to change the classifier in any way that they wish while still complying with the standard specification.

Numerous systems for adjusting quantization thresholds have been developed. Many standards and products specify reconstruction values that correspond to a typical mid point reconstruction rule e.g. for a typical simple classification rule for the sake of simplicity. For classification however the thresholds can in fact be adjusted so that certain input values will be mapped to more common and hence lower bit rate indices which makes the reconstruction values closer to optimal.

In many systems the extent of quantization is measured in terms of quantization step size. Coarser quantization uses larger quantization step sizes corresponding to wider ranges of input values. Finer quantization uses smaller quantization step sizes. Often for purposes of signaling and reconstruction quantization step sizes are parameterized as multiples of a smallest quantization step size.

As mentioned above lossy compression tends to cause a decrease in quality. For example a series of ten samples of slightly different values can be approximated using quantization as ten samples with exactly the same particular approximate value. This kind of quantization can reduce the bit rate of encoding the series of ten samples but at the cost of lost detail in the original ten samples. In some cases quantization also can produce visible artifacts that tend to be more artificial looking and visually distracting than simple loss of fine detail. For example smooth un textured content is susceptible to contouring artifacts artifacts that appear between regions of two different quantization output values because the human visual system is sensitive to subtle differences particularly luma differences between adjacent areas of flat color.

Another perceptual effect of quantization occurs when average quantization step sizes are varied between frames in a sequence. Although the flexibility to change quantization step sizes can help control bit rate an unpleasant flicker effect can occur when average quantization step sizes vary too much from frame to frame and the difference in quality between frames becomes noticeable.

In some systems an encoder can use different quantizers and different quantization step size parameters QPs for different sequences different frames and different parts of frames.

For example a VC 1 encoder specifies a quantizer used for a video sequence. The encoder sends a 2 bit bitstream element QUANTIZER at sequence level in a bitstream syntax to indicate a quantizer type for the sequence. QUANTIZER indicates that the quantizer for the sequence is specified as being uniform or non uniform at frame level that the encoder uses a non uniform quantizer for all frames or that the encoder uses a uniform quantizer for all frames. Whether the encoder uses a uniform quantizer or non uniform quantizer the encoder sends a frame level bitstream element PQINDEX to indicate a default frame QP PQUANT . If QUANTIZER indicates an implicitly specified quantizer PQINDEX also indicates whether the quantizer used is uniform or non uniform. If QUANTIZER indicates an explicitly specified quantizer the frame level bitstream element PQUANTIZER is sent to indicate whether the quantizer for the frame is uniform or non uniform. PQINDEX is present and PQUANTIZER is present if required in all frame types.

Table 2 shows how PQINDEX is translated to PQUANT for the case where QUANTIZER 0 indicating the quantizer is implicit and hence specified by PQINDEX .

If the quantizer is signaled explicitly at the sequence or frame level signaled by syntax element QUANTIZER 01 10 or 11 then PQUANT is equal to PQINDEX for all nonzero values of PQINDEX.

Numerous international standards specify aspects of video decoders and formats for compressed video information. Directly or by implication these standards also specify certain encoder details but other encoder details are not specified. Some standards address still image compression decompression and other standards address audio compression decompression. Numerous companies have produced encoders and decoders for audio still images and video. Various other kinds of signals for example hyperspectral imagery graphics text financial information etc. are also commonly represented and stored or transmitted using compression techniques.

Standards typically do not fully specify the quantizer design. Most allow some variation in the encoder classification rule x A x and or the decoder reconstruction rule k k .

The use of a DZ ratio z 2 or greater has been implicit in a number of encoding designs. For example the spacing of reconstruction values for predicted regions in some standards implies use of z 2. Reconstruction values in these examples from standards are spaced appropriately for use of DZ UTQ classification with z 2 and mid point reconstruction. Altering thresholds to increase optimality for the specified reconstruction values as described above results in an even larger DZ ratio since the DZ requires fewer bits to select than the other levels .

Given the critical importance of video compression to digital video it is not surprising that video compression is a richly developed field. Whatever the benefits of previous video compression techniques however they do not have the advantages of the following techniques and tools.

The present application is directed to techniques and tools for adapting the quantizer as well as the quantization step size used during video encoding. For example a video encoder uses a non uniform quantizer having a relatively large dead zone ratio for B picture types but uses a uniform quantizer for other types of pictures. In many encoding scenarios this helps the encoder control bit rate for the B picture types instead of resorting to higher quantization step sizes which improves overall quality for the B picture types.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

In one aspect a video encoder selects a picture type e.g. a B picture type for a current picture and uses the selected picture type when selecting between multiple available quantizers for the current picture. Each of the multiple available quantizers has a different dead zone ratio. The selected quantizer for the current picture e.g. a non uniform quantizer has a larger dead zone ratio than one or more other quantizers among the multiple available quantizers. The encoder applies the selected quantizer to the current picture and outputs encoded data for the current picture. The larger dead zone ratio of the selected quantizer for the current picture applies for AC coefficients but not for DC coefficients. For example the larger dead zone ratio results in larger dead zone regions that each have a size that is a function of a quantization step size QP . For AC coefficients and the size can be approximately 0.8 QP on each side of zero for each QP of the selected quantizer and for DC coefficients the size can be equal to 0.5 QP on each side of zero for each QP of the quantizer.

In another aspect if a current picture is a P picture or an I picture an encoder selects a uniform quantizer with uniform dead zone for AC coefficients for the current picture and applies the selected uniform quantizer to the current picture. If the current picture is a B picture the encoder selects a non uniform quantizer with a non uniform dead zone for AC coefficients for the current picture where the non uniform dead zone is larger than the uniform dead zone of the uniform quantizers.

In another aspect an encoder comprises a frequency transformer for frequency transforming plural blocks of spatial domain information into plural blocks of transform coefficients a quantizer for quantizing the transform coefficients an entropy encoder for entropy encoding the quantized transform coefficients an inverse quantizer for inverse quantizing the quantized transform coefficients and a controller for selecting e.g. by using picture type quantizers e.g. uniform or non uniform quantizers and quantization step sizes for the quantizing. The controller chooses between plural available quantizers each of the plural available quantizers having a different dead zone ratio. The controller implements a first path for increasing dead zone ratio while decreasing quantization step size for a given level of rate distortion performance and a second path for decreasing dead zone ratio while increasing quantization step size for the given level of rate distortion performance. The controller can follow the first path if a current picture is a B picture type and otherwise follow the second path. For a current picture the encoder can select a first quantizer from among the plural available quantizers if the current picture has a B picture type and otherwise select a second quantizer from among the plural available quantizers. The encoder can further comprise a motion estimator for estimating motion in predicted pictures from reference pictures a motion compensator for applying the estimated motion and one or more reference picture buffers for storing the reference pictures.

The foregoing and other objects features and advantages will become more apparent from the following detailed description which proceeds with reference to the accompanying figures.

The present application relates to techniques and tools for efficient compression of video. In various described embodiments a video encoder incorporates techniques for encoding video and corresponding signaling techniques for use with a bitstream format or syntax comprising different layers or levels. Described techniques and tools can be applied to interlaced or progressive frames. A decoder can perform corresponding decoding.

Various alternatives to the implementations described herein are possible. For example techniques described with reference to flowchart diagrams can be altered by changing the ordering of stages shown in the flowcharts by repeating or omitting certain stages etc. As another example although some implementations are described with reference to specific macroblock formats other formats also can be used.

The various techniques and tools can be used in combination or independently. Different embodiments implement one or more of the described techniques and tools. Some techniques and tools described herein can be used in a video encoder or in some other system not specifically limited to video encoding.

With reference to the computing environment includes at least one processing unit and memory . In this most basic configuration is included within a dashed line. The processing unit executes computer executable instructions and may be a real or a virtual processor. In a multi processing system multiple processing units execute computer executable instructions to increase processing power. The memory may be volatile memory e.g. registers cache RAM non volatile memory e.g. ROM EEPROM flash memory etc. or some combination of the two. The memory stores software implementing a video encoder with one or more of the described techniques and tools.

A computing environment may have additional features. For example the computing environment includes storage one or more input devices one or more output devices and one or more communication connections . An interconnection mechanism not shown such as a bus controller or network interconnects the components of the computing environment . Typically operating system software not shown provides an operating environment for other software executing in the computing environment and coordinates activities of the components of the computing environment .

The storage may be removable or non removable and includes magnetic disks magnetic tapes or cassettes CD ROMs DVDs or any other medium which can be used to store information and which can be accessed within the computing environment . The storage stores instructions for the software implementing the video encoder.

The input device s may be a touch input device such as a keyboard mouse pen or trackball a voice input device a scanning device or another device that provides input to the computing environment . For audio or video encoding the input device s may be a sound card video card TV tuner card or similar device that accepts audio or video input in analog or digital form or a CD ROM or CD RW that reads audio or video samples into the computing environment . The output device s may be a display printer speaker CD writer or another device that provides output from the computing environment .

The communication connection s enable communication over a communication medium to another computing entity. The communication medium conveys information such as computer executable instructions audio or video input or output or other data in a modulated data signal. A modulated data signal is a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media include wired or wireless techniques implemented with an electrical optical RF infrared acoustic or other carrier.

The techniques and tools can be described in the general context of computer readable media. Computer readable media are any available media that can be accessed within a computing environment. By way of example and not limitation with the computing environment computer readable media include memory storage communication media and combinations of any of the above.

The techniques and tools can be described in the general context of computer executable instructions such as those included in program modules being executed in a computing environment on a target real or virtual processor. Generally program modules include routines programs libraries objects classes components data structures etc. that perform particular tasks or implement particular abstract data types. The functionality of the program modules may be combined or split between program modules as desired in various embodiments. Computer executable instructions for program modules may be executed within a local or distributed computing environment.

For the sake of presentation the detailed description uses terms like estimate and analyze to describe computer operations in a computing environment. These terms are high level abstractions for operations performed by a computer and should not be confused with acts performed by a human being. The actual computer operations corresponding to these terms vary depending on implementation.

The encoder processes video pictures. The term picture generally refers to source coded or reconstructed image data. For progressive video a picture is a progressive video frame. For interlaced video a picture may refer to an interlaced video frame the top field of the frame or the bottom field of the frame depending on the context. The encoder is block based and uses a 4 2 0 macroblock format for frames. As shown in macroblock includes four 8 8 luminance or luma blocks Y through Y and two 8 8 chrominance or chroma blocks U and V that are co located with the four luma blocks but half resolution horizontally and vertically following the conventional 4 2 0 macroblock format. For fields the same or a different macroblock organization and format may be used. The 8 8 blocks may be further sub divided at different stages e.g. at the frequency transform and entropy encoding stages. The encoder can perform operations on sets of samples of different size or configuration than 8 8 blocks and 16 16 macroblocks. Alternatively the encoder is object based or uses a different macroblock or block format.

Returning to the encoder system compresses predicted pictures and intra coded key pictures. For the sake of presentation shows a path for key pictures through the encoder system and a path for predicted pictures. Many of the components of the encoder system are used for compressing both key pictures and predicted pictures. The exact operations performed by those components can vary depending on the type of information being compressed.

A predicted picture e.g. progressive P frame or B frame interlaced P field or B field or interlaced P frame or B frame is represented in terms of prediction or difference from one or more other pictures which are typically referred to as reference pictures or anchors . A prediction residual is the difference between what was predicted and the original picture. In contrast a key picture e.g. progressive I frame interlaced I field or interlaced I frame is compressed without reference to other pictures.

If the current picture is a predicted picture a motion estimator estimates motion of macroblocks or other sets of samples of the current picture with respect to one or more reference pictures for example the reconstructed previous picture buffered in the picture store . If the current picture is a bi predictive picture a motion estimator estimates motion in the current picture with respect to up to four reconstructed reference pictures for an interlaced B field for example . Typically a motion estimator estimates motion in a B picture with respect to one or more temporally previous reference pictures and one or more temporally future reference pictures but B pictures need not be predicted from different temporal directions. The encoder system can use the separate stores and for multiple reference pictures.

The motion estimator can estimate motion by full sample sample sample or other increments and can switch the precision of the motion estimation on a picture by picture basis or other basis. The motion estimator and compensator also can switch between types of reference picture sample interpolation e.g. between bicubic and bilinear on a per frame or other basis. The precision of the motion estimation can be the same or different horizontally and vertically. The motion estimator outputs as side information motion information such as differential motion vector information. The encoder encodes the motion information by for example computing one or more predictors for motion vectors computing differentials between the motion vectors and predictors and entropy coding the differentials. To reconstruct a motion vector a motion compensator combines a predictor with differential motion vector information.

The motion compensator applies the reconstructed motion vector to the reconstructed picture s to form a motion compensated current picture . The prediction is rarely perfect however and the difference between the motion compensated current picture and the original current picture is the prediction residual . During later reconstruction of the picture the prediction residual is added to the motion compensated current picture to obtain a reconstructed picture that is closer to the original current picture . In lossy compression however some information is still lost from the original current picture . Alternatively a motion estimator and motion compensator apply another type of motion estimation compensation.

A frequency transformer converts the spatial domain video information into frequency domain i.e. spectral data. For block based video pictures the frequency transformer applies a DCT variant of DCT or other block transform to blocks of the sample data or prediction residual data producing blocks of frequency transform coefficients. Alternatively the frequency transformer applies another conventional frequency transform such as a Fourier transform or uses wavelet or sub band analysis. The frequency transformer may apply an 8 8 8 4 4 8 4 4 or other size frequency transform.

A quantizer then quantizes the blocks of spectral data coefficients. The quantizer applies uniform scalar quantization to the spectral data with a step size that varies on a picture by picture basis or other basis e.g. a macroblock by macroblock basis . Alternatively the quantizer applies another type of quantization to the spectral data coefficients for example a non uniform vector or non adaptive quantization or directly quantizes spatial domain data in an encoder system that does not use frequency transformations. Techniques and tools relating to quantization in some implementations are described in detail below.

In addition to adaptive quantization the encoder can use frame dropping adaptive filtering or other techniques for rate control.

The encoder may use special signaling for a skipped macroblock which is a macroblock that has no information of certain types e.g. no differential motion vectors for the macroblock and no residual information .

When a reconstructed current picture is needed for subsequent motion estimation compensation an inverse quantizer performs inverse quantization on the quantized spectral data coefficients. An inverse frequency transformer then performs the inverse of the operations of the frequency transformer producing a reconstructed prediction residual for a predicted picture or a reconstructed key picture. If the current picture was a key picture the reconstructed key picture is taken as the reconstructed current picture not shown . If the current picture was a predicted picture the reconstructed prediction residual is added to the motion compensated current picture to form the reconstructed current picture. One or both of the picture stores buffers the reconstructed current picture for use in motion compensated prediction. In some embodiments the encoder applies a de blocking filter to the reconstructed frame to adaptively smooth discontinuities and other artifacts in the picture.

The entropy coder compresses the output of the quantizer as well as certain side information e.g. motion information quantization step size QP . Typical entropy coding techniques include arithmetic coding differential coding Huffman coding run length coding LZ coding dictionary coding and combinations of the above. The entropy coder typically uses different coding techniques for different kinds of information e.g. DC coefficients AC coefficients different kinds of side information and can choose from among multiple code tables within a particular coding technique.

The entropy coder provides compressed video information to the multiplexer MUX . The MUX may include a buffer and a buffer level indicator may be fed back to a controller. Before or after the MUX the compressed video information can be channel coded for transmission over the network. The channel coding can apply error detection and correction data to the compressed video information .

A controller not shown receives inputs from various modules such as the motion estimator frequency transformer quantizer inverse quantizer entropy coder and buffer . The controller evaluates intermediate results during encoding for example estimating distortion and performing other rate distortion analysis. The controller works with modules such as the motion estimator frequency transformer quantizer and entropy coder to set and change coding parameters during encoding. When an encoder evaluates different coding parameter choices during encoding the encoder may iteratively perform certain stages e.g. quantization and inverse quantization to evaluate different parameter settings. The encoder may set parameters at one stage before proceeding to the next stage. Or the encoder may jointly evaluate different coding parameters. The tree of coding parameter decisions to be evaluated and the timing of corresponding encoding depends on implementation.

The relationships shown between modules within the encoder indicate general flows of information in the encoder other relationships are not shown for the sake of simplicity. In particular usually does not show side information indicating the encoder settings modes tables etc. used for a video sequence picture macroblock block etc. Such side information once finalized is sent in the output bitstream typically after entropy encoding of the side information.

Particular embodiments of video encoders typically use a variation or supplemented version of the generalized encoder . Depending on implementation and the type of compression desired modules of the encoder can be added omitted split into multiple modules combined with other modules and or replaced with like modules. For example the controller can be split into multiple controller modules associated with different modules of the encoder. In alternative embodiments encoders with different modules and or other configurations of modules perform one or more of the described techniques.

When encoding video overall coding quality can be improved if fewer bits are allocated to B pictures than to I pictures and P pictures. Bits saved in B pictures can be used to improve the quality of I pictures and P pictures. Unlike I pictures and P pictures B pictures are generally not used as reference pictures for other pictures in motion compensation. For this reason slightly reducing the quality of B pictures e.g. by increasing a quantization step size will not affect the quality of other frames. In addition the quality gain from spending more bits in B pictures e.g. by using smaller quantization step sizes is not as significant as the gain from spending bits in I pictures and P pictures.

Although the flexibility to change quantization for different picture types can help control bit rate and improve quality an unpleasant flicker effect can occur when quantization step sizes vary too much and the difference in quality between frames becomes noticeable. Thus if quantization step size is increased too much for B pictures relative to other pictures in a sequence unpleasant perceptual effects can occur.

Accordingly described techniques and tools are directed to a rate control scheme for B pictures that combines quantization step size control with adaptive dead zone control. Using adaptive dead zone control in a B picture can save bits more efficiently than simply raising quantization step size. It also reduces visual artifacts.

Suppose an encoder needs to encode a B picture with n bits and that the encoder evaluates two quantization options. With the first option the encoder uses a high quantization step size and quantizer with a smaller dead zone ratio. With the second option the encoder uses a lower quantization step and quantizer with a larger dead zone ratio. The wider dead zone of the second option tends to introduce more distortion than the smaller dead zone of the first option. The overall mix of distortion from the wider dead zone and lower quantization step size second option is often less perceptible however than the distortion from the higher quantization step size first option .

In one implementation an encoder uses an explicit quantization mode to signal various decisions in a bitstream relating to quantization for B pictures. Tests have shown noticeable visual improvement over an implicit quantization mode.

For example an encoder that uses either uniform or non uniform quantization in a sequence sets the dead zone to 1.2 QP 0.6 QP on each side of zero for uniform quantization and sets the dead zone to 1.6 QP 0.8 QP on each side of zero for non uniform quantization. For B pictures the encoder always uses non uniform quantization so all B pictures use a dead zone of 1.6 QP. The specific calculations for dead zone thresholds can vary depending on implementation and the dead zone thresholds can be the same as or different e.g. wider than the mid points between zero and the first reconstruction points according to reconstruction rules.

At an encoder selects a picture type for a current picture. The encoder can use various criteria for selecting picture types although the encoder may have to follow certain rules for selecting picture types in order to be compliant with a decoder e.g. encoding a picture as an I picture at required intervals etc. . In this example the encoder encodes pictures as I pictures P pictures or B pictures.

At the encoder selects a quantizer for the current picture based at least in part upon the selected picture type. For example the encoder selects a quantizer having a larger dead zone for a B picture. The encoder can switch between a uniform quantizer and non uniform quantizer or can switch between other and or additional available quantizers having different dead zone ratios. The encoder can consider additional criteria such as region smoothness picture complexity and or rate constraints when selecting a quantizer.

At the encoder applies the selected quantizer to the current picture. The encoder performs quantization for the current picture using the selected quantizer and one or more quantization step sizes selected for the picture. In this way for a B picture the encoder can save bits for the current picture relative to other picture types without increasing quantization step sizes relative to other picture types. The encoder can then similarly process other pictures .

Using a larger dead zone for B pictures can save bits more efficiently than simply raising the quantization step size. In some cases the dead zone that is increased applies only to AC coefficients the dead zone for DC coefficients remains the same. For example for AC coefficients the dead zone is 1.6 QP for DC coefficients the dead zone is fixed at . QP 0.5 QP on each side of zero . Since the increase in dead zone size only affects AC coefficients the quality of smooth regions is often better preserved since DC coefficients are no more likely to be zeroed out than when using quantizers with smaller dead zones. Since humans are perceptually sensitive to quality degradation in smooth regions visual quality in video with prominent smooth regions can be improved.

At an encoder selects a picture type for a current picture for example as described with reference to .

At the encoder determines whether or not the current picture is a B picture. At if the current picture is a B picture the encoder selects a non uniform quantizer for the current B picture where the dead zone for AC coefficients at each QP is equal to 1.6 QP. At if the current picture is not a B picture the encoder selects a uniform quantizer for the current picture where the dead zone for AC coefficients at each QP is equal to 1.2 QP. With the non uniform quantizer the dead zone for AC coefficients is greater than those used for other picture types but the dead zone for DC coefficients remains the same.

At the encoder applies the selected quantizer to the current picture for example as described with reference to . The encoder can then process other pictures in the sequence .

Alternatively an encoder performs adaptive B picture quantization in other ways. For example dead zones can be increased for both AC coefficients and DC coefficients. Dead zone ratios can be larger or smaller for different ranges of QPs. The size of dead zones can be larger or smaller relative to QP size. Dead zones can be calculated not as a function of specific QPs but in some other way.

In one implementation an encoder uses an explicit quantization signaling mode. The signaling in the bitstream is different for B pictures and I pictures and P pictures.

First the encoder signals a 2 bit Quantizer Specifier QUANTIZER in a sequence header. QUANTIZER indicates the quantizer used for the sequence. The quantizer types are represented according to Table 3 below. To use an explicit signaling mode the encoder sets QUANTIZER to 1.

In each frame header the encoder specifically signals whether uniform or non uniform quantization is used with bitstream element PQUANTIZER. If PQUANTIZER 0 the non uniform quantizer is used for the frame. If PQUANTIZER 1 the uniform quantizer is used. In this implementation for B pictures the encoder always signals PQUANTIZER 1 because the encoder always uses a non uniform quantizer in order to increase the dead zone size. For other picture types the encoder signals PQUANTIZER 0. Or the encoder switches between PQUANTIZER 0 and PQUANTIZER 1 for other picture types depending on selection criteria such as region smoothness picture complexity or rate constraints.

In explicit mode whether PQUANTIZER 0 or PQUANTIZER 1 the quantization step size parameter PQUANT for a frame is the same value as the frame quantizer index PQINDEX for the frame. The quantization step size can be further varied within a frame for different macroblocks or areas of the frame. 

Using a non uniform quantizer for B pictures is more efficient than other quantization settings in many scenarios. In testing example video sequences were encoded using a non uniform quantizer for B pictures with explicit quantizer signaling. The results were compared to an implicit quantization mode see Table 2 above where B picture dead zones were selected and signaled using the same mechanisms as for I pictures and P pictures. For the I pictures and P pictures in the testing PQUANT values and quantizers from the implicit quantization mode were re used but explicitly signaled. The tests showed noticeable improvement for explicit signaling and increased B picture dead zones over implicit quantization.

Alternatively an encoder signals encoder decisions in some other way. For example quantization decisions indicated above as being signaled at a particular syntax level can instead be signaled at some other level. Or other codes or coding techniques e.g. fixed length coding variable length coding etc. can be used.

Having described and illustrated the principles of our invention with reference to described embodiments it will be recognized that the described embodiments can be modified in arrangement and detail without departing from such principles. It should be understood that the programs processes or methods described herein are not related or limited to any particular type of computing environment unless indicated otherwise. Various types of general purpose or specialized computing environments may be used with or perform operations in accordance with the teachings described herein. Elements of the described embodiments shown in software may be implemented in hardware and vice versa.

In view of the many possible embodiments to which the principles of our invention may be applied we claim as our invention all such embodiments as may come within the scope and spirit of the following claims and equivalents thereto.

