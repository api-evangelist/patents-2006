---

title: Secure operation of transitory computer applications
abstract: A security application is described for determining conditions within a computer application that would create the desire to allow or disallow access to certain system functions or features by the application. The security application analyzes the conditions and sets a lock that enables the application to perform only certain types of actions that would be considered secure by the security application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07984514&OS=07984514&RS=07984514
owner: Adobe Systems Incorporated
number: 07984514
owner_city: San Jose
owner_country: US
publication_date: 20060710
---
The present invention relates in general to computer software security and more particularly to providing secure operation of transitory computer applications.

Modern computers demonstrate their usefulness by the software applications that they run. In the days before extensive networking and the proliferation of the Internet software applications were typically monolithic relatively large scaled and independent programs that were designed to do a single general task. Any data generated or obtained within the application was generally confined to that particular application. With the increased interconnectivity brought about by the Internet larger applications may interact with transitory smaller applications which could exchange data with remote servers or other remote application sometimes even without the computer user knowing that this communication interchange is even taking place. Such transitory applications typically are executed for a certain amount of time and eventually end either automatically or at the direction of the user. This interconnectivity along with the existence of more nefarious applications such as viruses trojan horses and the like expose computer users to potential loss of data damaged computers or even losing money or credit standing through identity theft.

Because of the potential for loss and damage to computers data and property processes and security software have been developed to minimize the potential losses by preventing unsafe applications from either operating or operating successfully. Firewalls attempt to prevent unauthorized access to computer systems antivirus applications attempt to identify destroy and or quarantine virus programs and spyware programs attempt to locate and neutralize spyware that may be mining a user s computer for sensitive or even not so sensitive but equally personal data. Thus a considerable amount of research and technology has been dedicated to preventing unauthorized access to users computers and disclosure of information located on those computers.

One area that has been addressed for increasing protection and security is in media files. When a file type represents media such as an image animation sound or the like users of that file type generally do not expect that opening such files will expose them to any potential harm. These users view such files as containing only media. Users may thus develop a habit of opening media files without regard to the trustworthiness of their origin. This lack of suspicion can have great benefits for the free movement of information. However sophisticated media file types may support embedded scripting commands and if a program that opens such files is not carefully written the commands embedded in such files may perform actions that users would generally not expect or approve. Thus a program that plays a media file type with embedded scripting commands should take precautions to protect users from unreasonable actions i.e. such a program should avoid providing any mechanisms by which a creator of a media file can attack the computer or user information with that file. This is an important task for of what is known as a user agent program. User agents typically render media file types for users.

Another example system or application that benefits from more secure transactions are in the Web browser. Many modern web browsers offer to store or remember certain user information in order to make it easier or more convenient for a user to log into certain of his or her favorite Websites or Web applications. The user IDs and passwords that could be stored or remembered may provide access to data as insignificant as a log of jogging times that a user has amassed during various exercise sessions to critical data and control of the user s bank accounts and financial information. As various transitory applications applets or services collectively applications are run on the user s computer it is critical to make sure that these applications do not access any of the user s sensitive personal information and more importantly that they do not send that information to an unauthorized recipient.

Whenever a computer system introduces restrictions on the actions of various applications whether indirectly through proxy such as a user agent program or directly through the operating system it is desirable to prevent only those actions that may cause harm to users and to allow any actions that can never cause harm. This preserves the greatest possible set of capabilities for such applications while keeping the file type safe for users. Producers and users of such applications both typically desire a rich set of capabilities but users generally demand safe applications. This tension dictates that a good security application should be constructed to permit the maximum set of capabilities without permitting harm to users.

Many computers may contain or have access to data that the user considers private. A user may typically wish that this private data not be shared with an anonymous party such as the author or provider of a particular application without the user s express consent. This private data may include presence information names or contents of files on the computer s local file systems presence information names or contents of files on other computers in a private local network configuration of the computer and any applications installed on it personally identifying information about the user passwords to various computer and non computer systems a history of the consumer s actions and a considerable number of other forms of private data or the like.

One type of action that a security system or application would likely prevent is the disclosure of any of the users private data back to the creator or provider of the application. Such a disclosure becomes a risk whenever the set of embedded commands that the security application supports for any application type includes both the ability to obtain private data from the user or the user s computer and the ability to send data using a network. An application with both of these capabilities could obtain private data from the user or the user s computer and then use a network to send that private data back to the creator or provider of that application. One tension that a security application or system may resolve is that on one hand it may be useful for some applications to be able to obtain private data from the user or the user s computer and also useful for some applications to be able to send data using a network but that on the other hand it may be dangerous to permit a single application to perform both of these actions.

One technology that has been used to secure data from unauthorized disclosure is referred to as tainting. Tainting in general is the process of tagging or marking the origin of every single piece of data that comes into the computer system and preventing certain of that data from flowing out of the system. A tainting security application or system checks each of the tags or marks on each piece of data and determines which of those pieces of data may be either accessed transmitted or other such operation. Tainting while allowing a flexible security system is extremely complex and problematic. Problems arise because the tag or mark should be preserved throughout the life of that data whether the data is modified copied sent through some application programming interface API or otherwise changed or processed in any manner. If the tag or mark is not preserved then it would be very easy to defeat the tainting security system simply by copying or only slightly modifying the information The problem with this is that it is very difficult to implement correctly. The complexity of monitoring each piece of data throughout its life and attempting to preserve all of the tainting tags and marks makes it very easy to introduce bugs or flaws into a system that already has tainting built into it. The complexity also makes it very difficult for programmers to understand as well because the tainting system can produce very baffling failures that are difficult to reproduce because everything is dependent on a very sensitive set of conditions.

Representative embodiments of the present invention are related to the determination of conditions within a computer application that would create the desire to allow or disallow access to certain system functions or features by the application. The security application analyzes the conditions and sets a lock that enables the application to perform only certain types of actions that would be considered secure by the security application.

The foregoing has outlined rather broadly the features and technical advantages of the present invention in order that the detailed description of the invention that follows may be better understood. Additional features and advantages of the invention will be described hereinafter which form the subject of the claims of the invention. It should be appreciated by those skilled in the art that the conception and specific embodiment disclosed may be readily utilized as a basis for modifying or designing other structures for carrying out the same purposes of the present invention. It should also be realized by those skilled in the art that such equivalent constructions do not depart from the spirit and scope of the invention as set forth in the appended claims. The novel features which are believed to be characteristic of the invention both as to its organization and method of operation together with further objects and advantages will be better understood from the following description when considered in connection with the accompanying figures. It is to be expressly understood however that each of the figures is provided for the purpose of illustration and description only and is not intended as a definition of the limits of the present invention.

Modern software packages usually include some kind of online support such that the programs themselves access Internet and check their home sites for software updates verify licenses and the like. The user may or may not know or be made aware that these software products are accessing Internet to obtain or exchange this information. However in order to prevent an application running on user computer from improperly accessing personal data on user computer and sending it to a remote server such as servers and via Internet user computer operates security application . It should be noted that security application may be a separate program running within user computer or may be a system utility that either comes with or has been added to the operating system or administrative software of user computer .

When application is loaded into memory for execution it first registers with security application . The registration process allows application to declare which rights it maintains for operating or accessing the system functionality of user computer . Once the declaration has been made security application monitors the operation of application and provides instructions executed by processor that prohibit application from operating or accessing the system functionality that was not declared. For example it may be advantageous for application to access remote server in order to receive program updates. This advantageous process would support application accessing Internet through network interface . Therefore when application starts up it declares to security application that it will access network interface in order to access remote server through Internet .

If application attempts to access personal information in storage security application intercepts the access request and prohibits application from accessing storage in violation of its initial declaration. In this manner application is able to perform its beneficial task of interacting with Internet and remote server but user computer is secured from personal information being read from storage and broadcast over Internet .

It should be noted that many different system functions may be a part of the declaration process for applications. In the example above only two such functions were mentioned accessing storage for personal data and accessing network interface for performing communications with Internet . However the various additional and or alternative embodiments of the present invention are not limited only to two available choices for system functionality. Available system functions could include accessing certain memory locations deleting from memory or from certain memory locations writing to memory or certain memory locations accessing system configuration information modifying system administration programs forming an ad hoc network with a neighboring computer and the like. The various embodiments of the present invention may provide for an application to declare one or more system functions it may alternatively form the multiple functions into discrete groups that the application could only choose one group or another it may further detail certain combinations of system functions that may not be declared by any one application. Any combination of selections for system functions would be operable with the various embodiments of the present invention.

It should further be noted that instead of providing for a declarative system where each application explicitly declares which system functionality it selects to have access to a dynamic system may be used where the security system such as security application monitors the activities of the application and based on those activities security application would assign available system functionality or a combination thereof to the running application. For purposes of example may also be used to describe this more dynamic alternative embodiment. As application starts up security application would begin monitoring each activity that application performs in this alternative embodiment. On start up one of the first hidden tasks that application performs is to connect to remote server to check for any updates to the software. When application accesses network interface to establish connection to Internet security application assigns a category of operation that would allow application to access Internet through network interface but would prohibit application from accessing storage to obtain personal information. With this dynamic system the application would not need the additional coding to implement the declarative system.

Returning to when application is called up to run user agent is activated and runs or renders application within its container. Processor executes the instructions of user agent and the instructions of application to the extent that user agent permits those instructions. The security features available within user agent operate similarly to those described in both in the declarative and dynamic embodiments . For example if user agent is configured to operate in a declarative way according to one embodiment of the present invention as application begins to run it declares to user agent what system functions it will maintain access to. For purposes of the example represented in application selects to access personal data in storage and retain authority to modify such data and store the modified data back into storage . Once the declaration has been made user agent monitors the activity of application and its interaction with user computer . Requests for personal information within storage will be allowed. However if application requests access to network interface in order to access Internet user agent prohibits application from accessing network interface .

It should be noted that in the declarative embodiments if an application such as application attempts to declare system features that combine to create a security risk user agent would consider application an invalid application and shut it down before it can begin normal operation.

As a complementary example of if user agent is configured to operate in a dynamic way according to one embodiment of the present invention as application begins to run user agent monitors its actions. Depending on the actions that application performs user agent creates a profile for application that includes acceptable system features and prohibited system features. For example if application begins by accessing personal information from storage user agent would establish the profile for application to prohibit any access to network interface for connecting to Internet . Alternatively if application begins by accessing network interface to connect to remote servers and or through Internet user agent would establish the profile to prohibit access to personal information on storage . If application would thereafter attempt to access one of the prohibited system features or functions user agent would intercept and prevent such access thus preserving the security of user computer .

It should be noted that in additional and or alternative embodiments of the present invention instead of performing the declaration or dynamic assignment of system functionality access rights during the runtime of a particular application the various embodiments of the present invention may be implemented to determine the access rights of the application before runtime. Without executing the application the security system could analyze the code or script of the application to determine the various system features and functionality that should be accessible to the application.

Applying this additional and or alternative embodiment to security application is programmed to parse through the code of application prior to execution to analyze the system functionality that application will use. After analyzing the code of application security application would determine that application should be able to access network interface in order to connect to Internet but should be prohibited from accessing personal information in storage . In similar application to prior to executing application user agent analyzes the code and operability of application to determine that it should be allowed to access personal information stored in storage but prohibited from accessing network interface to connect to Internet . In this manner of implementation the access rights are determined prior to executing the application. This pre approval process adds a layer of security to the user s computer.

In step certain ones of the system functions that comprise the non secure combinations are selected. A set of restrictions is created in step responsive to the selection. Responsive to the set of actions the set of restrictions are assigned in step to the computer application where the restrictions prevent the computer application from accessing select ones of the system functions. For example a particular application may be assigned a set of restrictions that includes no access to personal information no modification of system files and no modification of hardware configuration files. A different application may be assigned a set of restrictions that includes no access to the network interface no access or modification rights for system files and no access or modification of hardware configuration files. Various different combinations of such system functions may be compiled and assigned to particular applications. If in step another declaration is received from the computer application that includes one or more actions within the set of restrictions the system will either cease execution of the computer application or reject the other declaration in step . In step execution of the computer application is monitored. The computer application is prohibited from accessing the select ones of the system functions within the set of restrictions in step .

It should be noted that in alternative embodiments of the present invention instead of the set of restrictions being created on an ad hoc basis there would be a predetermined list of combinations of system functions that are non secure. In such an embodiment instead of executing steps a set of restrictions are selected in step from a database of pre determined non secure combinations of any of the system functions with any of the set of actions wherein the selection is responsive to the set of actions.

As with the example from a predetermined list of combinations of system functions that are non secure may be used to select the set of restrictions in step instead of executing steps .

It should be noted that as described in the previous examples additional and alternative embodiments of the present invention could provide for media player to assign a set of restrictions to media file based on its observing media file perform a set of actions. Further additional and alternative embodiments of the present invention could provide for media player to analyze the set of actions operable by media file without actually running or executing media file . In such an embodiment the restrictions would be set prior to the application even executing.

The program or code segments making up the various embodiments of the present invention may be stored in a computer readable medium or transmitted by a computer data signal embodied in a carrier wave or a signal modulated by a carrier over a transmission medium. The computer readable medium may include any medium that can store or transfer information. Examples of the computer readable medium include an electronic circuit a semiconductor memory device a ROM a flash memory an erasable ROM EROM a floppy diskette a compact disk CD ROM an optical disk a hard disk a fiber optic medium a radio frequency RF link and the like. The computer data signal may include any signal that can propagate over a transmission medium such as electronic network channels optical fibers air electromagnetic RF links and the like. The code segments may be downloaded via computer networks such as the Internet Intranet and the like.

Bus is also coupled to input output I O controller card communications adapter card user interface card and display card . The I O adapter card connects storage devices such as one or more of a hard drive a CD drive a floppy disk drive a tape drive to computer system . The I O adapter is also connected to a printer not shown which would allow the system to print paper copies of information such as documents photographs articles and the like. Note that the printer may be a printer e.g. dot matrix laser and the like a fax machine scanner or a copier machine. Communications card is adapted to couple the computer system to a network which may be one or more of a telephone network a local LAN and or a wide area WAN network an Ethernet network and or the Internet network. User interface card couples user input devices such as keyboard pointing device and the like to the computer system . The display card is driven by CPU to control the display on display device .

Although the present invention and its advantages have been described in detail it should be understood that various changes substitutions and alterations can be made herein without departing from the spirit and scope of the invention as defined by the appended claims. Moreover the scope of the present application is not intended to be limited to the particular embodiments of the process machine manufacture composition of matter means methods and steps described in the specification. As one of ordinary skill in the art will readily appreciate from the disclosure of the present invention processes machines manufacture compositions of matter means methods or steps presently existing or later to be developed that perform substantially the same function or achieve substantially the same result as the corresponding embodiments described herein may be utilized according to the present invention. Accordingly the appended claims are intended to include within their scope such processes machines manufacture compositions of matter means methods or steps.

