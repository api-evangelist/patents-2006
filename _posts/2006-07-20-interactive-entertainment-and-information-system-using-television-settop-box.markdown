---

title: Interactive entertainment and information system using television set-top box
abstract: An interactive entertainment and information system using a television set-top box, wherein pages of information are periodically provided to the set-top box for user interaction therewith. The pages include associated meta-data defining active locations on each page. When a page is displayed, the user interacts with the active locations on the page by entering commands via a remote control device, whereby the system reads the meta-data and takes the action associated with the location. Actions include moving to other active locations, hyperlinking to other pages, entering user form data and submitting the data as a form into memory. The form data may be read from memory, and the pages may be related to a conventional television program, thereby providing significant user interactivity with the television.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08001577&OS=08001577&RS=08001577
owner: Microsoft Corporation
number: 08001577
owner_city: Redmond
owner_country: US
publication_date: 20060720
---
The present application is a divisional of U.S. patent application Ser. No. 09 895 452 filed Jun. 29 2001 which is a continuation of U.S. patent application Ser. No. 08 882 908 filed Jun. 26 1997 now U.S. Pat. No. 6 317 885.

The invention relates generally to interactive television and more particularly to an interactive entertainment and information system using a cable television set top box.

The existing network of coaxial cable television wiring was once foreseen as providing the primary high speed infrastructure for linking computers and computerized televisions to sources of information such as the Internet. However it is becoming apparent that the availability of such cable based information access will not be realized in the near term if ever particularly as competing high speed transmission media such as that based on higher quality telephone lines faster modems and ISDN technology become entrenched. Indeed the current economic climate has made it impractical or at least extremely risky for cable television service providers to replace their existing base of possibly tens or even hundreds of thousands of receive only cable set top converter boxes with computerized transmit and receive cable modems. However such two way cable modems are needed to provide subscribers with interactive television and a real time high speed link to information services while simultaneously providing conventional television programming thereon.

At the same time it is certain that many cable subscribers simply want low cost television programming. This leaves cable providers with the dilemma of losing subscribers if they raise prices in order to upgrade their systems or being left behind by new competitors and competing technologies if they do not. One solution is to convert to new technologies gradually. For example conventional television programming can now be transmitted over cable in a digital format enabling the transmission of many more virtual channels on the same bandwidth cable. Rather than force all subscribers to convert to the digital format however cable service providers will transmit a mixture of analog and digital signals for a period of time. This reduces the total number of channels transmitted to less than the maximum possible allowed by the bandwidth but allows the cable companies to keep subscribers who are reluctant to convert.

Regarding information services on the television a number of low cost devices presently exist for allowing access to information services using a television set instead of a computer monitor. However these devices do not approach interactive television but instead do little more than use the television display as an inexpensive monitor while connecting to the information service via a conventional telephone based modem. As a result with such a device there is no direct connection between programs transmitted to a viewer and interaction with web pages or the like about those programs. For example a viewer of a home shopping channel wishing to purchase a displayed item cannot simply do so with the low cost device but instead must first connect to the information service e.g. the Internet via the user s service provider find the shopping channel s web site if one exists find the appropriate item if available on the web site and then place the order. Most significantly these devices tie up a telephone line for long periods of time a significant drawback in many households.

Accordingly it is a general object of the present invention to provide an interactive entertainment and information system using a cable television set top box.

A related object is to provide the above system using existing digital set top boxes without need for modification of the hardware therein.

Another object is to provide a system as characterized above that enables a user to hyperlink between pages of information.

Yet another object is to provide a system of the above kind that facilitates an interactive relationship between transmitted programming and information pages related thereto.

A related object is to allow a user to submit form information including forms related to a viewed television program.

In accomplishing those objects another object is to provide a simple to operate low cost information service to those users desiring same.

Briefly the present invention provides an interactive television system including a head end having means for injecting video information into a transmission medium. The video information includes a plurality of page images. Detection means at a subscriber end such as hardware and software in a cable set top box in conjunction with a remote control device detect a first request to display one of the plurality of page images. Upon detection of the first request the box selects and displays the page image wherein the page image includes at least one active location such as a link having an action corresponding thereto. The detection means further detects a second request to take the action that corresponds to the active location whereupon the action is taken. For example a new page might be displayed when a link is selected. The video information includes meta data or the like associated therewith for providing information about the active location and the action to be taken upon selection thereof. Other actions may include those related to form entry and submission of form data.

Other objects and advantages will become apparent from the following detailed description when taken in conjunction with the drawings in which 

A basic feature of the Information Service architecture described below is the ability to deliver a stream of MPEG still images or image pages to a cable user subscriber . Associated with these high quality pages is a set of meta data describing links to other pages along with a limited set of side effects and actions. The user can select and activate the links with a hand held remote control thereby interacting with the pages of information displayed on the television screen.

Turning to the drawings and referring first to there is shown a system generally designated into which the present invention may be incorporated. In general the system transmits signals comprising video and audio information from a cable head end onto a coaxial cable transmission medium the signals being received at a plurality of subscriber locations . Signal boosters not shown may be provided for amplifying and distributing the signals to the plurality of locations. At least one of the subscriber locations such as the location includes a digital set top box or the like equipped to convert the transmitted signals into signals capable of being received by a standard e.g. NTSC television set for displaying video images and or outputting audio to a consumer end user. Of course the present invention does not require coaxial cable as the physical transmission medium as signals can alternatively be transmitted over any transmission medium including wireless means such as so called wireless cable broadcasts digital satellite communication and so on.

As shown in more detail in the head end includes a head end LAN including a download server and an access control server for controlling the operation of the head end via an Ethernet connection to the various components therein. One of the components connected to the LAN is a satellite integrated receiver transcoder which as is known receives and encodes digital television programming signals such as originating from microwave broadcasts received via a satellite antenna dish . One such receiver transcoder is manufactured by General Instrument Corporation Model No. IRT 1000 and outputs twenty seven megabits per second 27 Mb s MPEG2 transport streams modulated onto a forty four megahertz intermediate frequency carrier. In turn the MPEG2 encoded transport streams are received by an intermediate frequency to radio frequency IF RF upconverter General Instrument Corporation Model No. C6U which modulates the streams onto six megahertz analog channels and injects the signals onto the cable transmission medium . With multiplexing of multiple packetized digital signals per six megahertz analog channel hundreds of digital channels may be injected onto a single coaxial medium although at present a mixture of analog and digital channels will likely be transmitted.

According to one aspect of the invention and as described in more detail below in addition to conventional television programming the cable head end outputs a plurality of still images or information pages to information service subscribers. To this end the cable head end includes an information server . The primary function of this head end server of the Information Service is to receive and store page data and carousel management information from content providers and then to inject the page images onto the local cable system i.e. produce a real time carousel data stream for modulation onto a six megahertz channel of the transmission medium . The server may have the page image data permanently stored therein but typically will regularly download at least some of the page image data from an external data source such as the Internet. As described below the subscriber can interact with the digital set top box to selectively display the various page images on the screen of the television set .

More particularly the information service server includes a carousel delivery application for delivering a carousel of rendered HTML page images to the set top box along with meta data for each page. Each page image consists of a single frame MPEG2 video sequence that is capable of being decoded by an MPEG video decoder in the set top box . The meta data for each page describe the structure and contents of the page image. As described above the carousel of page images and meta data are delivered to a client set top box as a standard MPEG2 Transport Stream broadcast in band over a six MHz NTSC channel.

The preferred head end interactive information server comprises a rack mounted personal computer including an Intel Corporation P6 200 megahertz or better central processing unit 128 megabytes of RAM a two gigabyte or larger hard disk drive and an ISDN or better connection to the external data source Internet . The server also includes an Ethernet connection to the local head end LAN and a TAXI serial protocol interface card along with an appropriate TAXI driver therefor. The operating system is Windows NT Server 4.0. Although only one such server is necessary for a typical head end two information service servers may be installed in a head end for purposes of increased reliability based on redundancy. For redundant systems the NT Servers will run Microsoft Clustering software.

As shown in more detail in to inject the signals the information server is connected via its taxi interface card on copper to an in band data modulator connected to an intermediate frequency to radio frequency upconverter . The preferred in band data modulator is manufactured by General Instrument Corporation model number IM 1000 which accepts 27 Mb s transport streams from the information service server and encodes and modulates those signals to a 44 MHz intermediate frequency. As with the redundant servers there may be two IM 1000 in band data modulators.

A second IF RF Upconverter General Instrument Corporation Model No. C6U converts the 44 MHz intermediate signal to an RF signal and injects the RF signal into the cable system s transmission medium . In this manner the 27 Mb s MPEG2 transport streams containing page images originating from the information server are modulated onto a six megahertz analog channel for reception by subscribers.

Lastly the head end includes an out of band data multiplexor General Instrument Corporation Model No. OM 1000 which is a required component of virtually any head end . As is known the out of band data multiplexor may be used by the present information service to communicate information service related data to the cable network. This data including channel maps and possibly email as described below is routed through the cable nation data center and is thus only indirectly related to the operation of the information service head end .

Turning to the subscriber end of the system as best shown in the preferred set top box is a digital set top box manufactured by General Instrument Corporation Model No. DCT 1000. Although not necessary to the invention it is significant that with this particular set top box the hardware is unmodified so that the existing base of publicly distributed set top boxes may implement the Information Service without requiring upgrade servicing or replacement. However to provide the service in accordance with the present invention the operation of the box is modified by additional software downloaded thereto. Such software includes a browser which communicates with an operating system of the box by placing calls through an application programming interface API as described in more detail below.

As shown in the digital cable box includes an in band tuner and an out of band tuner along with appropriate demodulators and respectively. A microprocessor controls the tuning operation of the tuners and based on commands received from a subscriber via an input device such as a keypad or an infrared remote control device as described below. To this end the set top box includes an infrared sensor connected to an infrared receiver which provides the command signaling information to the microprocessor . A memory system includes the VRTX operating system stored therein and preferably comprises a combination of volatile dynamic RAM and non volatile RAM NVRAM .

In accordance with digital broadcasts wherein digitized channels are multiplexed as data packets onto a six megahertz analog channel the set top box also includes at least three packet identification PID filters to extract the appropriate encoded data packets for a user selected digital channel. Based on the user selected display audio and other requirements the microprocessor writes an identification value to each of the PID filters whereby the filters pass only those packets corresponding to that value. As shown in one of the PID filters filter provides the filtered packets to an audio decoder which decodes the digital audio data encoded according to the AC3 format while another PID filter provides filtered packets MPEG2 encoded to the video decoder .

As can be readily appreciated in addition to line level audio and video outputs the resulting video signal may be output from the set top box with separate luminance and chrominance signals SVHS format . As is typical the set top box may also contain a modulator not shown for combining the audio and video signals onto a modulated carrier channel such as channel or for compatibility with television sets not having separate audio and video inputs.

A third PID filter is provided to extract in band and out of band data directed to the operation of the set top box . A packet processor handles those packets. The set top box is also equipped with an on screen display frame buffer OSD capable of superimposing alphanumeric characters other symbols and bitmap graphics over a displayed image. To accomplish this superimposition an overlay is provided to appropriately combine the video outputs of the video decoder and the OSD .

The cable box functions when the user provides an appropriate and valid command to the cable box . For example in response to a digital channel selection command the microprocessor tunes the in band tuner to an appropriate analog channel based on the digital channel selected by the subscriber. If a digital channel was selected a table or the like stored in the memory determines the analog channel that carries the digital channel s packets along with the packet identification numbers corresponding to that channel for writing into the PID filters and . Once the PIDs have been written the audio and video decoders and will receive the appropriate packets and decode and output appropriate signals. As described below with reference to the present invention some of the packets will include page images associated with the information service.

The subscriber also will be provided with an input device such as the hand held remote control best shown in . The preferred input device includes four directional up down left and right cursor buttons respectively and a SELECT button . The remote control may include a dedicated button chosen as the A button of which may be used to enter the information service in one alternative scenario described below. The preferred remote control input device will also provide the normal complement of TV related buttons including a numeric keypad volume adjustment channel adjustment mute and so on. Other buttons such as those for control of a videocassette recorder also may be provided. The remote control is preferably wireless e.g. an infrared or RF based remote control but of course alternatively may be wired. Moreover alternate input devices need not be remote but may for example be provided as a keypad not shown on a set top box.

In accordance with one aspect of the invention the user utilizes the set top box to enter and interact with the Information Service. To this end the browser has been downloaded into the memory of the set top box along with APIs for interfacing the browser to the operating system of the set top box . The operation of the browser is generally described herein with reference to the flow diagram of .

In one scenario when the subscriber via the remote control tunes to a specified and otherwise unused for programming channel reserved for the Information Service the browser provides the subscriber with a page image having page elements displayed thereon including links to other information. The page images are obtained from the external data source ordinarily the Internet and are Hypertext Markup Language HTML pages provided by a third party that have been converted to an intermediate format as described below. For example television stations advertisers pollsters and the like may obtain rights to have one or more page images transmitted on the cable medium for potential viewing by the consumer end user.

As shown by steps of the initial page image is preferably a default home page that is displayed when this particular Information Service channel is selected. Another page based on information known to the system such as a page corresponding to the previous channel being viewed by the user may be displayed when the user enters this channel. Although not necessary to the invention it is feasible that more than one such channel may be provided for entering the information service with a potentially different initial page for each channel.

By way of example the image of including a number of links may be the default page displayed when channel is selected. For visibility purposes the cable box utilizes the on screen display OSD to draw focus e.g. denoted in by the visible ring i.e. box or the like on one of the links when the page is displayed. Other elements which can be focused are shown in as being surrounded by dashed boxes not ordinarily visible to an actual user . As shown by step the browser then waits for a command from the user. One such command is entered as the user presses one of the directional cursor buttons on the remote control .

As detected by step and when the user presses a directional cursor button at step the browser reads the meta data associated with the displayed page to determine how to adjust focus described below and then draws the focus at the next location at step . In this manner the user tabs through the links changing the focus until a desired link is focused. Then using the SELECT button of the remote control as detected by steps and of the user commands the browser to take an action associated with the focused link. Examples of some possible actions are represented in and include hyperlinking to another display page filling in a check box submitting a form and so on as described in more detail below.

If the user pushes the A button on the remote control step detects this command. Since the user entered the Information Service via the service s specific channel step returns the user to step which displays the default page of the Information Service. In other words pressing the A button in this scenario returns the user to the home page of the service. The user exits the service in this scenario by entering another channel as detected by step .

In another scenario the user is watching programming on a specific channel that participates in the Information Service. If the user pushes the A button on the remote control at any time while viewing such a participating channel as detected by step an initial page image the top level page corresponding to that channel is displayed step along with links to other pages. For example assuming station participation a user viewing ESPN will be shown an ESPN top level page when the A button is pressed. As before if the top level page provides links the user can select from among those links and jump to other pages from that top level page but in this scenario those links ordinarily connect to only a small number of pages that are recognized as being tied to the original video channel. The user can exit the service by changing to another channel step or by again pushing the A button step . Note that in this scenario step does not display the home page when the A button is detected but instead branches to step where the set top box is returned to the previous channel and the service is exited.

Moreover if the service was entered via the A button the act of changing the channel resets and exits the Information Service. For example if a page image page corresponding to a participating channel is being displayed and the user changes to another channel but then returns to the original channel the video program of the original channel will be displayed not the page corresponding thereto.

Note that if another command is entered e.g. a PLAY command corresponding to a video recorder the command can be handled by the browser as desired. For example the command can be treated like a channel selection exiting the service or just ignored. Steps are shown to generally represent receipt of such a command.

In any event if the user selects a page in the service and does not immediately select a link it is possible for the page image to be updated at a frequency equal to the maximum initial latency of the carousel . At present a nominal maximum latency for an image to cycle back for display is about eight seconds but this is variable depending on the amount of carousel bandwidth dedicated to a given page. More particularly a frequently accessed page may be placed in the carousel more than once at spaced apart locations to reduce the latency for that page by increasing its frequency therein. For example the service home page may be placed in the carousel four times providing a maximum latency of approximately two seconds for that page.

To facilitate the user interaction once the service has been entered and a page is displayed step or step using the OSD the browser in the digital set top box draws focus on the first page element listed in a FocusDescriptor list in the meta data described below associated with that page. The geometry shape of the indicator i.e. the focus ring drawn by the OSD is also determined by information in the FocusDescriptor list. It is also feasible to specify the color shading and the like of the focus ring in the meta data.

As described above the user may change the focus via the direction buttons on the remote control whereby the focus is re drawn on the appropriate element step . More particularly the order of changing focus in response to a directional button i.e. the focus chain is specified by the focus descriptors that are carried in the page meta data. The focus descriptors explicitly specify where focus should be next drawn when the user depresses the up down left or right buttons on the remote control device . For remote controls lacking direction keys a single button can be used to tab through the links in which event the order in which the focus descriptors occur in the focus descriptor list determines the focus chain.

In either arrangment while focus is rendered on a particular element the user may select that element by pressing the SELECT button on the remote control step or an equivalent button e.g. ENTER button available on other devices. Regardless of how selected when the element is selected the browser takes an appropriate action. The following table summarizes the actions taken by the browser for various types of page elements.

To select and display a carousel page the browser generally follows the steps set forth in the flow diagram of . First as represented by step the browser determines a page to display i.e. a default page or a linked page. At step the browser references meta data associated with that page to determine the page group to which that page belongs and the digital channel corresponding thereto. As described in more detail below a one to one mapping exists between a page group and a digital channel and nine to one mapping exists between carousel pages and digital channels.

Cable boxes typically provide APIs to control the tuner and selection of program elements in the MPEG2 stream. The browser uses such an API in the APIs to specify the digital channel corresponding to the appropriate page group on the carousel whereby the microprocessor in the set top box tunes the in band tuner to the appropriate carrier step and selects the program Service corresponding to the desired page group step . Note that the mapping between digital channels and carousel page programs is fixed. Next at step the browser selects the program element service component containing the carousel page for display and uses an API or the like to select the Video Program Element for display step . As a result of this step the PID is written to the PID filter and the page image is decoded and displayed by the hardware.

At step the Browser selects the program element that carries the meta data for the page group. Cable boxes may provide an API for this function this time to acquire an identifier for the page meta data. At step the browser reads the page meta data which as described in more detail below includes a record for each element on the page. Each element record includes information such as the geometry of focus for that element and other information specific to that element. For anchor elements described below the record includes the digital channel and program element for the page to which the link refers. Note that the carousel contents are completely described by the carousel meta data which is carried in band. No out of band or backchannel data transmission is required to navigate between pages in the carousel .

After the meta data has been read step by the browser at step the browser draws focus on the default link as specified by the page meta data. At this time the page is ready for user interaction. For example as described above the browser draws focus on other links as they are tabbed to by the user according to the focus chain specified in the page meta data.

The browser supports a subset of HTML anchors. The processing of each type of anchor is described below. The following table gives a brief summary of anchors supported by the Information Service.

The focus geometry for anchors and areas in imagemaps are specified in the page meta data. The browser uses this information to draw focus on hyperlinks and to select other pages for display when hyperlinks are selected. The page meta data also specify the focus chain. At present the browser handles text anchors image anchors and areas within imagemaps identically. Thus when the user moves focus to a hyperlink the browser simply draws focus using the OSD on some region of the screen as indicated by geometry information in the page meta data. When the user selects the link the browser changes the display to the destination page as indicated by the link data in the former page s meta data.

At present it is not possible to specify explicitly that an anchor within a page should receive initial focus. Instead the first anchor or imagemap in the HTML source will be the element that receives initial focus when a page is first displayed. Within an imagemap the order of the tags will determine the order of focus within that imagemap. The order of the tag within the HTML source will determine where the imagemap anchors will occur in the focus chain. Note that it is possible to edit the focus chain for a page at page conversion time described below in order to achieve results that cannot be generated simply in an HTML source.

Automatic hyperlinks are allowed in which after the page is displayed and the delay specified in meta data has elapsed the browser displays the page to which the hyperlink refers. As before the page meta data of the former page includes information that the browser uses to select the destination page for display. Nothing is rendered in response to an automatic hyperlink.

A server side slideshow may also be indicated in which a series of still images is sequentially displayed on the same page. Unlike a client side autolink to another page which can produce a similarly appearing client side slideshow using multiple pages the page change for a server side slideshow takes place at the server side. Via the slideshow tag the server inserts a new page image in place of the old with each new cycle of the carousel . On the client side the displayed slideshow page autolinks to itself to reacquire page meta data. The slideshow feature enables the injection of a series of still images with appropriate meta data while only using a single page of the carousel . Moreover the server may obtain the series of images in advance eliminating real time downloading thereof. By way of example a real estate entity may use this feature to present a series of images of new homes with accompanying meta data but only use one page of those available in the carousel . Note that a slideshow can present an image for any multiple of the carousel revolution time e.g. eight seconds by replicating images in a series as desired.

Moreover this feature can be used in conjunction with client side autolinks using more than one page to produce other update intervals. Indeed by rebuilding the carousel animation may be accomplished. To this end a plurality of still images with slight changes from image to image will appear as animated movement. If a single page slideshow the animation may appear somewhat slow depending on the latency e.g. a movement every eight seconds . However with autolinks to multiple pages the animation may be sped up. Note that MPEG2 is arranged to transmit change information between frames and thus not much bandwidth is required to accomplish animation. Other image enhancements such as brightening a focus ring adding images together and so on may be performed by rebuilding the carousel taking advantage of MPEG2 features wherever possible.

In keeping with the invention the browser supports a subset of HTML forms with a few extensions. The processing of each of the form elements is described below. The following table gives a brief summary of forms supported by the Information Service. Only those attributes listed are supported at this time.

Using forms a page can have simple data entry links including check boxes radio buttons and numeric entry text boxes . By way of example shows an exemplary page including text boxes radio buttions and a check box . In addition the page includes a button for submitting an order a RESET button for clearing entries and a hyperlink element . In focus is shown by the solid rectangular ring as being on the PURCHASE NOW submit button while elements which can be focused are shown surrounded by dashed boxes not ordinarily visible to an actual user .

One such form is a guide form which is processed in real time by the programming guide to take an appropriate action upon user submission thereof. As described below depending on the current time the programming guide allows a user to link to a currently available program add the program to a timer for timed viewing thereof and or prompt the user to purchase a pay per view event.

Another type of form is for purchasing merchandise or the like. To perform a purchase with this type of store and forward form the user tabs through the various elements to select and enter appropriate information. The entered attributes e.g. color size style quantity payment method and so on are temporarily stored in the memory . Once the appropriate data is entered in this manner the user selects the PURCHASE NOW link which stores the selected information as data preferably in the non volatile memory in the set top box . At a later time the purchase information will be collected from the set top box with a polling procedure whereby each box in the cable system is directed in turn to call a polling server via its modem typically late at night.

More particularly in a preferred embodiment of the present invention there is no real time interaction with a web server. As a consequence form submission must be emulated. The meta data for a page image includes all the necessary information required to generate a standard URL query string. When a form is submitted data including the ACTION URL the query string and METHOD are stored as data preferably in NVRAM in the set top box as an ASCII string. These data are formatted exactly like a standard URL query string. The METHOD GET or POST is appended to the form query string. In other words a form element named  METHOD is appended to every form query string automatically. For instance  METHOD GET . An upload forms server of the Information Service removes this sub string when the form data are processed.

When the set top box is polled via its modem for the return data typically once per day the form data for all such forms which have been submitted are returned to the upload forms server of the Information Service. The server processes the form data and generates the appropriate HTTP GET or POST requests to the specified ACTION URL. Of course user information including name billing and mailing addresses and credit card type and number will need to be collected from each user before a purchase can be made. This information can either be held remotely by the polling server or stored within the set top box to be sent with each purchase. If this information is not available or valid then the PURCHASE NOW button will link to an error page in the carousel which will direct the user to call the service provider.

No immediate confirmation of the purchase will be available. The CGI scripts for Information Service forms cannot return HTML documents to subscriber users since the contents of the carousel are broadcast and not unicast. However the CGI forms script can send Email to the user in response to a forms query. To this end the Email address of a particular set top box can be returned with the form data by using the Magic Element Name  EMAIL in a HIDDEN form elements described below . Thus an e mail confirmation notice may be sent to the user as described below with reference to the e mail scenario.

The focus geometry for form elements is specified in the page meta data described below. As before the browser uses this information to draw focus on the form elements. At present it is not possible to specify that a particular form element has the default focus for that form. Instead the first form element in the HTML source will be the first element that receives focus when the user tabs to the form. It is also not presently possible to specify that a particular form element has the default focus for the page in which that element is contained. If however the form is the first element in the HTML source then the first element in that form will receive the initial focus.

Note that for high quality imaging relative to the low quality provided by the OSD the face of a submit button such as the PURCHASE NOW link is rendered at page conversion time as part of the compressed page image. The button borders however are rendered at display time using the OSD of the set top box . The page meta data includes information that the browser uses to draw button focus as well as drawing button borders.

As a result when the user selects a submit button the browser directs the OSD to draw the button borders such that the button appears to be depressed and released. As generally shown in when the user selects a submit button step and step the browser then queues the appropriate form query string step for upload as described above or for processing by the program guide as described below . If a DESTINATION attribute is specified on the containing form as detected by step then following the submit command the browser will jump to the page corresponding to that destination step .

Similarly a reset button face e.g. RESET button is rendered at page conversion time as part of the compressed page image. The button borders are likewise rendered at display time using the OSD of the set top box so that the button appears to be depressed and released. The page meta data includes information that the browser uses to draw button focus as well as drawing button borders. When the user selects the reset button step the browser appropriately draws the button borders and restores the form elements to their default state step .

Any page that contains a text entry box or password box described below contains a reset button so that the user can clear errors. At present the text entry and password boxes allow entry but do not support any other type of editing.

Any submit element e.g. a SUBMIT button or a submit image element is also rendered at page conversion time as part of the compressed page image. The page meta data includes information that the Browser uses to draw focus on the image. When the user selects the Submit Image the Browser queues the appropriate form query string for upload or processing by the guide. If a DESTINATION attribute is specified on the containing form then the Browser will jump to that page.

Check boxes are also rendered at page conversion time as part of the compressed page image. Since a check mark may or may not appear based on the user entry the check mark is rendered at display time using the OSD of the set top box . The page meta data includes information that the browser uses to draw box focus as well as drawing the check marks on the box. When the user selects a check box step the browser inverts the state of the box step in the memory and correspondingly changes the display by either drawing or erasing a checkmark shown as an X in box of on the selected checkbox. When the form is submitted the boxes that are checked result in name value pairs in the form query string.

Similarly radio buttons are rendered at page conversion time as part of the compressed page image. The user movable check shown as a darkened circle in box of however is rendered at display time using the OSD of the set top box . The page meta data includes information that the browser uses to draw button focus as well as drawing check marks on the button. When the user selects a radio button step the browser sets the state of that button to selected while de selecting others with the same name. At step the browser also causes the OSD to draw a suitable checkmark on the button and erase the checkmarks on any other buttons with the same name. When the form is submitted the button that is checked results in a name value pair in the form query string.

At present a Text Entry Box only supports entry and echo of the numerals 0 through 9 and only a single font and pitch are supported. A Text Entry Box is rendered at page conversion time as part of the compressed page image. Echoed text is rendered at display time using the OSD of the set top box . The page meta data includes information that the browser uses to draw focus as well as information for drawing the characters.

When a text box is selected at step the browser draws focus on the text box. If the user depresses a number key on the keypad then at step that number is displayed in the leftmost position of the text box and advances the text entry position to the next character position. No cursor is presently displayed to indicate the text entry position and the next character is simply the rightmost unoccupied character position in the text box. When the user depresses another number key on the keypad that number is displayed in the new character position and the text entry position is advanced. When the form is submitted a name value pair is appended to the form query string.

Certain rules for text boxes presently apply. If the user attempts to enter more than characters then allowed in the SIZE field of the meta data described below those characters are ignored. Moreover for now a text box does not support any type of editing and thus in order to clear errors the user uses a reset button on the form. No default values using the VALUE attribute may be specified for text boxes. The Password Box is identical in function to the text box except that the characters are not echoed. Instead an asterisk or the like is displayed at step for every character that is entered.

The browser also supports the DISABLED attribute seldom supported by legal HTML which when used in conjunction with the magic name  TOTAL can be used to generate a read only text box which displays the total cost of a purchase transaction. For instance the tag will generate a text box characters in size in which the following result is displayed  TOTAL  QUANTITY  PRICE  SANDH where  QUANTITY is presumably to be entered by the user in a text box e.g. the text box and  PRICE and  SANDH are specified using hidden text. Such a read only text box is shown in .

Hidden text results only in page meta data. Nothing is rendered either at page conversion time or at display time. When a form is submitted Hidden Text results in a name value pair being appended to the form query string.

Certain state information stored within the set top box may be returned as part of the form query string by using magic element names for the NAME of the hidden text. In such an event no VALUE need be specified.

The Information Service of the present invention adds two attributes to the standard HTML syntax. More particularly a first way in which the Information Service extends the standard HTML hidden text syntax is by adding the attribute AUTOSUBMIT to the tag . When the user leaves a page with a form containing a hidden text element with the AUTOSUBMIT attribute the form query string is queued for upload just as if the user had selected a submit button.

Second the attribute DESTINATION has been added to the tag . This tag causes the Browser to jump to the specified page when the user submits the form. This allows the author to specify an HTML page that simulates the result of the HTTP GET on normal form submission e.g. through CGI . This tag is unique to the Information Service system.

For any page it is possible to include a link that tunes the set top box to a video channel rather than a link to another page. To this end the Information Service facilitates interaction with a programming guide e.g. PreVue . The exact behavior of the link depends on the type of video program that is selected. If the link selects a channel with no time of day associated therewith or selects a channel with a time that indicates a currently available program the set top box immediately tunes to the selected channel. If the associated time is in the future the user is presented with a programming guide pop up window and prompted to add the program to a timer for timed viewing thereof. If the program is a pay per view event the user is prompted to buy the event and if purchased the browser either tunes to the channel or adds the program to the timer.

To accomplish such actions the Information Service provides access to functions in the programming guide through the use of forms. A form that accesses the guide does so by specifying an ACTION URL that is processed by the guide that is the guide looks like a web server running a CGI script. One such guide is accessed using the URL http www.prevue.com cgi guide .

At page conversion time this URL is recognized and meta data for the page indicate that the form query string should be submitted to the guide for processing. At page display time when the form is submitted the browser submits the form query string to the guide rather than queue it for upload. To reduce meta data size and simplify argument processing the query string is preferably collapsed into a compact binary representation thereof at page conversion time. This syntax allows page image authors to access guide emulation e.g. provided by PreVue at author time. The following table sets forth the queries that are supported by the guide 

As described above the carousel of page images and meta data are carried as a single MPEG2 Transport Stream and each page image is a single MPEG2 video sequence consisting of a single I Frame image of the rendered HTML page. As generally represented in the program map tables of each page image is carried as a single program element i.e. Service Component of a program i.e. Service and as limited by the DCT1000 set top box each program Service ordinarily consists of ten program elements. As further seen in the program map tables of nine of the program elements i.e. a page group contain page images and the other program element contains the meta data for the nine page images that make up the program. The meta data are carried as the first program element within a program.

As also represented in each group of nine image pages in the carousel which correspond to a distinct program is mapped to a single digital channel. Thus as described above with reference to in order to display a particular page the browser tunes to the appropriate digital channel and selects the appropriate program element Service Component for display. The browser also selects the first meta data program element so that it can render focus and execute links as directed by the user. The transport stream includes the appropriate PSI data to allow the page images to be selected and displayed.

According to digital transmission conventions the program map table i.e. Service Definition Table maintained for each program contains 10 entries and including the PID which caries the program map table thus uses 11 PIDs. A program association table Service Association Table associates programs with program map PIDs and thus contains as many entries as the number of carousel pages divided by nine. The maximum number of page images that may be carried by a single carousel is limited to 6700 pages. Note that if PCRs must be supplied to ensure that the set top box NTSC sub carrier does not drift then a single valid PCR stream will be multiplexed with the carousel data. The program map table for all programs references this PID as the PCR PID.

Pages are delivered to the server in a two stage process. First a content provider transfers information from an external source such as the Internet to the Information Service server the information including provider identification a root URL of the content and the date and time the content is to become valid. Any acceptable protocol for this transmission is feasible including Hypertext Transfer Protocol HTTP or a private message protocol on top of TCP IP.

Second using HTTP the Information Service server gathers the content at the specified URL and stores it for processing into the carousel . The timing of this transfer may vary depending on several factors including available storage at the server number of pending transfers date and time the content is to become valid and default actions specified by the cable operator. In any event the content is transferred before the start time. For real time updates e.g. sports scores or stock information the same process is followed but with an immediate start time. The system is designed to allow for low latency for both the information transferring and content gathering stages.

As generally represented in the block diagram of a conversion process converts the page into an intermediate page format where it is passed to a carousel builder . One purpose of the intermediate page format is to reduce the amount of processing that needs to be performed by the processor at the cable end. For example rather than have the cable end processor dynamically calculate from an HTML page layout where to jump in response to a cursor key the jump is pre decided and stored in the intermediate page format.

The IPF file includes an image tag a program information tag and a meta data tag as described below. Note that the values correspond with fields within the meta data as described herein.

The PAGE META DATA contains the per page meta data wherein TYPE Type indicates the type of the page e.g. Hold Reload Autolink and so on AUDIO Url identifies the URL of the background audio file e.g. www.sounds.parakeet.com classical.ac3 and DELAY Time specifies the delay in seconds for Autolink pages. For each element on the page one or more of the following tags will be found and will be grouped together such that the tags for a particular element occur together  ELEMENT DESCRIPTOR  LINK DESCRIPTOR  FOCUS DESCRIPTOR  FORM DESCRIPTOR . Note that there are two formats for the  FORM DESCRIPTOR. The following describes the information in the tag 

To build the carousel the carousel builder generally follows the steps of whereby at step a program element Service Component is allocated from the program Service which will carry the page and its meta data. Note that there is a one to one mapping between program elements and pages and a nine to one mapping between pages and programs. At step the page image is then wrapped with the appropriate Transport Stream systems layer syntax using the appropriate PID from the program map table Service Definition Table . Then at step the page meta data are wrapped in the appropriate private message stream syntax and Transport Stream syntax using the appropriate meta data PID from the Program Map Table.

At step the meta data described below for any pages that contain links to the newly provided page are modified to contain the program number and program element for this page. Similarly at step the meta data for the newly provided page is modified to contain the program number SourceID and program element Service Component for pages that are linked to by the page. The initial state of the link program number in the page meta data is such that a Null page is indexed. The Null page resides on program number and contains an image indicating that the page is not available. Lastly as represented by step when the carousel is ready for transmission the information server periodically takes each carousel image stored in the 50 and injects the image onto the transmission medium a process which continues for the carousel until page information therein is changed. As a result pages are periodically available at the subscriber end as described above.

The carousel builder maintains a carousel description that is modified by page update messages. Each time the carousel changes the carousel builder creates a new carousel image in server memory from the carousel description and the pages stored on disk . When the new carousel image is completed it replaces the old carousel at the beginning of the next cycle. Note that in the case of pages that change each cycle i.e. slide show pages a new carousel must be built for each cycle.

In order for the user to interact with the pages the page images have meta data and PSI data associated therewith in the Transport Stream. In general the carousel page meta data contain the information necessary for the browser to render focus on the links on the page corresponding thereto. The meta data also contain information for selecting a new page image when the user selects a link gather form input from a subset of Hypertext Markup Language HTML form elements and or post form input for deferred processing.

The meta data for a page group of nine pages are carried in a single program element consisting of private stream messages. To associate the appropriate meta data with its corresponding page the meta data is fragmented into multiple private stream messages such that the meta data for a particular page is carried as a unique session. Each private stream message is capable of containing a predetermined number of bytes of meta data. The meta data for a page consists of four tables identified herein as the page element table the link table the focus table and the form table. These tables are described in more detail in the following sections.

The following table provides a high level description of the information that is carried in the meta data for various HTML constructs 

The ID field is used to uniquely identify the page and is thus used to verify hyperlinks. The Type field contains the page type as set forth in the following table 

Referring back to the meta data table following the Type field and a reserved field a Delay field is provided which contains a delay measured in seconds for use with the types Hold and Autolink . A LinkOffset field indicates the offset of the base of the link table from the start of the meta data. Similarly a FocusOffset field indicates the offset of the base of the focus table from the start of the meta data and a FormOffset field indicates the offset of the base of the form table from the start of the meta data.

A page element table is also provided in the meta data and comprises a table composed of one or more ELEMENT DESCRIPTORs. There is an ELEMENT DESCRIPTOR for every element e.g. link on the page. Each element requires additional information based on what type of element it is and corresponds to some HTML syntax in the source. Some simple rules have been established regarding the structure of the page element table including the rule that if an AUTOLINK element exists then it is to be the first element in the element array. Also FORM elements are to be located in the first entries of the page element table after any AUTOLINK element. Form elements are to immediately follow the FORM element for the enclosing form. Lastly the first element that can receive focus as specified in the page element table will receive the initial focus when the page is displayed.

The Type field indicates the type of element having one of the values set forth in the table below. The Type field is followed by a reserved field. A LinkOffset field indicates the offset in bytes within the link table of the LINK DESCRIPTOR for this element. Similarly a FocusOffset field indicates the offset in bytes within the focus table of the FOCUS DESCRIPTOR for this element. Likewise the FormOffset field indicates the offset in bytes within the form table of the FORM DESCRIPTOR for this element. As can be appreciated the size of an ELEMENT DESCRIPTOR is fixed regardless of the type of the element.

The following table shows the identifying type code and the additional information that is required for each type of element denoted by an X 

To accomplish hyperlinking the link table contains a LINK DESCRIPTOR for each page element that is capable of having a hyperlink as set forth in the following table 

The ID field of the link table uniquely identifies the destination page to which an element is linked and is used to verify hyperlinks. The ProgramNumber field contains the program number of the program that carries the destination page and the ProgramElement contains the program element within the program that carries that destination page. An eight bit reserved field is also present thereafter in the link table. The PackageNumber field represents the level of tiering access which via an authorization operation controls the level of service to which the subscriber is entitled. Note that the size of an LINK DESCRIPTOR is fixed.

For handling the focus operation the focus table contains a FOCUS DESCRIPTOR list for each page element that can receive focus. The FOCUS DESCRIPTOR indicates how to draw focus on the page element. Focus may be indicated with a rectangle a circle or a polygon as the focus ring. The FOCUS DESCRIPTOR also indicates to which page element the focus should be shifted for each of the direction keys i.e. the focus chain . Note that some elements such as hidden text do not receive focus and are not part of the focus descriptor list. The following table describes the content of a FOCUS DESCRIPTOR 

The ElementUp field contains the index within the element table of the element that should next receive focus when the user selects the UP button. For example in if focus is on the SPORTS REPORT link a logical change in focus for the UP button would be to the TO NEXT PAGE link . Thus the ElementUp field of the focus table for the SPORTS REPORT element would contain the index within the element table of the TO NEXT PAGE element. However the ElementUp field of the TO NEXT PAGE element may be TO NEXT PAGE since no element is above it or may instead toggle focus back to any of the other elements depending on the page author s preference as influenced by agreed upon conventions.

Similarly the ElementDown field contains the index within the element table of the element that should receive focus next when the user selects the Down button the ElementRight field contains the index within the element table of the element that should next receive focus when the user selects the Right button and the ElementLeft field contains the index within the Element Table of the element that should receive focus when the user selects the Left button.

The Shape field indicates the shape of the focus ring drawn by the OSD that will indicate focus on the given element. A 0xFF in this field indicates a polygon a 0x00 indicates a rectangle and a 0x01 indicates a circle. The CoordCount field contains the number of coordinates that are needed to define the focus shape i.e. Rectangle 2 Circle 2 and Polygon N. The following table summarizes the number and type of coordinates supplied for each type of shape 

The X field contains the X coordinate of a point on the OSD wherein the left most pixel has an X value of zero and the right most pixel has an X value of 351. The Y field contains the Y coordinate of a point on the OSD wherein the top most pixel has an Y value of zero and the bottom most pixel has a Y value of 479.

The form table contains a FORM DESCRIPTOR for each form element. The FORM DESCRIPTOR contains the NAME VALUE pair for tags and the ACTION URL for tags. Note that the FORM DESCRIPTOR has a different format for forms that access the Programming Guide described below. The following table describes the content of a FORM DESCRIPTOR 

The COORD DESCRIPTORS carry the geometry necessary to support certain form elements. The interpretation of these fields depends upon the type of the form element as set forth in the following table which shows the interpretation of these COORD DESCRIPTORS for each type of form input element 

The Function field contains the function code for the programming guide function referenced by the GUIDEFORM. The following table shows the encoding used for each of the guide functions 

Following a reserved field the SourceID field contains a unique identifier of a program. The time field contains a Time value wherein a zero indicates that the time should be treated as the current time.

The COORD DESCRIPTORS for guide form elements are used to indicate where text should be drawn. The first coordinate specifies the upper left pixel of a region. The second coordinate specifies the lower right pixel of a region. The COORD DESCRIPTORS are valid for the DATE FROM SUBJ and BODY guide functions.

The NameLength field contains the length of a Name string in ASCII characters wherein a length of zero indicates that the string is not present. The ValueLength field contains the length of the Value string in ASCII characters wherein a length of zero indicates that the string is not present. The Name field contains the ASCII Name string if present. For form elements the Name string contains the string specified by the NAME attribute. For the element the Name string contains the URL string specified by the ACTION attribute.

Similarly the Value field contains the ASCII Value string. For form elements the Name string contains the string specified by the VALUE attribute. For the element the Value string contains the method string specified by the METHOD attribute.

The following table sets forth the use of the fields within the FORM DESCRIPTOR for other types of form elements 

Turning to a consideration of how the page images are generated shows the general flow of one such image from authoring to downloading. First an author creates a page using standard HTML content creation tools such as provided in an HTML ready authoring program . Such authoring programs using standard content creation tools are well known and will not be described in detail herein. However because the pages are to be viewed on a television the author should take care to create an HTML page suitable for television viewing. For example the author should select font styles and sizes appropriate for television display and avoid color and luminance transitions which generate dot crawl. Indeed the author may wish to view a close approximation of the ultimately resulting page by using a VGA to NTSC converter with underscan and antiflicker filtering enabled. In any event as shown in an HTML source including an HTML document and associated image files is provided.

After the author is satisfied with the initial result the author runs a Phase 1 post processing tool which performs a number of operations on the HTML source . Such a tool includes the operations of rendering the page at a 640 by 480 resolution and vertically scaling the page such that the full 640 by 480 image resides within the SMPTE safe action area of a 704 by 480 overscanned television raster approximately 640 by 432 . The scaled page image is bordered by black. In addition the rendered page is vertically filtered to reduce interlace flicker and horizontally filtered to reduce cross luma and chross chroma interference artifacts.

In phase one processing the meta data that define how focus should be drawn on links and form elements are inferred by the HTML layout. The focus geometry is specified on a 352 by 480 grid that overlays the 704 by 480 page image. In other words only even pixel addresses are allowed in focus specifications. The meta data that contain the name of the HTML pages associated with each link are inferred from the HTML source as are meta data that describe any forms. The meta data defining the focus geometry and link URLs are encoded using standard client side image map tags i.e. . The HREF attribute for entries relating to form element focus will contain the URL specified by the ACTION attribute in the tag. Appended to that URL will be the form query string fragment defined by that form element. The HREF attribute for hyperlinks will contain the URL from the corresponding anchor or imagemap.

The output of this first phase includes a true color bitmap .BMP file containing the processed page image and an HTML file that contains the original HTML source encapsulated in a tag. Also contained are the original image files encapsulated in a tag a client side imagemap that is the processed page image wherein the name of the image file is identical to the name of the HTML source file and a tag defining the geometry of focus for all page elements that can receive focus including form elements. The HTML file also contains the meta data for the page encapsulated in a tag and the meta data for each page element encapsulated in a tag.

Since all focus geometry is specified using standard client side image map syntax the author can use standard imagemap editing tools to change the focus geometry if desired. Moreover since the page image is output as a true color .BMP file the author can make any necessary changes to the image using standard image editing tools. Note that if desired the anti flicker cross luma and cross chroma filtering may be postponed to the next phase described below .

The order of the tags in the tag determines the focus chain. As a result it is possible to edit the Focus Chain for a page at this stage in order to achieve results that cannot be generated simply in the HTML source . For example the author may change the focus chain order by changing the order in which these tags occur since the first tag defines where focus is initially drawn when the page is displayed.

After the author is satisfied with the focus geometry focus chain order and the final page image a phase2 post processing tool is run. The phase2 tool performs a number of operations including coding the page image as a single MPEG I Frame and processing the tag to generate focus descriptors for each page element. The focus descriptors for each page element are combined with the other meta data for each page element.

The output of this second phase is a single HTML file containing a number of items encapsulated in a tag including the original HTML source the original image files the processed page image and the compressed page image. Also contained in the file are the meta data for the page and the meta data for each page element therein. After phase2 processing the page is in the intermediate page format described above and the author provides the final file to the carousel building tool such as by running a file transfer program to transfer the file via the Internet to the server of the Information Service.

Note that the phase1 and phase2 processes and respectively can be run back to back without intervention. The break exists therebetween to provide authors the ability to exercise more control over the process if so desired. Thus as described above between phase1 and phase2 of the tool chain an author may edit the focus geometry by using any number of existing imagemap editing tools while the focus chain may also be edited by editing the FOCUS meta data.

To allow the HTML author to reference user specific data stored in the set top box and perform other limited functions a set of form element names are defined to have special meanings as set forth in the table below 

When included in the body of a form as hidden text these elements generate a standard name value pair in the form query string. For example the tag will generate the following sub string in the form query string  EMAIL set top box name customers.tci.com 

At least some existing programming guide applications and cable system infrastructures support one way e mail broadcasts to all users. This function can be extended to allow one way e mail to a specific subscriber using the existing e.g. PreVue e mail notification and display mechanism. E mail data can be sent to a specific set top box via the out of band modulator and the out of band tuner in the same manner that a specific box is enabled for receiving a pay per view movie. Although not directly linked to the Information Service architecture a head end e mail server is considered a part of the Information Service head end installation and the e mail server software is supplied by the assignee of the present invention.

The Information Service e mail client is implemented using standard HTML forms. A simple example would be a form containing buttons for Previous Next and Delete which would submit the appropriate query strings to the guide in order to have the mail text rendered using the OSD over the page image. The author of the page can specify where the From address is rendered and where the message text is rendered. The coordinates for these fields are referenced to a 352 by 480 OSD grid where the original 640 by 480 page image underlays the center 320 by 432 pixels.

Although at present e mail is generally read only it is understood that two way e mail is feasible. For example outgoing e mail messages may be written to the memory and polled via the modem by an e mail server or the like or sent directly or as soon as a telephone line is available thereto via the modem upon user command. Moreover a backchannel which sends information on the transmission medium from the various set top boxes back to the head end may be dedicated in which event all data including form entry data and e mail data can be immediately transferred without polling the modem . However in order for e mail to be practical a more sophisticated alphanumeric input device such as a conventional QWERTY keyboard arranged for communicating with the set top box would likely need to be provided.

It is also feasible to add audio to the carousel whereby audio may be optionally played while the user is in the Information Service. In such a system part of the information sent with each transmitted page is the next block or blocks if multiple user selectable audio streams are transmitted of encoded audio data. Depending on the amount of memory in the set top box the audio data may be buffered so as to load more than one carousel revolution s worth e.g. eight seconds of audio data from a given carousel into the set top box for each stream. However by regularly changing the carousel the audio may be a real time broadcast.

Lastly instead of a carousel it is feasible to have the server execute a program that selectively injects the pages into the transport stream. For example based on statistical information such as page popularity in conjunction with the time of day information which may be sampled and polled from the set top box more popular pages can be injected more frequently into the stream than less popular pages. The maximum latency for a given page can thus be controlled without effecting the total number of pages possible which occurs with a carousel by increasing a page s frequency in the carousel at the expense of decreasing the number of distinct pages therein .

As can be seen from the foregoing detailed description there is provided an interactive entertainment and information system using a cable television set top box wherein existing digital set top boxes may be used without need for modification of the hardware therein. The system enables a user to hyperlink between pages of information and facilitates an interactive relationship between transmitted programming and information pages related thereto. The user may submit form information including forms related to a viewed television program. The system provides a simple to operate low cost information service while being flexible and extensible.

While the invention is susceptible to various modifications and alternative constructions a certain illustrated embodiment thereof is shown in the drawings and has been described above in detail. It should be understood however that there is no intention to limit the invention to the specific form disclosed but on the contrary the intention is to cover all modifications alternative constructions and equivalents falling within the spirit and scope of the invention.

