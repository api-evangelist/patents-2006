---

title: Method and system for determining and notifying users of undesirable network content
abstract: A method and system for determining and notifying users of undesirable network content are disclosed. According to one embodiment, a method may include detecting an adverse content event corresponding to a given network information source, where the adverse content event occurs dependent upon activity of a given user with respect to the given network information source. The method may also include reporting the adverse content event with respect to the given network information source, detecting a reference to the given network information source on behalf of a particular user, and in response to detecting the reference, retrieving an indication corresponding to the given network information source, where the indication is determined dependent upon adverse content events reported with respect to the given network information source. The method may further include notifying the particular user of possible undesirable content with respect to the given network information source dependent upon the indication.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07797421&OS=07797421&RS=07797421
owner: Amazon Technologies, Inc.
number: 07797421
owner_city: Reno
owner_country: US
publication_date: 20061215
---
This invention relates to computing systems and more particularly to identifying undesirable sources of computer accessed content according to usage patterns associated with that content.

As the reach and accessibility of computer networks such as the Internet increase the amount of information accessible via such networks has grown exponentially. For example as commercial enterprises increasingly embrace electronic commerce techniques numerous websites offering information and purchasing opportunities for various products and services have appeared. Major media outlets commonly provide web based versions of content previously available only through print or broadcast channels and in some instances generate considerable volumes of content exclusively for web based distribution. The reduction of cost complexity and other barriers to entry into web based content publishing has also facilitated the generation and dissemination of content by individual creators.

While reducing barriers to accessibility of network accessible content or simply network content has encouraged the development of useful content malicious actors have also capitalized on such accessibility. Numerous web sites purporting to offer legitimate content instead surreptitiously cause users to unwittingly install malicious software such as spyware viruses worms or keystroke loggers. Phishing sites masquerade as legitimate business sites and attempt to lure users into disclosing sensitive information such as passwords account numbers or social security numbers. Other sites may offer content that while not malicious may be offensive or otherwise objectionable to some users.

As the amount of network content increases the difficulty of locating content that is of general or specific interest also increases as does the difficulty of distinguishing desirable content from undesirable content. Unlike libraries which may employ standardized systems of content classification such as the Library of Congress System or the Dewey Decimal System no standard for organizing and representing web based content exists. Numerous search engines have evolved to attempt to index web pages according to the page contents e.g. as given by the textual content actually displayed by the page when loaded into a browser or client or by concealed metadata such as tags associated with or embedded within the page . However there is no assurance that the information according to which a page is indexed accurately reflects the nature of its content. For example a malicious actor might seed a web page with innocuous keywords in an attempt to have the page indexed according to those features in various search engines while at the same time embedding malicious or otherwise undesirable content in the page. Users may be led to the web page based on seemingly germane search engine results resulting in their exposure to undesirable content.

Various embodiments of a method and system for determining and notifying users of undesirable network content are disclosed. According to one embodiment a method may include detecting an adverse content event corresponding to a given network content source where the adverse content event occurs dependent upon activity of a given user with respect to the given network content source. The method may also include reporting the adverse content event with respect to the given network content source detecting a reference to the given network content source on behalf of a particular user and in response to detecting the reference retrieving an indication corresponding to the given network content source where the indication is determined dependent upon adverse content events reported with respect to the given network content source. The method may further include notifying the particular user of possible undesirable content with respect to the given network content source dependent upon the indication.

According to another embodiment a method may include detecting a report of an adverse content event corresponding to a given network content source where the adverse content event is detected in response to activity of a given user with respect to the given network content source determining an indication corresponding to the given network content source dependent upon the adverse content event and storing the indication. The method may further include in response to a request to retrieve the weight on behalf of a particular user conveying the indication to a client configured to display the given network content source. The client may be further configured to notify the particular user of possible undesirable content with respect to the given network content source dependent upon the indication.

While the invention is susceptible to various modifications and alternative forms specific embodiments thereof are shown by way of example in the drawings and will herein be described in detail. It should be understood however that the drawings and detailed description thereto are not intended to limit the invention to the particular form disclosed but on the contrary the intention is to cover all modifications equivalents and alternatives falling within the spirit and scope of the present invention as defined by the appended claims.

As noted above conventional schemes for indexing network content e.g. by exhaustively crawling through such content and statically ranking content relevance e.g. by noting the degree of connectivity to content may both overlook certain content and inaccurately represent its real interest to users. In particular such schemes may be inadequate to identify undesirable content since indexing is often content neutral. As an alternative approach the interest level of network content whether positive or negative may be determined on the basis of actual user access to such content. For example content that is frequently requested by users e.g. via a web browser or other type of device or interface may be considered more interesting than content that that has many inbound links but few actual user requests. Similarly users who quickly navigate away from requested content may be indicating that something is amiss with respect to that content. Broadly speaking content interest may encompass a range of possibilities from desirable or interesting content to undesirable or uninteresting content. By associating a measure of content interest with actual user behavior relative to content such interest may be determined dynamically. Indicated content interest may then rise and fall according to content access patterns that may reflect emergent properties of a networked community of users. It is noted that in some instances the interest level of content may be a factor in or a proxy for the relevance of such content to a given user.

In the following sections the behavior of an exemplary network based system for requesting and conveying network content is discussed. Various methods for determining the level of interest of network content based on behavior of content request traffic such as rate of change behavior are explored. Additionally techniques for collecting and reporting request traffic as well as displaying the resulting interest analysis of such traffic are considered. Methods for applying collected content interest data in the analysis of patterns of user activity such as navigation paths interest spaces and keyword associations are discussed. Techniques are then described for detecting and measuring indications of adverse or undesirable content based on user behavior. Finally an exemplary computer system that may be configured to implement content request traffic and adverse content event data collection analysis and or reporting functions is discussed.

One embodiment of a system configured to facilitate the distribution of network content is illustrated in . In the illustrated embodiment a number of hosts are configured to receive requests for network content from a number of content requestors via a network . Additionally an interest analysis IA system including a web services WS interface and a traffic analysis TA engine is configured to communicate with hosts via network . As noted below in conjunction with the description of in some embodiments some or all of the components illustrated in may be partially or entirely implemented as computer executable instructions and data stored via a computer accessible medium.

Generally speaking hosts may be instances of network content sources where an network content source may encompass any suitable type of data that may be conveyed over a network including but not limited to text documents still image data page image data audio data video data metadata such as markup language tags communication protocol data such as content preambles epilogues and so forth. In many embodiments hosts may be configured to provide network content to requestors via web based data request and transport protocols. For example hosts may be configured to host web sites implementing Uniform Resource Identifiers URIs corresponding to web pages documents or other network content and to receive requests for access to particular URIs formatted in a version of the Hypertext Transport Protocol HTTP data transport protocol. In response to such requests hosts may be configured to access the content corresponding to the requested URI and to provide it to the requestor in accordance with the HTTP protocol. It is contemplated that in some embodiments application layer data transport protocols other than or in addition to HTTP may be used to convey requests for content and the resulting content to and from hosts . For example a secure authenticated version of HTTP may be employed as may a version of File Transfer Protocol FTP or any other suitable protocol. Hereinafter an network content source may be referred to simply as a content source although it is understood that the content of a content source may be conveyed or accessed via some type of communication network.

In some embodiments a given host may be configured as a self contained standalone web server that both stores network content and receives and processes requests for stored content. In other embodiments a given host may be included within a complex content server architecture. For example host may be configured as an application or content server that does not actually store content but is instead configured to retrieve requested content from a database or other repository not shown that may not be directly connected to network .

Content requestors in general may encompass any device system or software application that may be configured to request network content. For example a requestor may include a general purpose computing system configured to implement a web browser such as a version of Microsoft Internet Explorer Firefox Opera or another suitable web browser or client application. Requestor may also include functionality defined by scripts such as JavaScript modules configured to execute in a standalone environment or an execution environment provided by a web browser. Requestor may alternatively be configured to host a syndicated content aggregator that may use a publish subscribe protocol such as RSS to notify users of the existence of new or updated network content. In some embodiments a requestor may include mobile devices such as cellular phone or wireless devices configured to request network content via embedded clients. A requestor may further encompass other types of network attached devices such as television set top boxes digital video recorders etc.

Network s may include any suitable data network or combination of networks configured for communicating content requests and network content between requestors and hosts . For example network may include one or more Local Area Networks LANs such as Ethernet networks as well as Wide Area Networks WANs Metropolitan Area Networks MANs or other data or telecommunication networks implemented over any suitable medium such as electrical or optical cable or via any suitable wireless standard such as IEEE 802.11 Wi Fi IEEE 802.16 WiMax etc. In various embodiments all or a portion of network may encompass the network infrastructure commonly referred to as the Internet. In other embodiments network may be entirely contained within an enterprise and not directly accessible from the Internet. For example network may be configured as an enterprise intranet where hosts and requestors are local to an enterprise.

Generally speaking content requestors may request and receive content from hosts via network . In some instances the pattern of such requests may be indicative of the relative interest of requested content. For example if many different requestors generate requests for one content source over a period of time while fewer requests are directed to a second content source during the same period of time the request data may indicate that the first content source is of greater interest to users than the second content source during the time period in question. As described in greater detail in subsequent sections in one embodiment IA system may be configured to receive reports of content request traffic generated by or on behalf of requestors and to perform various types of analysis on such reports. Such analyses may variously be configured to determine for example relative levels of user interest of individual content sources as well as path relationships among content sources evidenced by user navigation.

While network content hosted by hosts may often conform to a web based model in which content may be requested via URIs and delivered to a web browser or other web client this is not a requirement for the methods and techniques described below. Broadly speaking hosts may host any type of network content and may interact with requestors according to any suitable request response model to provide the hosted content. For example in some embodiments hosts may be configured as databases file systems or other types of data repositories accessible by protocols other than web based protocols.

In various embodiments various ones of the components illustrated in may be implemented directly within computer hardware as instructions directly or indirectly executable by computer hardware e.g. a microprocessor or computer system or a combination of these techniques. For example the hosts requestors and or IA system components of may be implemented by a distributed system including a number of computing nodes or simply nodes such as the computer system embodiment shown in and discussed below. In various embodiments the functionality of a given component of the system of may be implemented by a particular node or distributed across several nodes. In some embodiments a given node may implement the functionality of more than one illustrated system component. For example more than one host or requestor may be implemented by a single node.

As described above a host may receive content request traffic from various requestors that is directed to network content hosted by host . For example a host may receive HTTP GET requests directed to a particular URI or a different type of content request according to a different data transport protocol. In the illustrated embodiment hosts may be instrumented with traffic reporting logic which in various embodiments may include scripts code or hardwired logic configured to report content request traffic to interest analysis system .

In one embodiment traffic reporting logic may be configured to invoke one or more web services WS calls targeting the WS interface of IA system as the service endpoint. One embodiment of a method of operation of traffic reporting logic is illustrated in . Referring collectively to operation begins in block where content request traffic directed to network content sourced by host is detected. For example host may detect an incoming HTTP GET request specifying a given URI. In response IA system may be notified of the content request traffic via a web services call block and the reported request traffic may be stored e.g. by IA system block . For example traffic reporting logic may be configured to issue a web services call according to the following format 

where corresponds to the Internet address of WS interface in name or numeric form and where denotes the requested or targeted URI. In the illustrated embodiment two referrer URIs may also be supplied. The first referrer URI may correspond to the URI from which the request for the targeted URI originated. For example the request may have been generated by a user selecting e.g. clicking a link or otherwise executing a navigation operation on some other web page in which case the first referrer URI may include the URI of that other web page. Similarly the second referrer URI may include the URI of the site page or other resource that referred to the first referrer URI e.g. the URI that is two links previous to the targeted URI in the navigation history of the requestor . More or fewer referrers may be provided in various embodiments. Also additional or different parameters may be used in the web services call in various embodiments. For example date and or time information associated with the occurrence of the content request may be embedded by the host within the web services call used to report the content request. Alternatively such information may be recorded by IA system when it receives such a report. It is contemplated that over time different hosts may report content request traffic to IA system via traffic reporting logic e.g. according to the method of . As a result over time IA system may accumulate a body of data indicative of content request traffic from many different requestors to many different content sources associated with hosts . Such data may serve as the basis for content source interest analysis and navigation path analysis as described in subsequent sections.

The additional parameter ResponseType may be used in some embodiments to return data to host from IA system . For example different values for the ResponseType may cause IA system to return data such as the top URIs referring to or from the target URI or the top URIs of all URIs known to IA system e.g. ranked according to content request traffic analysis as described below . Other ResponseType values may cause the original web services request to be echoed back to host or may cause a different response or no response at all to be returned. If URI data is returned it may be processed by host as described below in conjunction with the description of to report content request traffic and retrieve content source interest data.

It is noted that in some embodiments when a user navigates away from content on a particular host to a different content source e.g. a URI hosted by a different host the particular host may be configured to detect the outgoing transition. In some such embodiments hosts may be configured to report such outgoing content request traffic to IA system via traffic reporting logic in addition to incoming content request traffic. Since navigation away from one content source typically implies navigation towards another even if the target host is not instrumented to report content request traffic data e.g. with an instance of traffic reporting logic in some circumstances content request traffic data may still be captured by the host from which the user is navigating away.

In the example web services call shown above the specified operation AddPheromone may indicate to IA system that the supplied content request traffic information should be recorded and processed as described in greater detail below. Generally speaking recording information regarding the navigational path taken by a user to a content source e.g. the target URI as well as its referrers may be conceptually similar to an insect marking its path with a pheromone. If a sufficient number of users navigate to a particular content source through a certain set of paths those paths may be distinguished from other paths e.g. random paths via the accumulation of pheromone e.g. recorded traffic information . It is noted however that the use of the term pheromone in this context is purely illustrative or metaphorical and that some characteristics of biological pheromones may not be directly applicable to analysis of content request traffic as described herein.

It is noted that in various embodiments traffic reporting logic may be configured to invoke WS interface in any of a number of suitable ways. The example just given may be representative of a web services invocation in a Representational State Transfer REST style web services architecture. Alternatively host may communicate with WS interface using a document or message oriented architecture for example by formatting the web services request as an eXtensible Markup Language XML document encapsulating such a document using a version of the Simple Object Access Protocol SOAP and conveying the resulting encapsulated document to WS interface for processing. In either case different numbers or types of parameters for communicating information about content request traffic targeting host may be employed in various embodiments. It is also contemplated that in some embodiments hosts may communicate with interface using protocols other than web services related protocols. For example such communication may take place using protocols such as Telnet Remote Procedure Call RPC or other standard or proprietary protocols. Also in some embodiments it is contemplated that a host may combine and report information for multiple distinct content requests as part of a single web services transaction with WS interface .

An administrator of a host may integrate traffic reporting logic directly within the other functionality of host that is configured to process content requests and provide content. However in some embodiments traffic reporting logic may be configured as a self contained platform independent software module that may be downloaded remotely invoked or otherwise obtained from a third party e.g. the party providing IA system and implemented by an administrator of a host with minimal alteration to the configuration of host . For example traffic reporting logic may be implemented as a JavaScript module or a software module coded in another suitable language. Upon activation traffic reporting logic may be configured to generate the appropriate web services calls to report content request traffic to IA system in a manner that is generally transparent to the other operations performed by host . Traffic reporting logic may be implemented to have minimal impact on content request throughput. For example if traffic reporting logic cannot contact WS interface to report a particular content request the request may still be allowed to complete.

Although in some embodiments traffic reporting logic may execute on host in other embodiments it may be implemented as a module such as a JavaScript module that is delivered by host to a requestor along with the requested content. Traffic reporting logic may then be executed by the requestor rather than the host in order to report the request. In other embodiments traffic reporting logic may be implemented on a proxy server that may be located between requestor and host . The general function of traffic reporting logic may be similar regardless of whether the logic is implemented for host side client side or proxy server execution.

Through the reporting of instances of content request traffic by hosts IA system may gather data indicative of both the global traffic behavior among hosts as well as traffic behavior relative to a subset of hosts or within an individual host e.g. among the different URIs hosted by a particular host . In some embodiments IA system may store each traffic report received from a host as an individual data record while in other embodiments IA system may be configured to aggregate or consolidate traffic records in various ways. For example IA system may aggregate content request traffic data into time slots according to intervals of time such as seconds minutes hours days or other suitable intervals. Those data points falling within a given time slot may be aggregated for the purposes of analysis.

In various embodiments IA system may manipulate the received URIs within content request traffic data in various ways. For example to avoid accumulating sensitive or personally identifying user data e.g. out of privacy concerns IA system may be configured to strip query parameters session information or any other potentially personally identifying information such as cookies passwords etc. from a target URI or a referrer URI e.g. by stripping any information following the first occurrence of within the URI . IA system may also be configured to transform URIs into a canonical format for example by truncating them or eliminating internal levels of hierarchy. Additionally IA system may be configured to perform unification of different URIs. In one embodiment certain different URIs may refer to content that is sufficiently similar to warrant tracking as a single content source. For example a host may be configured to dynamically generate content by augmenting existing content with personalization information before delivering the content to the requestor . Alternatively a URI may reflect session or state information associated with a particular requestor that may be transparent with respect to the content actually delivered to the requestor. Unification of distinct URIs may include determining that the URIs refer to the same underlying content or subset of content and subsequently tracking the URIs as common rather than distinct. It is contemplated that in some embodiments some or all aggregation unification or other manipulation of reported URIs may be performed by traffic reporting logic within a host rather than by IA system . Further it is contemplated that content request traffic reporting aggregation and analysis may be performed at any suitable level of content granularity. For example in embodiments where content sources correspond to various URIs reporting and or analysis of content request traffic may be performed on the level of individual web page URIs site URIs or any other suitable portion of a URI obtainable by extraction truncation unification or any other type of transformation.

In some embodiments reports of content request traffic may be filtered according to various criteria before further analysis occurs e.g. a rate of change analysis as described below . For example in some circumstances a requestor may attempt to deliberately manipulate the traffic associated with a given content source by issuing spurious requests to that source. Such manipulation may be detected in a number of ways. For example a unique identifier associated with a requestor such as its Internet Protocol IP addresses or another suitable identifier e.g. an irreversible hash of an IP address browser key or other suitable combination of requestor information may be tracked and requests to a content source in excess of a given threshold or pattern may be considered questionable and subsequently filtered. Alternatively collected traffic data may be filtered to remove traffic received from or directed to potentially objectionable sources such as sources of pornographic content phishing sites spamming sites or other sources complicit or implicit in the delivery of malicious or undesirable software e.g. spyware or adware . Other motivations for filtering content request traffic are possible and contemplated.

Criteria for determining when filtering should be performed may vary in various embodiments. For example as mentioned above a substantial number of content requests originating from a single requestor during a given period of time may be indicative that such requests are possibly being automatically generated. If such requests are directed to one or a small number of content sources this behavior may be suggestive of an attempt to manipulate content interest indications of those sources. More generally certain patterns of content request traffic may be identified to be suspicious or manipulative. For example if content request traffic directed to a content source from one or more requestors is highly cyclical or exhibits other predictable behavior with less variation than would be expected from a stochastic process the traffic may be considered to exhibit a manipulative pattern and therefore be a candidate for filtering. It is noted that filtering may be implemented as a heuristic process rather than a deterministic process. Accordingly in some embodiments filtering may include flagging marking or otherwise indicating suspicious data instead of permanently removing the data. In such embodiments whether or not to use suspicious data may be selected as an operating parameter e.g. by specifying a desired confidence level in the content interest weights .

The actual filtering of content request traffic may occur at a number of different points between requestor and IA system . For example IA system may be configured to store all content request traffic reports received from hosts as such reports arrive and to subsequently remove records of reports deemed to be spurious or from undesirable sources. Alternatively IA system may be configured to perform filtering as reports are received and to discard or flag questionable reports. In other embodiments traffic reporting logic may be configured to evaluate content requests for filtering and may either discard a questionable request without reporting it to IA system or may report it with prejudice e.g. by explicitly indicating that it may be questionable. In some embodiments different criteria for filtering content request traffic may be applied to different content sources according to parameters specified by users of content request traffic data including the interest analysis procedures described below . In such embodiments raw content request traffic may be filtered at the time it is retrieved or analyzed rather than when it is initially received or stored.

In one embodiment IA system may be configured to perform load shedding under certain circumstances. For example if the combination of incoming reports of content request traffic data from hosts and outgoing content interest data e.g. to badges plugins or other users of content interest data as described below exceeds a threshold volume of processing activity the performance e.g. response time of IA system may degrade. In such circumstances IA system may be configured to reduce its processing load by discarding incoming reports in order to preserve performance with respect to outgoing data or vice versa. In other embodiments other load management schemes are possible and contemplated. For example IA system may be configured to offload some of its processing tasks to other systems or may employ flow control protocols to negotiate the frequency or quantity of reporting it receives from hosts .

IA system may be configured to store received content request traffic data using any suitable format or methodology. For example IA system may store such data in arrays tables trees databases hashed structures or other suitable data structures either internal to IA system or distributed among one or several external systems not shown such as database systems file systems etc. In some embodiments IA system may store historical content request traffic data for arbitrary periods of time while in other embodiments data older than a threshold age e.g. days months etc. may be automatically purged or moved to secondary storage.

The content request traffic data collected by IA system for URIs hosted by a given host may be generally representative of request traffic behavior over time for the given host . For example the collected data may form a time series of data points corresponding to content request traffic at discrete points in time or during various intervals of time. In some embodiments IA system may be configured to use curve fitting techniques to develop an analytical function that is generally descriptive of the collected data within a certain level of error e.g. by determining coefficients of a power series or Fourier series or applying any other suitable curve fitting technique . In such embodiments parameters characterizing the analytical function e.g. polynomial coefficients may be stored in place of the collected data points themselves.

As mentioned previously in some circumstances the magnitude of content request traffic corresponding to a particular URI may not be an optimal indication of the interest level of that URI. Rather the rate of change in content request traffic may be a more effective measure for detecting emerging or developing trends in actual network content usage behavior from which changes in content interest may be inferred. Particular examples of content request traffic data illustrating this phenomenon are shown in .

In content request traffic over a period of time is illustrated for an exemplary content source having a relatively high volume of requests. For example the illustration may apply to a content source corresponding to a large popular website such as a retail website. As shown by the heavy solid line content request traffic R for the high volume source ranges between approximately 350 and 550 requests during any given interval of measurement. also illustrates the first time derivative of content request traffic dR dt. As shown by the dotted line the time rate of change of content request traffic generally falls within a range of 100 to 100 requests per unit of time.

In content request traffic R is illustrated for an exemplary content source having a relatively low volume of requests. For example this case may apply to a personal website such as a blog or personal home page. In this graph the heavy solid line indicates content request traffic. Read along the left axis content request traffic falls between 1 and 8 requests during any given interval. The first derivative of content request traffic shown by the dotted line and read along the right axis falls within a range of 7 to 7 requests per unit of time.

It is noted that in the low volume case the rate of change of content request traffic is much larger relative to overall traffic than in the high volume case. This is explicitly illustrated in where the ratio of the first derivative of content request traffic to overall content request traffic and multiplied by 100 is shown for both the low and high volume cases. As shown in the normalized rate of change of traffic of the high volume source illustrated by the solid line falls within a fairly narrow range of approximately 25 of traffic volume whereas for the low volume source illustrated by the dotted line the normalized rate of change ranges from approximately 100 to 700 of traffic volume. Thus in this example even though the high volume source experiences orders of magnitude more traffic than the low volume source the variability of traffic for the low volume source is orders of magnitude larger than the high volume case. In some circumstances this variability may be indicative of changes in interest with respect to the low volume content source that may be more significant than changes in interest for the high volume content source.

In one embodiment traffic analysis engine of IA system may be configured to perform a time rate of change analysis of content request traffic data and to determine the interest of content dependent upon such an analysis. One embodiment of a method of operation of TA engine is illustrated in . Referring collectively to operation begins in block where content request traffic directed to a content source is detected. It is noted that in one embodiment detection of content request traffic may be considered to occur when a report of content request traffic is received for analysis by IA system . For example such a detection may occur when IA system receives a report of content request traffic to a URI hosted by a host such as via WS interface as described above. In other embodiments detection of content request traffic may be considered to occur when host detects a content request or when host submits a report of a request to IA system . While in some embodiments operation of the method of may be triggered by the receipt of an individual content request traffic report by IA system in other embodiments the illustrated method may operate in response some other condition or event. For example the method may be configured to operate at periodic intervals such as once per second or with some other frequency. Alternatively the method may operate when a certain number of reports have been received possibly without dependence on time. For example after ten or some other number of reports have been received the method may operate to process the received reports in an aggregate fashion.

A first order time rate of change of content request traffic may then be determined block . For example TA engine may be configured to numerically compute the first derivative or first order difference function with respect to time of the time series of data representative of the content request traffic data. In embodiments in which traffic data is modeled using analytic curve fitting techniques determination of the time rate of change of request traffic may be performed using analytic differentiation of the continuous or discrete analytic functions comprising the data model. In some embodiments the time rate of change of content request traffic may be determined only with respect to newly received traffic data which may then be appended to historical time rate of change data that may be stored in a manner similar to the content request traffic data itself. It is noted that in various embodiments time rate of change information may be determined whenever content request traffic is detected at points in time independent of traffic detection e.g. according to a schedule or in response to other events.

In addition to or instead of determining a first order rate of change as in block higher order rates of change may be determined with respect to content request traffic data block . For example a second order derivative or difference function indicative of the time rate of change of the first order time rate of change computed in the previous step may also be determined in a similar manner. This process may be extended to generate an arbitrary number of higher order derivatives or difference functions with respect to content request traffic data. Generally speaking any rate of change of content request traffic determined with respect to time may be considered a time rate of change regardless of the mathematical order of the rate of change with respect to content request traffic.

Subsequently an indication of content interest associated with the content source may be determined where the indication is dependent upon the time rate of change of content request traffic directed to the content source block . The indication of content interest associated with a given content source may also be referred to herein as a weight or interest weight associated with the given content source. As described in greater detail below in different embodiments a weight associated with a content source may be determined dependent upon a time rate of change of content request traffic directed to that source in a number of different ways employing techniques such as normalization damping hysteresis or other types of transformations influenced by the time rate of change of content request traffic. In some embodiments multiple different weights may be determined that may be associated with different interest contexts as described below. Additionally it is noted that IA system may be configured to perform the method of for the respective content request traffic corresponding to numerous different content sources. For example IA system may implement multiple processing threads configured to concurrently process traffic data for different content sources or may process such data sequentially or in a time multiplexed fashion.

In one embodiment the first order time rate of change of content request traffic associated with a content source may be used directly as the weight of the content source. Thus for example when traffic to a content source is increasing at a rate of 1 request per second or decreasing at a rate of 0.5 requests per second its weight may be 1.0 or 0.5 respectively. In variations of such an embodiment the rate of change may be normalized to fall within a particular range e.g. between 1 and 1 according to a fixed standard of normalization or relative to rates of traffic change exhibited by other content sources. In some instances distinguishing positive rates of change may be considered more significant than distinguishing negative rates of change. For example if a limited number of content sources are selected to be highlighted or displayed in some fashion on the basis of rate of change related weighting as described in greater detail below few if any sources with negative rates of change may typically be selected. In some such cases rates of change that are less than zero may be represented with a weight of zero rather than a negative weight.

As described above with respect to in some embodiments a rate of change of content request traffic may be normalized relative to the request traffic volume from which the rate of change was determined for example by computing a ratio of the rate of change of request traffic to request traffic volume. The resulting ratio or normalized rate of change may then be used as the interest weight associated with the content source. In circumstances where there is a substantial disparity between content request traffic volume for two different content sources such as illustrated in such a ratio may more effectively highlight the magnitude of a rate of change in content request traffic relative to the volume of traffic. For example as discussed above ordinary fluctuation of traffic directed to a high volume content source may be larger in absolute terms than an unusual spike in traffic directed to a low volume content source. However relative to underlying traffic volume the ordinary traffic fluctuation of the high volume source may represent only a small fraction of its total volume whereas the spike in traffic directed to the low volume source may represent a large multiple of its total volume signaling a possibly interesting change in the content interest of the low volume source.

The rate of change of content traffic either in absolute terms or normalized relative to traffic volume may be mapped to an interest weight using any desired function such as a linear polynomial sigmoidal or other type of function. A direct mapping of the rate of change or normalized rate of change to the interest weight may be viewed as a mapping using the identity function. In some embodiments this mapping may be a stateless mapping that does not take into account a previous value of the rate of change or another variable such that a change in value of the rate of change yields some corresponding change in the corresponding weight. One embodiment of a general method of such a mapping is illustrated in . Beginning in block a time rate of change of content request traffic directed to a content source is determined for example as described above. A mapping function may then be evaluated to determine an indication of interest or weight corresponding to the content source dependent upon the rate of change of content request traffic block . For example the mapping function may be the identity function or a more complex function. The resulting weight may then be stored block . For example a weight corresponding to a given URI may be stored in a table record or other data structure associated with that URI.

In stateless embodiments where positive and negative rates of change directly and immediately influence weights of content sources the resulting weights may reflect changes in request traffic to content sources in near real time. That is the weights may nearly simultaneously reflect actual changes in request traffic as they occur subject to delays in request traffic being reported from hosts to IA system and then processed. Depending on communication latencies across network in some embodiments weights indicative of request traffic rates of change may lag actual request traffic events by times on the order of seconds or fractions of seconds. Thus weights may be highly responsive to the state of request traffic.

In other embodiments a content source weight may be determined on the basis of a rate of change of content request traffic in a manner that preserves some degree of state or history associated with the weight. For example a host may exhibit a one time change in content request traffic from a lower constant level to a substantially higher constant level over a brief period of time. Before and after the transition between the initial and final levels in this example the rate of change of content request traffic may be zero while during the transition it may be a positive large quantity. In a stateless implementation a corresponding interest weight might change e.g. to zero following completion of the transition tracking the rate of change. However the transition in traffic may hold significance for users for some time after the transition has occurred. For example the transition may be indicative of an interesting change or development in the information available at the content source such as breaking news a new product announcement etc. and this development may continue to be interesting for some time after it commences.

Generally speaking a rate of change analysis of content request traffic may detect edges or transitions in such traffic that may be indicative of events that impact content interest. It may be desirable to preserve such events with some degree of persistence beyond the transitions themselves for example in order to communicate or display the events to other interested parties. For example a transition in content request traffic may signal a change in content interest that is still pertinent to an observer some time after the change occurs.

Correspondingly in one embodiment traffic analysis engine may be configured to determine an interest weight of a content source using the current state of the weight in addition to a rate of change of content request traffic. For example in response to detecting a positive rate of change of content request traffic directed to a content source TA engine may be configured to correspondingly increase a weight of the content source as a function of the rate of change as described above. However if the rate of change should become zero or negative TA engine may be configured to apply a negative gain or decay function such as a linear polynomial exponential or other function to the weight such that the weight decreases over time by the decay function of the current weight rather than the rate of change of content request traffic.

One embodiment of a method of determining interest weights for a content source dependent upon a time rate of change of content request traffic data as well as a gain function is illustrated in . Beginning in block a time rate of change of content request traffic directed to a content source is determined for example as described above. A gain function that takes into account the current state of an interest weight associated with the content source is then selected according to the rate of change block . In some embodiments TA engine may implement different gain functions according to whether the rate of change is positive zero or negative or whether the rate of change assumes certain specific values. For example a linear or identity function may be selected if the rate of change is positive while an exponential or a different linear function may be selected if the rate of change is zero or negative. It is noted that in general a gain function may operate to either increase or decrease the interest weight to which it is applied taking into account the current state of the weight.

The selected gain function is then evaluated to determine the next state of the weight block . In some embodiments the next state of the weight may be selected from either the result of the gain function or the actual value of the content request traffic rate of change. For example whichever value minimizes the change to the weight may be selected in one embodiment. The resulting weight may then be stored for example in a table database etc. such as described above block .

A particular example showing content interest weights derived using a gain function applied to historical content request traffic rate of change data is illustrated in the data plotted in . In the illustration the normalized rate of change data shown in for the high volume and low volume content sources has been transformed into content interest weight data through the application of the function 

It is noted that by applying different gain functions and parameters to rising and falling edges detected in content request traffic e.g. as indicated by first order or higher order rates of change of content request traffic the responsiveness of an interest weight to different types of fluctuations in request traffic may be selectively tuned to be reactive or twitchy in some cases and damped or delayed in others. For example a weight may be tuned to respond very quickly to increases e.g. positive edges in request traffic but to have a much more gradual decay in response to decreases e.g. negative edges in traffic or vice versa. In particular it is noted that regardless of how the weight is tuned it may generally respond to actual fluctuations in content request traffic as they occur with minimal reporting and processing delays. This behavior stands in contrast to conventional approaches to indexing network content which generally function independently of actual request traffic e.g. using web crawling mechanisms and thus do not reflect the information implicit in that traffic. That is conventional indexing approaches may be generally characterized as pull models in which content to be indexed is identified and retrieved regardless of whether the content is actually interesting as measured by user behavior. As a consequence conventional approaches may gather and index uninteresting content and overlook potentially interesting content. By contrast the rate of change based content interest model described herein may be generally characterized as a push or demand driven model in which the interest level of a given content source need not be determined if in fact there is no interest in the given source as indicated by e.g. an absence of content request traffic data. That is rather than unconditionally gathering an arbitrary set of data and subsequently determining what part of the gathered data may be interesting as in the pull model the push model may first determine a level of content interest and then perform other functions such as those described below for content that is interesting.

Although the interest weight of a content source has been described above as being determined on the basis of a rate of change of content request traffic optionally also depending on the current weight through a gain function in some embodiments other factors may also contribute to the interest weight of the content source. For example a weight determined on the basis of rate of change information as described above may be combined e.g. in a weighted average with other measures of interest or relevance such as the volume of request traffic directed to the content source the number of static links or references to the content source from other sources or other suitable factors.

Additionally it is contemplated that other types of time based analysis of content request traffic data may be performed in some embodiments instead of or in addition to a differential analysis of a rate or rates of change of content request traffic. For example content request traffic may be integrated over a period of time to determine the basis for normalizing rates of change of content request traffic. Other techniques such as time frequency transform techniques e.g. using an appropriate version of a fast Fourier transform algorithm or discrete Fourier transform algorithm may also be applied to time series content request traffic data to transform such time series data into a frequency domain and thus facilitate extraction of frequency components of the data. Such frequency components may be amplified filtered or otherwise transformed using frequency domain techniques. The results may be used to influence the determination of interest weights for the corresponding content source.

Although the foregoing discussion describes embodiments in which interest weights may be determined with respect to individual content sources it is contemplated that similar techniques may be used to determine interest weights with respect to navigation paths among various content sources. For example one requestor may generate content access requests directed to a set of content sources A B and C in that order while another requestor may generate content access requests to these sources in the order B A C. In some embodiments such navigation paths may be detected through an analysis of the referral and destination information submitted to IA system in a report of a content access request. For example considering the exemplary AddPheromone web services call discussed above when the first requestor navigates from content source B to content source C the AddPheromone call may reflect that the first referrer is content source B and the second referrer is content source A allowing the path to be reconstructed. In one embodiment IA system may be configured to detect longer paths by examining reported traffic for instances in which a destination first referrer combination of one report matches a first referrer second referrer combination of another report or vice versa.

In some embodiments once a navigation path is identified it may be treated as a locus of interest weight analysis in a manner analogous to that of individual content sources. For example a navigation path may be treated as a content source in itself in that request traffic volume along the path as well as rates of change in that traffic volume may be identified. Correspondingly interest weights may be generated for paths dependent upon determined rates of change of traffic volume along those paths.

A rate of change based interest weight of a particular content source determined as described above may be generally indicative of the interest of that content source in the context of all content sources for which weights have been obtained. That is the computed weight may be considered a global indication of interest or a global weight. However in some embodiments it may be useful to determine more than one weight for a given content source where the different weights are normalized relative to different contexts. For example a global weight of a given URI that reflects all request traffic to that URI may be useful in ranking the interest of the given URI in the broad context of all known URIs. However the interest of the given URI may also be considered within a narrower context such as those URIs falling within the same top level domain e.g. www.domainname.com or those URIs belonging to some community of interest as described below.

In some instances a content source that has one weight reflecting interest within a global context may have a considerably different weight reflecting interest within a local context. For example rate of change data for a given URI may not be particularly noteworthy on a global scale but might be maximal relative to other URIs within the same domain or other local context. Thus in some embodiments TA engine may be configured to determine both a global weight and one or more local weights for a given content source.

Local weights may be determined in different ways according to different embodiments. In the method embodiment illustrated in a local weight of a content source may be determined relative to a specific requestor or a set of requestors . That is the local weight may reflect a rate of change of content request traffic originating from one or several particular requestors rather than considering traffic from all requestors in the aggregate. In block a specific requestor or set of requestors corresponding to the local weight of the content source is defined. For example a particular originating URI or domain may be specified. Subsequently content request traffic directed to the content source from the specified requestor s is detected block for example by TA engine via traffic reporting received via WS interface as described above.

A time rate of change of content request traffic originating from the specified requestor s is then determined block and a local weight may be determined based on the rate of change of content request traffic block . Both rate of change and weight determination may be performed by TA engine in a fashion similar to that of global weights described above. For example local weights may track the rate of change in content request traffic in a stateless fashion or one or more gain functions may be used to shape the response of the local weight to changes in the request traffic behavior. In particular it is noted that different gain functions may be applied to local weights versus global weights. For example a global weight of a content source may decay at a different rate than a local weight of that source. Subsequently the local weight may be stored block for example as part of a record or table along with a global weight for the content source.

As just described a local weight of a content source may be determined on the basis of a subset of content request traffic data restricted to specified requestors. In an alternative embodiment a local weight may also be determined by normalizing global weight information relative to a specified subset of content sources. For example the global weight of a given content source may be only a fraction of the maximum global weight when all content sources are considered in the aggregate. However within a particular subset of content sources such as local context or community of interest comprising a selected number of content sources the given content source s global weight might be maximal. For example a global weight of a particular blog may fall well below the median or average global weight of all content sources for which global weights have been determined e.g. including news sources retail web sites etc. . However considered within a subset of all content sources that includes all blogs or perhaps all blogs on a particular theme e.g. politics parenting technology law etc. the global weight of the particular blog may rank within the top few content sources of the subset. Deliberately normalizing weights within a specified context may simplify the comparison or ranking of content sources within that context.

One embodiment of a method of determining local weights by normalizing global weights relative to a subset of content sources is illustrated in . Beginning in block the subset of content sources is identified. For example the subset may be defined to TA engine to include all or a portion of the URIs included within a single domain or a number of URIs across different domains that fall within a community of interest. Subsequently global weights are determined for each content source according to respective rates of change of content request traffic data block . For example content request traffic reports may be collected and analyzed to determine global weight information using any of the techniques or methods described above.

Global weight information is then normalized within the specified subset of content sources to determine respective local weights for each source block . For example the global weights of the subset of content sources may be normalized relative to the maximum global weight or weights within the subset. While such normalization may be linear in some embodiments the relationships among the resulting local weights may be nonlinear with respect to the original global weights. Subsequently the resulting local weights may be stored block as described above.

Different considerations may serve to interrelate different content sources within a particular local context or community of interest for which local weights may be defined. As mentioned above in one embodiment a local context may correspond to a particular domain and some or all URIs residing within that domain may be members of the local context with corresponding local weights. In other embodiments a local context may be defined more generally in terms of content source topography. For example two URIs may reside within the same local context if they are related by a link or explicit reference from one to the other. More loosely two URIs may reside within the same local context if their domains are related at any level by a link from one to the other. A local context may be defined more broadly by extending membership to content sources that are related by intermediate links or references as opposed to direct links.

In other embodiments membership by content sources in a local context may be determined on the basis of content relationships among the content sources as opposed to topological relationships. For example the information content of a given textual content source may be characterized in some embodiments by performing a statistical analysis of words or phrases included within the source and to identify so called statistically improbable phrases that may be indicative of salient information content. For example a phrase that occurs frequently in one content source in comparison to others may be indicative of some significant or unique aspect of that content source as opposed to a generic phrase that may be common to many sources. That is it may be statistically likely to find common phrases in many content sources but statistically improbable to find phrases unique to a particular source in many content sources. In one embodiment two different content sources may be determined to be members of the same local context if their content overlaps to a specified degree even if they do not explicitly reference or link to one another. For example two content sources that have a specified absolute number or fraction of statistically improbable phrases in common may have related content and may consequently be identified as members of a common local context or community of interest.

Other suitable techniques or algorithms may be employed to determine content relationships among content sources including other types of content such as image data audio data metadata or embedded tags etc. and to identify related content sources as members of a community of interest. For example metadata tags descriptive of the type and content of different content sources may be compared to determine whether the sources are of similar types e.g. text images etc. and have similar content where a measure of similarity between two sources may be proportional to the number of tags those sources have in common for example. In other embodiments hashing or other reductive techniques may be used to generate content dependent signatures of content sources. Depending on the properties of the algorithm used to create the signature signatures of different content sources may be compared to determine a qualitative or quantitative indication of similarity among the sources.

Additionally in some embodiments the extent of a local context with respect to content sources may be defined manually. In one embodiment a user may be provided with a graphical user interface configured to display a topology of interests. For example the topology may reflect different interests by keywords or phrases and may illustrate relationships among such interests such as hierarchical or set membership relationships degrees of similarity etc. Alternatively the topology may reflect different content sources illustrating similar relationships. The user may then interact with the interface to specify the categories of interest or the particular content sources to be treated as a local context with respect to content interest weight determination. For example a user may select individual entities within the topology or may specify groups based on particular relationships e.g. all entities hierarchically beneath a given entity all entities removed from a given entity by degree N etc. . Content sources related to the user s selections may then be associated with a local context for content weight determination as described above. Regardless of the technique used to define a community of interest among content sources e.g. topological or content based techniques a hypothetical content seeker having interest in one content source generally may have a better than random chance of having interest in another content source within the same community of interest.

It is contemplated that in some embodiments an arbitrary number of local weights may be determined for a given content source using combinations of the techniques described above. For example a given content source may be a member of multiple different local contexts with a respective local weight associated with each one.

Using the various techniques described above interest analysis system may operate to generate a wealth of interest information e.g. interest weights and related data for various content sources based on content request traffic directed to those sources from requestors and reported by hosts . Interest weight information corresponding to content sources may be used in a number of different ways. For example in some embodiments a conventional search engine may be configured to use a global or local interest weight of a content source to rank the position of that content source in a listing of search results either instead of or in addition to other methods of ranking search results e.g. according to the number of static links or references to a given content source as determined by an indexing process . Specifically in one embodiment a search operation may be performed over a number of content sources for which corresponding content interest weights have been determined e.g. by evaluating a set of keywords or a formal query against the content sources. Such a search operation may be performed by a search engine application that is integrated into IA system or separate from it. Those content sources that satisfy the search criteria specified by the search operation may then be ranked according to their respective content interest weights for example in ascending or descending order according to the values of the weights. However as described above in some embodiments interest weight information may be indicative of near real time content request traffic activity and may be frequently updated to reflect changes in such activity. Correspondingly in some embodiments the use or display of interest weights may be configured to take advantage of their near real time properties.

Generally speaking content interest data may be retrieved from IA system by an application for any suitable purpose. For example an application may seek to retrieve raw content traffic reports submitted to IA system in order to perform its own analysis. Other applications may request content interest data derived by IA system such as content interest weights or information on navigation paths or aggregate paths as described below. For example as discussed below in conjunction with the descriptions of content interest information may be displayed to a user via a web page browser plugin or badge.

Generated content source interest data may be retrieved from IA system according to any suitable technique. For example in embodiments where IA system is configured to store records tables or other data structures including interest data various applications may query IA system via WS interface to retrieve interest data for a particular content source or a number of sources. Such data may include for example and without limitation the URIs or other identifiers of the content sources having the highest ranking by global interest weights the highest ranking requestors submitting requests to the host the highest ranking content sources as destinations for navigation away from host or the highest ranking content sources ranked by local weights within any local context or community of interest that may be defined as described above. Lowest ranking or intermediate ranking content sources in any of these categories may also be the subjects of interest data queries. In various embodiments the number of content sources for which interest data is returned in response to a request may be fixed or user selectable. In one embodiment WS interface may support a limited number of predefined types of interest data queries while in another embodiment a general purpose query interface may be provided for processing any desired well formed query of interest data.

While in some embodiments retrieval of interest data may be performed by applications or processes that are independent of requestors and hosts in other embodiments such retrieval may occur by a host as part of the process of reporting content request traffic data. In some cases retrieving current content source interest data in response to submitting a report of content request traffic data may enable a host to refresh a set of locally pertinent interest data without issuing a separate web services call. For example in one embodiment a host may be configured to submit a report of a content access request by invoking a web services call such as the AddPheromone call described above. Depending on the configuration of the web services call e.g. the argument provided to the ResponseType parameter of the AddPheromone call shown above when a host submits a report of a content request WS interface may be configured to return different types of content source interest data.

One embodiment of a general method of using a single web services call to report content request traffic and retrieve content source interest data is illustrated in . Operation begins in block where content request traffic is detected. For example a host may detect an HTTP GET or other type of content request from a requestor . Subsequently a web services call to report the content request traffic is formatted block . For example in a REST style web services architecture parameters needed to report the traffic may be specified in the form of parameters of an HTTP request to WS interface may be specified whereas in a document based web services architecture a text document including the parameters may be assembled. In this step the desired content source interest data to be retrieved may be specified. For example one of a number of arguments to a parameter e.g. the ResponseType parameter shown above may be specified in order to identify a particular predefined set of interest data to be returned e.g. a fixed number of top ranked content sources according to global weights . In other embodiments a free form query for selecting the desired set of interest data may be specified.

The web services call may then be posted to WS interface block and recorded and analyzed by TA engine as described above. In response IA system may be configured to retrieve the requested interest data block performing any necessary query processing or other data selection or filtering specified by the web services call. For example IA system may select records of content source interest data according to global weights or local weights for a particular local context. Subsequently the requested interest data may be returned as a result of the web services call block . For example a formatted document or stream of text containing the requested interest data may be returned to host .

Regardless of whether interest data is returned to a host in response to a content request reporting web services call or returned to a requesting third party application that is wholly independent of hosts and or requestors the interest data may be used or displayed in a number of fashions. In one embodiment as illustrated in a requestor may be configured to display retrieved interest data to users via a web browser or client. In the illustrated embodiment requestor is shown to include a web browser as well as a plugin configured to interact with browser . Generally speaking browser and plugin may be respective code modules or collections of code modules executable by requestor to provide various functions. In one embodiment browser may be any suitable type of browser software capable of retrieving and displaying network content such as web pages or other content retrieve form a host via a web based protocol. For example as mentioned above browser may correspond to an instance of Internet Explorer or another specific type of browser.

Plugin may be a software module that is configured to integrate with and augment the functionality of browser . For example plugin may interface with an application programming interface API provided by browser such that plugin operates as an extension of browser . In some embodiments plugin may be selectively downloaded and installed within browser by a user in order to obtain functionality that may not be natively supported by browser . For example plugin may be downloaded by a user from a host from IA system or from another source. As described in greater detail below in some embodiments plugin may be executable to display a toolbar or other type of user interface within a display environment managed by browser .

In the illustrated embodiment browser additionally includes badge code . As described in greater detail below badge code may be executable to display aspects of content interest data within a display environment managed by browser and or to perform other functions. In various embodiments badge code may be implemented as a JavaScript module as another type of executable code or script based module or as a static image e.g. represented in Hypertext Markup Language HTML or another type of markup language .

As mentioned above browser may be generally executable or operable to generate a display or interface with which a user may interact to request view and perform other operations with respect to network content. Likewise badge code and plugin may be executable to generate specific displays or interfaces of their own or to implement other functions not directly associated with the display of content interest data. One example of a collection of displays that may be presented to a user through the collective operation of browser badge code and plugin is illustrated in . In the illustrated embodiment a browser window that may be generated and managed by browser is shown displaying a variety of content that may include text images links to other content sources or any other suitable content arranged in any fashion within window . Additionally a content interest data display or badge is illustrated within the display area of window . Badge may be generated through the operation of badge code . Similarly window includes a toolbar which may be generated through the operation of plugin . In the following discussion a general correspondence between the executable components shown in and respective display elements shown in is assumed. However as noted below in some embodiments plugin may partially or completely subsume the functionality of badge code or vice versa and in some embodiments the functionality of either or both of plugin or badge code may be implemented separately from and without dependence on browser .

Generally speaking individual instances of badge code may be associated with respective hosts or content served by hosts and may be displayed in some fashion whenever a user accesses a host for which badge code has been implemented. Badge code may be integrated within the code or content of a particular web page served by a host or implemented such that it is downloaded activated and displayed whenever a user requests any content served by a host . In some embodiments it is contemplated that badge code may be configured to implement the functions of traffic reporting logic described above while in other embodiments traffic reporting logic may be implemented as a module distinct from badge code .

Additionally in some embodiments badge code may be configured to implement functions for locating or recruiting new sources of content for potential instrumentation with traffic reporting logic and inclusion in content request traffic data collection. In one embodiment badge code may be configured to provide a user selectable interface option such as a menu item a clickable link or banner or another suitable interface through which a user may obtain install and configure those components e.g. traffic reporting logic and or badge code needed to begin participating in content request traffic reporting. For example badge code may be configured to present e.g. via badge a selectable banner or menu item displaying a message to the effect of click here to install me on your site Upon selecting this item a user may be directed to a site offering instructions and downloadable software that may be used to instrument a host .

In another embodiment badge code may be configured to examine content request traffic arriving at and departing from its respective host in order to identify a host or domain associated with such traffic. In response to detecting arriving or departing traffic badge code may be configured to notify an administrator of the source or destination of such traffic to solicit participation in content request traffic reporting. For example badge code may extract a domain name e.g. domainname.com from a content access request and may then send an email notification to webmaster domainname.com admin domainname.com or any other typical or well known administrative address that may be included in a default list of such addresses where the notification may include instructions regarding how to participate in content request traffic reporting and or links directing the recipient to a content source including such information. In other embodiments badge code may identify candidate content sources for recruitment using other techniques. For example badge code may create lists of potential content sources derived from content request traffic directed to its respective host . Subsequently badge code or other software may be configured to examine or mine prospective content sources to determine administrative contact information e.g. a preferred contact listed on a web page the type of content available from the content source whether the content source is already instrumented with an instance of badge code and or traffic reporting logic or other relevant information regarding the prospective source.

In the illustrated embodiment badge code is configured to display via badge interest weight information and related data associated with its respective host that may be retrieved from IA system as described above. In one embodiment badge code may be executable to simply display an ordered list of content sources ranked according to the request that yielded the interest weight information. For example if the interest data for the most popular global content sources or local content sources within some local context was requested badge code may be executable to display all or a given number of those sources ranked from highest to lowest. In badge a given content source may be identified by a display of its URI an icon or a tag alias or other source name that may be assigned by the content source or specified by the user viewing the display. In some embodiments badge code may be executable to provide a user interface that allows a user to customize aspects of the display for example by specifying the type of query used to retrieve the interest data to display the amount of data to display such as the number of content sources the frequency with which the display data is updated or other display characteristics such as fonts colors styles etc.

In one embodiment badge code may be executable to retrieve and display content interest weight information that is relevant to content request traffic associated with a respective host without taking into account user specific information such as navigation history or content preferences of a user interacting with browser window on a requestor . For example badge code associated with a given host may be executable to indicate the top content sources among all hosts according to global weight the top content sources hosted by given host in particular e.g. specific URIs hosted by given host the top referrers to given host or the top content sources navigated to from given host . In some embodiments it may be desirable to keep the functionality of badge code relatively lightweight and host specific. For example the functionality of badge code may be confined to a limited feature set of display and analysis options centered on content interest data that is pertinent to a given associated host . In some such embodiments limiting the features and scope of analysis in this way may reduce the code size of badge code and consequently the time required to load content from given host as well as dependence on client specific aspects of the browser . For example minimizing the complexity and user interface requirements of badge code may facilitate the display of badge within the display environments generated by different types and versions of browsers and underlying platforms.

In contrast to one embodiment of badge code plugin may be configured to perform user specific personalization of content interest information. In one embodiment plugin may be configured as a software module that may be obtained by a user and persistently integrated within browser or as a standalone software module. As described above and shown in plugin may be executable to generate a toolbar that may be displayed within browser window for example in a reserved portion of the display area within a browser window or via a browser tab. Alternatively toolbar may be displayed separately from window as a detachable or standalone window. Plugin may be invoked as an extension to browser . Alternatively the functionality of plugin may be implemented as a separate standalone application that may execute independently of browser and may generate any suitable type of user interface including interfaces other than toolbars. In one embodiment once installed plugin may remain active throughout a user s session with a browser . By contrast in one embodiment badge code may remain active only so long as a user is viewing content associated with its respective host via browser window and may be deactivated if the user navigates away from that host.

Plugin may be configured to perform a variety of functions related to content interest data on behalf of a user. In one embodiment plugin may provide an interface through which a user may specify arbitrarily complex queries of content interest data generated by IA system . Such queries may allow a user to track the relative interest of content sources ranked within global or local contexts. As a non limiting example plugin may allow a user to receive visual or textual feedback e.g. via toolbar that is indicative of the top five globally ranked content sources as well as the top five news media stories e.g. stories from any media site and the top five sources having any relation to a specified topic e.g. patent law. As described above a user may also track relative interest of paths among sources ranked within either global or local contexts. Plugin may be executable to provide an interface that enables a user to specify how a given local context is defined for example by entering various types of metadata or keywords indicative of the local context.

As noted above interest data may be collected and updated by IA system in near real time as changes in content request traffic occur among various hosts . For example plugin may cause the data displayed via toolbar to be refreshed at regular intervals e.g. at intervals of five or ten seconds or upon the request of a user. In some embodiments plugin may be configured to highlight the evolution of interest data over time. For example rather than simply display an ordered list of content sources according to interest data plugin may be configured to cause the content sources to be displayed in display formats that are directly influenced by interest data. In one embodiment the size or color of the text or icon used to display a particular content source within toolbar may vary as its corresponding interest data changes. For example if the global weight of a displayed content source increases or decreases over time the size of the font used to display the name of the content source may correspondingly increase or decrease. In some embodiments different display characteristics may be used to simultaneously display different aspects of interest data for a given content source. For example font size may correlate to changes in global interest weights while font color may correlate to changes in local interest weights. Other uses of display characteristics to convey evolving content source interest data are possible and contemplated. Further detail regarding such uses may be found in co pending U.S. patent application Ser. No. 11 186 357 filed Jul. 21 2005 and entitled Displaying Links at Varying Levels of Prominence to Reveal Emergent Paths Based on User Interaction. 

One example of a type of content interest data display and its evolution over time is illustrated in . Such a display may variously be generated by plugin or badge code and displayed via toolbar or badge respectively. In other embodiments such a display may be generated and displayed by other components. For example content interest data may be dynamically displayed by a host as a web page directly accessible by a user via browser without need of badge code or plugin .

In one embodiment the components and techniques described hereinabove may be implemented within a large enterprise that creates and manages a substantial degree of network content in to track content interest weight information for example as part of an enterprise resource management or knowledge management process. illustrate the top destinations within the enterprise ranked according to interest weights determined as described above at three points in time separated by several minutes. For example the top ranked content source varies over this relatively short period of time between several phone directory entries and the Wiki Wiki Home content source which may correspond to e.g. an network repository of documentation that may be collaboratively maintained by users. As shown the display may include an indication of the interest weight of a particular content source as well as a link or URI associated with the content source. In some embodiments each link may be an active link such that a user selecting the link may thereby navigate to the indicated content source. In the illustrated embodiment two weights are illustrated for each URI. The first weight indicates a total weight which may be determined as a function of a most recently calculated rate of change of content access request traffic as well as earlier calculated rates of change e.g. using a decay model as described above with respect to . The second weight indicates a weight during a most recent interval of time such as may be determined from a most recently calculated rate of change without accounting for earlier calculated rates of change. In the illustrated embodiment URIs are ranked according to the total weight. In other embodiments however content interest weights may be determined according to different functions of rates of change of content request traffic and more or fewer weights may be displayed. Further URIs may be ranked differently e.g. according to most recent weight instead of total weight .

Additionally in the illustrated embodiment each indicated content source includes a drilldown link that a user may select to obtain more information regarding the content request traffic associated with a particular content source. One embodiment of a display of such traffic data is illustrated in . In the illustrated embodiment content request traffic information is shown for the content source Wiki Wiki Home that appears as the top ranked destination in the display of . The drilldown display shows content source and corresponding interest weight information for those content sources that are destinations from the Wiki Wiki Home content source and those content sources that are referrers to the Wiki Wiki Home content source. As shown users may arrive at this content source from a number of different referral paths and may proceed to a number of distinct destinations from this content source.

In addition to or instead of generating a graphical or textual display that responds to events relating to content interest data plugin may also be configured to support various other types of user notification in response to such events. For example a user may specify one or more notification criteria such as a threshold weight of a content source with respect to a global or local context or some other criteria. If a content source satisfies the notification criteria plugin may be configured to notify a user by displaying an alert on a display device e.g. displaying a dialog box or other type of interface on a computer monitor or other graphical interface that displays browser window or sending an electronic mail email or an instant message IM to an email or IM address specified by the user. In other embodiments plugin may be configured to place a telephone call or send a text message or numeric page to a device specified by the user. Plugin may also be configured to generate notifications using a publish subscribe or syndication protocol such as a version of the RSS Really Simple Syndication or Rich Site Summary and to convey such notifications to a browser news aggregator or other RSS application which may generally include any application capable of receiving such RSS notifications and acting in response to them e.g. to display content or convey its own notifications to users.

Plugin may support other types of user personalization or customization with respect to content interest data. In one embodiment plugin may be configured to provide notifications or recommendations of potentially interesting content on the basis of a user s expressed interests the user s navigation history among content sources or extrapolation of interest from content sources themselves. For example a user may provide a list of keywords e.g. by manually entering keywords by selecting keywords from a predefined list etc. indicative of content types or topics in which the user is particularly interested. Plugin may use such keywords as a basis for creating local contexts or otherwise filtering content interest data in ways that are likely to detect content of specific interest to the user. Plugin may also be configured to analyze a navigation path among content sources traversed by a user and as described above to identify other possibly interesting content sources that may fall in or along such a path according to collected content request traffic data. Additionally plugin may be configured to extract content identifying information such as keywords content metadata statistically improbable phrases or other such information from a content source a user has previously requested e.g. a web page currently or previously viewed by the user . Plugin may use such extracted information or any other information gathered from user navigation or otherwise collected from a user in conjunction with content interest data to identify and suggest content sources of potential interest to a user. Plugin may be further configured to display notifications or recommendations regarding potentially interesting content via toolbar or via any of the notification techniques described above.

As noted above in some embodiments content interest data may be available for use or display by badge code plugin or other software or hardware with minimal delay following content request traffic events that may influence content interest data. That is content interest data may be available for processing in near real time relative to the actual occurrence of content request traffic. However in some embodiments historical content interest data may also be processed and or displayed. For example a user may not be able to view near real time content interest data for a period of time e.g. hours or days owing to other activities. When the user is once again available to view content interest data he or she may be interested in learning not only what content is currently of possible interest but what changes in content interest may have transpired during the previous period of time.

In one embodiment plugin may include an interface that allows a user to access historical content interest data in various ways. For example a user may interact with plugin e.g. via toolbar to query historical content interest data e.g. as stored by IA system for any content sources that would have satisfied interest notification criteria over a period of time. In other words a user may effective apply a set of current notification criteria intended to notify the user in near real time as described above should a content source satisfy the criteria against historical content interest data. In applying such criteria against historical data plugin may generate a highlighted display of interesting content for which notification would have occurred had the user been available to receive it. In another embodiment rather than retrieve and retroactively analyze historical content interest data from IA system plugin may be configured to store a history of content interest data notifications etc. as they occur over a period of time. For example in addition to or instead of conveying a notification to a user plugin may store a notification and possibly other data such as timestamp information for later review by the user. Plugin may implement various interface options through which a user may interact with historical content interest data. For example via toolbar plugin may enable a user to scroll the contents of a graphical display e.g. a plot of a content interest weight backwards and forwards through historical time to illustrate changes in the data over time. Plugin may alternatively store a list of content sources e.g. URIs identified as interesting which may be displayed in historical order in ranked order according to relative level of interest alphabetically etc.

It is also contemplated that historical analysis of content interest data may be employed over longer timeframes. In one embodiment plugin or other software or hardware may be configured to analyze content interest data over arbitrary periods of days weeks months etc. in order to detect patterns or trends in the data. For example content interest data may be mined for correlations between changes in interest of a given content source and other factors such as the type of content of the content source access behavior of similar or competing content sources or other emergent trends.

Although embodiments of plugin and badge code have been described as having distinct functionality it is contemplated that in some embodiments badge code may be configured to implement some or all of the features of plugin or vice versa. It is further contemplated that functionality for processing and display of content interest data may be implemented using a different partitioning or architecture. For example various display and notification functions may be divided among different components rather than implemented as a single plugin or badge. In one embodiment processing and display functionality for content interest data may be built into a website for direct viewing and interaction via browser without need of plugin or badge code .

Some applications may process content interest data independently of browser . For example some of the data mining or other post processing activities mentioned above may be implemented by one or more standalone applications configured to directly retrieve content interest data from IA system using appropriate web services calls database queries or other interface approaches. In one embodiment a search engine may be configured to employ content interest data to rank search results analogous to the manner in which conventional indications of relevance may be used. For example a content source having a higher global or local weight may be ranked higher within a set of search results than another content source having a lower global or local weight. As mentioned above it is contemplated that in some embodiments content interest data may be used in conjunction with other data e.g. relevance data to perform such a ranking.

In one embodiment an application may be configured to place advertisements within network content dependent upon content interest data. For example conventional placement of an advertisement within network content may depend upon whether the content matches a keyword profile associated with the advertisement. However like a conventional measure of relevance described above such a conventional placement does not take into account rates of change of content request traffic associated with the content in which the advertisement is placed. By contrast in a system configured to determine content interest weights as described hereinabove more sophisticated advertising placement may be possible. For example rather than being statically bound to a given content source an advertisement may be selectively associated with different content sources as their relative interest changes such that the advertisement is persistently associated with a content source having at least a threshold level of interest. Additionally the cost charged for advertising placement may be associated with the desired interest level of the content sources targeted for placement. For example the highest rates may be charged for placement on content sources having the highest interest weights either globally or in a local context.

In embodiments where content interest data is computed for navigation paths among content sources instead of or in addition to traffic directed to a single content source advertising placement may also be performed dependent upon the interest level of a path navigated by a user. For example as described above user navigation among sources may be used to suggest or recommend other content sources of potential interest to the user. Similarly such navigation path information may be used to determine advertisements that may be particularly compatible with a user s interests. In some embodiments it is contemplated that content interest data may be used in conjunction with keywords or other content data or metadata to perform advertising placement.

As described in detail above in some embodiments request traffic activity directed to a given network content source may be used as the basis for deriving metrics indicative of the relative interest of the given network content source to users as reflected by actual user activity. Frequently a given content source may exist within a network of relationships defined by user navigable references or links to other network content sources. For example a content source may encompass a web page that includes links e.g. encoded as HTML links or other navigable link types to other web pages or to images audio content executable files application data files or any other suitable type of content source. When a given link is selected or otherwise activated by a user e.g. through the user clicking on or hovering over the link the user may be presented with the requested content associated with the referenced link. For example a new web page may appear in a user s existing browser or within a new browser window a download may commence a suitable application for processing data referenced by the link may be activated e.g. a reader application for a particular data format such as the Portable Document Format PDF or any other suitable activity related to the presentation of requested content.

It is noted that references among content sources need not be limited to links among web pages. In some embodiments a user may generate a reference between two content sources by virtue of some action or activity within the context of one content source that targets the other content source. For example a user may interact with a web page content source to select portions of the page s content e.g. phrases or keywords . Subsequently the user may copy the selected portions into a search function of toolbar or into a browser displaying an interface of a web page and may perform a search based on the copied content portions. In one embodiment if a user selects a content source resulting from the search operation a reference may be generated between the original content source from which search terms were retrieved and the selected content source resulting from the search even though no direct navigation link may exist between these two content sources and even though the reference may have been mediated by another application or entity e.g. a search engine . For example plugin may be configured to retain state information e.g. a URI regarding the content source from which the user has selected search terms and may use such state information to generate references to selected content sources resulting from a search operation.

References among content sources may also include references to RSS content syndication feeds web services feed sources or other sources of structured data e.g. XML or other content sources that may be rendered processed or displayed using tools or applications other than web browsers. References may also exist between dissimilar types of content sources accessible via different types of client applications. For example a user may navigate a reference from an email content source which may be displayed via an email client to a web page content source displayed via a browser distinct from the email client. It is contemplated that references arising through indirect types of content usage or navigation e.g. as described in the previous paragraph as well as navigation relationships among heterogeneous content source types and applications are encompassed in the discussion that follows.

A user s selection or activation of a reference to a destination content source and consequent presentation of the destination content source to the user in response to the selection may be referred to as user navigation to the destination content source. Similarly the user s act of selecting or activating the reference may be referred to as traversal of the reference. If a navigable reference directly relates two content sources a navigation path or simply a path may be said to exist between the related content sources. A sequence of paths in which the destination of one path functions as the origin of another path may be referred to as an aggregate path. A collection of content sources may present a variety of navigation paths and aggregate paths for a user to navigate from one content source to another. For example a first content source may link to a second which in turn links to a third and so forth. These relationships among content sources may be represented as a network or graph of which one embodiment is illustrated in .

In the illustrated embodiment network is shown to include a number of content sources . Content sources may encompass for example any of the various types or configurations of network content sources discussed previously. Paths relating different content sources are shown as directional arrows between the related sources. Thus for example paths exist between content source and content sources . By contrast no direct path exists between content source and content source although a user might navigate between these content sources via content source . In some instances where one path exists from a first source to a second e.g. a destination source another path or paths may also exist that lead from the second content source back to the first content source either directly or via some other content source . Consequently it is possible that cycles may exist within network although for simplicity of exposition these are not shown in the illustrated embodiment.

It is noted that network may represent relationships between content sources at the level of content navigation. The paths shown in network may or may not correspond to communication network relationships among systems that may be configured to host content sources . For example two content sources may be adjacent in network if one refers to the other via a navigation path. However the systems hosting the adjacent content sources may in fact be quite distant in terms of geography or communication network topology. Conversely systems that are close in terms of geography or communication network topology may be distant in terms of the content navigation topology of network . Thus in some embodiments the navigation path topology represented by network may differ or diverge from the topology of the underlying communication software and or hardware entities through which content sources may be implemented.

It is further noted that in some embodiments the relationships represented within network need not be constrained to explicit navigation links e.g. HTML links encoded within content sources. That is as described previously a reference between two content sources may be generated on the basis of usage patterns that may not involve the traversal of explicit links. As in the example mentioned previously in some instances a reference may be generated indirectly or obliquely by virtue of using one content source as a source of search terms through which another content source may be selected. Generally speaking the relationships represented within network may reflect any of the various ways in which users may navigate among content sources irrespective of whether explicit navigation links are employed. Correspondingly in some embodiments the topology of content source navigation relationships represented by network may differ from the topology of explicit navigation links included within content sources themselves in addition to differing from the topology of lower levels of resource implementation.

A representation of network may be constructed in a variety of ways. In one embodiment the structure of network may be derived through analysis of content sources to identify references to other content sources . For example a given web page may be identified as a particular content source and each of its links identified as paths to other content sources . In turn web pages targeted by these paths may be analyzed to identify their links to other content sources . The structure of network may thus be mapped through iteration or crawling through a collection of content sources .

Crawling through content sources may identify the various possible paths within network irrespective of whether any user has actually navigated those possible paths. That is it may offer a representation of network that is driven by syntax rather than usage. In other embodiments the structure of network may be identified through an analysis of actual user requests for content. For example as described above content access requests including referral information may be reported to IA system . Such requests may arise in a number of ways such as a user selecting a link explicitly represented in another content source entering a URI directly into a browser window or in any other suitable fashion. If the reported content access request targets a valid content source it may be indicative of a path from the referring content source to the requested content source . Correspondingly records of reported content access requests may be analyzed to identify such paths and to construct a corresponding representation of network . Such a usage driven representation of network may not represent every possible navigation path that exists among content sources . Rather it may represent only those paths for which an actual traversal by a user has been reported. This effective filtering by usage may result in a more compact representation of network and as described below may facilitate various types of analysis that may be performed on network . However it is contemplated that either of these approaches or any other suitable technique may be employed to generate a representation of network .

Generally speaking a representation of network may encompass any suitable data structure such as a table tree etc. In some embodiments the representation may be generated and stored by code executable on IA system . However in other embodiments a representation of network may be generated and stored by code executing on one or more of hosts or requestors for example as a component of traffic reporting logic plugin badge code or as a distinct code module or element. It is contemplated that any use of or operation on a representation of network such as any of the various types of analysis or use described below may also be implemented by code configured to generate and store the representation and may be executable by various systems as just described. Alternatively such application code may be implemented by a distinct code module or element that may be configured for execution on a system distinct from the system that generates the representation. For example in one embodiment IA system may be configured to generate a representation of network and to convey the representation to a requestor which may be configured to independently execute code implementing algorithms to analyze or process the representation on behalf of a particular user. In some embodiments it is contemplated that IA system may be configured to generate the representation of network from content request traffic generated by requestors and processed as described above with respect to . For example a content request traffic report including a destination content source and a referrer may be indicative of a user navigation path between the indicated referrer and destination. In one embodiment IA system may be configured to analyze such relationships in order to infer the structure of network from content request traffic.

As mentioned above and shown in numerous paths may exist within network . However different paths may vary sometimes substantially with respect to various measures of path usage. In some embodiments a representation of network may include indications of weights along the paths between content sources where the weights may reflect any suitable measure of usage or activity of the corresponding path. For example paths between certain content sources may be traversed by a high volume of different users relative to paths between other content sources . In one embodiment a measure of navigation volume of a path such as a number of path traversals per unit of time may be assigned as a weight of that path. Alternatively some paths through network may exhibit a substantial rate of change relative to other paths. Correspondingly in one embodiment a time rate of change of the number of traversals of a given path may be assigned as a weight of that path.

It is contemplated that in some embodiments path weights may be determined as functions of various factors. In some embodiments path weights may be determined according to corresponding path navigation traffic. In some particular embodiments path weights may be determined according to a time rate of change of traffic along the corresponding paths although a time rate of change need not necessarily be employed. It is noted that all of the foregoing discussion regarding generation and behavior of content source interest weights may apply analogously to navigation path weights. In some embodiments navigation path traffic volume and a rate of change of navigation path traffic volume may each contribute to a portion of a given path weight in a linear or nonlinear fashion. Also like interest weights of content sources described above path weights between content sources may exhibit decay over time such that in the absence of navigation activity along a path the path s weight may approach or achieve a minimum value. It is noted that like content source interest weights path weights may have an arbitrarily complex functional definition. However without loss of generality simple integer weights generally indicative of path navigation traffic will be used to simplify the following discussion. That is larger numbers may be indicative of a greater degree of traffic weighted rate of change of traffic etc. while smaller numbers may be indicative of lesser degrees of traffic. As an example the network of is reproduced in with path weights.

For users of a given content source path weight information may be used in generating navigation recommendations from the set of content sources immediately referenced by the given content source . For example referring to path weights may be used to rank the paths from content source in decreasing order such that content source ranks highest followed by content sources and . Thus a user of content source may be offered such a ranked list as a set of recommendations e.g. via toolbar or badge as described above. It is noted that a ranking of content sources according to path weights from a particular content source may differ from the ranking of content sources according to global interest weights as described above. For example a global interest weight of a content source may take into account request traffic to that content source without regard for its origin while path oriented weights take into account origins and destinations of request traffic.

While ranking path weights of immediately referenced content sources relative to a given content source may offer valuable feedback to users regarding their navigation options additional recommendations regarding potentially interesting content sources may be derived by extending path ranking and evaluation to aggregate paths of network . Typically a user interacting with a given content source may have little visibility into that portion of network that extends beyond the content sources immediately referenced by the given content source . For example if content sources of correspond to web pages a user interacting with content source may see only links to content sources . As network shows other potentially interesting web pages may lie beyond these immediate pages but they are effectively hidden from the perspective of the user.

In some embodiments aggregate paths through network may be identified and ranked according to aggregate path weights. Such a ranking may be used for example to provide feedback to users regarding potentially interesting content sources that are topologically distant from content sources with which such users may be currently interacting e.g. more than one navigation path removed from a currently used content source . Further in some circumstances it may be the case that the interest or value to a user of a particular set of content sources may be enhanced if those sources are traversed in a particular order via a particular aggregate path. That is in some cases interest associated with a group of content sources may be state dependent. For example a user seeking to visit web pages to learn about a novel subject may benefit more from visiting more general introductory pages first followed by pages that address the subject in greater detail. This type of state dependence may be reflected in path weight information. For example an aggregate path between two content sources in one direction may have a higher aggregate weight than a corresponding aggregate path in the reverse direction.

Generally speaking an aggregate path weight may be determined according to any suitable function of the individual weights corresponding to the navigation paths comprising the aggregate path. For example an aggregate path weight may be determined by simply summing the weights of the aggregate path s components. However more sophisticated functions may be employed. In one embodiment the influence of individual path weights in an aggregate path weight may decay as navigation paths become more topologically distant from the origin of the aggregate path. For example decay may be defined according to a step function where only the first N navigation paths weights are included in the aggregate path weight a linear decay function an exponential decay function or any other suitable function or combination thereof. It is noted that the decay of path weight influence according to topological distance may be orthogonal to the decay of path weights themselves over time. Either technique may be employed independently or in combination. Generally speaking like navigation path weights aggregate path weights may also correspond to time rates of change of navigation traffic volume in a manner similar to the time rate of change based content interest weights described previously.

Multiple aggregate paths may exist between any two content sources within network . For example in the embodiment shown in there are fifteen distinct aggregate paths between content sources and . In the following discussion an aggregate path may be denoted by concatenating the suffix letters of the content sources traversed by the path. Thus for example the aggregate path traversing content sources and may be referred to as path ABFHK.

As mentioned previously some aggregate paths may have greater potential interest or utility to a user than other aggregate paths as indicated by corresponding aggregate path weights. In one embodiment a particular aggregate path between two content sources may be selected such that its aggregate path weight satisfies an optimization criterion. That is the selected aggregate path may be distinguished from other aggregate paths on the basis of some aspect of its aggregate path weight. In various embodiments different types of optimization criteria may be employed taking account the format in which weights are represented as well as the overall goal of the selection. For example an optimization criterion may specify that the selected aggregate path should have a weight that is maximal relative to other aggregate path weights. However in other embodiments an optimization criterion may alternatively specify for example that the weight of the selected aggregate path should be minimized relative to other aggregate path weights or should have a weight that is closest among other aggregate path weights in absolute terms to some target weight value or which equals the target weight value within an absolute or relative threshold of equality e.g. an absolute weight value or a percentage of the target weight value .

Thus for example in an embodiment where higher aggregate path weights indicate greater overall user traffic rate of change of user traffic or another metric of content interest a best aggregate path among a group of aggregate paths in terms of potential content interest may correspond to the aggregate path having the highest aggregate path weight while the worst aggregate path may have the lowest aggregate path weight among the group. For simplicity of reference an aggregate path selected such that it satisfies an optimization criterion may be referred to as an optimal aggregate path or simply an optimal path regardless of the good or bad valence of the optimization criterion. Further it is noted that the notion of a path being best worst or optimal in some other regard may be a context dependent relative consideration rather than an absolute global determination. For example what constitutes a best or worst path may vary depending on the metrics that form the basis for path weighting and the desired goal resulting from selection on the basis of an optimization criterion. Additionally in some instances multiple aggregate paths may satisfy a given optimization criterion. For example a threshold aggregate path weight may be employed such that any aggregate path having a weight exceeding the threshold may be considered optimal. Alternatively aggregate paths may be ranked by weight with a given number of top paths being considered optimal. In other embodiments if multiple aggregate paths are deemed optimal according to the optimization criterion in use further filtering or optimization of these aggregate paths may be performed on the basis of secondary optimization criteria such as path length secondary measures of traffic volume or other criteria that may be relevant in distinguishing levels of content interest.

Determining which aggregate path or paths between two content sources satisfy a given optimization criterion relative to a set of possible aggregate paths within network may be a computationally nontrivial task. In some instances an optimal aggregate path may not include a given or even any locally optimal navigation path between a given pair of content sources . For example according to one embodiment path ACEJK of has an aggregate path weight of 15 and is the optimal path between content sources and within network . However it is noted that even though path ACEJK is optimal in this context the navigation path between content sources and has a higher weight than the navigation path between content sources and which is included in the optimal path. Thus determining an optimal aggregate path may not simply be a function of choosing the optimal individual navigation path at each level within network .

In some embodiments an optimal aggregate path may be identified by exhaustively computing the aggregate path weights for each possible aggregate path and then ranking the resulting weights according to an optimization criterion. However the total number of aggregate paths may grow exponentially as the number of content sources within a network increases. Thus an exhaustive search may be computationally expensive for large networks . Alternatively any suitable algorithm for determining an optimal path through a weighted network such as a Viterbi algorithm for example may be employed. One embodiment of a method of determining an optimal aggregate path between two content sources is illustrated in . In some embodiments such a method may be implemented by IA system and performed on a representation of a network derived from reported content request traffic as described above. In the illustrated embodiment operation begins in block where a trellis representation of network is generated. Generally speaking a trellis representation of a network may be include multiple levels indicative of the number of navigation paths required to reach a content source according to a particular aggregate path. Content sources that are accessible via multiple aggregate paths of differing lengths may appear in multiple levels of the trellis.

One example of a trellis representation of network of with respect to aggregate paths between content sources and is shown in . In the illustrated embodiment level includes those content sources accessible via aggregate paths including one navigation path from content source level includes those content sources accessible via aggregate paths including two navigation paths and so forth. For example content source appears in both level and level because according to network it is accessible from content source both directly and via content source . For clarity the navigation path weights shown in are not shown in the trellis of but may be encoded within a data structure representative of the trellis.

Referring again to following generation of a trellis representation operation continues in block where the optimal aggregate path to each of the content sources occupying the first level of the trellis are determined and stored. By definition there exists only one respective path from the origin content source content source in to each of the content sources occupying the first level of the trellis so this respective path is the optimal path to the corresponding first level content source .

If another level exists within the trellis block then an optimal aggregate path is determined and stored for each content source within that level block and processing may continue from block . If no additional levels exist within the trellis processing is complete with the optimal aggregate paths to each content source at each level of the trellis having been determined and stored block . In some instances network may include cyclic paths in which a given content source appears multiple times. In some embodiments the method of may be modified to detect and exclude cycles from the optimal aggregate path analysis. For example if a path is determined to be cyclic processing of the path may halt and it may be eliminated from the trellis. Alternatively cyclic paths may be excluded from trellis generation prior to the determination of optimal aggregate paths. Also in some embodiments processing of optimal aggregate path information for a given path may terminate before the final level of the trellis has been reached. For example a path may be considered terminated if a navigation path weight along the path falls below a particular threshold value.

In determining the optimal aggregate path for a given content source within a given level one or more content sources in the previous level may have paths to the given content source . However only the previously determined optimal aggregate path for each of these content sources in the previous level needs to be taken into account. That is for any given content source in some level of the trellis one or more content sources in the previous level may have a path to the given content source . In turn each of these content sources in the previous level may have multiple different paths from the origin content source . However only some of these multiple paths may be optimal and the optimal aggregate path to a content source in a succeeding level will be an extension of an optimal aggregate path to some content source in a previous level.

As an example consider . In level of the trellis the optimal paths for content sources are simply the paths from content source having weights of 5 1 and 2 respectively. In level of the trellis only content source has two possible paths from level path BF and path CF. Since paths BF and CF have respective weights 1 and 4 in one embodiment the aggregate path weights for aggregate paths ABF and ACF taken as the sum of the component navigation paths are 6 and 5 respectively. Since aggregate path ABF has the higher weight it may be considered the optimal aggregate path to content source in level and stored as such.

Considering level of the trellis content source has three possible paths from level paths BG EG and FG. In the illustrated embodiment only one aggregate path exists through each of content sources and in level paths ACB and ACE respectively. While two aggregate paths exist to content source path ABF was previously determined to be the optimal one of the two. Thus path ACF may be disregarded in considering the optimal path to content source in level reducing the overall computation requirement relative to the exhaustive path evaluation approach mentioned above. Based on these considerations the candidate aggregate paths to content source are paths ACBG ACEG and ABFG having aggregate path weights 6 7 and 9 respectively. Since aggregate path ABFG has the highest weight of the three it is stored as the optimal path to content source in level .

It is noted that in some embodiments thresholds decay or other functions may be applied to aggregate paths and their associated weights during the operation of the method of . For example aggregate path lengths may be explicitly limited to a certain number of navigation paths which may be implemented by limiting the number of levels of the trellis that may be considered. Alternatively a minimum path length requirement may be enforced. Additionally decay functions may be applied to individual navigation path weights within the trellis as a function of the level of the trellis where the weight occurs or according to any other suitable function. Any combination of these techniques may also be employed.

Once complete application of the method of may result in a data structure that reflects the optimal aggregate paths from an origin content source to each content source at each level within the trellis. If a given content source appears in more than one level e.g. content source appears within levels and of the overall optimal aggregate path to that content source may be determined from among the several computed entries. For example the most heavily weighted longest or shortest path to the given content source may be selected or another selection criterion may be employed. In some embodiments the optimal aggregate path from the origin content source to any content source within network may also be explicitly identified. That is rather than identifying an origin content source a particular destination content source and using the optimal aggregate path results to determine the optimal aggregate path between them the optimal aggregate path results may be used to determine which destination content source or sources have an optimal aggregate path from the origin relative to all the content sources within network .

Optimal aggregate path information may have several applications. It is noted that in general individual and aggregate path weight information may be derived from actual user navigation behavior with respect to content sources . Aggregate path information that takes user driven behavior into account may serve as an indication of interest in the content sources referenced by the path. Thus instead of or in addition to recommending specific content sources to users in some embodiments plugin badge code or both may be configured to identify and display optimal aggregate path information via toolbar and or badge .

For example in one embodiment plugin may be configured to identify a content source that a user is currently viewing or otherwise interacting with via browser window . Plugin may then query optimal aggregate path information which may be determined by and or stored on IA system one of hosts or one of requestor . For example plugin may query for a URI or other identifier of the current content source and may specifically request optimal aggregate path information relative to the current content source . Such information may include a request for aggregate paths within an interest space described in greater detail below defined by user preferences user session information or other user specific state information. In response plugin may receive information identifying one or more aggregate paths that satisfy the request which may include URI tag or other information identifying the content sources included in the paths as well as the ordered relationship among them. Plugin may then be configured to display the received path information via toolbar for example as a list of recommended paths in addition to or instead of the recommended sources shown in . Similarly in some embodiments badge code may be configured to perform similar aggregate path information requesting and display e.g. for paths that refer to or from the host that may be associated with badge .

As mentioned above in some circumstances an ordered traversal of an aggregate path may be significant to a user s deriving maximum utility from the content sources along the path. In other circumstances a user may be more interested in navigating directly to a content source that is at or near the end of an optimal aggregate path or somewhere along the path bypassing some intervening sources along the way. For example a user may begin a general search for information at a particular content source with a specific goal in mind. The various aggregate paths originating at the particular content source may be projections towards content sources that might satisfy the user s goal. That is those aggregate paths might constitute predictive information regarding destination content sources that might be useful to the user. Correspondingly in some embodiments plugin or badge code may be configured to employ aggregate path information to make specific content source recommendations for example within toolbar or badge .

It is noted that in some embodiments path weight information and consequently optimal aggregate path information may evolve over time for example as user traffic patterns change weights decay etc. It is also noted that dynamically exposing path information derived from user traffic information may facilitate self organization of an otherwise chaotic or disorganized collection of content sources . For example users presented with dynamic indications of potentially interesting paths may be more likely to select content sources along those paths which may reinforce the weighting of those paths still further. By contrast paths or content sources that become less interesting or relevant may correspondingly see their weights decline over time becoming less likely to be selected by users presented with dynamic path information. In particular it is noted that such organization of content may in some instances be entirely driven by user behavior and may be performed e.g. by software executable by IA system or another system without need of manual intervention to rate or rank content sources or paths.

One embodiment of a user interface through which a user may interact with content source interest information path information or both is illustrated in . In various embodiments the illustrated interface may be implemented as a web page viewable within a browser window such as browser window or as content presented to the user via badge or toolbar or through any other suitable display interface.

In the embodiment of display interface includes indications of five different content sources. In one embodiment each of the indicated content sources may correspond to an network content source accessible through a URI path name or other suitable descriptor. In such an embodiment the displayed indications corresponding to the content sources may be configured as hyperlinks such that a user s selection of a particular hyperlink may cause the user to navigate to the corresponding content source for example by displaying the selected content source within an existing browser window opening a new browser window to display the selected content source etc. In an alternative embodiment each of the indicated content sources may correspond to a path such as a navigation path or an aggregate path as described above. In some such embodiments the displayed content source indications may be comprised of multiple distinct hyperlinks corresponding to the elements of the displayed path.

In some cases a content source indication as displayed may be textually equivalent to the link or path the indication represents while in other cases a tag title or symbol may be displayed in lieu of a link or path corresponding to a content source. For example a content source accessible through the URI http www.domainname.com webpage may include metadata that defines the name of the content source as Home Page. In one embodiment the URI http www.domainname.com webpage may be displayed within display window as the content source indication while in another embodiment the page name Home Page may be displayed within display window as the content source indication.

Display characteristics of the content source indications shown within display interface may vary in some embodiments according to content interest data associated with the content sources. For example content interest weights or path weights may be determined according to any of the techniques discussed above. In various embodiments the weight of a content source may be reflected in its corresponding indication within display interface through variations in the font size display color display position or any other suitable display characteristic. For example content sources having larger weights may be displayed using a larger font size or in a brighter hue while content sources having smaller weights may be displayed using a smaller font size or in a darker hue. Combinations of display characteristics may also be used for example to display a single aspect of content interest data or multiple distinct aspects of such data. For example as described above a content source may have multiple different content interest weights. In one embodiment a different display characteristic may correspond respectively to a particular one of the different content interest weights.

In some embodiments display window may be configured to provide additional information about a particular indicated content source in response to a user s selection of the particular source. In the embodiment shown in display window may be configured to generate a detail window in response to a user s selecting a content source indication. For example display window may detect such selection by detecting a mouse over event in which the position of a mouse cursor is determined to be in the vicinity of a content source indication. Any other suitable indication of selection may also be detected.

Detail window may be configured to present any suitable additional information regarding a content source. In the illustrated embodiment detail window is configured to display path information corresponding to the indicated content source. The displayed information for a given path may include indications of those content sources included in the path arranged according to the path relationship. For example detail window indicates that according to collected content request traffic data e.g. as determined by IA system popular user navigation paths leading to indicated content source include a path that includes a content source A and a content source B as well as a path including content source C. Further detail window indicates that popular destination paths for users leaving indicated content source include a path including a content source D as well as a path including a content source E. Each of the indicated content sources A E shown within the indicated paths may in one embodiment correspond to a navigable URI or other selectable indication through which a user may access the corresponding content source. In some embodiments it is contemplated that detail window may be configured to display content source details other than or in addition to path details. For example detail window may display content interest statistics or other data such as the weight s associated with a particular content source at various points in time.

One embodiment of a method of displaying content interest data associated with individual network content sources is illustrated in . In the illustrated embodiment operation begins in block where a plurality of content sources is determined. In one embodiment determining the plurality of content sources may be dependent upon a respective indication of content interest associated with each of the content sources where the respective indication for a given content source is dependent upon a time rate of change of content request traffic directed to that content source. For example the indication may correspond to a content interest weight as described in detail above.

Subsequently a display indication for each of the content sources is displayed where at least a given one of the display indications is displayed differently from other display indications dependent upon the indication of content interest associated with the given display indication relative to other display indications block . For example the display indication may correspond to a hyperlink tag or other textual or symbolic display. As noted above in various embodiments the display indication may vary in some display characteristic such as font size color position etc. according to an associated content interest indication.

One of the content sources may then be selected block . For example a user may select a content source by clicking or simply rolling over the display indication of the content source using a mouse icon. In other embodiments a content source may be selected according to any suitable technique or gesture. One or more navigation paths corresponding to the selected content source may then be displayed block . For example a box or window such as detail window may be displayed for the selected content source where the details include navigation paths leading to and or from the selected content source as described above with respect to .

One embodiment of a method of displaying content interest data associated with navigation paths among network content sources is illustrated in . In the illustrated embodiment operation begins in block where a plurality of navigation paths among a plurality of network content sources is determined. For example in one embodiment IA system may be configured to determine navigation paths and or aggregate paths including navigation paths from content request traffic reports as described above with respect to .

Subsequently the navigation paths may be displayed where at least one given one of the navigation paths is displayed differently from other navigation paths dependent upon relative user activity along the various navigation paths block . For example display characteristics such as font size color position etc. associated with the given navigation path may vary dependent upon an indication of relative user activity associated with the given path such as a path weight.

It is noted that in some embodiments the display of content interest data according to the methods of may occur under the direct or indirect control of IA system . For example IA system may be configured to collect generate and maintain the content interest data that forms the basis for display. In one embodiment IA system may respond to queries or requests for content interest data generated for example by browser badge code or plugin . In responding with the requested data IA system may directly or indirectly cause the data to be displayed via an appropriate interface.

Content interest data such as weight and path information may evolve over time as content request traffic patterns change. Correspondingly in some embodiments a display of content interest data such as that shown in may be configured to periodically refresh. For example the functionality associated with display window may be configured to request content interest data from IA system at regular intervals and to responsively update the displayed indications such as by adjusting display characteristics or by removing some indications and adding others. In some embodiments the contents of display window may be refreshed at frequencies that approximate the real time behavior of the underlying content sources and navigation paths such as once every ten seconds for example.

It is noted that while display indications associated with content sources or paths may be visual or graphic indications they need not be. In some embodiments browser badge code or plugin may be configured to support display indications of content interest data other than visual indications. For example in some embodiments a user may configure one of these modules to generate an audible alert e.g. a beep when a particular content interest data event occurs such as when a weight of a content source or path exceeds a given value. In other embodiments a display indication may include an alert message conveyed through email telephone pager or any other suitable notification medium.

In some embodiments network may include many content sources e.g. tens hundreds thousands or more and correspondingly many distinct paths among content sources. Conceivably many different aggregate paths within network may have large aggregate path weights and consequently could be ranked as optimal or high ranking aggregate paths relative to network as a whole. However in large scale instances of network users may not be universally interested in every optimal aggregate path. Rather users may be interested in aggregate paths that correspond to their particular interests. That is a user may be more likely to be interested in optimal or near optimal aggregate paths that traverse some portion of network that includes content sources having some common aspect known to be or likely to be interesting to the user. Such portions of network may be referred to as interest regions or interest spaces.

Interest spaces within network may be defined according to any of a number of criteria. In one embodiment membership of content sources within a given interest space may be defined according to the navigation path weights between various content sources as reflected in network . Consider for example the embodiment of network shown in . In the illustrated embodiment content sources are shown as interconnected via a number of navigation paths and aggregate paths with the navigation path weights explicitly shown adjacent to their corresponding paths. As shown in a substantial fraction of navigation paths have minimal path weights e.g. 0 1 or 2 where 0 signifies the minimum possible weight in this example . Additionally the remaining higher weighted paths appear to be clustered around several particular groups of content sources .

This example suggests one possible definition that may be employed to organize a network into one or more interest spaces. Specifically according to one embodiment a given interest group within a network may be generated such that each content source that is a member of the given interest group is connected to at least one other content source within the given interest group either as an origin or destination by a navigation path having a corresponding path weight that satisfies a selection criterion. For example the selection criterion may be implemented as a threshold value such that a path weight may be required to be greater than or less than the threshold value to satisfy the selection criterion. However in other embodiments more complex selection criteria may also be used. For example a threshold value may be adjusted as an interest group increases in population which may cause the interest group to be more or less selective with respect to including additional content sources as members.

Suppose a selection criterion for interest space membership includes a path weight threshold of 2 such that navigation path weights must be strictly greater than 2 to satisfy the selection criterion. Applying this criterion to the embodiment of may result in the formation of two distinct interest spaces also shown in . Interest space includes content sources and while interest space includes content sources and . It is noted that content sources and having no navigation paths that satisfy the selection criterion do not belong to either of interest spaces . Also interest spaces are disjoint in that there exists no navigation path connecting the two spaces that satisfies the selection criterion. By contrast if the weight of either of paths EI or GJ had been greater than 2 a single interest space including the content sources of both interest spaces might have been generated. It is noted that while in this example interest spaces form closed regions including multiple aggregate paths among content sources within each interest space in some instances an interest space may not correspond to a closed region within network . For example a single aggregate path between two content sources may constitute an interest space regardless of whether the aggregate path is optimal.

One embodiment of a method of generating interest spaces within a network is shown in . In some embodiments such a method may be implemented by IA system and performed on a representation of a network derived from reported content request traffic as described above. In the illustrated embodiment operation begins in block where a given content source within a network is selected. For example content source of may be selected. Navigation paths to and from the given content source are then examined to determine whether any of the paths satisfy the interest space selection criterion block . If none of the navigation paths leading to or from the given content source satisfy the selection criterion then if any unselected content sources remain to be processed block operation may proceed from block where another given content source is selected. Otherwise operation may be complete block . For example for a selection criterion specifying a threshold navigation path weight of 2 as in the above discussion none of the paths from content source satisfy the threshold. Correspondingly content source or another content source may be selected. Selection of the next content source to process may occur systematically e.g. by considering the paths of previously processed sources.

If any of the navigation paths to or from the given content source satisfy the interest space selection criterion the given content source and those content sources along navigation paths to or from the given content source that do satisfy the criterion are identified as members of a new interest space and stored for further consideration block . Thus for example it may be determined that content source has destination navigation paths leading to content sources and and is a destination for a navigation path originating from content source each of which satisfies the threshold value of 2. Correspondingly each of content sources and may be identified as members of interest space . If a content source has previously been identified as a member of the interest space e.g. via a different path it may be disregarded from further processing.

It is then determined whether navigation paths have been evaluated for each content source that is a member of interest space block . If there exists one or more member content sources having unevaluated navigation paths one of these content sources may be selected block and its paths may be evaluated with respect to the interest space selection criterion block as described above with respect to block . If the selected content source has one or more navigation paths that do satisfy the selection criterion processing may proceed from block . Otherwise processing may proceed from block . Referring to the above example after content source is considered content source may be selected. Content source has a navigation path to content source that does satisfy the selection criterion but since content source was previously added to interest space it may be disregarded. Subsequently content source may be evaluated. As the navigation path to content source from content source satisfies the selection criterion content source may be added to interest space

If navigation paths have been evaluated for all current members of interest space the membership of interest space may be complete block . Operation may then proceed to block from which the remainder of network may be processed to generate other interest spaces if possible. For example following processing of content sources and content sources and may be evaluated. As these sources only have navigation paths to other content sources that are already members of interest space the definition of interest space may be complete. Operation may continue to generate the membership of interest space in a similar fashion. It is noted that while a particular approach is shown in any other suitable technique may also be employed to generate interest spaces within a network .

Once interest spaces have been generated within a network in some embodiments they may form the basis for the optimal aggregate path analysis techniques described above. For example rather than analyze all aggregate paths within an entire network in some embodiments plugin badge code or another code module or element may be configured to constrain aggregate path analysis to a particular interest space that has some association with a user. Such an association may include for example including a content source with which the user of browser window is currently interacting. In such embodiments this particular interest space may function in the place of network for the purpose of applying the previously discussed techniques of optimal aggregate path analysis. For example an interest space may form the basis for generating a trellis and performing a path optimization algorithm to identify optimal aggregate paths such as shown in .

It is also contemplated that in some embodiments a representation of an interest space may be presented directly to a user. For example plugin may be configured to generate a static or dynamic representation of an interest space related to a content source with which a user is currently interacting or to a recommended content source or path. Such a representation may be graphically displayed within toolbar or elsewhere within browser window or another window and may include various types of information about the included content sources such as URIs page titles abstracts images or other information. In some embodiments a representation of interest space may be navigable such that a user may be able to navigate to and or receive more detailed information about a particular content source by selecting it within the graphical interest space representation e.g. by clicking or rolling over an indication of the particular content source with a mouse icon .

It is noted that navigation path weight need not be the sole criterion for identifying interest spaces within a network . In some embodiments interest spaces may be further organized according to other aspects of content or navigation. For example interest spaces may be organized according to degree of similarity in the content or metadata of content sources or common factors relating the users navigating among content sources e.g. portions of IP addresses . Additionally in some embodiments statistically improbable phrases as mentioned above Bayesian filters or other suitable techniques for detecting relatedness of content may be employed in identifying interest spaces .

As described in detail above techniques such as optimal aggregate path determination and interest space analysis may be employed to generate suggestions or recommendations to users regarding potentially interesting content sources as a function of the behavior of a community of users relative to a network of content sources . That is the activity of users in general when processed according to the techniques discussed above may facilitate the self organization of a complex interest topology into structures e.g. paths and or interest spaces . These structures may in turn allow users to be informed of those portions of the topology in which they may be interested and conversely may operate to deemphasize other portions of less potential interest.

In some embodiments optimal aggregate paths and or interest spaces may be identified relative to a user s current state with respect to a particular content source . For example a content source that is the current focus of user interaction e.g. via a browser window or another application may serve as the starting point for path or interest space analysis. However in other embodiments a user may be actively searching for content sources based on some criteria. For example a user may perform a keyword search via a search engine to identify content sources that satisfy a query including one or more keywords according to various default or user specified rules for combining the keywords. A conventional search engine may construct indexes of content sources e.g. by examining the content of each content source and processing it to identify keyword terms that may then be associated with the content source . Keywords determined in this fashion may then be compared against those specified by a user s query according to any selection rules present in the query e.g. match all keywords match any keyword etc. to select sources to present to the user.

Generally speaking a search query may represent some minimum criterion a content source must satisfy to appear in the results of a search. However not all sources that satisfy the search query may be equally interesting to a user. Correspondingly search results may be ranked in various ways. In one embodiment a search engine e.g. a program application or other type of executable module realized in software and or hardware and configured to perform search functions may be configured to order a list of content sources representing search results of a search query according to the interest weights associated with the content sources which may be determined according to the methods and systems described above in conjunction with the descriptions of .

In another embodiment a conventional search engine may be configured to identify optimal aggregate paths associated with content sources that appear in a set of search results for example according to the methods and techniques described above with respect to . The search engine may then be configured to rank the search results according to the aggregate path weight associated with the optimal aggregate path determined for the content sources in the search result set. It is noted that in these embodiments the techniques of ranking according to interest weights of content sources or weights of paths related to content sources may be applied to any type of search engine regardless of how the search engine structures or indexes content sources and regardless of the format of the query used to perform a search. For example these techniques may be applied to simple keyword searches or searches conducted according to a formal query language such as a version of Structured Query Language SQL XML Query language XQuery or another suitable query language in addition to keyword searches that do not employ any formal or structured query language.

While the techniques disclosed herein may be employed in conjunction with conventional search engines that index content sources by exhaustively crawling or spidering such content sources as stated previously index based approaches to organizing content may suffer from various limitations. For example a conventional indexing search engine may take days or weeks to refresh its indexes. Consequently such a search engine may be relatively insensitive to content sources that change more frequently than the frequency with which they are indexed. In some instances content sources may conceivably appear and disappear before ever having an opportunity to be indexed by the search engine.

Additionally the quality of conventional indexing may be dependent upon the algorithms used to extract the keyword information to be associated with a content source from the content source itself. But it may be challenging to determine a representative set of keywords directly from a content source . For example keywords may depend on contextual meaning not captured by a purely lexical analysis. Words that appear within a content source and thus function as candidates for keyword extraction may not be truly indicative of the information content of the source for example in cases where content source creators deliberately attempt to obscure the nature of the content source by embedded random or off topic words within the structure of e.g. a web page. Also certain kinds of content sources simply do not readily lend themselves to keyword extraction for indexing. For example a nontextual content source such as an image audio data executable code or other forms of encoded data might include little if any text that could function as a useful keyword for that content source .

As discussed above with respect to the techniques of content source interest weighting aggregate path interest weighting and interest space analysis considerable information about the interest or utility of various kinds of content may be derived from data indicative of how such content is actually used. For example content access request information may be indicative of user interest with respect to a particular content source while various types of navigation traffic or other relational data among content sources may be indicative of user interest with respect to various paths or interest spaces within a network of content sources . Correspondingly as an alternative to associating keywords or other search oriented data with content sources on the basis of conventional content indexing in some embodiments such associations may be generated on the basis of user related content source activity such as request traffic directed to a content source or navigation traffic along a path or within an interest space.

One embodiment of a method of performing a search of content sources using keywords that may be associated with content sources via indications of user activity e.g. request or navigation traffic is illustrated in . As shown in in one embodiment such a method may be implemented for example by a search engine configured as an executable module or process within IA system although it is contemplated that in other embodiments search engine may be implemented via a system distinct from IA system .

Operation of the method of begins in block where one or more keywords are specified for a search operation. In various embodiments a user may explicitly specify search keywords in a variety of ways. For example search engine may implement a web based interface accessible via browser window through which a search query including keywords and or other terms may be specified. In some embodiments toolbar may be configured to provide a field in which a user may specify a query without having to navigate away from a particular content source to a page presented by search engine . It is contemplated that search keywords may also be specified in other ways. For example as an alternative to a user explicitly entering keywords in some embodiments plugin or some other code module or entity may be configured to derive keywords from the user s context. For example plugin may be configured to examine content of a content source with which a user is currently interacting or had previously interacted e.g. within a usage session or over a particular period of time and may derive keywords for possible searches from the examined content. In deriving keywords for possible searches plugin may also be configured to take other user state information into account such as user preferences user transaction history e.g. purchase transactions user profile or self identification data or any other relevant user state information. For example if a user expresses interest in certain topics within a profile or in preference information those topics may influence suggested keyword selection.

Subsequent to keyword specification content sources that correspond to the search keywords are identified block . For example as shown in search engine may be configured to maintain trees tables or other data structures shown in as content source path data structures that reflect the association of keywords and content sources . As described in greater detail below in some embodiments keywords may be associated with aggregate paths in addition to or instead of content sources . Search engine may be configured to evaluate data structures to identify content sources that correspond to the specified search keywords. In some embodiments search engine may be configured to enforce various search rules specified along with the keywords. For example a search query may specify that a content source should be returned only if that source corresponds to all specified keywords the keywords as specified in a given order or within a certain degree of proximity to one another or other types of constraints.

One embodiment of data structures is shown in to include a number of entries each of which may include a content source path identifier an indication of a global weight and an arbitrary number of keyword entries each including a keyword and a weight. In some embodiments identifier may correspond to a URI of a content source or another suitable type of identifier such as a signature or hash. Global weight may correspond to the global weight determined for the content source as described above with respect to although it is contemplated that in some embodiments global weight may be stored in a data structure distinct from data structures e.g. a data structure internal to TA engine or a distinct data structure within IA system . In the illustrated embodiment an arbitrary number of keyword entries may be associated with a content source via their inclusion in a data structure entry . The functional relationship of keyword entries to content sources is described in greater detail below with respect to blocks of . Generally speaking weights associated with keyword entries may indicate the strength of association of a corresponding keyword with a content source or path. For example as described below by virtue of selecting a content source or path presented on the basis of a set of search keywords a user may establish or strengthen an association or relationship between the search keywords and the selected content source .

Once content sources corresponding to the specified keywords also referred to herein as a result set of content sources have been identified paths corresponding to the identified content sources may also be identified block . These paths may also be referred to as a result set of paths. For example as described above with respect to in one embodiment one or more optimal aggregate paths associated with each of the result set of content sources may be identified. It is noted that in some embodiments aggregate path analysis may be performed in response to identifying the members of the result set while in other embodiments aggregate path information may be generated and maintained for a network independent of search activity. For example search engine may be configured to consult a data structure maintained by another process or facility to obtain aggregate path information relevant to members of a particular result set. It is noted that in some embodiments only those aggregate paths originating from members of the result set may be considered while in other embodiments any optimal aggregate path intersecting a content source that is a member of the result set may be deemed a corresponding path for search purposes.

Members of the result set of paths corresponding to the result set of content sources may then be ranked block . In some embodiments the ranking of paths may be a function of the weights of keyword entries associated with content sources within the identified paths. Specifically in one embodiment the search rank weight of a given content source in the result set of content sources may be determined as a function e.g. a sum of the weights of each keyword entry that matches a corresponding keyword specified for the search operation. Then the search rank weight of a given path in the result set of paths may be determined as a function e.g. a sum of the search rank weight of each of the content sources within the path. For example a given content source may be associated with a number of keyword entries . In the example two of the keywords may match corresponding keywords of a given search operation and may have respective weights of 12 and 10. Then the search rank weight of the given content source may be given as 12 10 22. Further the given content source may be included within a path along with other content sources having respective search rank weights of 15 8 and 2. The the search rank weight of this particular member of the result set of paths may be given as 22 15 8 2 47. Once search rank weights for members of the result set of paths have been determined according to a suitable ranking model the result set of paths may be ranked e.g. ordered according to the search rank weights.

The resulting ranked paths may then be displayed block . For example search engine may be configured to display a ranked list of paths within a browser window via browser or within toolbar via plugin . In other embodiments the ranked paths may be presented to a user in any suitable fashion such as within an email an instant messenger IM communication or using other communication techniques.

One embodiment of a user interface through which aggregate paths derived from a keyword search may be displayed is shown in . In various embodiments search engine may cause search results display to be displayed via browser window toolbar or another suitable application. In the illustrated embodiment search results display is configured to display the top N paths for a particular keyword query. As shown paths and N include indications of 10 distinct content sources related according to different combinations of navigation paths. In some embodiments each content source indication shown in search results display may be configured as a hyperlink or other navigable link selectable by a user.

In the illustrated embodiment some displayed content sources may be members of the search result set selected according to the keyword query while displayed content sources may be selected according to their path relationships with members of the search result set. For example in one embodiment content sources and may satisfy a particular keyword query. At least some of the remaining content sources may not satisfy the particular keyword query but may instead be selected for display based on the strength of the path relationships they share with content sources and or .

A user may then select a particular content source from the search results e.g. from a ranked list of paths block . For example a user may click on a hyperlink corresponding to a content source as shown in search results display . If the user does select a particular content source the search keywords that were originally specified in block may be propagated to the particular content source . In one embodiment propagation of keywords to a content source may include adding keyword entries to an entry within data structure corresponding to the content source . Such adding of a keyword entry may be contingent upon the corresponding entry not already existing within entry .

The rationale of keyword propagation may be understood as follows. As described above with respect to block a set of content sources that correspond to the specified search keywords may be identified. This correspondence may be detected on the basis of an existing association of the search keywords and the content sources e.g. as reflected within entries . However in block paths are identified on the basis of the content sources identified in block and these paths may include content sources that do not have a current association with the search keywords. Rather the paths may be formed on the basis of some other relationship among content sources such as navigation traffic patterns. By virtue of selecting a content source that was presented on the basis of the search keywords a user may establish an association or relationship between the search keywords and the selected content source . Consequently the search keywords may be propagated to the selected content source .

Following keyword propagation to the selected content source which may involve no operation if the search keywords were already associated with the selected content source the weights included in the keyword entries that correspond to the search keywords are updated block . Generally speaking the weights included in keyword entries may be defined and manipulated in a manner similar to that of global and local content source weights described above in some cases the weights of keyword entries may be considered instances of local content source weights although they may be updated on the basis of search specific traffic rather than general content request traffic. For example when updated as a result of block the keyword weights they may be increased by some amount such as a fixed increment or a function of the number of weights updated. Also like the global and local content source weights described above keyword weights may decay over time according to any suitable decay model. Thus in some embodiments if ongoing user search activity does not reinforce the associations between keywords and content sources those associations may weaken over time and eventually dissipate. It is noted that a user s selection of content sources on the basis of search results may result in existing paths among content sources being modified or new paths being created. For example a user may navigate from a content source along one search result path to a content source along a different search result path thus creating or reinforcing a path between these sources. Through the operation of optimal aggregate path analysis described above this activity may ultimately influence the structure of network and may alter future search results correspondingly.

Following update of the keyword associated weights of the selected content source operation may proceed to block where another content source from the ranked search results may be selected. For example the user may continue to navigate the originally chosen path or may select a different path. In some embodiments user session tracking techniques e.g. browser cookies may be employed to facilitate detection of a user s selection of search result related content sources . From block the user may also fail to choose any source from the ranked search result paths either when the search result paths are originally presented e.g. at block or after having already selected some content sources . In this case operation may proceed to block where a new search may begin. Alternatively a user may navigate away from search functionality entirely and begin a different task. In some embodiments it is contemplated if none of the result set of content sources is selected following a search negative feedback may be applied to the weights of corresponding keyword entries . That is keyword weights may be positively reinforced e.g. adjusted upwards upon content source selection block thus strengthening the association between the adjusted keywords and the content source . Conversely if a user finds none of the content sources appealing the keyword associations may be weakened by e.g. decreasing keyword weights included in keyword entries .

It is noted that in general a set of content sources may have related content for example as evidenced by navigation traffic patterns e.g. paths among the sources but may not share keywords in common. Identified path relationships among the content sources may serve as a basis for associating keywords among the source. In particular it is noted this association may take place without requiring that content sources be indexed or that their content be accessed by search engine in any way. In fact a given content source may be associated with a keyword by virtue of its path based relationship with another content source even though the keyword may not actually appear anywhere within the given content source . Thus for example images and other nontextual content sources may be readily associated with tags without the need for deliberate classification of the nontextual content sources by a user or other agent. In general the technique of associating keywords with content sources on the basis of path relationships grounded in usage behavior may be referred to herein as an associative keyword model.

In some circumstances it may be the case that no content sources are associated with the keywords of a particular search operation. To facilitate the seeding of keywords among content sources in some embodiments other criteria may be employed for presenting content sources in response to a search. For example content sources that have particularly high global weights or aggregate paths having high path weights may be presented to a user if no keyword specific content sources can be identified. In some embodiments these types of content sources and or paths may also be presented alongside search results derived from keyword associations. Just as individual users may or may not reinforce existing keyword associations among results they may or may not generate new keyword associations among results. In the aggregate user behavior over time may result in pertinent keyword associations being generated and maintained while erroneous inaccurate or otherwise ill formed associations may be allowed to weaken and decay.

It is noted that while the associative keyword model just described may obviate the need for content indexing in some embodiments a limited degree of indexing may be performed to assist in the generation and maintenance of keyword associations with content sources . In particular rather than perform an exhaustive indexing of content sources through conventional crawling or spidering techniques in some embodiments content source interest weights or path weights may be used to select a particular subset of content sources on which to perform indexing. For example content sources or aggregate paths having particularly high weights according to request or navigation traffic may be selected as useful indexing candidates.

Several generalizations of the associative keyword model may be made. It is noted that in some embodiments keywords may be associated with paths themselves and not simply content sources. Thus data structures may be pertinent to both aggregate paths and content sources . For example upon being identified through the path analysis techniques described above aggregate paths may be tagged with a unique identifying value that may be stored as content source path identifier . Subsequently paths may be selected on the basis of their associated keywords matching a keyword search operation. Keywords may be associated with such paths and positively or negatively reinforced in a manner similar to that described above for content sources in the description of .

It is also noted that in some embodiments the keyword associations generated through operation of the associative keyword model may serve as the basis for generation of interest spaces . For example rather than identifying members of an interest space on the basis of aggregate path weights derived from navigation traffic as described above in one embodiment interest space members may be identified on the basis of commonality of keywords that have been associated with content sources via usage activity.

In the foregoing discussion numerous embodiments of various techniques for deriving and applying content source and content path weights were described. In general these weights may be derived from records of user navigation activity without necessarily discriminating as to the nature of such activity. For example access requests directed to a particular content source or along a particular path between two content sources may cause an associated weight to be adjusted according to a suitable function of the access request activity. Further in some embodiments all types of content access requests may be treated similarly when determining their impact on a content source or path weight.

However not all content access requests may produce equally useful or desirable results for users. A user may inadvertently navigate to a content source having objectionable or malicious content such as obscene content spyware adware viruses worms or any other type of undesirable content. For example a user may mistype a URI or may click on a link that misrepresents the nature of the targeted content source. Similarly through phishing scams a user may be deceived into navigating to a content source that purports to be a legitimate enterprise but which in actuality seeks to fraudulently obtain confidential information e.g. social security numbers credit card numbers account passwords etc. from unwitting users. A successful phishing or other type of deceptive scheme may generate considerable content request traffic to or along a malicious or otherwise undesirable content source or navigation path.

As described above in some embodiments content source or path weight information may be generated in a content neutral fashion. That is weights may be generated as a function of content request traffic without attempting to discriminate as to the nature of the accessed content. However in some embodiments the above weight determination techniques may be augmented to account for the possibility that certain content may be undesirable either generally or to a particular group of users. Once determined information suggesting that a given content source may have undesirable content may be presented to users in various ways that may allow them to avoid unintentionally accessing such content. In the following discussion techniques for capture of data indicative that a particular content source may be potentially undesirable are first described. Techniques for presenting such information to users are then discussed.

As described above in conjunction with the descriptions of a variety of techniques exist for reporting content access requests generated by requestor s and directed to content sources hosted by host s . For example a given host may be instrumented with traffic reporting logic configured to report records of content access requests to IA system which may in turn be configured to generate and maintain weights associated with content sources and or navigation paths as well as information associated with interest spaces search keywords or other suitable applications that may be derived from reported content access request data. While the embodiment of may be configured for host side reporting of content access request data it is contemplated that in some embodiments such reporting may also be performed on the client side of the request instead of or in addition to host side reporting. For example plugin may be configured to report content access request records to IA system .

Considered in isolation a content access request directed to a particular content source such as an HTTP GET request for example may reveal limited information about the nature of the targeted content. However the behavior of requesting users of third parties or of programs or agents operating on behalf of requesting users or third parties with respect to the requested content may provide a number of different types of indications as to whether the requested content might be undesirable. For example after submitting a content access request a user may quickly navigate away from the requested content source such as by selecting a back button displayed within browser window to return to a previous web page or other content source. In some instances web browser may be configured to block access to certain URIs such as URIs previously identified by the user or a third party as undesirable. Generally speaking any detected event activity or information that generates an inference that a given content source may have undesirable content may be referred to as an adverse content event. For example navigation away from a content source within a particular timeframe after navigating to that content source or navigation to a particular content source being blocked by browser plugin or another agent may constitute adverse content events. Other examples of possible adverse content events are discussed below though it is noted that in various embodiments some types of adverse content events may not be detected and other types not explicitly described here may be supported.

Once detected adverse content events may be accounted for in the determination of content source and or navigation path weights. As described above in some embodiments content source or navigation path weights may positively correlate to some aspect of content request traffic such as a time rate of change of such traffic such that a higher weight may generally indicate greater user activity or interest. By contrast in some embodiments adverse content events associated with a content source or navigation path may negatively influence an associated weight such that the greater the number or magnitude of adverse content events the lower the associated weight. It is noted that other weighting schemes are possible in which content source request traffic and adverse content events have contrary influences on content source or navigation path weights.

As described above in conjunction with the descriptions of in some embodiments a number of content sources and the navigation paths that users traverse among those content sources may be represented by a network or graph where nodes and edges of the graph may correspond to content sources and navigation paths respectively. It is noted that in some embodiments detection reporting and weighting of adverse content events as described below may occur with respect to content sources navigation paths or both. For example some content sources such as phishing or malware sites may be considered undesirable regardless of the various paths users might traverse to reach those content sources. For such universally undesirable content sources detection and tracking of adverse content events may be performed with respect to the content sources themselves for example by aggregating event reports relating to the content sources without distinguishing paths leading to those content sources.

However in some embodiments the undesirability of certain content sources may be path dependent rather than universal. For example a given content source including content inappropriate for children may be undesirable for users who might navigate to the given content source from another content source including content specifically directed to children. However the given content source may be completely unobjectionable for users who navigate to it from another content source including mature content. Thus in some embodiments the reporting and tracking of adverse content events may be specific to particular navigation paths leading to content sources.

The techniques described below for detecting reporting and processing adverse content events and displaying indications of undesirable content dependent upon adverse content events may be generally applicable to either content sources e.g. endpoints nodes or navigation destinations or to navigation paths involving one or more content sources e.g. including one or more edges connecting a series of nodes in a graph representation . Content sources and navigation paths may be collectively referred to as network information sources for the purposes of the following discussion it being understood that in various embodiments adverse content event reporting and processing may be implemented for both types of network information sources strictly for content sources or strictly for navigation paths.

One embodiment of a method of detecting and reporting an adverse content event and determining a weight or indication dependent upon the adverse content event is illustrated in . In some embodiments different portions of the method of operation illustrated in may be implemented in a distributed fashion by different portions of a distributed system as described in greater detail below. In other embodiments the method may be implemented by a single integrated system. It is noted that while the term weight is used it is intended that this term encompass any suitable indication including weight measure rating or other value or set of values that may be derived from reported adverse content events.

Operation of the method of begins in block where an adverse content event is detected with respect to a given network information source. As mentioned above an adverse content event may be detected based on a user s behavior after requesting access to a particular content source or traversing a particular navigation path or through other less direct techniques. In one embodiment adverse content event detection may be implemented as client side functionality integrated within browser or plugin or as another type of module or program executable on a computer system encompassed by requestor . For example plugin may be configured to determine how quickly a user navigates away from a requested network information source whether by navigating to a previously requested content source or path or a home page e.g. by selecting a back or a home button displayed by browser or by navigating to a linked manually entered or bookmarked URI. In some embodiments navigating away from a requested content source may include closing a browser window in which the requested content source was opened.

In one embodiment detecting an adverse content event may include detecting that the user has navigated away from a requested network information source within a threshold period of time e.g. a given number of seconds after navigating to the requested network information source. In various embodiments the threshold time for detecting an adverse content event based on user navigation may be selectable for example by the user or by the entity to which the adverse content event is reported as discussed below. In some embodiments different threshold times may be applied to different types of navigation away from the requested network information source e.g. one threshold time may be applied to closing a browser window another to navigating to a previously viewed page or path etc. to determine whether an adverse content event has occurred. It is noted that navigation away from a network information source may be detected in different ways depending on the nature of the source. For example if the network information source is a web page or a path traversed among a number of such pages detecting navigation away from the source may include detecting browser based navigation such as backtracking for example. If the content source is a user forum such as a discussion board or an instant messaging session detecting navigation away from the network information source may include detecting that a user has logged out of a forum or left a messaging session.

Information indicating adverse content events may be obtained in numerous ways in addition to or instead of analyzing user navigation activity. In one embodiment detecting an adverse content event may include detecting that a request to access a particular network information source has been blocked. For example plugin browser or other client software may be configured to maintain a blacklist of URIs or domains to which access should be blocked. Alternatively a proxy server firewall or other intermediary between a requestor and a host of a content source may block a request to access that content source. The contents of such a blacklist or other blocking technique may be specified by the user or by a third party. For example a system administrator user community or third party provider of internet security services e.g. anti spam anti malware or content filtering services may specify content sources to be blocked. In some embodiments browser or proxy based blocking techniques may be path dependent such that whether a URI should be blocked may depend upon a user s navigation history.

In some embodiments detecting an adverse content event with respect to a network information source may include examining other user applications for indications of adverse content. For example plugin browser or other client software may be configured to detect the presence of an email client associated with a user. Such an email client may be a client side application that is distinct from browser such as e.g. Microsoft Outlook Mozilla Thunderbird or a similar email application. Alternatively the email client may be a web based email service such as e.g. Microsoft Hotmail Google Gmail or a similar service. The detected email client may then be queried e.g. via an API to identify email addresses or domains from which email may be blocked held or otherwise indicated as possibly undesirable. For example the contents of a Junk Mail or Spam folder maintained by the email client may be examined to identify email addresses or domains of messages routed to the folder. Alternatively a rules engine or database employed by the email client to perform spam filtering may be queried to identify particular addresses or domains. However it may be performed such identifying may be treated as detecting adverse content events for network information sources associated with the identified email addresses or domains. It is noted that in some embodiments adverse content events may also be detected based on email filtering information obtained from sources other than client side or web based email applications. For example such information may be obtained from email forwarding or reflector services that implement anti spam filtering.

Many of the above techniques for detecting adverse content events are indirect or passive in nature in that they may infer the occurrence of adverse content events from other data. In some embodiments users may directly indicate adverse content events for objectionable network information sources. For example browser may implement navigational features that include active reporting of adverse content events. One embodiment of a navigation toolbar of such a version of browser is illustrated in . In the illustrated embodiment navigation toolbar includes a number of navigation buttons configured to initiate various navigation tasks. For example the reload button may cause the currently viewed content source to be reloaded from its URI the stop button may stop the loading of the current URI and the home button may cause the default home page to be loaded. In the illustrated embodiment two versions of a back button are provided. The back OK button may cause the previously viewed content source to be loaded allowing a user to backtrack along a navigation path. The back BAD button may similarly cause the previously viewed content source to be loaded but may also be configured to generate an adverse content event associated with the currently displayed content source e.g. based on the URI currently being displayed or loaded . A user encountering undesirable content may thus use the back BAD button to both retreat and report the undesirable content. In various embodiments the user s report may be imputed to the currently displayed content source only to the path including the currently displayed and previously viewed content source or to a more complex path dependent upon the user s navigation history. It is noted that in other embodiments navigation toolbar may support navigation features in addition to or different from those shown. For example generation of adverse content events may be associated with other navigation features such as the home or stop buttons. Also in other embodiments adverse content reporting features may be implemented by browser through interfaces other than as navigation toolbar features. For example the option to generate an adverse content event for a network information source may be implemented through browser menus or integrated directly within displayed content by browser such as through a link or button inserted within a web page itself.

Similar active reporting features may be provided by a plugin . One embodiment of a browser toolbar that may be generated by plugin is shown in . In the illustrated embodiment toolbar implements a search feature through which a user may enter keywords to perform an interne search and a pop up blocker feature that may be configured to inhibit a network information source from opening new browser windows. Toolbar may also include a content reporting feature that when selected by a user may be configured to generate an adverse content event for a currently displayed content source and or navigation path. It is noted that in other embodiments toolbar may include other or different features than those shown. Also in a manner similar to various embodiments of browser as discussed above plugin may be configured to implement adverse content reporting features through menu options integrated active content or other techniques instead of or in addition to implementing such features via toolbar .

Subsequent to being detected the adverse content event may be reported to IA system block . In some embodiments reporting of adverse content events may be performed in a manner similar to reporting of content access requests as described above. For example browser plugin or another software module configured to detect adverse content events may be configured to support a similar web services reporting interface as described above with respect to traffic reporting logic . In such an embodiment reporting an adverse content event may include generating a web services call including parameters identifying the relevant content source as well as referral information indicative of navigation history. An example format of such a web services call is 

where the parameters of the call may be defined similarly to the AddPheromone call described above. In some embodiments additional parameters may be supplied to distinguish different types of adverse content events such as whether the event originated from user navigation activity from a blocked access from an application such as an email client from user feedback or from another source. In another embodiment parameters describing the adverse content event may be embedded within a document such as an XML document encapsulated within a SOAP header and transmitted to IA system as a document rather than as parameters to a web services call.

Once an adverse content event has been reported for a given network information source a weight or indication for the given network information source may be determined dependent upon the adverse content event block . The determined weight may then be stored block for example within a database or suitable data structure such as described above with respect to content interest weights. In some embodiments IA system may be configured to store reports of adverse content events and compute weights dependent upon them at regular or irregular intervals for example at periods of time after a certain number of events have been reported in total or for a particular content source or navigation path or in response to another event. In other embodiments IA system may be configured to determine a weight for the given network information source directly in response to receiving a report of an adverse content event. For example IA system may be configured to determine weights dependent upon adverse content events substantially in real time as the events are reported subject to queuing delays or other processing overhead.

In one embodiment determining a weight for a given network information source dependent upon an adverse content event corresponding to the given network information source may include adjusting a content interest weight that was previously determined for the given network information source by an amount dependent upon the adverse content event. For example as described in detail above IA system may be configured to determine content interest weights for content sources or navigation paths according to a variety of functions of content request traffic such as a time rate of change of such traffic. In one embodiment upon receiving a report of an adverse content event for a given network information source IA system may be configured to adjust its corresponding content interest weight to indicate decreased interest in the given network information source. For example if the magnitude of a content interest weight is increased in response to an increasing function of content request traffic the adjustment in response to an adverse content event may decrease the magnitude of the weight. Generally speaking the effect or correlation of an adverse content event on a weight may be the opposite of the effect or correlation of the function of content request traffic used to derive the weight.

The adjustment may be performed in a number of different ways. In one embodiment the effect of an adverse content event on a network information source s interest weight may be the same regardless of the manner in which the adverse content event was detected. In another embodiment adverse content events detected in different ways may be associated with different adjustment amounts. For example an adverse content event detected in response to a user s navigation away from a network information source may be associated with one magnitude of adjustment while an adverse content event detected in response to a user s active indication of undesired content may be associated with a different larger magnitude of adjustment. In one embodiment the weight adjustment may be a constant value that is uniformly applied on each occurrence of an adverse content event. In another embodiment the adjustment may be a function of one or more variables such as the number of adverse content events for the given network information source received during a given period of time the elapsed time between the most recently received adverse content events for the given network information source or another suitable function. For example as the frequency of adverse content events increases the magnitude of the corresponding weight adjustment may increase or decrease in various embodiments.

In some embodiments the adjustments due to adverse content events may be directly applied to a content interest weight as the events occur such that at any given time the content interest weight reflects the net value of contributions due to content request traffic and adjustments due to adverse content events time based decay or other adjustments. For example as described above IA system may be configured to store a content interest weight value for each network information source for which content request traffic has been reported. In one embodiment IA system may be configured to decrease a stored weight value for a given network information source in response to an adverse content event without keeping a separate record of the adjustment. In another embodiment IA system may be configured to separately store for a given network information source a content interest weight determined according to content request traffic and a cumulative adjustment value determined according to adverse content events. For example as described above multiple local weights may be determined and stored for a given content source or navigation path. In a similar manner an adjustment value accrued due to adverse content events may also be stored for the given network information source. When adverse content events occur the appropriate adjustment may be made to the stored adjustment value rather than to the stored content interest weight. In such an embodiment when a content interest weight is retrieved from IA system for display to a user determination of a navigation path weight determination of interest spaces or for any other purpose the stored adjustment may also be retrieved and applied to the content interest weight to determine the effect of adverse content events. As with content interest weights in some embodiments the cumulative adjustment value may decay over time such that its influence may diminish if not reinforced by further adverse content events. In other embodiments the cumulative adjustment value may be nondecreasing.

It is noted that regardless of the specific internal bookkeeping techniques employed to implement weights that are determined dependent upon adverse content events in some embodiments the effects of adverse content events may be reflected in any or all applications of weights derived from content access request traffic. For example as described above in some embodiments navigation path weights may be determined in addition to weights associated with a particular content source. Adverse content events implicating a given content source may be applied to navigation path weights that involve the given content source. In one embodiment only the particular path traversed by a user whose activity resulted in an adverse content event may be adjusted while in other embodiments any or all paths leading to the given content source may be adjusted. The adjustment applied to a navigation path weight may but need not be the same as the adjustment applied to a content interest weight. For example in some embodiments navigation path weights and content interest weights may be determined according to different scales.

By extension the effect of a significant number of adverse content events relating to a particular content source or navigation path may influence not only the weighting of the particular content source or path but possibly also the ranking of more extensive paths within a network including the particular content source or path as described above with respect to . By affecting the weighting of navigation paths adverse content events may also influence the membership and structure of interest spaces that are identified dependent upon navigation paths as described above with respect to . Similarly adverse content events may affect the outcome of keyword association that may occur dependent upon navigation paths as described above with respect to . Adverse content events may also may be used in conjunction with further applications of these technologies such as the interest space user communication techniques keyword interest space association techniques and weight scaling techniques disclosed in U.S. patent application Ser. No. 11 478 919 entitled METHOD AND SYSTEM FOR DISPLAYING INTEREST SPACE USER COMMUNITIES and filed Jun. 30 2006 which is hereby incorporated by reference in its entirety.

As noted above adverse content events may be detected in a number of different ways. In some embodiments the effect of adverse content events relating to a particular content source or navigation path may be accumulated in a scalar fashion that merges the possible distinctions among adverse content events. For example as described above IA system may be configured to store a content interest weight value and a cumulative adjustment value for a given network information source. As adverse content events are reported for the given network information source IA system may be configured to accumulate corresponding adjustments into the cumulative adjustment value. In some embodiments different types of adverse content events may contribute different magnitudes of adjustment to the cumulative adjustment value. However once accumulated distinctions among adverse content events may be discarded and the cumulative adjustment value may serve as a single scalar indication of how undesirable the given network information source appears to be based on all types of adverse content events from any source. Such an embodiment may require relatively minimal data storage and computational overhead to implement weight adjustments for adverse content events.

In other embodiments more complex discriminations among adverse content events may be supported. As mentioned above for example while a content source that hosts malicious software such as spyware may be almost universally undesirable among users another content source that hosts mature content may be undesirable to some users and sought out by others perhaps dependent on user demographics or other factors. Correspondingly in one embodiment information about a given user on whose behalf an adverse content event is detected may be included when reporting the adverse content event and taken into account when determining weight adjustments dependent on the event. Such user information may include an indication of some segment or subgroup of the general user population to which the given user belongs based on demographic information psychographic information or any other suitable scheme for differentiating users. In some embodiments information identifying a user s segment may be derived from data voluntarily provided by the given user such as age group gender location or other information. In other embodiments segment identifying information may be indirectly inferred from other sources e.g. by plugin IA system or another system component . For example those users interacting with content sources in an interest space may be treated as members of a common segment of the user population when adverse content events are generated. In some instances such users may be grouped as a segment only for the purpose of reporting adverse content events for content sources within the interest space while in other instances such segment grouping may extend to adverse content event reporting by segment members for any content source.

Where reported adverse content events include information that identifies user segments in some embodiments adjustments for a given network information source may be segregated by indicated segment rather than accumulated into a single cumulative adjustment value as described above. One such embodiment is illustrated in . In the illustrated embodiment content source path data structures may include a number of entries corresponding to individual network information sources such as content sources or navigation paths in a manner similar to data structures described above. As shown entry includes an identifier specific to the content source or path to which the entry corresponds such as a URI signature hash value or other suitable identifier. Entry also includes a global weight and a number of adjustment values . Global weight may correspond to the weight determined for the content source or path dependent upon content request traffic according to any suitable technique such as those described above with respect to . Adjustment values may include fields that identify particular user segments and the cumulative adjustment values corresponding respectively to those segments.

In an embodiment of IA system that includes data structures when a given adverse content event including user segment information is reported for a particular network information source IA system may be configured to apply the appropriate adjustment for the given adverse content event to the particular adjustment value that corresponds to the user segment indicated by the event. For example users may be divided into segments corresponding to minors under age 14 minors ages 14 17 and adults ages 18 and over. Correspondingly entries may include respective adjustment values corresponding to these three segments. If an adverse content event is reported indicating that it was detected on behalf of a minor under age 14 the corresponding adjustment value may be modified to reflect the effect of the event while the other adjustment values may be left unmodified. As a result of segregating adjustment values in this manner different perspectives on the desirability or undesirability of a network information source from the vantages of different user segments may be readily obtained.

Numerous variations for distinguishing among different types of adverse content events for a given content source or navigation path are possible and contemplated. In one embodiment adverse content events may be distinguished by the manner in which they were detected instead of or in addition to the user segments on behalf of which they were generated. For example respective adjustment values may reflect the cumulative effects of adverse content events that were generated by direct user feedback by detection of user navigation behavior by detecting a blocked content access and so forth. In some embodiments data structures may implement a vector or multidimensional array of adjustments for each content source or navigation path reflecting different analytical perspectives of reported adverse content event data. For example such an array may be indexed by both user segment and manner of detection of events. Further while illustrates storage of a single unadjusted global weight and multiple adjustment values that may be applied to the global weight it is contemplated that in another embodiment multiple different adjusted versions of the global weight may be stored. For example instead of storing an unadjusted global weight value W and a number of adjustment values A A . . . A each entry may store a number of adjusted weight values W A W A W A. In some embodiments either adjusted weight values or adjusted values themselves may be allowed to be negative numbers.

It is additionally noted that in various embodiments adverse content event detection and corresponding weight adjustments may be determined for varying levels of granularity within a content source. For example with respect to content sources that correspond to web pages adverse content event reporting may be performed at the domain name level at the web page level or with respect to portions of web pages or documents e.g. in cases where the structure of a page is readily discernible . Similarly adjustments based on adverse content events may be stored and maintained at varying levels of granularity. In some embodiments the level of granularity of event reporting need not be identical to the level of granularity of adjustment tracking for all content sources. For example adverse content events may generally be reported at a page level of granularity. However for certain content sources the reported events may be aggregated to a domain level of granularity when determining weight adjustments.

Through the application over time of the techniques described above or suitable variations thereof a substantial amount of information may be collected from reports of adverse content events and other content request traffic. For example IA system may be configured to store weight adjustment values derived from adverse content events as described above in addition to global and local weight information for various content sources and navigation paths keyword weight information interest space information and or other types of content request traffic information. Generally speaking weight adjustment values or other information derived from reported adverse content events may be referred to as adverse content information.

Once collected adverse content information may be supplied to users in a number of ways in order to improve their experience in interacting with network content. In general if adverse content information regarding a given network information source can be made available to a user in some fashion before that user encounters the given network information source the user may have an opportunity to avoid undesirable content that may be present within or along the given network information source. This may in turn improve the security of the user s session for example by enabling the user to avoid content sources hosting malicious software phishing sites or other types of security threats. Similarly the opportunity to avoid obscene or otherwise objectionable content may improve the degree to which the user enjoys his or her session.

One embodiment of a method of utilizing adverse content information during a given user s session of interaction with various network information sources is shown in . In some embodiments the various operational features of the illustrated method may be implemented as functionality within plugin browser or other software executable on behalf of the given user. In the illustrated embodiment operation begins in block where a reference to a network information source is detected on behalf of the given user. In various embodiments the detected reference may be an active or a passive reference to a network information source. For example an active reference to a content source or path may include a request for access to the content source or path initiated by the given user selecting a link entering a URI into a browser selecting a bookmark or performing any other suitable action to initiate a content access request. A passive reference to a content source or path may include for example a link on a web page the given user is currently viewing where the link is displayed to the user but has not been selected. In some embodiments plugin browser or other software may be configured to monitor content access request activity as well as displayed content in order to detect active and or passive network information source references. For example plugin may be configured to intercept content access requests and or to examine web page content to identify links to other content sources.

In response to detecting a reference to a particular network information source on behalf of the given user adverse content information corresponding to the particular network information source may be retrieved block . For example plugin or another program or agent may be configured to generate a web services request or another suitable type of request to IA system in order to retrieve weight information that may be stored for the particular network information source. As noted above in some embodiments a number of different versions of adjusted weights or adjustment values may be stored for a given network information source. In one embodiment the request for adverse content information may include information sufficient to select a particular adjusted weight or adjustment value. For example the request may include information identifying a particular user segment to which the given user belongs for which a corresponding adjusted weight or adjustment value may be selected by IA system and returned. In some embodiments if a request for adverse content information is insufficiently specific to select a particular one of several distinct weights or values for the particular network information source all corresponding weights or values may be returned to the requestor. Alternatively the existing adverse content information may be averaged or otherwise combined or an error condition may be returned to the requestor.

The retrieved adverse content information may then be examined to determine whether the given user should be notified of the possibility of adverse content block . In one embodiment adjusted weight or adjustment value data may be compared against a threshold value. For example plugin may be configured to determine whether an adjusted weight for the referenced network information source is negative or falls below a threshold value or whether the magnitude of an adjustment value reflecting a history of adverse content events for the network information source as described above exceeds a threshold value. Generally speaking the threshold value may be said to be satisfied if the relationship between the adjusted weight or adjustment value data and the threshold is sufficient whether less than greater than or equal to depending on how the weights and thresholds are defined to notify the given user. In some embodiments threshold values or other triggering conditions may be adjustable by or on behalf of the given user. For example the given user may elect to specify a more or less conservative threshold for receiving adverse content notifications by adjusting settings within plugin browser or other software. Alternatively thresholds or triggering conditions may be selected on behalf of the given user dependent upon the given user s characteristics as volunteered by the user or determined from other sources. For example as described above adverse content information for a given network information source may be differentiated depending on the user segments on behalf of which the information was reported. By extension in some embodiments the criteria for whether to notify the given user may depend on the user segment to which the given user belongs. For example if the given user identifies himself or is otherwise identified as a minor a different set of notification criteria may be employed than for adult users.

If examination of the retrieved adverse content information indicates that no notification should occur then no action may be taken with respect to the detected network information source reference block . For example if the detected reference is an active request to access a particular network information source the request may be allowed to proceed. If the detected reference is a passive reference to a particular network information source within other displayed content it may be displayed according to whatever formatting or display characteristics would ordinarily govern its display.

By contrast if notification is indicated the given user may be notified of the possibility of adverse content with respect to the detected reference block . In various embodiments such notification may occur in a number of ways which may vary depending on whether the detected reference is an active or passive reference. For example to notify regarding active references browser or plugin may be configured to display an interstitial page e.g. a web page inserted between a previously viewed page and a requested page warning the given user of the possibility that the requested content may be undesirable. Alternatively plugin or browser may be configured to display a warning within toolbar a browser status bar displayed within browser window via a popup window or via any other suitable visual or audible technique. For example the warning may be displayed using text by changing the displayed color of a toolbar or browser window display element by providing an audible tone etc. If more detailed information is available as to the reason for the notification e.g. that the referenced network information source may be a source of malicious software objectionable content etc. such details may be provided within the interstitial page in a popup window on the toolbar or in any other suitable fashion.

Notification regarding passive network information source references may similarly employ various types of display techniques. In one embodiment notification of adverse content with respect to displayed links within a web page may include altering the appearance and or location of the links within the page. For example such links may be displayed in a different e.g. smaller font size or in a different color than other links to which notification does not apply. Such links may be relocated for example to the bottom of the page. Alternatively they may be omitted from the page display entirely.

In some embodiments adverse content information for a particular network information source may be influenced not only by reported adverse content events as described above but also by the behavior of users in response to notifications generated from the adverse content information. For example in one embodiment whether a given user heeds or ignores a notification of adverse content regarding a particular network information source may be reported back to IA system thus providing another level of user feedback regarding the particular network information source. It may be the case that users in a first segment routinely ignore notifications based on adverse content information generated by users in a second segment. Correspondingly in one embodiment IA system may be configured to determine the adjusted weights or adjustment values for the users in the first segment as a function of the weights or values determined for users in the second segment. For example IA system may be configured to maintain a correlation matrix mbetween a segment i and a segment j such that the weights for segment j may be determined based on the weights for segment i as W mW. In such an embodiment IA system may be configured to increase or decrease the appropriate value of mwhen users in segment j heed or ignore the notifications generated based on adverse content information reported by segment i thus dynamically tracking the correlation between users in the two segments.

It is contemplated that in some embodiments any of the methods techniques or components described above may be implemented as instructions and data capable of being stored or conveyed via a computer accessible medium. Such methods or techniques may include for example and without limitation the various methods of detecting content request traffic providing content reporting traffic requests analyzing content request traffic data to determine global and or local interest weights detecting and reporting adverse content events generating and displaying adverse content information dependent upon adverse content events analyzing navigation and aggregate paths determining optimal aggregate paths generating interest spaces associating keywords with content sources and or paths dependent upon usage activity and requesting and displaying interest data content sources interest spaces and paths as performed by the elements shown in and and the methods illustrated in A B and or suitable variations thereof. Such instructions may be executed to perform a particular computational function such as processing web services traffic implementing mathematical functions such as integration differentiation convolution etc. as well as higher order functions such as operating system functionality network communications functionality application functionality and or any other suitable functions.

One exemplary embodiment of a computer system including tangible computer accessible storage media is illustrated in . Such a system may also be referred to as a node or computing node. As discussed previously in one embodiment the functionality of any of the various methods or components described above may be distributed across a number of nodes such that a given component may be implemented by one or more nodes or partitioned across several nodes. In the illustrated embodiment computer system includes one or more processors coupled to a system memory via an input output I O interface . Computer system further includes a network interface coupled to I O interface . Computer system may be illustrative of one embodiment of a host system IA system or a system hosting a requestor although the specific configuration of computer system may vary for different embodiments of these systems. For example system may be variously configured as a server system a desktop or notebook system an embedded system a handheld or portable client system etc.

In various embodiments computer system may be a uniprocessor system including one processor or a multiprocessor system including several processors e.g. two four eight or another suitable number . Processors may be any suitable processor capable of executing instructions. For example in various embodiments processors may be a general purpose or embedded processor implementing any of a variety of instruction set architectures ISAs such as the x86 PowerPC SPARC or MIPS ISAs or any other suitable ISA. In multiprocessor systems each of processors may commonly but not necessarily implement the same ISA.

System memory may be configured to store instructions and data accessible by processor . In various embodiments system memory may be implemented using any suitable memory technology such as static random access memory SRAM synchronous dynamic RAM SDRAM nonvolatile Flash type memory or any other type of memory. In the illustrated embodiment instructions and data implementing desired functions methods or techniques such as those described above are shown stored within system memory as code . It is noted that in some embodiments code may include instructions and data implementing desired functions that are not directly executable by processor but are represented or encoded in an abstract form that is translatable to instructions that are directly executable by processor . For example code may include instructions specified in an ISA that may be emulated by processor or by other code executable on processor . Alternatively code may include instructions procedures or statements implemented in an abstract programming language that may be compiled or interpreted in the course of execution. As non limiting examples code may include code specified in a procedural or object oriented programming language such as C or C a scripting language such as perl a markup language such as HTML or XML or any other suitable language.

In one embodiment I O interface may be configured to coordinate I O traffic between processor system memory and any peripheral devices in the device including network interface or other peripheral interfaces. In some embodiments I O interface may perform any necessary protocol timing or other data transformations to convert data signals from one component e.g. system memory into a format suitable for use by another component e.g. processor . In some embodiments I O interface may include support for devices attached through various types of peripheral buses such as a variant of the Peripheral Component Interconnect PCI bus standard or the Universal Serial Bus USB standard for example. In some embodiments the function of I O interface may be split into two or more separate components such as a north bridge and a south bridge for example. Also in some embodiments some or all of the functionality of I O interface such as an interface to system memory may be incorporated directly into processor .

Network interface may be configured to allow data to be exchanged between computer system and other devices attached to network such as other computer systems for example. In various embodiments network interface may support communication via wired or wireless general data networks such as any suitable type of Ethernet network for example via telecommunications telephony networks such as analog voice networks or digital fiber communications networks via storage area networks such as Fibre Channel SANs or via any other suitable type of network and or protocol.

In some embodiments system memory may be one embodiment of a tangible computer accessible storage medium configured to store instructions and data as described above. However in other embodiments instructions and or data may be received sent or stored upon different types of computer accessible storage media. Generally speaking a computer accessible medium may include storage media or memory media such as magnetic or optical media e.g. disk or CD DVD ROM coupled to computer system via I O interface . A computer accessible medium may also include any volatile or non volatile media such as RAM e.g. SDRAM DDR SDRAM RDRAM SRAM etc. ROM etc that may be included in some embodiments of computer system as system memory or another type of memory. A computer accessible medium may generally be accessible via transmission media or signals such as electrical electromagnetic or digital signals conveyed via a communication medium such as a network and or a wireless link such as may be implemented via network interface .

Although the embodiments above have been described in considerable detail numerous variations and modifications will become apparent to those skilled in the art once the above disclosure is fully appreciated. It is intended that the following claims be interpreted to embrace all such variations and modifications.

