---

title: Peer-to-peer buddy request and response
abstract: A system for providing secure asynchronous message publishing and retrieval in a serverless environment. The system may be used on ad-hoc and segmented networks such as peer-to-peer networks. The system may provide a method of sending and storing asynchronous message requests/responses via a Distributed Hash Table (DHT), a method for establishing RSS feeds via the asynchronous messaging service, a method for publishing a request for Internet Message buddy authorization and of retrieving pending buddy requests.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08069208&OS=08069208&RS=08069208
owner: Microsoft Corporation
number: 08069208
owner_city: Redmond
owner_country: US
publication_date: 20060421
---
Asynchronous messaging may be used in a number of different applications running on a network. However these applications may use asynchronous messaging functions provide by a dedicated server thereby hindering the application from functioning independently in a serverless system. One such application may be buddy list functionality in an instant messaging IM application.

Traditionally messaging systems may use a dedicated server for receiving and publishing IM buddy request and reply messages. This system may require that all users subscribe to a particular service and trust that service and all servers. The system may also require Internet connectivity. The use of a dedicated server also does not provide the flexibility that may be provided in a serverless system. Alternatively email may be used as an asynchronous messaging system to facilitate request and response messages.

The claimed system and method may provide an asynchronous messaging system that is trusted server independent. The claimed system provides a security model for existing messaging systems that reduces the need for server based security. The asynchronous messaging system may be used in instant messaging IM systems over networks to securely publish buddy list requests and authenticate retrieved requests. The system may provide a method of sending and storing asynchronous message requests responses via a Distributed Hash Table DHT . The method may also be used in other asynchronous messaging applications over a serverless system such as RSS feeds and providing update notifications in document management file replications services.

Although the following text sets forth a detailed description of numerous different embodiments it should be understood that the legal scope of the description is defined by the words of the claims set forth at the end of this patent. The detailed description is to be construed as exemplary only and does not describe every possible embodiment since describing every possible embodiment would be impractical if not impossible. Numerous alternative embodiments could be implemented using either current technology or technology developed after the filing date of this patent which would still fall within the scope of the claims.

It should also be understood that unless a term is expressly defined in this patent using the sentence As used herein the term is hereby defined to mean . . . or a similar sentence there is no intent to limit the meaning of that term either expressly or by implication beyond its plain or ordinary meaning and such term should not be interpreted to be limited in scope based on any statement made in any section of this patent other than the language of the claims . To the extent that any term recited in the claims at the end of this patent is referred to in this patent in a manner consistent with a single meaning that is done for sake of clarity only so as to not confuse the reader and it is not intended that such claim term be limited by implication or otherwise to that single meaning. Finally unless a claim element is defined by reciting the word means and a function without the recital of any structure it is not intended that the scope of any claim element be interpreted based on the application of 35 U.S.C. 112 sixth paragraph.

The blocks of the claimed method and apparatus are operational with numerous other general purpose or special purpose computing system environments or configurations. Examples of well known computing systems environments and or configurations that may be suitable for use with the methods or apparatus of the claims include but are not limited to personal computers server computers hand held or laptop devices multiprocessor systems microprocessor based systems set top boxes programmable consumer electronics network PCs minicomputers mainframe computers distributed computing environments that include any of the above systems or devices and the like.

The blocks of the claimed method and apparatus may be described in the general context of computer executable instructions such as program modules being executed by a computer. Generally program modules include routines programs objects components data structures etc. that perform particular tasks or implement particular abstract data types. The methods and apparatus may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules may be located in both local and remote computer storage media including memory storage devices.

With reference to an exemplary system for implementing the blocks of the claimed method and apparatus includes a general purpose computing device in the form of a computer . Components of computer may include but are not limited to a processing unit a system memory and a system bus that couples various system components including the system memory to the processing unit . The system bus may be any of several types of bus structures including a memory bus or memory controller a peripheral bus and a local bus using any of a variety of bus architectures. By way of example and not limitation such architectures include Industry Standard Architecture ISA bus Micro Channel Architecture MCA bus Enhanced ISA EISA bus Video Electronics Standards Association VESA local bus and Peripheral Component Interconnect PCI bus also known as Mezzanine bus.

Computer typically includes a variety of computer readable media. Computer readable media may be any available media that may be accessed by computer and includes both volatile and nonvolatile media removable and non removable media. By way of example and not limitation computer readable media may comprise computer storage media and communication media. Computer storage media includes both volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical disk storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which may be used to store the desired information and which may accessed by computer . Communication media typically embodies computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media. Combinations of the any of the above should also be included within the scope of computer readable media.

The system memory includes computer storage media in the form of volatile and or nonvolatile memory such as read only memory ROM and random access memory RAM . A basic input output system BIOS containing the basic routines that help to transfer information between elements within computer such as during start up is typically stored in ROM . RAM typically contains data and or program modules that are immediately accessible to and or presently being operated on by processing unit . By way of example and not limitation illustrates operating system application programs other program modules and program data .

The computer may also include other removable non removable volatile nonvolatile computer storage media. By way of example only illustrates a hard disk drive that reads from or writes to non removable nonvolatile magnetic media a magnetic disk drive that reads from or writes to a removable nonvolatile magnetic disk and an optical disk drive that reads from or writes to a removable nonvolatile optical disk such as a CD ROM or other optical media. Other removable non removable volatile nonvolatile computer storage media that may be used in the exemplary operating environment include but are not limited to magnetic tape cassettes flash memory cards digital versatile disks digital video tape solid state RAM solid state ROM and the like. The hard disk drive is typically connected to the system bus through a non removable memory interface such as interface and magnetic disk drive and optical disk drive are typically connected to the system bus by a removable memory interface such as interface .

The drives and their associated computer storage media discussed above and illustrated in provide storage of computer readable instructions data structures program modules and other data for the computer . In for example hard disk drive is illustrated as storing operating system application programs other program modules and program data . Note that these components may either be the same as or different from operating system application programs other program modules and program data . Operating system application programs other program modules and program data are given different numbers here to illustrate that at a minimum they are different copies. A user may enter commands and information into the computer through input devices such as a keyboard and pointing device commonly referred to as a mouse trackball or touch pad. Other input devices not illustrated may include a microphone joystick game pad satellite dish scanner or the like. These and other input devices are often connected to the processing unit through a user input interface that is coupled to the system bus but may be connected by other interface and bus structures such as a parallel port game port or a universal serial bus USB . A monitor or other type of display device is also connected to the system bus via an interface such as a video interface . In addition to the monitor computers may also include other peripheral output devices such as speakers and printer which may be connected through an output peripheral interface .

The computer may operate in a networked environment using logical connections to one or more remote computers such as a remote computer . The remote computer may be a personal computer a server a router a network PC a peer device or other common network node and typically includes many or all of the elements described above relative to the computer although only a memory storage device has been illustrated in . The logical connections depicted in include a local area network LAN and a wide area network WAN but may also include other networks. Such networking environments are commonplace in offices enterprise wide computer networks intranets and the Internet.

When used in a LAN networking environment the computer is connected to the LAN through a network interface or adapter . When used in a WAN networking environment the computer typically includes a modem or other means for establishing communications over the WAN such as the Internet. The modem which may be internal or external may be connected to the system bus via the user input interface or other appropriate mechanism. In a networked environment program modules depicted relative to the computer or portions thereof may be stored in the remote memory storage device. By way of example and not limitation illustrates remote application programs as residing on memory device . It will be appreciated that the network connections illustrated are exemplary and other means of establishing a communications link between the computers may be used.

Peer to peer P2P systems employ a network of nodes that communicate with each other in a decentralized manner e.g. without the aid of a central server. Each node e.g. an application or a device in the peer to peer network may communicate with another node on the network through a direct connection or each node may communicate indirectly using an intermediary node to relay communications to an intended node.

Certain applications such as instant messaging applications may be better suited for use in a decentralized serverless network such as a peer to peer network. However existing IM applications may use a dedicated central server to provide IM functionality including providing and maintaining user to user communication links. While some IM applications may now be run over a peer to peer network in which communication links may be established between users without a server certain IM functionality may still be maintained by a central server. For example while some IM applications running on a peer to peer network may manage communication links without server assistance the IM applications may still rely on a central server to provide Access Control List or buddy list functionality.

A user buddy list may represent a collection of other users or buddies with whom that user has a relationship. Being a buddy may mean having certain privileges. For example the buddy may be able to obtain presence information about a user. This may be an indication that the user is online. Being a buddy may also allow that buddy to communicate with the user where other users may not be able to communicate. A buddy list is an example of an Access Control List and all references in this document should be considered generic to all such Access Control Lists.

This authorization process may usually be facilitated by a server allowing the requestor to find the potential buddy if the buddy is online and or cache the authorization request for later delivery as discussed above. This server based approach may require that all users signup for and trust a single server and that they have Internet connectivity. An alternative mechanism may involve the use of e mail another asynchronous messaging process to exchange requests and responses.

Relying on a central server to provide portions of IM functionality may contradict the objectives of using a peer to peer network to support the IM application because a peer to peer network may be implemented to eliminate the need for a server and the accompanying resource drain required to setup and maintain the server. The claimed asynchronous messaging system may implement a security process that may reduce or eliminate the need for server based security thereby providing a more server independent approach to asynchronous messaging. The claimed method and system may use a non server based caching system such as a distributed hash table to facilitate in buddy list management.

The routing mechanism and distribution used in a DHT may be provided by an overlay or substrate protocol such as Chord Pastry PNRP Tapestry etc. These substrate protocols may maintain the DHT for a P2P network and provide a data caching service over the DHT that may allow users to publish persistent data records in a peer to peer fashion. These records may persist in the DHT until they are explicitly deleted by the publisher or until they expire. The protocols may be based on a hash function as described above that clumps records together in an organized manner thereby making retrieval more efficient. It should be noted that because the DHT may be built on a peer to peer architecture the DHT may not require Internet connectivity. The DHT could be built on a subnet scope or local network scope.

Because there may be multiple IM requests for a particular user caching or index services may be required to aggregate multiple records for a particular user or key. While some DHT systems are capable of storing multiple records or entries under a single ID i.e. non unique keys some DHT systems do not support non unique keys and may only allow a single entry for each key. If a DHT does not support non unique key entries then a sequence may be appended to a primary key sequence to distinguish the entry from other entries of the same primary key. The appended number may be a monotonically increasing value such that each node that wishes to publish an entry in the sequence will find the highest valued key currently published and used the appended value of the current highest plus one. This may be illustrated in the table of . A key column illustrates a number of different keys corresponding to a number of different records under a records column . The keys may be considered a part of the record but for illustration the record may be segmented as shown. As illustrated in a set of keys may begin with a common sequence or primary ID but may end with an appended sequence or instance ID . The instance ID may be generated sequentially for each new entry under the primary ID or be randomly generated. The primary characteristic of the instance ID may be that it combines with the primary ID to form a unique key for the particular index or DHT. In retrieving records from a DHT that allows multiple records to be published with the same key the query may only need to query based on a primary ID. When the DHT requires unique keys then by appending the instance ID to each key a query may be performed for all entries having a primary ID sequence thereby returning all records mapping to that primary key e.g. all instance IDs .

In an enhanced embodiment block may entail using an optional duration parameter. In this embodiment the record of may be supplemented with a duration parameter. This duration parameter may provide an expiration time or a validity duration. The length of the duration may correspond directly with the strength of encryption used to provide the public private key pairs used in the authentication system described above. Alternatively the duration may correspond to other security parameters. Accordingly block of may include checking the record to determine whether the duration parameter has expired. If the duration parameter has expired the record or entry may be invalid and may be removed from the DHT. If the user or IM program intends for the request to persist then the entry may be replaced with a new entry perhaps under a different instance ID for the same buddy.

The public key of the requestor sender may be part of the message body. Alternatively the requestor name which may be for example a user ID the recipient may be able to obtain the public key corresponding to the requester user name via a public key directory. This public key directory may be an existing portion of the IM system or part of an operating system or network infrastructure upon which the IM application is running. For example this functionality may be provided by the peer to peer network.

If the signature is verified by the public key of the requestor sender then the message may be further checked for an expected format and syntax otherwise the message may be compromised . Checking for message format may be used for example to ensure that the message was not hacked to match the signature. While providing a hacked message to match an encrypted signature may be statistically difficult it may not be impossible. Hacking however may result in a message that does not conform to intended or expected format. Thus a first check of the message may be made to determine whether the message format complies with an expected format. For example where contact information is communicated the contact information may require a ten character format.

Alternatively or in addition the syntax of the message may be checked for. For example the contact information may be limited to a list of options and specific relations between those options. Therefore if the format requires two entries and the first entry is related to the second entry syntax and they do not match this expected syntax then someone or something may have tampered with the message .

For serverless peer to peer networks running an instant messaging application the claimed system may eliminate the dependency on a server to provide buddy list functionality. The asynchronous messaging system claimed may also provide a mechanism for message notifications that may be used in a number of applications. For example the claimed system may be used to provide an RSS feed. In this embodiment new content may be posted under an ID key. An RSS aggregator may then periodically query the DHT store for updated feeds based on the ID which may correspond to a particular feed. The instance ID may contain sequence information which acts to mark the records by date and or time. An aggregator may then retrieve the feeds in an ordered manner. Furthermore the claimed system may be used in a document management system or file replication system in which the DHT may be used to provide update notifications. The asynchronous messaging system may actually provide the actual content changes if they are posted in the manner described above.

