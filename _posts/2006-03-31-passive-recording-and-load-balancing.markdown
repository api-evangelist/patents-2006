---

title: Passive recording and load balancing
abstract: Included are embodiments of a method for routing communication data to a plurality of recorders. At least one embodiment of a method includes passively receiving communication data related to a communication and determining to which recorder the received communication data is to be routed in order to achieve a substantially balanced utilization of the plurality recorders. Other embodiments include routing the communication data to the determined recorder.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08254262&OS=08254262&RS=08254262
owner: Verint Americas, Inc.
number: 08254262
owner_city: Roswell
owner_country: US
publication_date: 20060331
---
In an Internet Protocol IP communications network any of a plurality of communications devices may be configured to send data to and receive data from other communications devices. Users of the communications devices network administrators and or third parties may desire to record the data communicated to and or from a particular communications device. Currently networks are configured to provide a recorder to passively record communications sent to and from a particular communications device. While such a solution may accommodate recording needs for a small number of communications devices a single recorder can become overloaded when recording is desired for numerous communications devices.

Some networks utilize multiple recorders where each recorder is dedicated to a subset of the communications devices. While this solution can alleviate some of the problems of recorder overload this solution however typically results in certain recorders being overused while others become under utilized.

Thus a heretofore unaddressed need exists in the industry to address the aforementioned deficiencies and inadequacies.

Included are embodiments of a method for routing communication data to a plurality of recorders. At least one embodiment of a method includes passively receiving communication data related to a communication and determining to which recorder the received communication data is to be routed in order to achieve a substantially balanced utilization of the plurality recorders. Other embodiments include routing the communication data to the determined recorder.

Also included are embodiments of a load balancer that is passively coupled to a communications network the load balancer configured for routing communication data to a plurality of recorders. At least one embodiment of a load balancer includes logic configured to passively receive communication data related to a communication and logic configured to determine to which recorder the received communication data is to be routed in order to achieve a substantially balanced utilization of the plurality recorders. Other embodiments include logic configured to route the communication data to the determined recorder.

Additionally included are embodiments of a system for routing communication data to a plurality of recorders. At least one embodiment of a system includes a plurality of recorders at least one of the plurality of recorders being configured to receive data related to the communication and a load balancer coupled to the plurality of recorders.

Other systems methods features and advantages of this disclosure will be or become apparent to one with skill in the art upon examination of the following drawings and detailed description. It is intended that all such additional systems methods features and advantages be included within this description and be within the scope of the present disclosure.

Included in this description are systems and methods for passively recording and load balancing received data in an Internet Protocol IP environment. More specifically in at least one embodiment a load balancing component can be coupled to a plurality of recorders for distributing received data to the recorders in a substantially balanced manner. By including a load balancing component in such a manner mirrored communication and control data can be received in a passive manner and recorded by one or more of the plurality of recorders in a manner to more effectively utilize the capabilities of the recorders. Discussed below are embodiments for implementing the this functionality as well as others.

As a nonlimiting example system designers can analyze network traffic through ports or Virtual Local Area Networks VLANs by using a System Port Analyzer SPAN to send a copy of the communication traffic mirrored data to another port on the switch that has been connected to a Remote Monitoring RMON probe. In operation a copy of the data communicated between communications devices may be directed to recorder . Recorder however is not a party to the communication and the communications devices do not generally have information related to the presence and operation of recorder

Also included in the nonlimiting example of is a network pipeline . Network pipeline is included to illustrate that while the configuration of may provide recording services to a small number of communications devices as the amount of information to be recorded increases the network pipeline may be capable of communicating more information than a single recorder can process. As such the recorder may malfunction burnout or otherwise fail to provide the desired recording services.

One should note that while communications devices and are directly coupled together and communications devices and are coupled directly together this is a nonlimiting example. As one of ordinary skill in the art will understand any configuration for providing communications services between communications devices may be implemented. Such a configuration may also be represented with a plurality of communications devices independently coupled to the network however this too is a nonlimiting example.

While the configuration from illustrates the ability to provide recording services to all communications devices in this configuration can result in problems when recording demands are not evenly distributed. As a nonlimiting example if communications devices and are responsible for 80 of all recordings then recorder is recording 80 of the network traffic. As such recorder may reach its storage limit and or be subject to malfunction due to the large number of recordings. Similarly recorder will be responsible for only 20 of the recordings in this nonlimiting example and may be under utilized for its capabilities.

As a nonlimiting example in operation a user on communications device can initiate a communication with a user on communications device . One of the users a system administrator and or a third party may desire that the communication be recorded. To facilitate the recording data is communicated to the load balancer during the communication. The load balancer can be configured to receive the data for recording and route the received data to one or more of the recorders and . As data from different communications and or different streams of the same communication is received the load balancer can determine to which recorder that data is routed. This determination can be made based on a balancing algorithm such as a round robin algorithm weighted round robin algorithm a source destination algorithm or other algorithm as discussed below.

Using a round robin algorithm with three recorders as illustrated in the following call distribution can be achieved.

As illustrated as communications are received at the load balancer the round robin algorithm can automatically route calls to a recorder in a manner that provides a substantially balanced workload to each recorder. More specifically the round robin algorithm can be configured to allocate calls based on past recorder utilization. In other words the round robin algorithm can be configured to route the most recently received call to recorders in a continuously repeating sequence. While the round robin algorithm may be desirable in certain configurations a weighted round robin algorithm may be used to route recording traffic in other configurations.

The call distribution in Table 2 shows that the weighted round robin algorithm considers the load on each of the recorders before routing the communication data e.g. real time packet RTP flow to the recorders. In other words the algorithm can be configured to determine the recorder s that are currently utilized less than other recorders. This can result in providing a substantially balanced distribution of calls across the recorders in that the least utilized recorder receives the call. If there are two or more recorders with equal current utilization the weighted round robin algorithm can route the newly received call to the recorder next in the sequence similar to the round robin algorithm discussed above . This means that depending on the particular configuration hard disk space for storing recording data e.g. at data storage can be utilized in a roughly even manner.

While the above described round robin algorithm and weighted round robin algorithm can be utilized for many recording environments when call data is received at the load balancer in different data streams i.e. the communication data sent from a communications device is received in a different data stream than the communication data received at the communications device a source destination algorithm may be used. More specifically if the endpoint of a VoIP call e.g. communications device receives and sends the communications data e.g. RTP data on different port numbers the source destination load balancing algorithm may be used. The source destination algorithm can more easily handle recording in such an environment as call streams from the same communication can be sent to different recorders and provide a roughly even distribution of calls for the recorders.

Additionally while the fail over recorder can be kept idle when there is no recorder malfunction this is a nonlimiting example. More specifically other embodiments can utilize at least a portion of the fail over recorder s functionality when the fail over recorder is not otherwise in use. Additionally while illustrates the fail over recorder in N 1 fail over protection where N represents the total number of recorders and 1 indicates the number of recorders available for fail over as one of ordinary skill in the art will understand this disclosure can be interpreted to include N M fail over protection where M can be any number of recorders available for fail over. One should also note that with the above described fail over protection employed a network administrator may remove the malfunctioning recorder without affecting the remaining recorders load balancer and or other network components.

Additionally one should note that fail over protection can be utilized in response to the load balancer detecting a malfunction with a recorder e.g. dead network cable . Other embodiments can include logic related to the recorder for sending a signal to the load balancer indicating that the recorder is to be taken out of service. Still other embodiments include logic related to the recorder being configured to disable the connection with the load balancer such that the load balancer can detect that the link to that recorder is dead.

Additional elements to the above described network configuration can include health checking logic and or watchdogs where failure of one or more logic components e.g. software may be used to signal to the load balancer to take that recorder out of service. Still other embodiments include using redundant recorders to smooth the load of data e.g. receiving roughly equal amounts of data at each recorder even when no recorder has failed. This can provide an increased use of available resources and ensure that all recorders are functional. In such a configuration no one recorder is the fail over recorder as any and or all of the recorders can provide the desired fail over protection. This can provide more redundant capacity into the network and provide greater performance since normal operational traffic is spread evenly across the available resources.

One should also note that in at least one embodiment call data can be preserved when a call is transferred from a first recorder to a second recorder. As a nonlimiting example recorder can be configured to record a communication between communications device and communications device . If a determination is made that it is more preferable that recorder record the communication e.g. recorder fails bandwidth issues with recorder etc. the load balancer can be configured to send subsequently received data to recorder . As one of ordinary skill in the art will understand recorder recorded a portion of the communication and recorder recorded a portion of the communication. As such the configuration of can be configured to stitch together the two portions of the recorded communication such that upon retrieval the recorded data is viewed as a single recording. Additionally depending on the particular configuration this concept can be extended to any number of recorders.

The processor can be any custom made or commercially available processor a central processing unit CPU an auxiliary processor among several processors associated with the load balancer a semiconductor based microprocessor in the form of a microchip or chip set a macroprocessor or generally any device for executing software instructions. Examples of suitable commercially available microprocessors are as follows a PA RISC series microprocessor from Hewlett Packard Company an 80 86 or Pentium series microprocessor from Intel Corporation a PowerPC microprocessor from IBM a Sparc microprocessor from Sun Microsystems Inc or a 68xxx series microprocessor from Motorola Corporation.

The volatile and nonvolatile memory can include any one or combination of volatile memory elements e.g. random access memory RAM such as DRAM SRAM SDRAM etc. and nonvolatile memory elements e.g. ROM hard drive tape CDROM etc. . Moreover the memory may incorporate electronic magnetic optical and or other types of storage media. Note that the volatile and nonvolatile memory can have a distributed architecture where various components are situated remote from one another but can be accessed by the processor . Additionally volatile and nonvolatile memory can also include an first routing software second routing software and or third routing software . Additionally the volatile and nonvolatile memory can include an operating system not shown depending on the particular configuration.

A nonexhaustive list of examples of suitable commercially available operating systems is as follows a a Windows operating system available from Microsoft Corporation b a Netware operating system available from Novell Inc. c a Macintosh operating system available from Apple Computer Inc. d a UNIX operating system which is available for purchase from many vendors such as the Hewlett Packard Company Sun Microsystems Inc. and AT T Corporation e a LINUX operating system which is freeware that is readily available on the Internet f a run time Vxworks operating system from WindRiver Systems Inc. or g an appliance based operating system such as that implemented in handheld computers or personal data assistants PDAs e.g. PalmOS available from Palm Computing Inc. and Windows CE available from Microsoft Corporation . The operating system can be configured to control the execution of other computer programs and provides scheduling input output control file and data management memory management and communication control and related services.

A system component embodied as software may also be construed as a source program executable program object code script or any other entity comprising a set of instructions to be performed. When constructed as a source program the program is translated via a compiler assembler interpreter or the like which may or may not be included within the volatile and nonvolatile memory so as to operate properly in connection with the Operating System.

The Input Output devices that may be coupled to system I O Interface s may include input devices for example but not limited to network interfaces a keyboard mouse scanner microphone etc. Further the Input Output devices may also include output devices for example but not limited to network interfaces a printer display etc. Finally the Input Output devices may further include devices that communicate both as inputs and outputs for instance but not limited to a modulator demodulator modem for accessing another device system or network a radio frequency RF or other transceiver a telephonic interface a bridge a router etc. Additionally a display interface not shown may facilitate connection to a display monitor or other display device.

If the load balancer includes a personal computer workstation or the like the software in the volatile and nonvolatile memory may further include a basic input output system BIOS omitted for simplicity . The BIOS is a set of software routines that initialize and test hardware at startup start the Operating System and support the transfer of data among the hardware devices. The BIOS is stored in ROM so that the BIOS can be executed when the load balancer is activated.

When the load balancer is in operation the processor is configured to execute software stored within the volatile and nonvolatile memory to communicate data to and from the volatile and nonvolatile memory and to generally control operations of the load balancer pursuant to the software. Software in memory in whole or in part are read by the processor perhaps buffered within the processor and then executed.

Additionally as stated above while reference in is made to load balancer similar architecture can apply to one or more of the components in the communications network. More specifically depending on the particular configuration a switch recorder communications device etc. may include one or more of the components illustrated in . Further due to the differing functionality for these devices a variance in the hardware and or software components may be expected.

The load balancer can then receive communication data from a communication block as discussed above. Upon receiving the control data from any of a plurality of communications that may be taking place in the network as illustrated in block the load balancer can be configured to provide one or more of the recorders with the control data. In at least one embodiment the load balancer provides all recorders and with the control data block . The load balancer can then determine to which recorder the communication data is to be routed block . As discussed above depending on the particular embodiment any of a plurality of routing algorithms can be used including but not limited to the round robin algorithm the weighted round robin algorithm and the source destination algorithm. Once the recorder is determined the load balancer can route the communication data to the determined recorder.

The load balancer can then provide the recorders with the received control data block . The load balancer can then determine to which recorder the first communication stream data is to be routed block and determine to which recorder the second communication stream is to be routed block . The load balancer can then route the first communication stream to the first determined recorder block and route the second communication stream to the second determined recorder block .

One should also note that while the load balancer can be configured to detect errors in recorders at least one embodiment can include a recorder with logic to self detect errors with the recorder. As a nonlimiting example a recorder can be configured with logic for monitoring various hardware and or software components using Intelligent Platform Management Interface IPMI and or other protocol.

As one of ordinary skill in the art will understand while the flowcharts discussed in this disclosure are illustrated as occurring in a particular order this is a nonlimiting example. The steps in this disclosure can occur in any of a plurality of different orders and may include more or fewer steps than illustrated herein. Additionally while the steps in this disclosure relate to steps that are performed by load balancer this is also a nonlimiting example. As one of ordinary skill in the art will understand depending on the particular configuration one or more of the steps can be performed by a different component.

One should note that the flowcharts included herein show the architecture functionality and or operation of a possible implementation of logic. In this regard each block can be interpreted to represent a hardware component a module segment or portion of code which comprises one or more executable instructions for implementing the specified logical function s . It should also be noted that in some alternative implementations the functions noted in the blocks may occur out of the order. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved.

One should also note that any of the programs listed herein which can include an ordered listing of executable instructions for implementing logical functions can be embodied in any computer readable medium for use by or in connection with an instruction execution system apparatus or device such as a computer based system processor containing system or other system that can fetch the instructions from the instruction execution system apparatus or device and execute the instructions. In the context of this document a computer readable medium can be any means that can contain store communicate propagate or transport the program for use by or in connection with the instruction execution system apparatus or device. The computer readable medium can be for example but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus or device. More specific examples a nonexhaustive list of the computer readable medium could include an electrical connection electronic having one or more wires a portable computer diskette magnetic a random access memory RAM electronic a read only memory ROM electronic an erasable programmable read only memory EPROM or Flash memory electronic an optical fiber optical and a portable compact disc read only memory CDROM optical . In addition the scope of the certain embodiments of this disclosure can include embodying the functionality described in logic embodied in hardware or software configured mediums.

It should be emphasized that the above described embodiments are merely possible examples of implementations merely set forth for a clear understanding of the principles of this disclosure. Many variations and modifications may be made to the above described embodiment s without departing substantially from the spirit and principles of the disclosure. All such modifications and variations are intended to be included herein within the scope of this disclosure.

