---

title: Analysis of media content via extensible object
abstract: A system and method are provided for analyzing media content and generating related metadata as it is provided to a computer. In one embodiment, the system includes an extensible analysis object managing a plurality of plug-ins for analyzing the media content and generating metadata related to the media content.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07730047&OS=07730047&RS=07730047
owner: Microsoft Corporation
number: 07730047
owner_city: Redmond
owner_country: US
publication_date: 20060407
---
Capturing video includes the process of transferring media content from a recording device such as a digital video camcorder to a computer. A user is required to capture video in order to edit the media content of the video with a computer non linear video editing system or to store the media content on a computer. Recording devices e.g. digital video camcorders may have any number of memory systems with a common one being a tape based memory system. Capturing from tape based recording devices is a real time process such that capturing 1 hour of video to a computer requires approximately 1 hour of time. Other types of recording devices e.g. flash based memory optical drive based memory or magnetic drive based memory have similar requirements.

Video capture applications typically allow the user to preview the media content while it is being captured. For example the media content is stored on a recording device in the form of a DV AVI video clip or MPEG 2 video clip. In order for a user to preview the media content as it is streamed to the computer video capture applications must decode the video clip from its native format into an uncompressed format as it is received.

Users are required to manually apply processes to generate metadata correct and enhance the video after completing the capture of the media content to the computer. Additionally the generated metadata is stored in a location defined by the process generating the metadata. Since metadata generating applications are made by a number of different developers there exists no common location and format of metadata generated for any given video clip. Thus it is difficult for an application produced by one developer to use or even access metadata generated by an application produced by another developer.

Embodiments of the invention include a system for analyzing media content generating metadata related to the media content and for storing the media content and metadata in a media file. The metadata is generated by at least one analysis object of a plurality of analysis objects which analyzes the media content and stores metadata to a metadata queue. Additional analysis objects are added to the system by interfacing an application programming interface API of the system. Thus the metadata is stored in a consistent format and location such that any application can access the metadata additional analysis tools can be easily added to the system and metadata is associated with the media content it relates to.

This summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used as an aid in determining the scope of the claimed subject matter.

Referring now to a system for capturing media content from a recording device to a computer according to one embodiment of the invention is shown. The recording device provides media content such as video audio photographs or a combination thereof to the computer . The recording device may provide the media content in any format by any method. For example the recording device may stream the media content to the computer or it may render the media content for the computer . The recording device may provide the media content via a wired connection or a wireless connection to the computer and it may provide the media content at any speed. Alternatively a computing device may transmit data representative of the media content to the computer . The media content may be in DV AVI format MPEG 2 format or any other format. Regardless of how the media content is provided to the computer and the format of the media content the computer stores the media content in the original format in which it is provided by the recording device in a media content queue .

A processor of the computer executes computer executable instructions for storing moving and analyzing the media content. The computer executable instructions are represented by software objects including a transcoder a preview generator an extensible analysis object plug ins and and a table of contents TOC object . Memory objects include a media content queue a media file and a metadata queue for storing the media content in various forms or for storing data relating to the media content as determined by the processor .

The media content queue provides the stored media content to a transcoder . The transcoder decodes the media content from its original format into another format. In one embodiment of the invention the transcoder decodes the media content into media information. The transcoder provides the media content to an extensible analysis object and optionally to a preview generator . The optional preview generator generates a playback of the media content provided to the computer by the recording device on a user display of the computer as the media content is received to allow a user to view the media content being transferred to the computer . An application programming interface API permits the extensible analysis object to interface one or more of a plurality of plug ins as selected by the user or an application. The processor executes a first selected plug in which receives the media content via the extensible analysis object and API and examines the media content for a first characteristic. For example the first plug in may analyze the media content for any characteristic including an audio pattern a video pattern a face a color histogram a motion vector analysis a date stamp a timecode a color set a scene change an object or a person s voice. The first plug in then generates first metadata relating to the first characteristic and provides it to the extensible analysis object according to the API . If selected a second analysis plug in receives the media content according to the API and examines it for a second characteristic. The second plug in then generates second metadata relating to the second characteristic and provides it to the extensible analysis object according to the API . The extensible analysis object stores the first and second metadata in a metadata queue as it is received from the plug ins. The metadata may be stored in any order in the metadata queue . In an alternative embodiment of the invention the plug ins provide metadata directly to the metadata queue . In an embodiment of the invention the media content is provided directly to all analysis objects i.e. to the plug ins without the need for the extensible analysis object and the analysis objects store the metadata in the metadata queue such that the extensible analysis object may be eliminated.

In an embodiment of the invention the transcoder may provide the media content to analysis objects without decoding the media content. The analysis objects must either be capable of decoding the media content themselves or capable of analyzing the media content in the format in which it is received.

In one embodiment of the invention processor executes a table of contents object to generate a table of contents based on the metadata in the metadata queue . The table of contents object writes the metadata and the table of contents to the media file . The media file stores the table of contents near the beginning of the file followed by the media content and then the metadata. The table of contents indicates what metadata is in the file and where it is located in the file. In an embodiment of the invention the metadata is stored in the media file without a table of contents such that the TOC object is not necessary.

The media content stored in the media file is provided by the transcoder . After the transcoder has decoded the media content in the media content queue it encodes the media content in a new format or provides the media content in its original format to the media file . The format may be selected by the user or by preference of the system or computer .

Providing the media content to the computer transcoding the media content previewing the media content and analyzing the media content may occur simultaneously. That is at some point all of the processes may be executing at the same time even though analyzing the media content may take longer to complete than the other processes. As the first of the media content is provided to the computer transcoding begins with decoding the media content. The decoded media content is analyzed and reviewed while additional media content is being provided to the computer and decoded by the transcoder . The media content e.g. media information encoded by the transcoder is stored in the media file along with the metadata from the metadata queue and along with the TOC generated by the TOC object . Thus all of the processes can occur simultaneously.

Referring now to a method for capturing and storing media content in a computer according to one embodiment of the invention is illustrated. At media content is provided to the computer . The media content may be provided from a recording device such as recording device or any other device having media content such as a digital camera another computer or an audio recording device. At the computer stores the provided media content in a media content queue in the native format in which it is received. This minimizes loss of the data provided to the computer and enables performing simultaneous processes on the media content that may not be able to operate in real time. The media content is decoded from its original format to an uncompressed format by a transcoder at and an optional preview of the decoded content may be provided to a user on the user display at .

At the decoded media content from the queue is analyzed for characteristics. Such characteristics may include an audio pattern a video pattern a face a date stamp a timecode a color set a scene change an object a color histogram a motion vector analysis and a person s voice. The analysis can be conducted by independent analysis objects or by an extensible analysis object which invokes one or more plug ins and or to examine the media content and generate metadata related to the media content. An example of analyzing media content for an audio pattern is analyzing a video clip for the song Happy Birthday. If the song is detected metadata is generated indicating that the clip includes someone s birthday. An example of analyzing media content for a video pattern is analyzing a video clip for a ball passing through a hoop which can indicate that the video was taken at a basketball game. Analyzing a video clip for a face or a person s voice allows a user to search for video clips with a particular person in them. A date stamp or timecode allow a user to organize video clips chronologically. Analyzing video for a color set or an object can tell a user that a video clip where a video clip was taken. For example if a scene is dominated by red and green or if a pine tree and ornaments are present then the video probably relates to Christmas. Additional types of analysis can be added by installing additional plug ins. The user may specify that all available types of analysis may be performed or only some of the available analysis is to be performed. Each analysis would generate metadata indicative of the analysis. At the metadata generated during analysis of the media content is stored in the metadata queue .

After the metadata has been stored in the metadata queue at the table of contents TOC object generates a table of contents based on the metadata in the metadata queue at . The table of contents and the metadata are stored in the media file at .

As previously mentioned media content decoded at is analyzed at but the decoded media content is also encoded at . The media content may be encoded in the format in which it was provided to the computer or may be encoded in another format. At the encoded media content is stored in the media file along with the table of contents and the metadata. If the media content is to be stored in its original format at then one skilled in the art will recognize that encoding at is not necessary as the media content stored in the media content queue at can be stored directly to the media file at .

The capturing and analyzing in may occur simultaneously. For example if a 1 hour long video clip is on a tape based Digital Video DV camcorder it will take approximately 1 hour to provide all of the media content to the computer at . Initially a first minute of the video clip can be provided to the computer at and stored in the media content queue at . The first minute in the queue is then decoded at by the transcoder while the second minute of the video clip is being stored in the media content queue at . The uncompressed first minute of the video clip is then analyzed by the extensible analysis object at and encoded at by the transcoder . One operation or execution may take more time than another but they may be performed at least partially simultaneously. Previewing the first minute of the video clip at analyzing the first minute and generating metadata at and storing metadata related to the first minute at may all occur at the same time as encoding the media content. As the second minute of the video clip is captured and analyzed by the system it has a similar relationship to the third minute of the video clip. It is also important to note that one series of operations or executions i.e. the encoding of the media content versus the analyzing of the media content of the operation may be faster or slower than another series. When both branches occur faster than the media content is provided to the computer at the user experience is not significantly impacted. If the analysis takes substantially longer than the encoding then the user experience may be impacted i.e. the user may be required to wait to manipulate the media file until the analysis has completed .

The computer typically has at least some form of computer readable media. Computer readable media which include both volatile and nonvolatile media removable and non removable media may be any available medium that may be accessed by computer . By way of example and not limitation computer readable media comprise computer storage media and communication media. Computer storage media include volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. For example computer storage media include RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical disk storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium that may be used to store the desired information and that may be accessed by computer . Communication media typically embody computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and include any information delivery media. Those skilled in the art are familiar with the modulated data signal which has one or more of its characteristics set or changed in such a manner as to encode information in the signal. Wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media are examples of communication media. Combinations of any of the above are also included within the scope of computer readable media.

The system memory includes computer storage media in the form of removable and or non removable volatile and or nonvolatile memory. In the illustrated embodiment system memory includes read only memory ROM and random access memory RAM . A basic input output system BIOS containing the basic routines that help to transfer information between elements within computer such as during start up is typically stored in ROM . RAM typically contains data and or program modules that are immediately accessible to and or presently being operated on by processing unit . By way of example and not limitation illustrates operating system application programs other program modules and program data .

The computer may also include other removable non removable volatile nonvolatile computer storage media. For example illustrates a hard disk drive that reads from or writes to non removable nonvolatile magnetic media. also shows a magnetic disk drive that reads from or writes to a removable nonvolatile magnetic disk and an optical disk drive that reads from or writes to a removable nonvolatile optical disk such as a CD ROM or other optical media. Other removable non removable volatile nonvolatile computer storage media that may be used in the exemplary operating environment include but are not limited to magnetic tape cassettes flash memory cards digital versatile disks digital video tape solid state RAM solid state ROM and the like. The hard disk drive and magnetic disk drive and optical disk drive are typically connected to the system bus by a non volatile memory interface such as interface .

The drives or other mass storage devices and their associated computer storage media discussed above and illustrated in provide storage of computer readable instructions data structures program modules and other data for the computer . In for example hard disk drive is illustrated as storing operating system application programs other program modules and program data . Note that these components may either be the same as or different from operating system application programs other program modules and program data . Operating system application programs other program modules and program data are given different numbers here to illustrate that at a minimum they are different copies.

A user may enter commands and information into computer through input devices or user interface selection devices such as a keyboard and a pointing device e.g. a mouse trackball pen or touch pad . Other input devices not shown may include a microphone joystick game pad satellite dish scanner or the like. These and other input devices are connected to processing unit through a user input interface that is coupled to system bus but may be connected by other interface and bus structures such as a parallel port game port or a Universal Serial Bus USB . A monitor or other type of display device is also connected to system bus via an interface such as a video interface . In addition to the monitor computers often include other peripheral output devices not shown such as a printer and speakers which may be connected through an output peripheral interface not shown .

The computer may operate in a networked environment using logical connections to one or more remote computers such as a remote computer . The remote computer may be a personal computer a server a router a network PC a peer device or other common network node and typically includes many or all of the elements described above relative to computer . The logical connections depicted in include a local area network LAN and a wide area network WAN but may also include other networks. LAN and or WAN may be a wired network a wireless network a combination thereof and so on. Such networking environments are commonplace in offices enterprise wide computer networks intranets and global computer networks e.g. the Internet .

When used in a local area networking environment computer is connected to the LAN through a network interface or adapter . When used in a wide area networking environment computer typically includes a modem or other means for establishing communications over the WAN such as the Internet. The modem which may be internal or external is connected to system bus via the user input interface or other appropriate mechanism. In a networked environment program modules depicted relative to computer or portions thereof may be stored in a remote memory storage device not shown . By way of example and not limitation illustrates remote application programs as residing on the memory device. The network connections shown are exemplary and other means of establishing a communications link between the computers may be used.

Generally the data processors of computer are programmed by means of instructions stored at different times in the various computer readable storage media of the computer. Programs and operating systems are typically distributed for example on floppy disks or CD ROMs. From there they are installed or loaded into the secondary memory of a computer. At execution they are loaded at least partially into the computer s primary electronic memory. Embodiments of the invention described herein includes these and other various types of computer readable storage media when such media contain instructions or programs for implementing the steps described below in conjunction with a microprocessor or other data processor. Further embodiments of the invention include the computer itself when programmed according to the methods and techniques described herein.

For purposes of illustration programs and other executable program components such as the operating system are illustrated herein as discrete blocks. It is recognized however that such programs and components reside at various times in different storage components of the computer and are executed by the data processor s of the computer.

Although described in connection with an exemplary computing system environment including computer embodiments of the invention are operational with numerous other general purpose or special purpose computing system environments or configurations. The computing system environment is not intended to suggest any limitation as to the scope of use or functionality of any embodiment of the invention. Moreover the computing system environment should not be interpreted as having any dependency or requirement relating to any one or combination of components illustrated in the exemplary operating environment. Examples of well known computing systems environments and or configurations that may be suitable for use with embodiments of the invention include but are not limited to personal computers server computers hand held or laptop devices multiprocessor systems microprocessor based systems set top boxes programmable consumer electronics mobile telephones network PCs minicomputers mainframe computers distributed computing environments that include any of the above systems or devices and the like.

Embodiments of the invention may be described in the general context of computer executable instructions such as program modules executed by one or more computers or other devices. Generally program modules include but are not limited to routines programs objects components and data structures that perform particular tasks or implement particular abstract data types. Embodiments of the invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules may be located in both local and remote computer storage media including memory storage devices.

An interface in the context of a software architecture includes a software module component code portion or other sequence of computer executable instructions. The interface includes for example a first module accessing a second module to perform computing tasks on behalf of the first module. The first and second modules include in one example application programming interfaces APIs such as provided by operating systems component object model COM interfaces e.g. for peer to peer application communication and extensible markup language metadata interchange format XMI interfaces e.g. for communication between web services .

The interface may be a tightly coupled synchronous implementation such as in Java 2 Platform Enterprise Edition J2EE COM or distributed COM DCOM examples. Alternatively or in addition the interface may be a loosely coupled asynchronous implementation such as in a web service e.g. using the simple object access protocol . In general the interface includes any combination of the following characteristics tightly coupled loosely coupled synchronous and asynchronous. Further the interface may conform to a standard protocol a proprietary protocol or any combination of standard and proprietary protocols.

The interfaces described herein may all be part of a single interface or may be implemented as separate interfaces or any combination therein. The interfaces may execute locally or remotely to provide functionality. Further the interfaces may include additional or less functionality than illustrated or described herein. In operation computer executes computer executable instructions such as those illustrated in the figures to implement embodiments of the invention.

The order of execution or performance of the operations in embodiments of the invention illustrated and described herein is not essential unless otherwise specified. That is the operations may be performed in any order unless otherwise specified and embodiments of the invention may include additional or fewer operations than those disclosed herein. For example it is contemplated that executing or performing a particular operation before contemporaneously with or after another operation is within the scope of embodiments of the invention.

Embodiments of the invention may be implemented with computer executable instructions. The computer executable instructions may be organized into one or more computer executable components or modules. Embodiments of the invention may be implemented with any number and organization of such components or modules. For example embodiments of the invention are not limited to the specific computer executable instructions or the specific components or modules illustrated in the figures and described herein. Other embodiments of the invention may include different computer executable instructions or components having more or less functionality than illustrated and described herein.

When introducing elements of embodiments of the invention or the embodiments thereof the articles a an the and said are intended to mean that there are one or more of the elements. The terms comprising including and having are intended to be inclusive and mean that there may be additional elements other than the listed elements.

Having described embodiments of the invention in detail it will be apparent that modifications and variations are possible without departing from the scope of embodiments of the invention as defined in the appended claims. As various changes could be made in the above constructions products and methods without departing from the scope of embodiments of the invention it is intended that all matter contained in the above description and shown in the accompanying drawings shall be interpreted as illustrative and not in a limiting sense.

