---

title: Systems and methods for selecting and importing objects
abstract: Systems and methods are provided for selecting and importing objects. In one implementation, a computer-implemented method is provided for selecting objects for importation. Each object includes data and related processes. In the method, a search query is received including an object type. The object type identifies two or more key fields that uniquely identify the object type specified in the search query. A filter selection is received, which includes one or more values of characteristics or key figures of the specified object type. A database is searched and objects of the specified object type that meet the filter selection are identified. A result is returned to a user indicating the identified objects.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08782059&OS=08782059&RS=08782059
owner: SAP AG
number: 08782059
owner_city: Walldorf
owner_country: DE
publication_date: 20060705
---
This application claims the benefit of priority from European Patent Application No. 06290714.2 filed May 2 2006 the entire contents of which are expressly incorporated herein by reference.

The present invention generally relates to the field of data processing and importing objects. More particularly the invention relates to computerized systems and methods for implementing a multi step importation tool for selecting objects for importation.

In today s information dependent workplace data is often stored in local or external systems that are available over a network. To accomplish their jobs workers must access and analyze large quantities of data stored in a variety of locations. For example a worker using a software application may require data that was created by another worker with another software application. As a result the worker must import the required data. Importing is the process of bringing data created in one application into another application. For example data created and stored on a server may be required by a worker at a terminal. Accordingly the worker must import the data from the server to a software application executing on the terminal. Once the data has been imported the worker may access and analyze the data.

When importing data to a software application the data that is imported must be encoded or formatted in a manner that the software application understands. Otherwise the software application will be unable to recognize and process the data. The specific structure in which information is encoded is called a data format. Since data formats are specific to particular software applications the data that a worker may wish to access and analyze might be encoded in a variety of data formats. For example generic software applications allow users to define their own data formats resulting in data that is stored in many different user defined data formats. As a result when such data is imported it must often be converted to a data format that is recognized by the software application to which it is being imported.

Due to a lack in uniformity between data formats and between data formats used by different software applications the importation process can be complex. A user may be required to specify the type of data format that the user wishes to import for example. Furthermore a source database may store a collection of related data as separate records and each record may arrange data in individual elements called fields. The importation process may require the user to specify or adjust field sizes of the target database in order to ensure that the target database can accommodate the imported data. Due to these complexities of importing data the procedure for successfully importing data is not always evident to the end user and it is often difficult for the end user to identify with precision the data that the user requires. As a result a user might select a larger amount of data to import than actually needed.

Importing a large amount of data can affect the performance of a system. For example a significant amount of system resources are require when a large batch of data is imported. Further still the conversion of data from one data format to another during the importation process may consume a significant amount of resources. As a result the larger the volume of data to be imported the more resources that are needed in order to import the data.

Therefore conventional importation techniques are limited and suffer from one or more drawbacks. Such solutions are typically not flexible enough to provide users with a simple process for importing data. In addition because users often are unable to select data with any specificity some data is often imported needlessly consuming system resources.

In view of the foregoing there is a need for improved systems and methods for importing data. For example there is a need for systems and methods that implement a multi step importation process that divides the process into steps easily understood by users. There is also a need for systems and methods that allow a user to import only the data that is needed in order to conserve system resources. Therefore a multi step importation process is needed that is both easily understood by users and that allows users to more accurately select the data for importation.

Consistent with an embodiment of the present invention a computer implemented method is provided for selecting objects for importation. Each object may include data and related processes. The method may comprise receiving a search query including an object type. The object type may identify two or more key fields that uniquely identify the object type specified in the search query. A filter selection may be received that includes one or more values of characteristics or key figures of the specified object type. The method also comprises searching a database and identifying objects of the specified object type that meet the filter selection. A result may be returned to a user indicating the identified objects.

Consistent with another embodiment of the present invention a system is provided for selecting objects for importation. Each object may include data and related processes. The system may comprise a graphical user interface module. The graphical user interface module may be adapted to enable a user to specify a search query including an object type. An identification module may identify two or more key fields of the object type specified in the search query. The two or more key fields may uniquely identify the specified object type. A filter module may search a database and identify objects of the specified object type that meet a filter selection. The filter selection may include one or more values of characteristics or key figures of the specified object type.

Consistent with yet another embodiment of the present invention a computer readable medium is provided for importing objects using a data processing system according to a method. Each object may include data and related processes. The method may comprise receiving a search query including an object type. The object type may identify two or more key fields that uniquely identify the object type specified in the search query. A filter selection may be received that includes one or more values of characteristics or key figures of the specified object type. The method also comprises searching a database and identifying objects of the specified object type that meet the filter selection. A result may be returned to a user indicating the identified objects.

It is to be understood that both the foregoing general description and the following detailed description are exemplary and explanatory only and are not restrictive of the invention or embodiments thereof as claimed.

The following detailed description refers to the accompanying drawings. Wherever possible the same reference numbers are used in the drawings and the following description to refer to the same or similar parts. While several exemplary embodiments and features of the invention are described herein modifications adaptations and other implementations are possible without departing from the spirit and scope of the invention. For example substitutions additions or modifications may be made to the components illustrated in the drawings and the exemplary methods described herein may be modified by substituting reordering or adding steps to the disclosed methods. Accordingly the following detailed description does not limit the invention. Instead the proper scope of the invention is defined by the appended claims.

Systems and methods consistent with the present invention may provide a user interface for selecting and importing objects according to a multi step importation process. As used herein an object refers to a software bundle of variables e.g. data and may include related methods. In object oriented programming an object is a concrete realization instance of a class that consists of data and may also include operations associated with that data. The term business object may represent a physical or logical object of significance to a business such as a purchase order GLAccount production order project product cost estimate and the like. Accordingly business objects may represent concrete or abstract objects as well as activities or processes and may be used to model and further process objects occurring in an organization such as a company. Certain processing options such as display change or send may be available for each business object. As used herein the term object is used to refer to any kind of object including business objects.

Objects may be of different object types. An object type refers to a classification of an object according to the kind of data stored in the object. Examples of object types include purchase orders business orders resources activities materials and employees. Each object may also be defined by one or more fields of data called characteristics and key figures. Characteristics of an object refer to data of a qualitative nature that describe the object. For example characteristics may include data identifying a plant a material an order or a customer. On the other hand key figures of an object refer to data of a quantitative nature. For example key figures may include data identifying a volume or a price. Key figures are typically basic numbers for example absolute numbers such as individual values totals differences or averages or relationship numbers for example relative numbers such as structural numbers relation numbers or index numbers . Thus key figures of an object are described in more detail by the characteristics of the object.

As used herein the term software application encompasses any and all types of software including computer software computer program products and program modules and components including business and financial software applications and components. A software application may uniquely identify an object by a database key DB . A database key may be a numerical value such as a GUID Global Unique Identifier . On the other hand to users of the software application objects are uniquely identified by a business key. A business key may be a name such as a plant material controlling area or cost center for example. Since a business key is descriptive name users are more likely to remember business keys rather than numerical database keys.

Furthermore one or more characteristics of an object may be considered to be a key field. Key fields may be used to locate objects of a particular object type. For example in order to locate a particular object a software application may look for objects having certain key fields. By identifying objects that have the certain key fields a user or software application may identify objects of a particular type.

Referring now to an exemplary object is shown that is of a purchase order type consistent with an embodiment of the present invention. As part of a purchase order type object there are several fields that store data. Each field may have a database key and a business key. For example as shown in the purchase order object includes numerical values i.e. 101 567 123 15 2 and 3 in the database fields and corresponding business keys describing the numerical values i.e. identifier order plant material volume and cost . In this particular example the identifier and order fields may be considered key fields because they identify a unique object that is they identify an object of a purchase order type. Thus in order to locate all objects of a purchase order type a user of a software application could search a database of objects to locate those objects that include both an identifier field and an order field. Furthermore a user wishing to locate a purchase order type object for a particular material may specify the material if known.

Turning to another exemplary object is shown that is of a project type consistent with an embodiment of the present invention. As part of the project type object there are several fields that store data. Each field may have a database key and a business key. For example as shown in the project object includes numerical values i.e. 106 2 1010 44 and 815 in the database fields and corresponding business keys describing the numerical values i.e. identifier version created on created by and database . In this particular example the identifier and version fields may be considered key fields because they identify an object that is of a project type. Thus in order to locate all objects of a project order type a user or a software application could search a database of objects to locate those objects that include both an identifier field and a version field. Furthermore a user wishing to locate a project type object for a particular version of the project may specify the version number if known.

One of skill in the art will recognize that the above object type definitions discussed in connection with are exemplary and that a variety of other object type definitions may be used consistent with embodiments of the present invention. For example users may wish to import objects of the above exemplary types and of other object types. Furthermore due to the emergence of business objects and services as well as the extensive nature of software applications that use business objects the amount of business objects that are available for a user has dramatically increased. When a user wishes to import objects into a software application for ease of use the user may wish to select objects for importation based on business keys instead of database keys. For example referring again to the exemplary objects shown in selecting an object based on business keys is preferred because a user can more easily and readily identify business keys as compared to the database keys. By contrast since each object type has a different definition identifying database keys associated with a desired object is difficult for a user.

Accordingly embodiments consistent with the present invention provide systems and methods that allow for the selection and importation of objects using business keys facilitating a more user friendly experience. Furthermore systems and methods consistent with embodiments of the present invention provide a multi step importation process that allows users to select the objects that they require with greater specificity allowing the user to decrease the amount of data to be imported. Still further systems and methods consistent with the present invention provide a generic importation tool that allows users to import objects of any object type.

Network provides communications between the various entities in system such as application server repository server and terminals . In addition application server repository server or terminals may access legacy systems not shown via network or may directly access legacy systems and or databases.

Network may be a shared public or private network and encompasses a wide area or local area. Network may be implemented through any suitable combination of wired and or wireless communication networks. Furthermore network may comprise a local area network LAN a wide area network WAN an intranet or the Internet.

Application server may comprise a general purpose computer e.g. a personal computer network computer server or mainframe computer having a processor not shown that may be selectively activated or reconfigured by a computer program to perform one or more methods consistent with the present invention. Application server may also be implemented in a distributed network. Alternatively application server may be specially constructed for carrying out methods consistent with the present invention. Furthermore application server may include a data storage for storing program modules that implement an importation tool. Program modules for implementing an importation tool are discussed in further detail with respect to .

Repository server may include a database . Database may be implemented with any one of a number of commercially available repositories. However in a preferred embodiment the Enterprise Services Repository from SAP AG is used. Furthermore repository server may employ any of a number of commercially available database systems such as Microsoft Access dbase Oracle Sybase etc.

Database may act as repositories for storing objects. Furthermore repository server may be available via network and may interact with software executing on application server and or or with software executing on terminals . For example objects stored in database may be accessed by any of application server or terminals or . Objects may be retrieved from database and transmitted over network to terminals at the direction of application server for example. Furthermore objects may be stored in any one of terminals or .

For example in at least one embodiment objects stored in database may be accessed by means of Business Application Programming Interfaces BAPI a well known and widely used application interface used to achieve interoperability between various systems and to integrate third party software components with the software offered by SAP AG. In another exemplary environment such as one using an existing SAP NetWeaver architecture the Enterprise Services Infrastructure ESI provides access to the objects.

Terminals may be any type device for communicating with application server and or repository server over network . For example terminals may be personal computers handheld devices or any other appropriate computing platform or device capable of exchanging data with network . Terminals may each include a processor not shown and data storage not shown for storing data such as objects that have been imported from repository server .

For example terminals may execute program modules that provide one or more graphical user interfaces GUIs for interacting with network resources to import objects and or may execute a web browser for accessing network resources through a web portal. Users may access data stored in repository server via network through a web browser or software application running on for example any one of terminals .

For example a web portal may include options for allowing a user to log onto a secure site provided by application server by supplying credentials such as a username and a password. Once logged onto the site the web portal may display a series of screens prompting the user to make various selections for importing objects. Since embodiments of the present invention may be implemented using an HTTPS hypertext transfer protocol secure environment data transfer over a network such as the Internet may be done in a secure fashion.

Consistent with an aspect of the present invention a web interface generated by application server that is displayed to users of terminals may provide various options. For example a user may select using the web interface an object importation tool. In other embodiments users of terminals may select an object importation tool from an GUI generated by software executing on one of terminals .

Consistent with embodiments of the present invention a multi step importation process may allow a user to select a database from which to import objects. The user may then select an importation tool that provides an introduction to the user such a welcome screen that welcomes users to the importation tool. Furthermore the process may allow the user to select object types filter objects of the selected type select specific objects for importation and provide a final confirmation of the objects to be imported. Embodiments of the present invention may be used with various solutions and within numerous environments in order to provide flexibility to import objects of any object type. By way of example embodiments of the invention may be implemented in computerized systems or methods that incorporate business warehouse solutions from SAP AG Walldorf Germany .

To implement the object importation tool program may include instructions in the form of one or more software modules . Software modules may be written using any known programming language such as ABAP XML etc. A GUI module may provide processing to display data and receive data selections from users of the importation tool. For example GUI module may process user selections of databases object types values entered by users for filtering objects and user selections of objects for importation. An identifier module may identify objects of a selected object type that are stored in one or more external database by processing a search query. For example a user may specify the search query by selecting an object of a particular object type. The search query may be submitted to identifier module which may identify objects having the same key fields as the selected object. A filter module may filter objects of the selected object type according to values provided by a user. A user may provide one or more values in order to locate objects of the selected object type that have the desired values. For example a user may decide to filter based on a value such as a version number the date an object was created or a person that created an object and the like. An importation module may import objects from external servers systems and or databases and the like. A storage module may save imported data for persistent storage.

While the example provided in shows program modules as being resident in data storage of application server one of ordinary skill in the art will appreciate that program modules may be stored in data storages of any one of terminals or for example.

Referring now to a flow diagram is provided of an exemplary method for importing objects using a data processing system consistent with an embodiment of the present invention. The method may implement a multi step importation process that provides a user with options for selecting objects according to a series of steps. For example a user may identify objects of a certain type and filter the objects of the selected type in order to locate desired objects.

At the start of the process a user may set up an initial configuration before launching the object importation tool Step . For example a user may select a database from which the user wishes to import objects. The process then proceeds to step . Accordingly when the user reaches the object type selection screen discussed later in connection with step and object types that are stored in the selected database are displayed.

In step the object importation tool may be launched and a welcome screen may be displayed. For example the user may select an importation tool icon to launch the importation tool. As part of this step a user interface such as a GUI shown in may be displayed and may prompt the user to make a selection. The welcome screen may include a short message welcoming the user to the importation tool and may also include options from which the user may select. For example options available on the welcome screen may include continue or cancel. GUI may be generated by for example GUI module as discussed above in connection with .

Next an object type selection may be received by the importation tool. Step . For example shows an exemplary screen for selecting objects which is discussed below in further detail. As shown in object types available in the database that was selected in step are displayed. Furthermore in step the user may submit a search query that identifies an object type. For example returning to the example object type discussed above with respect to the user may select a project type object from a list of objects. The user may submit the search query and objects of the selected object type may be identified by using one or more key fields of the object type. For example objects having certain key fields may be identified as belonging to the selected object type. The search query may be processed by for example identifier module in order to identify objects of the selected object type. Once the selection is made the importation tool may display the characteristics and key figures of the selected object type see e.g. .

Next the importation tool may receive a filter selection. Step . A filter selection may allow a user to further refine the selected objects that will be imported based on characteristics and or key figures of the object type. For example returning again to the prior example discussed above with respect to a user wishing to locate a project type object for a particular version of the project may specify the version number if known. Accordingly the importation tool would only import objects of a project type having the desired version.

In the example discussed above one or more values are provided by a user that may correspond to one or more business keys. The importation tool may include functions such as filter module for determining objects of the selected object type that include the desired business keys. Accordingly filter module may implement program instructions for determining which if any of the objects that were identified as being of selected object type in step include business keys corresponding to the values provided by a user. As one of skill in the will appreciate the user may also desire to import all objects of a particular type and thus the filter selection may be optional. The importation tool may then display a list of objects meeting the filter selection criteria see e.g. .

Next the importation tool may receive an object selection of specific desired objects from the filtered results. Step . In this step the user may select objects from the filtered list i.e. the user may make selects from the list shown in FIG. . As one of skill in the art will again appreciate this step may also be optional and may be omitted from implementations consistent with the present invention.

Turning to step the importation tool may receive a final confirmation of the objects that are to be imported. For example a confirmation screen may be displayed as shown in to prompt the user to validate that the selected objects should be imported. When the user validates the selection the objects meeting the selection criteria may be retrieved from for example database and imported into a software application at one of user terminals . The process then ends.

In an alternative implementation referring again to step the user may select both a database and an object type. For example after selecting a database and an object type the process may then proceed directly to step to filter objects and accordingly the user may skip the object type selection screen associated with step . Accordingly when the user reaches the filter screen previously discussed in connection with step and the characteristics and key figures of the selected object type are displayed for a filter selection.

As discussed above systems and methods consistent with the present invention may be implemented using a GUI. In one embodiment a user may select objects for importation using an importation tool which may be executed locally on a terminal of the user or may execute over a network and be displayed in a web browser. Once the user has selected the importation tool and supplied appropriate credentials if required to access the tool a welcome screen may be displayed. The welcome screen may display a greeting and may appear as a wizard like GUI such as that shown in .

In particular is a GUI implementing an exemplary welcome screen that welcomes users to an importation tool consistent with an embodiment of the present invention. GUI may be displayed once a user logs onto a system such as a business warehouse system provided by SAP by submitting for authentication a user name and password for example. Once logged into the system the user may select an importation tool causing GUI to be displayed. In one embodiment GUI may display a welcome message such as This wizard will help you to select and insert objects. 

GUI may include a summary of the steps implemented by the importation tool to import objects. For example as shown in summary includes a list indicating Start Select Object Type Filter Select Objects and Complete. Furthermore as illustrated in GUI may include a plurality of selectable buttons and . Buttons may be selected for example by a user operating a pointing device such as a mouse. Although a mouse is given as an example of a pointing device buttons may be selected by any appropriate device or may be selectable using a touch screen not shown . In the example shown in GUI includes a back button a continue button and a cancel button . Since GUI is the first screen shown in the process back button may be not be selectable and may be grayed out to indicate it is not an available option. Accordingly button may be used to navigate to the next step or button may be used to cancel and exit the tool. When the user selects continue button an object type selection screen may be displayed such as that shown in .

Furthermore GUI may include a message prompting the user to select an object type from a list. For example GUI includes a message stating Select Object Type. In particular as shown in a list of object types is available for selection. Each object type may be described by an ID such as unique icon and a short description. Once the user has selected the object type the user may select continue button to proceed and a filter selection screen may be displayed. In the present example of assume that a user selects the Project object type and continues to a filter selection screen such as that shown in .

GUI may provide functionality for the user to enter specific values to further filter the objects that will be selected for importation. As shown in selection box the available characteristics and key values for the project object may include External Identifier Project Version Created On Created By Status Origin Database Opportunity Strategic Importance Opportunity Type Opportunity Proposed Manufacturing Location and Valuation Date. A user may manipulate a scroll bar in order to view additional characteristics and key figures.

In the example shown in a user has made a filter selection. In particular the user has selected projects that are version 1. If a user does not enter any filter selections all objects having the key values for the selected object type will be imported. Furthermore as shown in the first two fields of the project type object i.e. External Identifier and Project Version are key fields. Once the user has entered filter selections for the selected object type the user may select continue button to proceed and an object selection screen as shown in may be displayed.

In addition during the filter selection once the user has selected continue button a message box may be displayed to the user. The message box may indicate the number of objects that meet the filter criteria. For example the message box may state 30 objects have been identified meeting the specified criteria. Would you still like to continue The message box may provide options of Yes or No. Then the user may decide whether to continue or may decide to enter further filter criteria. For example if the user has identified a large number of objects after specifying the filter criteria the user may wish to enter additional filter criteria to reduce the number of objects. As another example a user may only wish to import ten objects or fewer in order to minimize the processing resources and time needed for object importation. Accordingly a message box displays a message indicating one hundred objects have been identified meeting the filter criteria can alter the user that additional filter values must be specified or narrowed in order to reduce the number of objects that are identified. Furthermore a user may select a threshold value such that if the number of identified objects exceeds a threshold value a message box with an appropriate message is then displayed.

As shown in the user may select desired objects from list . Alternatively the user may select all of the objects shown in the list for importation. Once the user has entered any selections the user may select continue button to proceed and a completion screen as shown in may be displayed.

As shown in button is a Complete button. A message displayed on GUI may prompt the user to select complete button in order to complete the process and import the selected objects. For example GUI includes a message Select complete to insert the selected objects. Once the user selects complete the selected objects will be imported into the user s software application. For example the selected objects may be retrieved from repository server and imported to a software application executed on one of terminals .

In other embodiments consistent with the present invention a user may select objects for importation using a hierarchical approach. A hierarchy is a list of objects or object types that are organized in successive ranks with the broadest object or object type listed first and with more specific aspects or subdivisions listed below. For example a hierarchy may be displayed as a tree that a user may expand or collapse. When implementing the above described systems and methods according to a hierarchical approach a user may view objects of a selected object type in a hierarchy. Furthermore a user may filter the selected objects by viewing the objects in a hierarchy and may also select specific objects for importation from a hierarchy. One of ordinary skill in the art will recognize that objects of a selected object type may be arranged and ordered in a variety of different formats that are consistent with the spirit and scope of the present invention.

Accordingly consistent with the present invention systems and methods provide a multi step importation tool. The importation tool may be implemented as a wizard like GUI providing the user with a series of steps and selection options. Embodiments of the tool provide functionality for a user to select an object type for importation. Furthermore the user may filter objects of the selected type according to filter criteria and may also select specific objects for importation. Consistent with the present invention a user may more easily identify the data that the user needs and the amount of data that is imported may be reduced in order to conserve system resources.

The foregoing description has been presented for purposes of illustration. It is not exhaustive and does not limit the invention to the precise forms or embodiments disclosed. Modifications and adaptations of the invention will be apparent to those skilled in the art from consideration of the specification and practice of the disclosed embodiments of the invention. For example the described implementations include software but systems and methods consistent with the present invention may be implemented as a combination of hardware and software or in hardware alone. Examples of hardware include computing or processing systems including personal computers servers laptops mainframes micro processors and the like. Additionally although aspects of the invention are described for being stored in memory one skilled in the art will appreciate that these aspects can also be stored on other types of computer readable media such as secondary storage devices for example hard disks floppy disks or CD ROM or other forms of RAM or ROM.

Computer programs based on the written description and methods of this invention are within the skill of an experienced developer. The various programs or program modules can be created using any of the techniques known to one skilled in the art or can be designed in connection with existing software. For example program sections or program modules can be designed in or by means of Java C HTML XML or HTML with included Java applets or in SAP R 3 or ABAP. One or more of such software sections or modules can be integrated into a computer system or existing e mail or browser software.

Moreover while illustrative embodiments of the invention have been described herein the scope of the invention includes any and all embodiments having equivalent elements modifications omissions combinations e.g. of aspects across various embodiments adaptations and or alterations as would be appreciated by those in the art based on the present disclosure. The limitations in the claims are to be interpreted broadly based on the language employed in the claims and not limited to examples described in the present specification or during the prosecution of the application which examples are to be construed as non exclusive. Further the steps of the disclosed methods may be modified in any manner including by reordering steps and or inserting or deleting steps without departing from the principles of the invention. It is intended therefore that the specification and examples be considered as exemplary only with a true scope and spirit of the invention being indicated by the following claims and their full scope of equivalents.

