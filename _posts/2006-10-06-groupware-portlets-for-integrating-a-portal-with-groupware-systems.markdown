---

title: Groupware portlets for integrating a portal with groupware systems
abstract: A set of groupware portlets can be deployed on an enterprise portal in order to add groupware functionality thereon. The groupware portlets can provide an abstract user interface to groupware functionality provided by several collaboration servers and can also allow users to navigate to specific groupware functionality provided by a collaboration server. The portlets can connect to the various collaboration servers by implementing a personal messaging application programming interface. The interface can include a schema for defining groupware functionality and a set of providers for instantiating the connections to the various collaboration servers. The providers can be implementations of the schema that allow the groupware portlets to interact with the collaboration server. New schemas can be defined to extend existing schemas to enable more specific functionality provided by each collaboration server. The new schemas can be supported by the providers due to Java class inheritance.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08463852&OS=08463852&RS=08463852
owner: Oracle International Corporation
number: 08463852
owner_city: Redwood Shores
owner_country: US
publication_date: 20061006
---
This application is related and cross referenced to the following applications which are incorporated herein by reference 

U.S. patent application Ser. No. 11 522 240 entitled PERSONAL MESSAGING APPLICATION PROGRAMMING INTERFACE FOR INTEGRATING AN APPLICATION WITH GROUPWARE SYSTEMS by Jeffrey Thomas Sposetti filed on Sep. 15 2006.

U.S. patent application Ser. No. 11 473 571 entitled SYSTEM AND METHOD FOR PROVIDING AN SPI BRIDGE FOR CONTENT MANAGEMENT SYSTEM by Ryan Sean McVeigh et al. filed on Jun. 23 2006.

A portion of the disclosure of this patent document contains material which is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure as it appears in the Patent and Trademark Office patent file or records but otherwise reserves all copyright rights whatsoever.

The invention relates generally to portals and groupware systems and in particular to integrating groupware functionality into a portal.

A large portion of communication and information associated with an enterprise is often stored personal information management PIM and groupware systems in the form of emails address books task lists and appointments as well as other proprietary tools. At the same time customized Customer Relations Management CRM systems are often needed in order to keep track of information about a specific customer and product base and to generally provide relevant business processes and scalability. Thus organizations today must integrate groupware with more traditional information systems such as CRM enterprise resource planning ERP and others. Unfortunately the proprietary nature of groupware and PIM systems typically makes it difficult and expensive for an enterprise to integrate their data and information into other applications.

Many business organizations implement collaboration systems such as Microsoft Exchange Server and Lotus Domino . Thus employees may use the email systems such as Microsoft Outlook provided by the Microsoft Exchange server in order to communicate keep track of appointments contacts tasks meetings and generally collaborate amongst each other when working on various projects. On the other hand portals are rapidly becoming a business users primary workspace because they can bring the right information and applications to the right people at the right time. As such portals can provide access to account management opportunities and prospects maintained in a customer relations database and other areas of enterprise information and content. A significant part of the functionality provided by these separate systems often overlaps thereby creating inconsistencies and missing information which can impede performance and profitability of a company. For example an employee may schedule an appointment with a customer via the portal but that appointment may not be created or updated in the collaboration server such as Microsoft Exchange. Alternatively if an employee uses the groupware system to create the appointment the database accessible via the portal may not be properly updated thereby causing missing information and inaccurate views of the customer.

The result is that in many enterprises frustrated users toggle between groupware and portal applications duplicating work and data often with dubious integrity or efficiency. What is needed is an improved system of integration one that would facilitate interoperability between proprietary groupware systems and various enterprise portals. For example it may be desirable for a portal server to gain access to personal contacts email and appointments without having to know the complexities of proprietary groupware and PIM provider. It may also be desirable for such functionality to be achieved non intensively without causing disruption to the rest of the enterprise.

The invention is illustrated by way of example and not by way of limitation in the figures of the accompanying drawings in which like references indicate similar elements. References to embodiments in this disclosure are not necessarily to the same embodiment and such references mean at least one. While specific implementations are discussed it is understood that this is done for illustrative purposes only. A person skilled in the relevant art will recognize that other components and configurations may be used without departing from the scope and spirit of the invention.

In the following description numerous specific details are set forth to provide a thorough description of the invention. However it will be apparent to those skilled in the art that the invention may be practiced without these specific details. In other instances well known features have not been described in detail so as not to obscure the invention.

Although a diagram may depict components as logically separate such depiction is merely for illustrative purposes. It can be apparent to those skilled in the art that the components portrayed can be combined or divided into separate software firmware and or hardware components. For example one or more of the embodiments described herein can be implemented in a network accessible device appliance such as a router. Furthermore it can also be apparent to those skilled in the art that such components regardless of how they are combined or divided can execute on the same computing device or can be distributed among different computing devices connected by one or more networks or other suitable communication means.

In accordance with various embodiments of the invention a set of groupware portlets is presented for adding collaboration and groupware functionality to an enterprise portal. The portlets can provide access to mail appointments contacts and tasks as well as other features provided by the collaboration server and bring that information into a business users portal thereby providing a familiar online work environment. The portlets can be pre packaged components Java Server Pages JSPs Java classes and HTML that expose various features provided by collaboration servers.

In various embodiments a personal messaging interface including various schemas and providers is implemented for connectivity between the portlets and the collaboration servers. This interface can include a set of schemas and providers in order to abstract the connectivity to the various collaboration servers into one application programming interface API . The groupware portlets can use these schemas and providers so as to gain access to the groupware functionality provided by a collaboration server. In one embodiment a schema can be thought of as an insulating layer between the portlet application and a specific provider implementation. For example because the portlets use the groupware schema rather than the Microsoft Exchange implementation directly the same portlets can be used with Lotus Domino collaboration server by simply configuring them to switch the provider implementations. Schemas can consist of a hierarchy of abstract items and containers to resemble functionality provided by a collaboration server. Each item can contain one or more properties which can be implemented as key value pairs. Containers can hold both items as well as other sub containers. A root container may be obtained from the session which is instantiated with a particular service provider.

In one embodiment specific item classes exist for the different entities in the schema. For example the groupware schema may contain item classes for tasks appointments and contacts while the messaging schema can contain classes for mail. The programming interface for manipulating the item class properties can be the same so as to simplify access for the portlets and to make them more transparent.

The provider can be an implementation of one or more schemas that makes that schema interact with a specific backend system such as the collaboration server. For example the Microsoft Exchange MAPI provider can be an implementation of the groupware schema that connects to a Microsoft Exchange collaboration server and the Lotus Domino provider can be an implementation of the schema that connects to the Lotus Notes server. Since the providers use the low level interface to the collaboration server much of the groupware functionality is exposed while at the same time hiding the details and making the portlet appear as though it were a client of the collaboration server. In this manner the groupware portlets can connect to several collaboration servers via the schema just by switching the provider implementation.

In various embodiments two types of providers can be supported by the groupware portlets. First message centric collaboration can involve message transmission storage and management and is commonly used in groupware systems such as Microsoft Exchange. Second message centric collaboration can involve message transmission storage and management and is commonly used in groupware systems such as Lotus Domino. A same abstract interface can be used for both types of collaboration as both may share many of the same required software patterns. Service providers can provide implementations for different collaboration backends.

As illustrated an enterprise may have a portal server as well as various collaboration servers distributed throughout its environment. For example some employees may be utilizing a Microsoft Exchange server to take advantage of email calendar and appointment services and a Lotus Domino server which may provide similar features.

A set of groupware portlets can be deployed to the enterprise portal alongside various other portlets in order to allow employees to take advantages of the groupware functionality provided by the collaboration servers all without leaving the portal. For example the groupware portlets can enable employees to perform email functions such as sending and receiving mail messages calendar functions such as scheduling of appointments and meetings contacts and personal address book management personal task list management functionality as well as various other groupware functionality within the portlet. From the user s perspective the groupware portlets can act similar to a Microsoft Outlook client or a Lotus client providing a single user interface to allow access to the various features provided by the collaboration servers. Furthermore the groupware portlets can provide administrators and developers with the ability to easily deploy user interface for accessing groupware functionality that is tightly integrated with the portal server so that no external web client separate browser or login information is required from the end user.

In one embodiment the groupware portlets can be deployed as a single configurable portlet or as a plurality of such portlets in order to increase portal flexibility. Thus one enterprise may wish to deploy a single groupware portlet that enables all the groupware functionality provided by the various collaboration servers. In that case the single groupware portlet instance can provide the user interface to the features like mail calendar meetings and tasks. Alternatively multiple portlet instances can be deployed on the enterprise portal to separate the groupware features into several portlets. This can be made configurable by setting various options on the groupware portlets such that a separate groupware portlet is deployed for each of the features discussed above. These types of changes can be configurable by a system administrator for example without the need to edit any code by the developers. In this fashion greater flexibility and customization is provided to the enterprise portal.

As illustrated a groupware portlet can be developed and deployed on the portal server that provides an enterprise portal . An interface for accessing the collaboration server can be integrated into the java based portlet by including the proper set of Java API libraries. The groupware portlet can then connect to the collaboration server e.g. Microsoft Exchange server Lotus Domino server by first accessing a machine running the collaboration web service via XML over HTTP HTTPS. The collaboration service e.g. Exchange service Domino service can convert requests into remote procedure calls in the specific interface e.g. MAPI Lotus Notes C API of the collaboration server within the domain .

As illustrated the groupware portlet is deployed in the same manner as in on the enterprise portal running on an portal server . In this embodiment there is no collaboration web service employed in order to integrate the portlets with the collaboration server . Instead calls can be converted into WebDAV requests and submitted directly to the collaboration server over HTTP. WebDAV is a set of extensions to HTTP protocol available from IETF group which allows users to collaboratively edit and manage files on remote web servers. In response the collaboration server can convert each request into a WebDAV response. By writing to the WebDAV protocol extensions the need for a separate web service computer can be eliminated and calls can be made directly to the collaboration server that provides the groupware functionality.

As illustrated the groupware portlet is deployed in the same manner as in on the enterprise portal running on an portal server . In this embodiment however the collaboration server is not the MS Exchange server or a Lotus Domino server but is instead a virtual content repository such as is available from BEA Systems Inc. The virtual content repository can allow for the management and delivery of content from multiple heterogeneous repositories. It can also provide a single federated content management application programming interface API for allowing applications to access the various content provided thereon. The virtual content repository and the federated content management API are part of the BEA WebLogic Portal platform available from BEA Systems Inc. and are described in further detail in the United States Patent Application entitled SYSTEM AND METHOD FOR PROVIDING AN SPI BRIDGE FOR CONTENT MANAGEMENT SYSTEM by Ryan McVeigh et al. which is incorporated by reference herein.

As illustrated the groupware portlets can use a provider to access the virtual content repository. The provider can call the federated content management API and can go through the virtualization layer e.g. virtual content repository to access content at the actual repository . A BEA content management provider can be written in order to allow the portlets to access the various content maintained in the repository. It should be noted that it is not necessary that the BEA virtual content repository or the BEA actual repository be used. Other such virtualization layers can be implemented and are well within the scope of the invention. It is also worth noting that the virtual repository can contain multiple actual repositories not shown similar to the BEA repository illustrated for physically storing the content thereon.

Thus an enterprise can be provided with a choice of implementations illustrated in A and B. Various factors may be considered when deciding which form of connectivity to implement. For example specific interface calls to the collaboration server via a service may lessen the load on the collaboration server but may require installation and configuration of an intermediary collaboration service machine. Similarly connectivity via WebDAV can provide for an easier installation process but may create a heavier load on the server. Furthermore it is possible that WebDAV may not be capable of completely exposing all of the groupware functionality provided by the collaboration server. In many cases the optimal way to decide which mode of connectivity is better is to test both with the application and evaluate the information technology IT requirements of the deployment against the results of that test.

As illustrated a groupware portlet running on a JVM can provide a user interface on top of connectivity exposed by a personal messaging interface . The portlets can use a schema to access groupware functionality and can leverage a hierarchy or combinations of various schemas such as the groupware schema exchange schema or the domino schema. The schemas are backed by a provider implementation which can be chosen when the programmer creates a session using the interface or dynamically switched at runtime . The schema can access the provider via the service provider interface . Each provider can be an implementation of a schema that connects to the specific collaboration server that is associated with that provider. In other words the providers can supply the backend collaboration connectivity by implementing one or more schemas and instantiating appropriate connections to a collaboration server such that the groupware portlets are allowed access to the groupware functionality provided thereon.

In one embodiment a schema is a set of items and their properties containers enumerations and operations that can be performed on the items and containers. Schemas can extend other schemas thereby supporting all the items in the super schema and possibly extending those items as well. The main schemas can be groupware exchange and domino schemas. All can inherit from the messaging schema class. By the term inheritance it is meant that the schema has the same item classes and container classes plus additional ones. Providers can also often implement extended schemas for access to the higher level schemas that the extended schema implements. For example the exchange schema can contain additional item classes that are Microsoft Exchange specific and thus not available in the general groupware schema. However because the exchange schema extends the groupware schema the exchange provider still can fully support the groupware schema. Similarly the Domino schema may have classes which are Lotus Domino specific and not available in the general groupware schema. These classes can be supported by the Lotus Domino provider because of the extended schemas.

As illustrated a schema can consist of various items and containers . A container can be a specialized type of item that can hold other items. Each item can have a set of properties which are key value pairs stored on the items. These items while concrete typically represent different things depending on the provider in use. For example an item in a groupware provider could be a contact or an appointment whine an item in a messaging provider could be a mail message.

In one embodiment message centric collaboration can be done by accessing items in this case messages in a user s mail store and calling specific methods on these items. For example a groupware portlet can call a method to send a message assign a task add a new contact schedule an appointment move an email message to another folder and so on all without having to know the complexities of the interface of the underlying collaboration system. Interaction centric collaboration on the other hand can involve getting and adding items to specialized containers and registering event handlers to be notified of item changes. Thus by using the classes in the groupware schema the developer can be insulated from needing to know the specific storage structure or APIs of the collaboration system when accessing mail calendar contacts tasks and other objects.

In one embodiment the classes in the groupware schema can access the collaboration server by first contacting an intermediary service machine that runs a collaboration service. For example the exchange service can provide connectivity to Microsoft Exchange as an intermediary between Java and the MAPI interface subsystem. Similarly the Lotus Domino service can act as the intermediary between Java and the Lotus Notes C API interface subsystem.

In one embodiment it is preferable that HTTP or HTTPS traffic is able to pass between the Java application machine running the personal messaging interface and the collaboration server. This could be for example a port that is chosen and configured by a system administrator. The link between the machines can cover a wide area network to traverse longer distances. It may be preferable however to place the service intermediary machine as close to the collaboration server as possible in order to maximize performance.

In one embodiment the developer can use the item and container classes or the classes of other schemas during the building process of an application such as the groupware portlet. In cases when the portlet needs to refer to a message or some other entity on the backend collaboration server the developer can simply include code e.g. method calls referring to the item and container classes of the personal messaging interface. This way the developer is shielded from having to learn the specific implementation details of the backend system. Once the portlet is finished it can be deployed and its classes instantiated. The provider can then handle the implementation of the item and container classes as well as any extended schemas such that a connection is created to the backend system and the portlet is enabled to perform various actions on objects and entities in that backend system. In this manner the implemented item and container classes can be thought of as java wrapper objects for the connection to entities in the backend collaboration server. In one embodiment a provider can implement a stub in order to gain access to the backend collaboration server. A stub can be a program module that represents a remote entity and it can be used to invoke methods on that remote entity. For example an appointment residing on an Microsoft Exchange server can be accessed via the stub. Other such objects can include meetings contacts emails attachments folders as well as any other units that are provided by the collaboration server. Thus a stub is capable of making a set of core calls to the backend system. The provider can implement these core calls as well as support one or more schemas thereby providing access for the groupware portlets to the content and services on a specific collaboration server.

Since the providers can be responsible for creating and maintaining connections a user need only switch the provider in order to grant the groupware portlets an ability to function with a different collaboration server. For example this can be done by the developer specifying at the beginning of the session which collaboration server needs to interact with the portlet. Then an appropriate provider that is associated with that collaboration server can be used to implement connections to that server. The providers can also be switched or added at runtime without the need to reorganize the enterprise or redeploy the portlet. Thus multiple instances and connections can be running at the same time allowing the portlet to connect to different collaboration servers simultaneously.

One provider that can be implemented is capable of communicating with the collaboration server directly by writing to the WebDAV protocol thereby accessing its functionality. Another provider can communicate with an intermediary collaboration service machine in native Java where the intermediary service can then convert each call into that collaboration server s specific interface calls e.g. MAPI Lotus Notes C API etc. . The intermediary service machine can allow for more extensive functionality to be retrieved from the collaboration server because communications arrive at that server in its specific API. However this may involve a separate service being deployed on the network thereby consuming more resources. In cases where the collaboration server does not support WebDAV protocol this type of provider may be preferable. In any case the user can be provided the ability to configure this feature.

As illustrated the personal messaging interface can include a personal messaging schema a groupware schema an exchange schema and a lotus schema . These schemas can be hierarchically related and inherit from one another. For example the groupware schema can extend the personal messaging schema and be extended by the exchange and the lotus schemas.

The personal messaging schema can implement item classes and container classes which contain various items. In the extended groupware schema these items and containers can be made into groupware entities classes i.e. functionality provided by most collaboration servers such as appointments calendars and meetings . Other such entities are not shown in the figure for purposes of simplicity but they may include mail messages attachments tasks contacts as well as other types of entities commonly available in groupware systems. Via the use of these groupware entities classes the groupware schema can implement functionality that is more specific than mere items and containers e.g. functions like sending messages scheduling an appointment etc. but still span across multiple groupware providers.

On the other hands one specific collaboration server may have functionality that is not common to other such servers and the developer may wish to access this functionality as well. In this scenario the developer can implement the collaboration server specific schemas such as the exchange schema and the lotus schema . As an example the exchange schema can further define classes which are more specific to Microsoft Exchange type of functionality such as exchange appointments exchange calendars and exchange meetings . Similarly the lotus schema can implement classes specific to Lotus Domino functionality such as lotus appointments lotus calendars and lotus meetings .

A developer can write code at any level of the hierarchy. For example some method calls may be made at a high level implementing the personal messaging schema and may not employ specific groupware functionality. On the other hand it may also be desirable to access methods specific to Microsoft Exchange collaboration server or the Lotus Domino collaboration server. The developer is provided with such options and the portlets can be made to interfunction with all such backend systems. The groupware portlets can further provide a user interface to allow end users to access functionality at any level of the schema hierarchy. For example a groupware portlet can implement a high level user interface that corresponds to the groupware schema where the high level user interface provides access to functionality that is common among the various collaboration systems. On the other hand groupware portlets can also provide more specific user interfaces to match the precise functionality provided by a single collaboration server e.g. Microsoft Exchange server . This sort of abstraction hierarchy can be built into the groupware portlets so as to enable various types of access to groupware functionality.

As illustrated in step the set of groupware portlets can be created that use the personal messaging interface to enable and abstract connectivity to the backend collaboration system. For example the groupware portlets can use the schema definitions and the various schema hierarchies as previously described in order to call methods to access the groupware functionality. The schema hierarchies can enable groupware access at high levels such items and containers lower levels such as messages appointments tasks as well as even lower levels such as the specific functionality provided by the Microsoft Exchange server or the Lotus Domino server.

As illustrated in step this set of groupware portlets can be deployed to the enterprise portal server to provide the user interface layer. The providers can be selected to enable the groupware portlets to connect to different groupware servers as illustrated in step . Once selected the providers can take care of instantiating the appropriate connections to the backend servers as illustrated in step . Since the providers are implementations of the schema classes they enable the groupware portlets that use the schema to connect to the collaboration servers. For example the exchange provider can allow the groupware portlet to access the exchange functionality on an exchange server via the schema definitions.

The groupware portlets can provide a user interface to the connectivity enabled by the schemas and providers. As illustrated in step the groupware portlet can provide an abstract interface to the functionality provided across multiple groupware servers. For example a general user interface can be provided to send a message or to create a contact and so on. Furthermore as illustrated in step the groupware portlets can also provide an ability for the abstract interface to branch off into a more specific UI that more precisely matches the functionality provided by a specific collaboration server. For example a Lotus Domino server can provide certain specific features or options that are not available on other collaboration servers. The schema hierarchy can allow groupware portlets to access this functionality by implementing the appropriate providers. Furthermore groupware portlets can provide the specific user interfaces which branch off from the higher level interfaces in order to give end users access to the specific Lotus Domino features. This type of system can provide for more flexibility white still enabling a layer of abstraction among the functionality provided by the various groupware collaboration servers.

In step new providers can be added to the deployed groupware portlets such that the portlets are then enabled to access the groupware functionality provided by the collaboration servers that are associated with these new providers. The providers can be added dynamically at runtime without the need for further coding by developers. These providers can then take care of creating the new connections to the collaboration servers and implementing the schemes used by the portlet such that the portlet can obtain access to the new collaboration servers. In this manner portlets need not be re coded and redeployed in order to achieve integration with new groupware providers.

One embodiment may be implemented using a conventional general purpose of a specialized digital computer or microprocessor s programmed according to the teachings of the present disclosure as will be apparent to those skilled in the computer art. Appropriate software coding can readily be prepared by skilled programmers based on the teachings of the present disclosure as will be apparent to those skilled in the software art. The invention may also be implemented by the preparation of integrated circuits or by interconnecting an appropriate network of conventional component circuits as will be readily apparent to those skilled in the art.

One embodiment includes a computer program product which is a storage medium media having instructions stored thereon in which can be used to program a computer to perform any of the features present herein. The storage medium can include but is not limited to any type of disk including floppy disks optical discs DVD CD ROMs micro drive and magneto optical disks ROMs Rams EPROM s EPRO Ms Drams Rams flash memory of media or device suitable for storing instructions and or data.

Stored on any one of the computer readable medium media the present invention includes software for controlling both the hardware of the general purpose specialized computer or microprocessor and for enabling the computer or microprocessor to interact with a human user or other mechanism utilizing the results of the present invention. Such software may include but is not limited to device drivers operating systems execution environments containers and user applications.

Embodiments of the present invention can also include providing code for implementing processes of the present invention. The providing can include providing code to a user in any manner. For example the providing can include transmitting digital signals containing the code to a user providing the code on a physical media to a user or any other method of making the code available.

Embodiments of the present invention can include a computer implemented method for transmitting code which can be executed at a computer to perform any of the processes of embodiments of the present invention. The transmitting can include transfer through any portion of a network such as the Internet through wires the atmosphere or space or any other type of transmission. The transmitting can include initiating a transmission of code or causing the code to pass into any region or country from another region or country. For example transmitting includes causing the transfer of code through a portion of a network as a result of previously addressing and sending data including the code to a user. A transmission to a user can include any transmission received by the user in any region or country regardless of the location from which the transmission is sent.

Embodiments of the present invention can include a signal containing code which can be executed at a computer to perform any of the processes of embodiments of the present invention. The signal can be transmitted through a network such as the Internet through wires the atmosphere or space or any other type of transmission. The entire signal need not be in transit at the same time. The signal can extend in time over the period of its transfer. The signal is not to be considered as a snapshot of what is currently in transit.

The foregoing description of preferred embodiments of the present invention has been provided for the purposes of illustration and description. It is not intended to be exhaustive or to limit the invention to the precise forms disclosed. Many modifications and variations will be apparent to one of ordinary skill in the relevant arts. For example steps preformed in the embodiments of the invention disclosed can be performed in alternate orders certain steps can be omitted and additional steps can be added. The embodiments where chosen and described in order to best explain the principles of the invention and its practical application thereby enabling others skilled in the art to understand the invention for various embodiments and with various modifications that are suited to the particular used contemplated. It is intended that the scope of the invention be defined by the claims and their equivalents.

