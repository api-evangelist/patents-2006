---

title: Automatic identification of dialog timing problems for an interactive speech dialog application using speech log data indicative of cases of barge-in and timing problems
abstract: A method of analyzing dialog between a user and an interactive application having dialog turns is provided. The method includes accessing information indicative of a plurality of dialog turns between the application and at least one user and identifying instances where the application determined a response was received before an associated prompt had completed. The accessed information includes information related to operation of the application with a first grammar to recognize the response. The method includes identifying whether the response was received in a particular limited time period from when the associated prompt began. If the response was received in the limited time period, the method determines whether the response included one or more terms from the associated prompt by performing recognition on the response using a second grammar having more information related to grammar of a language than the first grammar.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07930183&OS=07930183&RS=07930183
owner: Microsoft Corporation
number: 07930183
owner_city: Redmond
owner_country: US
publication_date: 20060329
---
The discussion below is merely provided for general background information and is not intended to be used as an aid in determining the scope of the claimed subject matter.

Small computing devices such as personal digital assistants PDA devices and portable phones are used with ever increasing frequency by people in their day to day activities. With the increase in processing power now available for microprocessors used to run these devices the functionality of these devices is increasing and in some cases merging. For instance many portable phones now can be used to access and browse the Internet as well as can be used to store personal information such as addresses phone numbers and the like.

In view that these computing devices are being used with increasing frequency it is therefore necessary to provide an easy interface for the user to enter information into the computing device. Unfortunately due to the desire to keep these devices as small as possible in order that they are easily carried conventional keyboards having all the letters of the alphabet as isolated buttons are usually not possible due to the limited surface area available on the housings of the computing devices. Even beyond the example of small computing devices there is interest in providing a more convenient interface for all types of computing devices.

To address this problem there has been increased interest and adoption of using voice or speech to access information whether locally on the computing device over a local network or over a wide area network such as the Internet. With speech recognition a dialog interaction is generally conducted between the user and the computing device. The user receives information typically audibly and or visually while responding audibly to prompts or issuing commands. However it is often desirable to ascertain the performance of the application during development or after it has been deployed. In particular it is desired to ascertain usage and or success rates of users with the application. With such information the developer may be able to tune i.e. make adjustments to the application in order to better meet the needs of the users of the applications. For example it may be helpful to identify portions of the dialog between the application and the users where problems are most likely to be encountered. In this manner those portions of the dialog can be adjusted to alleviate confusion.

Recording or logging interaction data between the application and the user s is done to measure performance of the application. However in general logging application interaction data may suffer from any one or combination of the following drawbacks to name just a few 1 the data is cumbersome to generate that is the application developer must take care to instrument i.e. define and implement a set of messages used to log system data the application in a variety of locations in the code in order to acquire the correct data for analysis and tuning 2 the instrumentation process is typically done in an application specific manner and is not portable across different applications and 3 the interaction log data is of limited value unless a manual transcription process and or other explicit human intervention is applied which annotates the data with richer information on the intent of the user.

This Summary is provided to introduce some concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used as an aid in determining the scope of the claimed subject matter.

A speech application is analyzed to automatically identify timing problems therein. Information related to the application is recorded and problems are identified. A recognizer can be utilized to perform recognition on the recorded information.

The concepts presented herein are operational with numerous other general purpose or special purpose computing system environments or configurations. Examples of well known computing systems environments and or configurations that may be suitable for use with the concepts include but are not limited to personal computers server computers hand held or laptop devices multiprocessor systems microprocessor based systems set top boxes programmable consumer electronics network PCs minicomputers mainframe computers distributed computing environments that include any of the above systems or devices and the like.

The concepts presented herein may be described in the general context of computer executable instructions such as program modules being executed by a computer. Generally program modules include routines programs objects components data structures etc. that perform particular tasks or implement particular abstract data types. The concepts may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules may be located in both local and remote computer storage media including memory storage devices. Tasks performed by the programs and modules are described below and with the aid of figures. Those skilled in the art can implement the description and figures as processor executable instructions which can be written on any form of a computer readable medium.

With reference to an exemplary system for implementing the concepts presented herein includes a general purpose computing device in the form of a computer . Components of computer may include but are not limited to a processing unit a system memory and a system bus that couples various system components including the system memory to the processing unit . The system bus may be any of several types of bus structures including a memory bus or memory controller a peripheral bus and a local bus using any of a variety of bus architectures. By way of example and not limitation such architectures include Industry Standard Architecture ISA bus Micro Channel Architecture MCA bus Enhanced ISA EISA bus Video Electronics Standards Association VESA local bus and Peripheral Component Interconnect PCI bus also known as Mezzanine bus.

Computer typically includes a variety of computer readable media. Computer readable media can be any available medium or media that can be accessed by computer and includes both volatile and nonvolatile media removable and non removable media. By way of example and not limitation computer readable media may comprise computer storage media and communication media. Computer storage media includes both volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical disk storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by computer . Communication media typically embodies computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media. Combinations of any of the above should also be included within the scope of computer readable media.

The system memory includes computer storage media in the form of volatile and or nonvolatile memory such as read only memory ROM and random access memory RAM . A basic input output system BIOS containing the basic routines that help to transfer information between elements within computer such as during start up is typically stored in ROM . RAM typically contains data and or program modules that are immediately accessible to and or presently being operated on by processing unit . By way of example and not limitation illustrates operating system application programs other program modules and program data .

The computer may also include other removable non removable volatile nonvolatile computer storage media. By way of example only illustrates a hard disk drive that reads from or writes to non removable nonvolatile magnetic media a magnetic disk drive that reads from or writes to a removable nonvolatile magnetic disk and an optical disk drive that reads from or writes to a removable nonvolatile optical disk such as a CD ROM or other optical media. Other removable non removable volatile nonvolatile computer storage media that can be used in the exemplary operating environment include but are not limited to magnetic tape cassettes flash memory cards digital versatile disks digital video tape solid state RAM solid state ROM and the like. The hard disk drive is typically connected to the system bus through a non removable memory interface such as interface and magnetic disk drive and optical disk drive are typically connected to the system bus by a removable memory interface such as interface .

The drives and their associated computer storage media discussed above and illustrated in provide storage of computer readable instructions data structures program modules and other data for the computer . In for example hard disk drive is illustrated as storing operating system application programs other program modules and program data . Note that these components can either be the same as or different from operating system application programs other program modules and program data . Operating system application programs other program modules and program data are given different numbers here to illustrate that at a minimum they are different copies.

A user may enter commands and information into the computer through input devices such as a keyboard a microphone and a pointing device such as a mouse trackball or touch pad. Other input devices not shown may include a joystick game pad satellite dish scanner or the like. These and other input devices are often connected to the processing unit through a user input interface that is coupled to the system bus but may be connected by other interface and bus structures such as a parallel port game port or a universal serial bus USB . A monitor or other type of display device is also connected to the system bus via an interface such as a video interface . In addition to the monitor computers may also include other peripheral output devices such as speakers and printer which may be connected through an output peripheral interface .

The computer may operate in a networked environment using logical connections to one or more remote computers such as a remote computer . The remote computer may be a personal computer a hand held device a server a router a network PC a peer device or other common network node and typically includes many or all of the elements described above relative to the computer . The logical connections depicted in include a local area network LAN and a wide area network WAN but may also include other networks. Such networking environments are commonplace in offices enterprise wide computer networks intranets and the Internet.

When used in a LAN networking environment the computer is connected to the LAN through a network interface or adapter . When used in a WAN networking environment the computer typically includes a modem or other means for establishing communications over the WAN such as the Internet. The modem which may be internal or external may be connected to the system bus via the user input interface or other appropriate mechanism. In a networked environment program modules depicted relative to the computer or portions thereof may be stored in the remote memory storage device. By way of example and not limitation illustrates remote application programs as residing on remote computer . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.

Typically application programs have interacted with a user through a command line or a Graphical User Interface GUI through user input interface . However in an effort to simplify and expand the use of computer systems inputs have been developed which are capable of receiving natural language input from the user. In contrast to natural language or speech a graphical user interface is precise. A well designed graphical user interface usually does not produce ambiguous references or require the underlying application to confirm a particular interpretation of the input received through the interface . For example because the interface is precise there is typically no requirement that the user be queried further regarding the input e.g. Did you click on the ok button Typically an object model designed for a graphical user interface is very mechanical and rigid in its implementation.

In contrast to an input from a graphical user interface a natural language query or command will frequently translate into not just one but a series of function calls to the input object model. In contrast to the rigid mechanical limitations of a traditional line input or graphical user interface natural language is a communication means in which human interlocutors rely on each other s intelligence often unconsciously to resolve ambiguities. In fact natural language is regarded as natural exactly because it is not mechanical. Human interlocutors can resolve ambiguities based upon contextual information and cues regarding any number of domains surrounding the utterance. With human interlocutors the sentence Forward the minutes to those in the review meeting on Friday is a perfectly understandable sentence without any further explanations. However from the mechanical point of view of a machine specific details must be specified such as exactly what document and which meeting are being referred to and exactly to whom the document should be sent.

Memory is implemented as non volatile electronic memory such as random access memory RAM with a battery back up module not shown such that information stored in memory is not lost when the general power to mobile device is shut down. A portion of memory is preferably allocated as addressable memory for program execution while another portion of memory is preferably used for storage such as to simulate storage on a disk drive.

Memory includes an operating system application programs as well as an object store . During operation operating system is preferably executed by processor from memory . Operating system in one embodiment is a WINDOWS Mobile brand operating system commercially available from Microsoft Corporation. Operating system is preferably designed for mobile devices and implements database features that can be utilized by applications through a set of exposed application programming interfaces and methods. The objects in object store are maintained by applications and operating system at least partially in response to calls to the exposed application programming interfaces and methods.

Communication interface represents numerous devices and technologies that allow mobile device to send and receive information. The devices include wired and wireless modems satellite receivers and broadcast tuners to name a few. Mobile device can also be directly connected to a computer to exchange data therewith. In such cases communication interface can be an infrared transceiver or a serial or parallel communication connection all of which are capable of transmitting streaming information.

Input output components include a variety of input devices such as a touch sensitive screen buttons rollers and a microphone as well as a variety of output devices including an audio generator a vibrating device and a display. The devices listed above are by way of example and need not all be present on mobile device . In addition other input output devices may be attached to or found with mobile device .

The most probable hypothesis word s are provided to a confidence measure module . Confidence measure module identifies which words are most likely to have been properly identified by speech recognizer as a recognition result. Confidence measure module then provides the hypothesis word s to an output module along with a score corresponding to the likelihood that the recognition result corresponds to the content of what was spoken by speaker . Output module performs tasks based on the recognition result and the score. Output module can utilize one or more confidence thresholds in determining what tasks to perform. For example a simple yes no question may have a single confidence threshold. Other more complex situations can have two three or more confidence thresholds.

At step the speech utterance is recognized using a speech recognizer. The speech recognizer can utilize one or more grammars to determine a recognition result in the speech utterance. For example a name dialer application can include a grammar of all names in a directory. Additionally the speech recognizer returns a confidence score for the recognition result based on the likelihood that the recognition result corresponds to the content of the speech utterance. Various methods and systems can be used to recognize the speech and compute the confidence score.

The speech application then determines at step whether the confidence score for the recognition result is greater than an upper threshold herein referred to as threshold TH . If the confidence score is greater than TH the recognition result is accepted at step . The transaction is then complete and any tasks associated with the transaction are performed based on the recognition result. If it is determined that the confidence score is less than TH the speech application will determine if the confidence score is greater than a lower threshold herein referred to as threshold TH at step .

If the confidence score is greater than TH the speech application proceeds to step wherein the recognition result is confirmed. The confirmation can be a single choice for example a choice between yes no or a multiple choice for example a choice among options 1 2 3 etc. . The confirmation process itself can include its own thresholds. The speech application then determines at step whether the recognition result was confirmed by the user. If the result was confirmed the speech application proceeds to step wherein the recognition result is accepted as described above. If the recognition result is not confirmed the speech application will reject the result at step and start over and return to step wherein a prompt is played. Alternatively the application can change a dialog flow after a user fails multiple times. For confidence scores that are less than TH the speech application proceeds to step . Since the confidence score is particularly low for the recognition result expected input can be suggested by the speech application. For example if the application expects a name the application can suggest the user say a name.

In one embodiment speech server can be implemented on a general purpose computer such as computer discussed above. An initiator can contact speech server through a number of different modes of communication. Generally speech server can be accessed through a client such as mobile device which herein also represents other forms of computing devices having a display screen a microphone a camera a touch sensitive panel etc. as required based on the form of input or through phone wherein communication is made audibly or through tones generated by phone in response to keys depressed and wherein information from speech server can be provided audibly back to the user.

More importantly though speech server is unified in that whether information is obtained through device or phone speech server can support either mode of operation. Speech server is operably coupled to multiple interfaces to receive communication messages. Thus speech server can provide a response to different types of devices based on a mode of communication for the device.

IP interface receives and transmits information using packet switching technologies for example using TCP IP Transmission Control Protocol Internet Protocol . A computing device communicating using an internet protocol can thus interface with IP interface .

POTS Plain Old Telephone System also referred to as Plain Old Telephone Service interface can interface with any type of circuit switching system including a Public Switch Telephone Network PSTN a private network for example a corporate Private Branch Exchange PBX and or combinations thereof. Thus POTS interface can include an FXO Foreign Exchange Office interface and an FXS Foreign Exchange Station interface for receiving information using circuit switching technologies.

IP interface and POTS interface can be embodied in a single device such as an analog telephony adapter ATA . Other devices that can interface and transport audio data between a computer and a POTS can be used such as voice modems that connect a POTS to a computer using a telephone application program interface TAPI .

As illustrated in mobile device and speech server are commonly connected and separately addressable through a network herein a wide area network such as the Internet. It therefore is not necessary that mobile device and speech server be physically located adjacent each other. Device can transmit data for example speech text and video data using a specified protocol to IP interface . In one embodiment communication between device and IP interface uses standardized protocols for example SIP with RTP Session Initiator Protocol with Realtime Transport Protocol both Internet Engineering Task Force IETF standards.

Access to speech server through phone includes connection of phone to a wired or wireless telephone network that in turn connects phone to speech server through a FXO interface. Alternatively phone can directly connect to speech server through a FXS interface which is a part of POTS interface .

Both IP interface and POTS interface connect to speech server through a communication application programming interface API . One implementation of communication API is Microsoft Real Time Communication RTC Client API developed by Microsoft Corporation of Redmond Wash. Another implementation of communication API is the Computer Supported Telecommunication Architecture ECMA 269 ISO 18051 or CSTA an ISO ECMA standard. Communication API can facilitate multimodal communication applications including applications for communication between two computers between two phones and between a phone and a computer. Communication API can also support audio and video calls text based messaging and application sharing. Thus speech server is able to initiate communication to mobile device and or phone .

Speech server also includes an interactive speech application and a speech recognizer . Application includes a dialog execution module dialog states and prompts . Dialog execution module includes logic to handle text recognized by speech recognizer as well as performs tasks based on dialog states . These tasks can include transmitting a prompt from prompts .

Dialog execution module utilizes speech recognizer to drive application based on speech input from an initiator. Recognizer includes a recognition engine that is used to identify features in the user input. Recognition features for speech are usually words in the spoken language. In one particular example a language model such as a grammar can be used to recognize text within a speech utterance. More than one grammar can also be used for example for each dialog turn and or a particular semantic item for speech application .

Dialog execution module can use words recognized by recognizer to determine a desired dialog state from dialog states . Dialog execution module also accesses prompts to provide an output to a person based on user input. Dialog states can be stored as one or more files to be accessed by dialog execution module . Prompts can be integrated into dialog states or stored and accessed separately from dialog states . Prompts can be stored as text audio and or video data that is transmitted via communication API to a user based on a request from the user for example an initial prompt may include Welcome to Acme Company Help Center how can I help you The prompt is transmitted based on a mode of communication for the user. If the user connects to speech server using a phone the prompt can be played audibly through the phone.

In operation dialog execution module interprets speech received from a user in order to traverse through a dialog that includes a plurality of dialog states for example dialog states . In one embodiment the dialog can be configured as a help center with prompts for use in answering questions from a user. The dialog states can be stored as a file to be accessed by dialog execution module . The file can be authored independent of a particular communication mode that is used by a user to access speech server . Thus dialog execution module can include an application programming interface API to access dialog states .

However in some instances dialog is not completely traversed. This situation can be a result of user experience problems with speech application . Determining one or more causes of user experience problems in speech application can be a lengthy and resource intensive process. The process can require manual analysis and transcription of hundreds of individual utterances itself an error prone process for an application that is under trial or under deployment. An analyst can be required to hold a reasonably detailed knowledge both of fundamentals of speech recognition systems and of speech application . While symptoms of poor user experiences can be self evident poor or low confidence recognition results high levels of abandonment and or low task completion rates causes of these symptoms are more difficult to determine automatically. Causes can belong to any of a number of problem classes including inadequate grammar coverage flawed pronunciations user confusion resulting from an unclear prompt dialog flow issues barge in turn taking mismatches and other issues.

Referring to to aid in analyzing speech application log data can be obtained by recording information related to speech application during trial and or deployment. From log data improper barge ins and timing issues can automatically be found with regard to speech application . Furthermore probable causes for problems can be suggested. Analyzing speech application can thus be performed faster and with less resources. This process can speed up analysis of speech application by isolating a portion of data obtained from speech application that is known to demonstrate a particular problem. Furthermore the process can automatically identify causes that an analyst can verify without extensive manual involvement. Additionally isolation of known timing data can enable cleaner analysis of other portions of log data .

Log data can include recorded audio from calls between a user and speech application . Additionally log data can include information indicative of failed recognitions and a particular turn for the failed recognition as discussed below. Time stamp data including times when a particular dialog state begins when a response is received and when tasks are completed can also be recorded. Grammar and prompt information utilized by application as well as perceived responses from a user can also be included in log data . U.S. patent application Ser. No. 11 170 808 entitled Speech Application Instrumentation and Logging describes an approach to log speech data from an application.

Information indicative of completion of tasks in a speech application can be referred to as dialog data. This data quantifies success or failure of completing the task. In addition the dialog data can include a reason if the task is unsuccessful or fails or if applicable the reason for succeeding if multiple reasons are possible for succeeding. Additional data can include progress data indicating if the user did not provide a response or the speech recognizer could not recognize the utterance. A list of input field values or status thereof that changed can also be recorded.

Turn data comprises direct interaction with the application and is organized based on prompts provided by the application when no response is expected or application prompts correlated to user responses or lack thereof in other words a prompt response exchange. Data that can be recorded includes information related to the prompt provided by the application including the purpose of the prompt the response provided by the user including the purpose of the response and the recognition result determined by the system.

Furthermore system can identify failed recognitions caused by turn taking mismatches. This situation can occur when turn taking between the application and the user is not aligned. For example the user can speak when the application is not expecting speech e.g. the user tries to barge in when the system has not enabled barge in or the user otherwise is out of turn with the system. By identifying these problems an analyst can change barge in configurations and or prompt or dialog structure.

System includes information indicative of dialog turn identification module and speech recognizer . Information includes log data from . For example this information can include recorded audio from speech application under trial and or under deployment. Furthermore information can contain information related to one or more prompts responses grammars time stamps etc. provided during operation of speech application .

Additionally information can include recorded audio having both expected audio which was received when speech application was expecting to receive audio from a user and unexpected audio which was received by speech application when audio was not expected from the user. With reference to speech application includes an input channel for receiving speech from a user and an output channel for providing audio to a user. The input channel may not be enabled at times. Speech application can include situations in which barge in is not enabled. Thus speech application is not listening for speech input from the user. Still the user can supply audio during this time which ends up being ignored by speech application . This audio is referred to as unexpected audio referenced in at . Expected audio is referenced at and prompts are referenced at . However as discussed below this unexpected audio can be used during analysis.

Referring back to identification module is used to identify instances within information . For example identification module can identify problem recognition data. This data includes a set of all speech recognitions within speech application that have failed. Failed recognitions can include situations where speech application was unable to match speech input from a user with an associated grammar this can be referred to as a no recognition event . Furthermore failed recognitions can include situations where speech application has recognized some speech but a confidence value associate with recognition is below a confidence threshold of the application. Furthermore failed recognitions can include situations where speech application has recognized some speech and calculated a high enough confidence value for application to proceed further but an associated object of the speech input was later denied or otherwise cleared by the user. This situation is indicated by an explicit confirmation cycle in which a user is prompted whether user spoke a certain object or not and a user replies no or by the failure of the dialog in which the recognition is contained. For example this can result from a user hang up cancellation or other form of abandonment.

Identification module can also isolate expected audio and unexpected audio to form an actual response from a user. For example unexpected audio from a user could include I want to fly from Seattle to and the expected audio received by speech application merely included the word Boston . In this situation identification module can isolate the expected audio and the unexpected audio to form the actual response I would like to fly from Seattle to Boston. 

Speech recognizer is used to perform speech recognition on information identified by identification module . For example speech recognizer can perform recognition on responses that were identified by speech application using a grammar that includes a greater vocabulary of words and phrases than an original grammar used by speech application . Furthermore speech recognizer can perform recognition on actual responses that are isolated from expected audio and unexpected audio. In this case speech recognizer can use the same or similar grammar to the grammar used in speech application .

A subset of the barge in problem information is identified at step wherein early barge in information is identified. Step determines whether or not barge in information was received within a particular short time period from when the associated prompt began. For example the time period is likely to be a few milliseconds a second or some period therebetween. This time period can be specified according to an aggregation of system latencies that can be identified between the time the application starts a prompt playback and a time in which a very early recognition event can cause barge in. Step can thus define a period that includes a maximum time possible for prompt audio to cause cut off of the prompt since the prompt was processed by speech application as user input. Additionally the time period can depend on a load on the resources of the system executing the speech application at any particular time and thus can be adjusted to reflect the load.

At step responses from the early barge in problem information are recognized with an associated prompt added to a grammar that was utilized during operation of speech application . The grammar can allow for multiple versions of the prompt word by word. For instance the prompt Good morning who would you like to contact today with barge in enabled from the beginning of the prompt can include various combinations of text within the prompt. If text within the response is recognized during step this text can be an indication that prompt echo is causing failed recognitions within speech application . For example if the term morning is recognized a large number of times from information it is likely that prompt echo is causing problems within speech application .

If desired step of method can recognize responses with a broad grammar such as one used for transcription. Step conducts a recognition of utterances from the early barge in information using a large grammar and or using both the original grammar utilized by speech application and a much bigger grammar in parallel. At step recognitions of the prompt and other regularities in the recognized text can be identified and clustered together. These clusters can provide valuable information for an analyst to analyze application . For example the clusters can indicate that words from a prompt are being recognized and or that terms should be added to the grammar used in speech application .

At step recognition is performed on the actual responses with the grammar utilized by speech application . The actual responses formed by the combination of expected and unexpected audio can be more indicative of what a user was intending to say. At step recognitions in the application grammar are identified and turn taking problem data is identified. This data includes those results from the recognition performed in step that have matched a path in the speech application grammar with a reasonable confidence threshold. These results provide an indication that the actual response represents a response from the user that is associated with the application grammar. However the original recognition failed because of timing issues. For example these timing issues can relate to problems where the speech application was not listening to part or all of the user utterance. The data identified in step includes failed recognitions that are associated with successful recognitions during step and thus can be identified cleanly as data with utterance that represents turn taking problems.

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims.

