---

title: Multiple application integration
abstract: An application integration system used to integrate a plurality of applications includes a plurality of integration adapters, each communicating with an application and an integration engine including a messaging broker, an integration database and a schema mapping. database. The application integration system also uses a plurality of tools and components interactively working with the messaging broker. The application integration system allows integrating various applications and at the same time provides ease of change to users of such applications by providing a framework that may be used to customize and configure integrations leading to significant reduction in total cost of ownership to the businesses.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08316386&OS=08316386&RS=08316386
owner: Microsoft Corporation
number: 08316386
owner_city: Redmond
owner_country: US
publication_date: 20060217
---
Computers and computer software make up a very important part of modem life and business. In today s business environment for any organization to stay competitive it is imperative that it uses computers and software applications to manage data customers employees finances etc. Generally speaking organizations use specialized application to use one or more of their various operations.

For example businesses use accounting software to manage their accounting tax payroll and other accounting related functions whereas customer relationship management CRM software is used to manage customer accounts orders etc. Most businesses implement their core enterprise applications such as enterprise resource planning ERP and CRM at different times using products developed by different vendors. This results in the problem of how to integrate disparate systems in most cost effective efficient and effective manner.

For example a business may be using an ERP system to manage inventory and a separate CRM system to manage customer data. In such a scenario when a new customer account is created in the CRM system its attached item order may not be automatically and immediately reflected in the ERP system. Similarly when delivery of an item is received in the inventory system it may not be automatically applied to backlog of orders received in the CRM system. Such lack of communication and data sharing between various applications may result in considerable loss of efficiency and competitiveness for businesses.

One solution to the problem of integrating such disparate applications is to custom develop solutions that facilitate communication and sharing of data between such disparate applications. For example an integration developer may develop custom application that interacts with both of the CRM and the ERP to keep them apprised of any changes in the data that need to be shared among them. However developing and constantly updating such custom integration application is time consuming and costly.

Several business integration products such as Microsoft BizTalk Tivoli etc. provide framework to integrate a number of business applications. However such integrations products are technically complex and because they require special expertise on the part of the end user business they increase the total cost of ownership TCO on the part of small to medium business entities using such products. Therefore there is a need to provide an application integration framework that allows for integrating several business applications in highly automated and yet cost effective manner.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used as an aid in determining the scope of the claimed subject matter.

An application integration system used to integrate a plurality of applications includes a plurality of integration adapters each communicating with an application and an integration engine including a messaging broker an integration database and a schema mapping database. The application integration system also uses a plurality of tools and components interactively working with the messaging broker. The application integration system allows integrating various applications and at the same time provides ease of change to users of such applications by providing a framework that may be used to customize and configure integrations leading to significant reduction in total cost of ownership to the businesses.

An alternate embodiment of the application integration system performs the various functions such as identifying compound document breaking down compound document into simple messages determining if any pre action needs to be applied to the simplified messages applying schema mapping to the simplified messages applying various default values to the simplified messages and applying any post action procedures to the messages outside of the messaging broker. In such an implementation an adapter proxy within the integration engine may be used to communicate the outgoing message from the integration engine to any destination application.

In an alternate embodiment of the application integration system the integration engine may also include a data synchronization module which may allow a user to synchronize data between a plurality of applications. The data synchronization tool may allow a user to synchronize two applications when first implemented using the integration system by allowing user to bring the current status of various data between such two applications in synchrony with each other.

An alternate embodiment of the application integration system includes an integration monitor that allows a user to monitor the status of data transfer between a plurality of applications. Using the integration monitor a user may monitor the status of any set of data being transferred at various stages of such transfer. For example the integration monitor allows the user to monitor when a record is being transferred from a first application to a second application whether proper set of pre action and post action procedures were applied to the record or not.

Yet another embodiment of the application integration system provides a settings administration module which allows a user to set various default settings for the use of the application integration system. Using the settings administration module a user may set various default values to be applied by the default value application module various post action to be applied to the data being transferred through the integration engine etc. Additionally using the administration module a user may add new entities for integration update mapping logic of existing entities and deploy the updated mapping logic.

Although the following text sets forth a detailed description of numerous different embodiments it should be understood that the legal scope of the description is defined by the words of the claims set forth at the end of this patent. The detailed description is to be construed as exemplary only and does not describe every possible embodiment since describing every possible embodiment would be impractical if not impossible. Numerous alternative embodiments could be implemented using either current technology or technology developed after the filing date of this patent which would still fall within the scope of the claims defining the invention.

It should also be understood that unless a term is expressly defined in this patent using the sentence As used herein the term defined term is hereby defined to mean . . . or a similar sentence there is no intent to limit the meaning of that term either expressly or by implication beyond its plain or ordinary meaning and such term should not be interpreted to be limited in scope based on any statement made in any section of this patent other than the language of the claims . To the extent that any term recited in the claims at the end of this patent is referred to in this patent in a manner consistent with a single meaning that is done for sake of clarity only so as to not confuse the reader and it is not intended that such claim term by limited by implication or otherwise to that single meaning. Finally unless a claim element is defined by reciting the word means and a function without the recital of any structure it is not intended that the scope of any claim element be interpreted based on the application of 35 U.S.C. 112 sixth paragraph.

The memory may include computer storage media in the form of volatile and or nonvolatile memory such as read only memory ROM and random access memory RAM . A basic input output system BIOS containing the basic routines that help to transfer information between elements within computer such as during start up is typically stored in ROM. RAM typically contains data and or program modules that are immediately accessible to and or presently being operated on by processing unit . The memory may also be used to store data related to one or more programs codes used by the computer and or the application integration system described herein.

The storage device may typically include removable non removable volatile nonvolatile computer storage media. By way of example only the storage device may include a hard disk drive a magnetic disk drive nonvolatile magnetic disk an optical disk drive etc. One or more of the forms stored on the memory may be populated using data stored on the storage device . The I O controller may be used by the computer to communicate with an input device which may be a keyboard a mouse etc. an output device which may be a monitor a printer etc.

Now referring to the application integration system may include an integration engine a CRM inbound adapter a CRM outbound adapter an ERP inbound adapter an ERP outbound adapter and a message transport module . The CRM application and the ERP application may send messages to the integration engine via their respective outbound adapters and and the message transport module . The integration engine may send messages to the CRM application and the ERP application via their respective inbound adapters and . The adapters may be internal to the integration engine or they may be provided as separate modules operating with their respective applications.

The integration engine includes a messaging broker a plurality of components interacting with the messaging broker a plurality of tools facilitating a user s interactions with the integration engine a schema mapping module and an integration database . The messaging broker includes a receive adapter a message box a send adapter and an orchestration module . The receive adapter may pick up messages from the message transport module and store the message in the message box . The orchestration module may pick up messages from the message box based on any predetermined criteria to process such messages. Once the message is processed according to the various components of the integration engine it is communicated to its destination application by the send adapter .

The orchestration module interacts with a compound document module a pre action module a map application module a default value application module and a post action module to process various messages received in the message box. Specifically after selecting a message to be processed the orchestration module it activates the compound document module which determines if the message is a compound document or a simple document. A compound document may contain information about various entities that may contain several simple messages. The compound document module may decide the sequence of simple messages contained in such entities to preserve referential integrity of data in the destination application. If the message is determined to be a compound document the compound document module breaks it down into a number of simple documents for further processing. For example if the compound document module determines that the message indicates that four new contacts were generated in the message generating application it breaks it down into four separate messages each representing a single contact generation message.

Subsequently the orchestration module invokes the pre action module to determine if any dependent messages need to be processed before the message being currently processed and if so determined it puts the message being currently processed into a queue before further processing. Once it is determined that a particular message is ready to be processed the orchestration module invokes the map application module . The map application module uses one more mapping schema stored in the schema mapping module to generate an outgoing message in response to the message being currently processed.

The mapping schema may be for example a dynamic link library DLL assembly file that processes a message from a message generating application to a message that need to be sent to the message destination application. For example if the incoming message indicates that a new account has been created in the message generating application such as the CRM application the mapping schema may generate a message to a destination application such as an ERP application that a new account needs to be generated and passes the parameters from the incoming message to the destination application for generating such an account.

Once a mapping schema has been applied to a message the orchestration module invokes the default value application module . The default value application module may be provided a number of default values from an administrator during the setting up of the integration engine . The default value application module applies one or more such default values to the outgoing message. Subsequently the orchestration module invokes the post action module . The post action module may use any customer logic that may need to be applied to the outgoing message where such customer logic may be provided by the administrator during the setting up of the integration engine .

The integration engine also includes a setting administration module an integration monitor and a data synchronization module . The setting administration module may be used by an administrator to set up any default values to set up any post action rules that need to be applied to an outgoing message etc. The integration monitor may be used by an administrator to monitor the functioning of the integration engine . Using the integration monitor the administrator can ensure that each of the modules are properly functioning to transform an incoming message to an outgoing message.

The data synchronization module may be used by an administrator to synchronize two applications with each other using the integration engine . For example using the data synchronization module an administrator can perform initial set up of two applications so that various data in both applications are synchronized.

The integration database may store information about the applications being integrated. For example the integration database may store information about the entities which are integrated information about what kind of messages should be determined to be compound documents etc. The integration database may also store message related information that may be used by the integration monitor . Furthermore the integration database may also store settings configured by the setting administration tool pre action information to be used by the pre action module additional schema maps used by the integration engine various default values stored in the integration database etc.

Now referring to it illustrates an alternate implementation of the application integration system of . A number of blocks in are similar to the blocks in and therefore are referred to by the same numerals as used in . One of the major differences between the implementations illustrated in is that while the integration engine as illustrated in has the messaging broker receiving an incoming message and the messaging broker performing the transformation the integration engine as illustrated in has the transformation of the incoming message performed outside the messaging broker . Thus as illustrated in the messaging broker may merely monitor the performance of the various components to . Upon completion of the transformation the adapter proxy module may communicate the outgoing message to the destination application.

The functioning of the application integration system is described below in by showing an integration of an update to the CRM application into the ERP application . However as one of ordinary skill in the art would recognize the application integration system may also be equally used to integrate an update into the ERP application into the CRM application . Similarly in an alternate implementation an update into the CRM application may be integrated simultaneously into the ERP application and one or more other applications working with the application implementation system .

At a block the CRM application recognizes that a new record has been created by a user and therefore it generates a message to the CRM outbound adapter informing of such record creation. In response to the message from the CRM application at a block the CRM outbound adapter submits a message to the message transport module . The receive adapter of the messaging broker may be constantly listening to the message transport and therefore at a block the receive adapter picks up the message from the message transport .

At a block the receive adapter stores the incoming message in the message box . Subsequently at a block the orchestration module picks up the message from the message box in accordance with any predetermined criteria and performs message transformation using the various components . The process of message transformation is described in further detail below in .

Upon completion of the message transformation at a block the transformed message is sent to the send adapter . The send adapter identifies the destination application for the transformed message and at a block the send adapter communicates the message to the inbound adapter of the destination application. In the implementations illustrated in here the destination application is the ERP application therefore at the block the transformed message is sent to the ERP inbound adapter . Note that if the integration engine was implemented as illustrated in at the block the adapter proxy would communicate the transformed message to the inbound adapter of the destination application.

Subsequently at a block the destination application undertakes any requisite action in response to the transformation message such as creation of a record updating of a record deletion of a record etc. which would result in the destination application being synchronized to the application originating the message to the integration engine .

Now referring to an exemplary flowchart illustrates functioning of a message transformation program that is undertaken at the block . At a block the orchestration module invokes the compound document module which determines if the incoming message is a compound document or a simple document if the incoming document is a compound document the compound document module breaks down the compound document into a series of simple documents.

Subsequently at a block the incoming simple document or the simple document received from the compound document module is processed by the pre action module . The pre action module determines if before transforming of a message if any pre action need to be applied to such a message or not. For example the pre action module may determine that according to specified pre action logic a dependent message need to be generated before processing of the current message.

After being processed by the pre action module at a block any transformation mapping in applied to the message by the map application module . The map application module may select a transformation mapping schema from the schema mapping module based on the message type the originating application the destination application any user specified special logic etc. and perform the transformation.

After performing the message transformation at a block the default value application module determines if any default value need to be applied to the transformed message. Such default values may be set up with the original installation of the integration engine or provided by a user using the setting administration module .

Subsequently at a block the post action module allows a user to link any custom logic to the transformed outgoing message. A user may specify such custom logic by creating his or her own assembly and linking such assembly to the post action module via the setting administration module . At this point the transformed message may be deemed ready to be sent to the destination application and is handed over to the send adapter .

As one of ordinary skill in the art would appreciate one or more sections of the application integration system may be implemented using hardware software firmware or any combination thereof. Moreover as one of ordinary skill in the art would appreciate not all the blocks of the application integration program need to be performed for a given implementation of the application integration system . As some of the blocks of the application integration program may be used primarily to increase the efficiency of the application integration program one or more such blocks may be omitted in a given implementation without affecting the functionality of the application integration system . Moreover one or more of the blocks in the application integration program may also be implemented in an alternate order without affecting the functionality of the application integration system .

Now referring to an example of a multiple application integration system . The multiple application integration system is functionally very similar to the application integration system illustrated in . Therefore various reference numerals of the multiple application integration system are same as the corresponding reference numerals of the application integration system . Specifically the multiple application integration system includes the integration engine working with a number of applications in this case the CRM application the ERP application and an HR application .

Each of the applications and may communicate with the message transport using its respective outbound adapter. Subsequently the integration engine retrieves messages from the message transport and processes them internally. The internal structure of the integration engine is discussed above with respect to . The integration engine may be adapted to determine the source of the message retrieved from the message transport and the destination of the message once it is processed. The send adapter of the integration engine may communicate the outgoing message to an inbound adapter of respective destination application.

While the multiple application integration system illustrates the integration engine working with three applications and as one of ordinary skill in the art would appreciate any alternate number of applications may be integrated in a similar manner.

Although the forgoing text sets forth a detailed description of numerous different embodiments of the invention it should be understood that the scope of the invention is defined by the words of the claims set forth at the end of this patent. The detailed description is to be construed as exemplary only and does not describe every possible embodiment of the invention because describing every possible embodiment would be impractical if not impossible. Numerous alternative embodiments could be implemented using either current technology or technology developed after the filing date of this patent which would still fall within the scope of the claims defining the invention.

Thus many modifications and variations may be made in the techniques and structures described and illustrated herein without departing from the spirit and scope of the present invention. Accordingly it should be understood that the methods and apparatus described herein are illustrative only and are not limiting upon the scope of the invention.

