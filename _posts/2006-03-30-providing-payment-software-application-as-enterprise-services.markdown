---

title: Providing payment software application as enterprise services
abstract: Methods and apparatus, including systems and computer program products, for a service architecture design that provides enterprise services having payment functionality at the level of an enterprise application. The design includes a set of service operations, process components, and optionally deployment units. Suitable business objects are also described.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08538864&OS=08538864&RS=08538864
owner: SAP AG
number: 08538864
owner_city: Walldorf
owner_country: DE
publication_date: 20060330
---
This specification relates to data processing systems implemented on computers and more particular to data processing systems providing services in the nature of web services.

Enterprise software systems are generally large and complex. Such systems can require many different components distributed across many different hardware platforms possibly in several different geographical locations. Thus the architecture of a large software application i.e. what its components are and how they fit together is an important aspect of its design for a successful implementation.

Web services are one technology for making the functionality of software applications available to other software including other applications. A web service is a standard based way of encapsulating the functionality of an application that other applications can locate and access. A service oriented architecture is a distributed software model within which all functionality is defined as independent web services. Within a service oriented architecture web services can be used in defined sequences according to the business logic to form applications that enable business processes.

This specification describes a services architecture design that provides enterprise services having payment functionality at the level of an enterprise application. Enterprise services are web services that have an enterprise level business value.

In its various aspects the invention can be embodied in systems methods and computer program products. For example a system in one embodiment implements a services architecture design that provides enterprise services having payment functionality at the level of an enterprise application. The design includes a set of service operations process components and optionally deployment units. Suitable business objects are also described.

The subject matter described in this specification can be implemented to realize one or more of the following advantages. Effective use is made of process components as units of software reuse to provide a design that can be implemented reliably in a cost effective way. Effective use is made of deployment units each of which is deployable on a separate computer hardware platform independent of every other deployment unit to provide a scalable design. Service interfaces of the process components define a pair wise interaction between pairs of process components that are in different deployment units in a scalable way.

Details of one or more implementations of the subject matter described in this specification are set forth in the accompanying drawings and in the description below. Further features aspects and advantages of the subject matter will become apparent from the description the drawings and the claims.

The elements of the architecture include the business object the process component the service operation or simply the operation the service interface the message and the deployment unit. The elements can also include process agents and reuse service components. These will be generally described below.

In one implementation the software is implemented to be deployed on an application platform that includes a foundation layer that contains all fundamental entities that can used from multiple deployment units. These entities can be process components business objects or reuse service components. A reuse service component is a piece of software that is reused in different transactions. A reuse service component is used by its defined interfaces which can be e.g. local APIs Application Programming Interfaces or service interfaces.

The architectural design is a specification of a computer software application and elements of the architectural design can be implemented to realize a software application that implements enterprise application service interfaces. The elements of the architecture are at times described in this specification as being contained or included in other elements for example a process component is described as being contained in a deployment unit. It should be understood however that such operational inclusion can be realized in a variety of ways and is not limited to a physical inclusion of the entirety of one element in another.

The architectural elements include the business object. A business object is a representation of a type of a uniquely identifiable business entity an object instance described by a structural model. Processes operate on business objects.

A business object represents a specific view on some well defined business content. A business object represents content and instances of business objects include content which a typical business user would expect and understand with little explanation. Whether an object as a type or an instance of an object is intended by the term is generally clear from the context so the distinction will be made explicitly only when necessary. Properly implemented business objects are implemented free of redundancies.

Business objects are further categorized as business process objects and master data objects. A master data object is an object that encapsulates master data i.e. data that is valid for a period of time . A business process object which is the kind of business object generally found in a process component is an object that encapsulates transactional data i.e. data that is valid for a point in time . A mass data run object is an application object that executes an algorithm for a particular mass data run. An instance of a mass data run object contains a particular set of selections and parameters. A mass data run object implements an algorithm that modifies manages and or processes a large amount of data in multiple transactions possibly but not necessarily with parallel processing. A dependent object is a business object used as a reuse part in another business object. A dependent object represents a concept that cannot stand by itself from a business point of view. Instances of dependent objects only occur in the context of a non dependent business object. A transformed object is a transformation of multiple business objects for a well defined purpose. It transforms the structure of multiple business objects into a common structure. A transformed object does not have its own persistency.

The architectural elements also include the process component. A process component is a software package that realizes a business process and generally exposes its functionality as services. The functionality contains business transactions. A process component contains one or more semantically related business objects. Any business object belongs to no more than one process component.

Process components are modular and context independent. That they are context independent means that a process component is not specific to any specific application and is reusable. The process component is the smallest most granular element of reuse in the architecture.

The architectural elements also include the operation. An operation belongs to exactly one process component. A process component generally has multiple operations. Operations can be synchronous or asynchronous corresponding to synchronous or asynchronous process agents which will be described below. An operation is the smallest separately callable function described by a set of data types used as input output and fault parameters or some combination of them serving as a signature. For convenience in supporting use of the operations supported by a system implementing elements of the design such a system can optionally include a repository of service descriptions that includes a standards based description of each of the supported service operations.

The architectural elements also include the service interface which may be referred to simply as an interface. An interface is a named group of operations. Each operation belongs to exactly one interface. An interface belongs to exactly one process component. A process component might contain multiple interfaces. In one implementation an interface contains only inbound or outbound operations but not a mixture of both. One interface can contain both synchronous and asynchronous operations. All operations of the same type either inbound or outbound which belong to the same message choreography will preferably belong to the same interface. Thus generally all outbound operations to the same other process component are in one interface.

The architectural elements also include the message. Operations transmit and receive messages. Any convenient messaging infrastructure can be used. A message is information conveyed from one process component instance to another with the expectation that activity will ensue. An operation can use multiple message types for inbound outbound or error messages. When two process components are in different deployment units invocation of an operation of one process component by the other process component is accomplished by an operation on the other process component sending a message to the first process component.

The architectural elements also include the process agent. Process agents do business processing that involves the sending or receiving of messages. Each operation will generally have at least one associated process agent. A process agent can be associated with one or more operations. Process agents can be either inbound or outbound and either synchronous or asynchronous.

Asynchronous outbound process agents are called after a business object changes e.g. after a create update or delete of a business object instance.

An output process agent will generally perform some processing of the data of the business object instance whose change triggered the event. An outbound agent triggers subsequent business process steps by sending messages using well defined outbound services to another process component which generally will be in another deployment unit or to an external system. An outbound process agent is linked to the one business object that triggers the agent but it is sent not to another business object but rather to another process component. Thus the outbound process agent can be implemented without knowledge of the exact business object design of the recipient process component.

Inbound process agents are called after a message has been received. Inbound process agents are used for the inbound part of a message based communication. An inbound process agent starts the execution of the business process step requested in a message by creating or updating one or multiple business object instances. An inbound process agent is not the agent of a business object but of its process component. An inbound process agent can act on multiple business objects in a process component.

Synchronous agents are used when a process component requires a more or less immediate response from another process component and is waiting for that response to continue its work.

Operations and process components are described in this specification in terms of process agents. However in alternative implementations process components and operations can be implemented without use of agents using other conventional techniques to perform the functions described in this specification.

The architectural elements also include the deployment unit. A deployment unit includes one or more process components and optionally one or more business objects that are deployed together on a single computer system platform. Conversely separate deployment units can be deployed on separate physical computing systems. For this reason a deployment unit boundary defines the limits of an application defined transaction i.e. a set of actions that have the ACID properties of atomicity consistency isolation and durability. To make use of database manager facilities the architecture requires that all operations of such a transaction be performed on one physical database as a consequence the processes of such a transaction must be performed by the process components of one instance of one deployment unit.

The process components of one deployment unit interact with those of another deployment unit using messages passed through one or more data communication networks or other suitable communication channels. Thus a deployment unit deployed on a platform belonging one business can interact with a deployment unit software entity deployed on a separate platform belonging to a different and unrelated business allowing for business to business communication. More than one instance of a given deployment unit can execute at the same time on the same computing system or on separate physical computing systems. This arrangement allows the functionality offered by a deployment unit to be scaled to meet demand by creating as many instances as needed.

Since interaction between deployment units is through service operations a deployment unit can be replaced by other another deployment unit as long as the new deployment unit supports the operations depended upon by other deployment units. Thus while deployment units can depend on the external interfaces of process components in other deployment units deployment units are not dependent on process component interactions i.e. interactions between process components involving their respective business objects operations interfaces and messages within other deployment units. Similarly process components that interact with other process components or external systems only through messages e.g. as sent and received by operations can also be replaced as long as the replacement supports the operations of the original.

Interactions between process components that occur only within a deployment unit are not constrained to using service operations. These can be implemented in any convenient fashion.

In contrast to a deployment unit the foundation layer does not define a limit for application defined transactions. Deployment units communicate directly with entities in the foundation layer which communication is typically not message based. The foundation layer is active in every system instance on which the application is deployed. Business objects in the foundation layer will generally be master data objects. In addition the foundation layer will include some business process objects that are used by multiple deployment units. Master data objects and business process objects that should be specific to a deployment unit are preferably assigned to their respective deployment unit.

As shown in an Expense and Reimbursement Management deployment unit includes an Expense and Reimbursement Management process component an Expense Arrangement business object and an Expense Report business object .

Additionally a Due Item Management deployment unit includes a Due Item Processing process component a Due Payment business object a Dunning business object a Debt Guarantee business object a Factoring business object a Withholding Tax Declaration business object a Due Payment Run business object a Due Clearing business object a Dunning Run business object a European Community Sales List Report business object a Trade Receivables Payables Register business object a Tax Receivables Payables Register business object a Product Tax Declaration business object and a Trade Receivables Payables Account master data object .

As shown in the implementation a Payment deployment unit includes a Payment Processing process component and a Cash Management process component .

The Payment Processing process component includes fifteen business objects a Payment Allocation business object a Cash Payment business object a Cash Transfer business object a Payment Order business object a Clearing House Payment Order business object a Bill of Exchange Submission business object a Payment Advice business object a Bank Payment Order business object an Outgoing Check business object a Bill of Exchange Payable business object a Check Deposit business object a Payment Card Payment Settlement Run business object a Payment Register business object a Payment Media Run business object a Bill of Exchange Receivable business object an Incoming Check business object and a Bank Statement business object .

The Payment Processing process component also includes five master data objects a House Bank Account master data object a Cash Storage master data object a Check Storage master data object a Clearing House Account master data object and a Bill of Exchange Book master data object .

The Cash Management process component includes a Liquidity Forecast business object and an Expected Liquidity Item business object .

As shown in a Financial Market Data Management process component in the foundation layer may also be used. The Financial Market Data Management process component includes an Exchange Rate master data object and a Bank Directory Entry master data object .

The Exchange Rate master data object is the relative value of two different currencies for a particular time span. The Exchange Rate master data object may be used to convert from one currency to another. Exchange rates can be specified by exchange rate. The Bank Directory Entry master data object represents a bank master data.

The Financial Market Data Management process component integrates all data and activities concerning Financial Market Data provided by generally accepted agencies. Financial Market data may include bank directory entries and exchange rates. The process component allows maintenance of the data manually or retrieval of the data from a generally accepted agency.

A Maintain Expense Arrangement operation can send an expense arrangement notification using a Maintain Expense Arrangement based on Personnel Change asynchronous inbound process agent to update the Expense Arrangement business object . For example the operation can send an expense arrangement to update the Expense Arrangement business object if input is received from the Personnel Administration process component . The Maintain Expense Arrangement operation is included in a Personnel Administration In interface .

The Expense Arrangement business object and the Expense Report business object can receive updated information and send the update into other components to perform further operations. As shown in multiple outbound process agents can receive information from the Expense Arrangement business object and the Expense Report business object .

A Synchronous Request Project Task Availability Information from ACBD to Project Processing synchronous outbound process agent can invoke a Request Project Task Availability Information operation . For example the outbound process agent can send a notification of an expense that applies to an existing project. The notification can be sent to the Project Processing process component . The Request Project Task Availability Information operation is included in a Project Task Availability Out interface .

A Notify of Settlement Result from Expense Report to Due Item Processing asynchronous outbound process agent can invoke a Notify of Settlement Result operation . For example the outbound process agent can send a notification of a settlement based on an expense report for updating due item processing. The notification can be sent to the Due Item Processing process component . Similarly the outbound process agent can invoke a Notify of Settlement Result Cancellation operation . For example the outbound process agent can send a notification to cancel a settlement based on an expense report previously sent to due item processing. The notification can be sent to the Due Item Processing process component . The Notify of Settlement Result operation and the Notify of Settlement Result Cancellation operation are included in a Receivables Payables Out interface .

A Notify of Settlement Result from Expense Report to Accounting asynchronous outbound process agent can invoke a Notify of Settlement Result operation . For example the outbound process agent can send a notification of a settlement result for accounting. The notification can be sent to the Accounting process component . Similarly the outbound process agent can invoke a Notify of Settlement Result Cancellation operation . For example the outbound process agent can send a notification to cancel a settlement result in accounting. The notification can be sent to the Accounting process component . The Notify of Settlement Result operation and the Notify of Settlement Result Cancellation operation are included in an Expense Accounting Out interface .

The Liquidity Forecast business object can receive updated information and send the update into other components to perform further operations. As shown in outbound process agents can receive information from the Liquidity Forecast business object .

A Synchronous Query Liquidity Status from Liquidity Forecast to Due Item Processing synchronous outbound process agent can invoke a Query Liquidity Status operation . For example the outbound process agent can synchronize liquidity forecast status information to other process components such as the Due Item Processing process component . The Query Liquidity Status operation is included in a Liquidity Status Out interface .

A Create Payment Reservation operation can send a payment reservation creation request using a Synchronous Maintain Payment Reservation synchronous inbound process agent to update the Payment Order business object . For example the operation can send a payment reservation creation request to update the Payment Order business object if input is received from the Due Item Processing process component . Similarly a Cancel Payment Reservation operation can send a payment reservation cancellation request also using the Synchronous Maintain Payment Reservation synchronous inbound process agent to update the Payment Order business object . For example the operation can send a payment reservation cancellation request to update the Payment Order business object if input is received from the Due Item Processing process component . Similarly a Synchronous Change Payment Reservation operation can send a payment reservation synchronize change request also using the Synchronous Maintain Payment Reservation synchronous inbound process agent to update the Payment Order business object . For example the operation can send a payment request synchronize change notification to update the Payment Order business object if input is received from the Due Item Processing process component . Similarly a Change Payment Reservation operation can send a payment reservation change request also using the Synchronous Maintain Payment Reservation synchronous inbound process agent to update the Payment Order business object . For example the operation can send a payment reservation change request to update the Payment Order business object if input is received from the Due Item Processing process component . The Create Payment Reservation operation the Cancel Payment Reservation operation the Synchronous Change Payment Reservation operation and the Change Payment Reservation operation are included in a Payment Request In interface .

A Create Payment Order operation can send a payment order creation request using a Maintain Payment Order asynchronous inbound process agent to update the Payment Order business object . For example the operation can send a payment order creation request to update the Payment Order business object if input is received from the Due Item Processing process component . A Cancel Payment Order operation can send a payment order cancellation request also using the Maintain Payment Order asynchronous inbound process agent to update the Payment Order business object . For example the operation can send a payment order cancellation request to update the Payment Order business object if input is received from the Due Item Processing process component . The Create Payment Order operation and the Cancel Payment Order operation are included in a Payment Request In interface .

The Payment Order business object can receive updated information and send the update into other components to perform further operations. As shown in B and D multiple outbound process agents can receive information from the Payment Order business object .

A Confirm Payment Request from Payment Order to Due Item Processing asynchronous outbound process agent can invoke a Confirm Payment Request operation . For example the outbound process agent can send a notification of a confirmed payment. The notification can be sent to the Payment Processing at Business Partner process component . The Confirm Payment Request operation is included in a Payment Request Out interface .

A Notify of Payment from Payment Order to Business Partner asynchronous outbound process agent can invoke a Notify of Payment operation . For example the outbound process agent can send a notification of a payment. The notification can be sent to the Payment Processing at Business Partner process component . The Notify of Payment operation is included in an Outgoing Payment Advicing Out interface .

A Notify of Payment from Payment Order to Accounting asynchronous outbound process agent can invoke a Notify of Payment operation . For example the outbound process agent can send a notification of a payment. The notification can be sent to the Accounting process component . The Notify of Payment from Payment Order to Accounting asynchronous outbound process agent can also invoke a Notify of Payment Cancellation operation . For example the outbound process agent can send a notification of a payment cancellation. The notification can be sent to the Accounting process component . The Notify of Payment operation and the Notify of Payment Cancellation operation are included in a Payment Accounting Out interface .

A Change Payment Allocation based on Clearing Request Confirmation operation can send a payment allocation change request using a Change Payment Allocation based on Clearing Request Confirmation asynchronous inbound process agent to update the Payment Allocation business object . For example the operation can send a payment allocation change request to update the Payment Allocation business object if input is received from the Due Item Processing process component . The Change Payment Allocation based on Clearing Request Confirmation operation is included in a Clearing In interface .

The Payment Allocation business object can receive updated information and send the update into other components to perform further operations. As shown in B and D multiple outbound process agents can receive information from the Payment Allocation business object .

A Request Clearing Maintenance from Payment Allocation to Due Item Processing asynchronous outbound process agent can invoke a Request Clearing operation . For example the outbound process agent can send a notification of a clearing request based on a payment allocation. The notification can be sent to the Due Item Processing process component . The Request Clearing Maintenance from Payment Allocation to Due Item Processing asynchronous outbound process agent can also invoke a Request Clearing Cancellation operation . For example the outbound process agent can send a notification of a clearing request cancellation based on a payment allocation. The notification can be sent to the Due Item Processing process component . The Request Clearing operation and the Request Clearing Cancellation operation are included in a Clearing Out interface .

A Notify of Payment from Payment Allocation to Accounting asynchronous outbound process agent can invoke the Notify of Payment operation . For example the outbound process agent can send a notification of a payment to accounting. The notification can be sent to the Accounting process component . The Notify of Payment from Payment Allocation to Accounting asynchronous outbound process agent can also invoke the Notify of Payment Cancellation operation . For example the outbound process agent can send a notification of a payment cancellation to accounting. The notification can be sent to the Accounting process component .

The implementation of the Payment Processing process component is further supported by the Payment Register business object although no operations or process agents involving the business object are explicitly shown in .

A Create Bank Statement operation can send a bank statement creation request using a Maintain Bank Statement asynchronous inbound process agent to update the Bank Statement business object . For example the operation can send a bank statement creation request to update the Bank Statement business object if input is received from the Bank Statement Creation at Bank process component . The Create Bank Statement operation is included in a Bank Statement Processing In interface .

The Bank Statement business object can receive updated information and send the update into other components to perform further operations. As shown in multiple outbound process agents can receive information from the Bank Statement business object .

A Notify of Payment from Bank Statement to Accounting asynchronous outbound process agent can invoke the Notify of Payment operation . For example the outbound process agent can send a notification of a payment to accounting. The notification can be sent to the Accounting process component . The Notify of Payment from Bank Statement to Accounting asynchronous outbound process agent can also invoke the Notify of Payment Cancellation operation . For example the outbound process agent can send a notification of a payment cancellation to accounting. The notification can be sent to the Accounting process component . The Notify of Payment operation and the Notify of Payment Cancellation operation are included in the Payment Accounting Out interface .

A Create Payment Advice operation can send a request to create a payment advice using a Maintain Payment Advice asynchronous inbound process agent to update the Payment Advice business object . For example the operation can send a request to create a payment advice to update the Payment Advice business object if input is received from the Payment Processing at Business Partner process component . The Create Payment Advice operation is included in an Incoming Payment Advicing In interface .

A Process Lock Box operation can send a request to process a lock box using a Process Lock Box asynchronous inbound process agent to update the Incoming Check business object . For example the operation can send a request to process a lock box to update the Incoming Check business object if input is received from the Lock Box File Creation at Provider process component . The Process Lock Box operation is included in a Lock Box Processing In interface .

The Incoming Check business object can receive updated information and send the update into other components to perform further operations. As shown in multiple outbound process agents can receive information from the Incoming Check business object .

A Notify of Payment from Incoming Check to Accounting asynchronous outbound process agent can invoke the Notify of Payment operation . For example the outbound process agent can send a notification of a payment to accounting. The notification can be sent to the Accounting process component . The Notify of Payment from Incoming Check to Accounting asynchronous outbound process agent can also invoke the Notify of Payment Cancellation operation . For example the outbound process agent can send a notification of a payment cancellation to accounting. The notification can be sent to the Accounting process component . The Notify of Payment operation and the Notify of Payment Cancellation operation are included in the Payment Accounting Out interface .

A Create Cash Payment operation can send a cash payment creation request using a Maintain Cash Payment asynchronous inbound process agent to update the Cash Payment business object . For example the operation can send a cash payment creation request to update the Cash Payment business object if input is received from the Customer Invoice Processing process component or the Due Item Processing process component . A Cancel Cash Payment operation can send a cash payment cancellation request also using the Maintain Cash Payment asynchronous inbound process agent to update the Cash Payment business object . For example the operation can send a cash payment cancellation request to update the Cash Payment business object if input is received from the Customer Invoice Processing process component or the Due Item Processing process component . The Create Cash Payment operation and the Cancel Cash Payment operation are included in a Cash Payment In interface .

The Cash Payment business object can receive updated information and send the update into other components to perform further operations. As shown in multiple outbound process agents can receive information from the Cash Payment business object .

A Notify of Payment from Cash Payment to Accounting asynchronous outbound process agent can invoke the Notify of Payment operation . For example the outbound process agent can send a notification of a payment to accounting. The notification can be sent to the Accounting process component . The Notify of Payment from Cash Payment to Accounting asynchronous outbound process agent can also invoke the Notify of Payment Cancellation operation . For example the outbound process agent can send a notification of a payment cancellation to accounting. The notification can be sent to the Accounting process component . The Notify of Payment operation and the Notify of Payment Cancellation operation are included in the Payment Accounting Out interface .

The Bill of Exchange Receivable business object can receive updated information and send the update into other components to perform further operations. As shown in multiple outbound process agents can receive information from the Bill of Exchange Receivable business object .

A Notify of Payment from Bill of Exchange Receivable to Accounting asynchronous outbound process agent can invoke the Notify of Payment operation . For example the outbound process agent can send notification of a bill of exchange receivable. The notification can be sent to the Accounting process component . The Notify of Payment from Bill of Exchange Receivable to Accounting asynchronous outbound process agent can also invoke the Notify of Payment Cancellation operation . For example the outbound process agent can send cancellation notification for a bill of exchange receivable. The notification can be sent to the Accounting process component . The Notify of Payment operation and the Notify of Payment Cancellation operation are included in the Payment Accounting Out interface .

A Change Clearing House Payment Order based on Credit Card Settlement Confirmation operation can send a notification of a credit card settlement using a Change Clearing House Payment Order based on Credit Card Settlement Confirmation asynchronous inbound process agent to update the Clearing House Payment Order business object . For example the operation can send notification of a credit card settlement to update the Clearing House Payment Order business object if input is received from the Settlement Processing at Clearing House process component . The Change Clearing House Payment Order based on Credit Card Settlement Confirmation operation is included in a Credit Card Settling In interface .

The Clearing House Payment Order business object can receive updated information and send the update into other components to perform further operations. As shown in multiple outbound process agents can receive information from the Clearing House Payment Order business object .

A Notify of Payment from Credit Card Settlement to Accounting asynchronous outbound process agent can invoke the Notify of Payment operation . For example the outbound process agent can send a notification of a credit card payment. The notification can be sent to the Accounting process component . The Notify of Payment from Credit Card Settlement to Accounting asynchronous outbound process agent can also invoke the Notify of Payment Cancellation operation . For example the outbound process agent can send a cancellation notification of a credit card payment. The notification can be sent to the Accounting process component .

A Request Credit Card Settlement from Clearing House Payment Order to Clearing House asynchronous outbound process agent can invoke a Request Credit Card Settlement operation . For example the outbound process agent can send a notification of a credit card payment. The notification can be sent to the Settlement Processing at Clearing House process component . The Request Credit Card Settlement operation is included in a Credit Card Settling Out interface .

The Check Deposit business object can receive updated information and send the update into other components to perform further operations. As shown in multiple outbound process agents can receive information from the Check Deposit business object .

A Notify of Payment from Check Deposit to Accounting asynchronous outbound process agent can invoke the Notify of Payment operation . For example the outbound process agent can send a notification of check deposit. The notification can be sent to the Accounting process component . The Notify of Payment from Check Deposit to Accounting asynchronous outbound process agent can also invoke the Notify of Payment Cancellation operation . For example the outbound process agent can send a cancellation notification of a check deposit. The notification can be sent to the Accounting process component .

A Request Check Deposit from House Bank asynchronous outbound process agent can invoke a Request Check Deposit operation . For example the outbound process agent can send a notification of a check deposit. The notification can be sent to the Payment Order Processing at House Bank process component . The Request Check Deposit operation is included in a Check Depositing Out interface .

The Bill of Exchange Submission business object can receive updated information and send the update into other components to perform further operations. As shown in multiple outbound process agents can receive information from the Bill of Exchange Submission business object .

A Notify of Payment from Bill of Exchange Submission to Accounting asynchronous outbound process agent can invoke the Notify of Payment operation . For example the outbound process agent can send a notification of a bill of exchange submission. The notification can be sent to the Accounting process component . The Notify of Payment from Bill of Exchange Submission to Accounting asynchronous outbound process agent can also invoke the Notify of Payment Cancellation operation . For example the outbound process agent can send a cancellation notification of a bill of exchange submission. The notification can be sent to the Accounting process component .

A Request Bill of Exchange Submission to House Bank asynchronous outbound process agent can invoke a Request Bill of Exchange Submission operation . For example the outbound process agent can send a notification of a bill of exchange submission. The notification can be sent to the Payment Order Processing at House Bank process component . The Request Bill of Exchange Submission operation is included in a Bill of Exchange Submitting Out interface .

The Bank Payment Order business object can receive updated information and send the update into other components to perform further operations. As shown in multiple outbound process agents can receive information from the Bank Payment Order business object .

A Request Payment Order from Bank Payment Order to House Bank asynchronous outbound process agent can invoke a Request Payment Order operation . For example the outbound process agent can send a notification of a bank payment order. The notification can be sent to the Payment Order Processing at House Bank process component . A Request File Based Payment Order from Bank Payment Order to House Bank asynchronous outbound process agent can invoke a Request File Based Payment Order operation . For example the outbound process agent can send a request for a file based payment order. The notification can be sent to the Payment Order Processing at House Bank process component . The Request Payment Order operation and the Request File Based Payment Order operation are included in a Payment Ordering Out interface .

The Bill of Exchange Payable business object can receive updated information and send the update into other components to perform further operations. As shown in multiple outbound process agents can receive information from the Bill of Exchange Payable business object .

A Request Payment Order from Bill of Exchange Payable to House Bank asynchronous outbound process agent can invoke the Request Payment Order operation . For example the outbound process agent can send a notification of the bill of exchange payable. The notification can be sent to the Payment Order Processing at House Bank process component . A Request File Based Payment Order from Bill of Exchange Payable to House Bank asynchronous outbound process agent can invoke a Request File Based Payment Order operation . For example the outbound process agent can send a request for a file based payment order. The notification can be sent to the Payment Order Processing at House Bank process component .

The Bill of Exchange Receivable business object can receive updated information and send the update into other components to perform further operations. As shown in multiple outbound process agents can receive information from the Bill of Exchange Receivable business object .

A Request Payment Order from Bill of Exchange Receivable to House Bank asynchronous outbound process agent can invoke the Request Payment Order operation . For example the outbound process agent can send a notification of a bill of exchange receivable. The notification can be sent to the Payment Order Processing at House Bank process component . A Request File Based Payment Order from Bill of Exchange Receivable to House Bank asynchronous outbound process agent can invoke a Request File Based Payment Order operation . For example the outbound process agent can send a request for a file based payment order. The notification can be sent to the Payment Order Processing at House Bank process component .

The Outgoing Check business object can receive updated information and send the update into other components to perform further operations. As shown in multiple outbound process agents can receive information from the Outgoing Check business object .

A Request Payment Order from Outgoing Check to House Bank asynchronous outbound process agent can invoke the Request Payment Order operation . For example the outbound process agent can send a notification of an outgoing check. The notification can be sent to the Payment Order Processing at House Bank process component . A Request File Based Payment Order from Outgoing Check to House Bank asynchronous outbound process agent can invoke a Request File Based Payment Order operation . For example the outbound process agent can send a request for a file based payment order. The notification can be sent to the Payment Order Processing at House Bank process component .

A Create Receivables Payables operation can send a receivables or payables creation request using a Maintain Trade and Tax Receivables Payables asynchronous inbound process agent to update three business objects the Trade Receivables Payables Register business object the Tax Receivables Payables Register business object and the Due Clearing business object . For example the operation can send a receivables or payables creation request to update to the business objects and if input is received from any of several process components the Supplier Invoice Processing process component the Customer Invoice Processing process component or the Expense and Reimbursement Management process component .

Similarly a Cancel Receivables Payables operation can send a receivables or payables cancellation request also using the Maintain Trade and Tax Receivables Payables asynchronous inbound process agent to update three business objects the Trade Receivables Payables Register business object the Tax Receivables Payables Register business object and the Due Clearing business object . For example the operation can send a receivables or payables cancellation request to update the business objects and if input is received from any of several process components the Supplier Invoice Processing process component the Customer Invoice Processing process component or the Expense and Reimbursement Management process component .

The Create Receivables Payables operation and the Cancel Receivables Payables operation are included in a Receivables Payables In interface .

A Get Liquidity Status operation can send a liquidity status query using a Synchronous Get Liquidity Status from Due Item Processing synchronous inbound process agent to query the Trade Receivables Payables Register business object and the Tax Receivables Payables Register business object . For example the operation can send a liquidity status query to the business objects and if input is received from the Cash Management process component . The Get Liquidity Status operation is included in a Liquidity Status In interface .

The Trade Receivables Payables Register business object can receive updated information and send the update into other components to perform further operations. As shown in multiple outbound process agents can receive information from the Trade Receivables Payables Register business object .

A Notify of European Community Sales List Report to Tax Authority asynchronous outbound process agent can invoke a Notify of European Community Sales List Report operation . For example the outbound process agent can send a notification of a European community sales list report. The notification can be sent to the Processing of European Community Sales List Report at Tax Authority process component . The Notify of European Community Sales List Report operation is included in a European Community Sales List Report Out interface .

A Create Clearing operation can send a create clearing request using a Maintain Clearing asynchronous inbound process agent to update the Product Tax Declaration business object and the Due Payment business object . For example the operation can send a create clearing request to update the Product Tax Declaration business object and the Due Payment business object if input is received from the Payment Processing process component . A Cancel Clearing operation can send a cancel clearing request also using the Maintain Clearing asynchronous inbound process agent to update the Product Tax Declaration business object and the Due Payment business object . For example the operation can send a cancel clearing request to update the Product Tax Declaration business object and the Due Payment business object if input is received from the Payment Processing process component . The Create Clearing operation and the Cancel Clearing operation are included in a Clearing In interface .

A Change Payment based on Payment Request Confirmation operation can send a payment change request using a Change Due Payment based on Payment Request Confirmation asynchronous inbound process agent to update the Due Payment business object . For example the operation can send a payment change request to update the Due Payment business object if input is received from the Payment Processing process component . The Change Payment based on Payment Request Confirmation operation is included in a Payment Request In interface .

The Product Tax Declaration business object can receive updated information and send the update into other components to perform further operations. As shown in D and E multiple outbound process agents can receive information from the Product Tax Declaration business object .

A Notify of Product Tax Declaration to Authority asynchronous outbound process agent can invoke a Notify of Product Tax Declaration operation . For example the outbound process agent can send a notification of a product tax declaration. The notification can be sent to the Processing of Product Tax Declaration at Tax Authority process component . The Notify of Product Tax Declaration operation is included in a Product Tax Declaration Out interface .

A Request Payment from Product Tax Declaration to Payment Processing asynchronous outbound process agent can invoke a Request Payment Cancellation operation . For example the outbound process agent can send a notification of a payment cancellation request. The notification can be sent to the Payment Processing process component . The Request Payment Cancellation operation is included in a Payment Request Out interface .

A Confirm Clearing from Product Tax Declaration to Payment Processing asynchronous outbound process agent can invoke a Confirm Clearing operation . For example the outbound process agent can send a notification of clearing confirmation based on a product tax declaration. The notification can be sent to the Payment Processing process component . The Confirm Clearing operation is included in a Clearing Out interface .

A Notify of Payment from Product Tax Declaration to Accounting asynchronous outbound process agent can invoke a Notify of Payment operation . For example the outbound process agent can send a notification of a payment. The notification can be sent to the Accounting process component . The Notify of Payment from Product Tax Declaration to Accounting asynchronous outbound process agent can also invoke a Notify of Payment Cancellation operation . For example the outbound process agent can send a notification of a cancelled payment. The notification can be sent to the Accounting process component . The Notify of Payment operation and the Notify of Payment Cancellation operation are included in a Payment Accounting Out interface .

The Due Clearing business object can receive updated information and send the update into other components to perform further operations. As shown in multiple outbound process agents can receive information from the Due Clearing business object .

A Notify of Dunning Invoice to Accounting asynchronous outbound process agent can invoke a Notify of Dunning Invoice operation . For example the outbound process agent can send a notification of a dunning invoice. The notification can be sent to the Accounting process component . The Notify of Dunning Invoice to Accounting asynchronous outbound process agent can also invoke a Notify of Dunning Invoice Cancellation operation . For example the outbound process agent can send a cancellation notification of a dunning invoice. The notification can be sent to the Accounting process component . The Notify of Dunning Invoice operation and the Notify of Dunning Invoice Cancellation operation are included in a Dunning Invoice Accounting Out interface .

A Notify of Payment from Due Clearing to Accounting asynchronous outbound process agent can invoke the Notify of Payment operation . For example the outbound process agent can send a notification of a cleared payment. The notification can be sent to the Accounting process component . The Notify of Payment from Due Clearing to Accounting asynchronous outbound process agent can also invoke the Notify of Payment Cancellation operation . For example the outbound process agent can send a notification of a cancelled payment. The notification can be sent to the Accounting process component .

The Due Payment business object can receive updated information and send the update into other components to perform further operations. As shown in multiple outbound process agents can receive information from the Due Payment business object .

A Notify of Payment from Due Payment to Accounting asynchronous outbound process agent can invoke the Notify of Payment operation . For example the outbound process agent can send a notification of a payment received in due processing. The notification can be sent to the Accounting process component . The Notify of Payment from Due Payment to Accounting asynchronous outbound process agent can also invoke the Notify of Payment Cancellation operation . For example the outbound process agent can send a notification of a cancelled payment. The notification can be sent to the Accounting process component .

A Request Payment from Due Payment to Payment Processing asynchronous outbound process agent can invoke a Request Payment operation . For example the outbound process agent can send a request for a payment. The notification can be sent to the Payment Processing process component . The Request Payment from Due Payment to Payment Processing asynchronous outbound process agent can also invoke the Request Payment Cancellation operation . For example the outbound process agent can send a notification of a payment cancellation request. The notification can be sent to the Payment Processing process component . The Request Payment operation and the Request Payment Cancellation operation are included in the Payment Request Out interface .

A Confirm Clearing from Due Payment to Payment Processing asynchronous outbound process agent can invoke the Confirm Clearing operation . For example the outbound process agent can send a notification of a payment that cleared to due payment. The notification can be sent to the Payment Processing process component . The Confirm Clearing operation is included in the Clearing Out interface .

A Notify of Cash Payment from Due Payment to Payment Processing asynchronous outbound process agent can invoke the Notify of Cash Payment operation . For example the outbound process agent can send a notification of a cash payment that cleared to due payment. The notification can be sent to the Payment Processing process component . The Notify of Cash Payment from Due Payment to Payment Processing asynchronous outbound process agent can also invoke the Request Cash Payment Cancellation operation . For example the outbound process agent can send a request to cancel a cash payment. The request can be sent to the Payment Processing process component . The Notify of Cash Payment operation and the Request Cash Payment Cancellation operation are included in the Cash Payment Out interface .

A Synchronous Request Payment Reservation from Due Payment to Payment Processing synchronous outbound process agent can invoke a Request Payment Information and Provisional Payment Reservation operation . For example the outbound process agent can send a request for payment information and a provisional payment reservation. The request can be sent to the Payment Processing process component .

The Synchronous Request Payment Reservation from Due Payment to Payment Processing synchronous outbound process agent can also invoke a Notify of Provisional Payment Reservation Deletion operation . For example the outbound process agent can send a notification of a provisional payment reservation deletion. The notification can be sent to the Payment Processing process component .

The Synchronous Request Payment Reservation from Due Payment to Payment Processing synchronous outbound process agent can also invoke a Request Payment Information and Provisional Payment Reservation Change operation . For example the outbound process agent can send a request for payment information and a provisional payment reservation change. The request can be sent to the Payment Processing process component .

The Synchronous Request Payment Reservation from Due Payment to Payment Processing synchronous outbound process agent can also invoke a Notify of Provisional Payment Reservation Change Deletion operation . For example the outbound process agent can send a notification of a provisional payment reservation change deletion. The notification can be sent to the Payment Processing process component .

The Request Payment Information and Provisional Payment Reservation operation the Notify of Provisional Payment Reservation Deletion operation the Request Payment Information and Provisional Payment Reservation Change operation and the Notify of Provisional Payment Reservation Change Deletion operation are included in a Payment Request Out interface .

The implementation of the Due Item Processing process component is further supported by several business objects although no operations or process agents involving the business object are explicitly shown in . These business objects are the Withholding Tax Declaration business object and the Trade Receivables Payables Account business object .

A Maintain Bank Directory Entry operation can send a bank directory entry request using a Maintain Bank Directory Entry asynchronous inbound process agent to update the Bank Directory Entry business object . For example the operation can send a bank directory entry request to update the Bank Directory Entry business object if input is received from the External Bank Directory Management process component . The Maintain Bank Directory Entry operation is included in a Bank Directory Transmission In interface .

A Request Bank Directory Transmission asynchronous outbound process agent can invoke a Request Bank Directory Transmission operation . For example the outbound process agent can send a notification of an entry that was made in the bank. The notification can be sent to the External Bank Directory Management process component . The Request Bank Directory Transmission operation is included in a Bank Directory Transmission Requesting Out interface .

The subject matter described in this specification and all of the functional operations described in this specification can be implemented in digital electronic circuitry or in computer software firmware or hardware including the structural means disclosed in this specification and structural equivalents thereof or in combinations of them. The subject matter described in this specification can be implemented as one or more computer program products i.e. one or more computer programs tangibly embodied in an information carrier e.g. in a machine readable storage device or in a propagated signal for execution by or to control the operation of data processing apparatus e.g. a programmable processor a computer or multiple computers. A computer program also known as a program software software application or code can be written in any form of programming language including compiled or interpreted languages and it can be deployed in any form including as a stand alone program or as a module component subroutine or other unit suitable for use in a computing environment. A computer program does not necessarily correspond to a file. A program can be stored in a portion of a file that holds other programs or data in a single file dedicated to the program in question or in multiple coordinated files e.g. files that store one or more modules sub programs or portions of code . A computer program can be deployed to be executed on one computer or on multiple computers at one site or distributed across multiple sites and interconnected by a communication network.

The processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform functions by operating on input data and generating output. The processes and logic flows can also be performed by and apparatus can also be implemented as special purpose logic circuitry e.g. an FPGA field programmable gate array or an ASIC application specific integrated circuit .

Processors suitable for the execution of a computer program include by way of example both general and special purpose microprocessors and any one or more processors of any kind of digital computer. Generally a processor will receive instructions and data from a read only memory or a random access memory or both. The essential elements of a computer are a processor for executing instructions and one or more memory devices for storing instructions and data. Generally a computer will also include or be operatively coupled to receive data from or transfer data to or both one or more mass storage devices for storing data e.g. magnetic magneto optical disks or optical disks. Information carriers suitable for embodying computer program instructions and data include all forms of non volatile memory including by way of example semiconductor memory devices e.g. EPROM EEPROM and flash memory devices magnetic disks e.g. internal hard disks or removable disks magneto optical disks and CD ROM and DVD ROM disks. The processor and the memory can be supplemented by or incorporated in special purpose logic circuitry.

To provide for interaction with a user the subject matter described in this specification can be implemented on a computer having a display device e.g. a CRT cathode ray tube or LCD liquid crystal display monitor for displaying information to the user and a keyboard and a pointing device e.g. a mouse or a trackball by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well for example feedback provided to the user can be any form of sensory feedback e.g. visual feedback auditory feedback or tactile feedback and input from the user can be received in any form including acoustic speech or tactile input.

The subject matter described in this specification can be implemented in a computing system that includes a back end component e.g. a data server a middleware component e.g. an application server or a front end component e.g. a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described herein or any combination of such back end middleware and front end components. The components of the system can be interconnected by any form or medium of digital data communication e.g. a communication network. Examples of communication networks include a local area network LAN and a wide area network WAN e.g. the Internet.

The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client server relationship to each other.

While this specification contains many specifics these should not be construed as limitations on the scope of the invention or of what may be claimed but rather as an exemplification of preferred embodiments of the invention. Certain features that are described in this specification in the context of separate embodiments may also be provided in combination in a single embodiment. Conversely various features that are described in the context of a single embodiment may also be provided in multiple embodiments separately or in any suitable subcombination. Moreover although features may be described above as acting in certain combinations and even initially claimed as such one or more features from a claimed combination can in some cases be excised from the combination and the claimed combination may be directed to a subcombination or variation of a subcombination.

The subject matter has been described in terms of particular variations but other variations can be implemented and are within the scope of the following claims. For example the actions recited in the claims can be performed in a different order and still achieve desirable results. As one example the processes depicted in the accompanying figures do not necessarily require the particular order shown or sequential order to achieve desirable results. In certain implementations multitasking and parallel processing may be advantageous. Other variations are within the scope of the following claims.

