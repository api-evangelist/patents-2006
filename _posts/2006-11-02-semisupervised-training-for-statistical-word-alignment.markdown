---

title: Semi-supervised training for statistical word alignment
abstract: A system and method for aligning words in parallel segments is provided. A first probability distribution of word alignments within a first corpus comprising unaligned word-level parallel segments according to a model estimate is calculated. The model estimate is modified according to the first probability distribution. One or more sub-models associated with the modified model estimate are discriminatively re-ranked according to word-level annotated parallel segments. A second probability distribution of the word alignments within the first corpus is calculated according to the re-ranked sub-models associated with the modified model estimate.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08433556&OS=08433556&RS=08433556
owner: University of Southern California
number: 08433556
owner_city: Los Angeles
owner_country: US
publication_date: 20061102
---
The research and development described in this application were supported by the GALE program of the Defense Advanced Research Projects Agency DARPA Contract No. HR0011 06 C 0022. This invention was made with government support under Contract No. N66001 00 1 8914 awarded by the Space and Naval Warfare Systems Command. The U.S. government has certain rights in the claimed inventions.

The present invention relates generally to statistical machine translation and more particularly to systems and methods for statistical word alignment.

Word alignment is used in statistical machine translation SMT to generate improved translations of documents in two or more foreign languages. SMT may align sentences to extract parallel sentences from parallel documents. After determining sentence alignments SMT typically includes further aligning words or fragments of the sentences. Conventionally word alignment in SMT is performed to determine whether a specific word or phrase in one language e.g. English corresponds to a specific word or phrase in another language e.g. French . More specifically word alignment is a process in which a large collection of parallel documents is used to automatically identify word to word or word to phrase correspondences.

The Expectation Maximization E M algorithm is commonly used to perform a word alignment in SMT. In the expectation step of the E M algorithm the hypothetical dictionary is used to induce word alignments in a large corpus containing millions of sentences. Based on the induced word alignments the hypothetical dictionary is modified in the maximization step. The modified dictionary is then used to induce better word alignments by repeating the expectation step. This process is repeated as needed until the hypothetical dictionary remains substantially unmodified from cycle to cycle.

More recently SMT performs an additional step after the E M Algorithm is completed. The additional step uses a small corpus comprising manual annotations to indicate word alignments. The additional step estimates another dictionary based on the small corpus and combines this dictionary with the hypothetical dictionary generated by the E M Algorithm. The combined dictionary is then used to correct word alignments in the large corpus in one final step. However further improvements to increase the accuracy of SMT are still desired by users of SMT.

The present invention provides a system and method for aligning words in parallel segments. According to one method a first probability distribution of word alignments within a first corpus comprising unaligned parallel segments according to a model estimate is calculated. The model estimate used to generate the word alignments is modified according to the first probability distribution of the word alignments. One or more sub models associated with the modified model estimate are discriminatively re ranked according to word level annotated parallel segments. A second probability distribution of the word alignments within the first corpus is calculated according to the re ranked sub models associated with the modified model estimate.

A system and method for word alignment in statistical machine translation SMT is provided. The system and method compares parallel segments to produce word alignments indicating a translational correspondence between the words in each of the parallel segments. Segments may comprise parallel text of any length such as documents sections of documents paragraphs sentences or sentence fragments.

A probability distribution of word alignments in a first corpus of parallel segments may be calculated according to a first model estimate to create a modified model estimate. The modified model estimate may comprise an N best list where N is a constant indicating the number of sub models comprising the list. The N best list comprises a list of the top N hypothesized word alignments according to the model estimate for each parallel segment pair. The N best list may be used to approximate of the full probability distribution of word alignments for these segment pairs according to the model estimate.

A second N best list based on word alignments in annotated parallel documents may be used to discriminatively re weight or re rank one or more sub models within the modified model estimate. If the N best list associated with the modified model estimate contains sub models that are different from an N best list associated with the first model estimate the word alignments have not converged. A second probability distribution within the first corpus may be calculated according to the modified model estimate to generate a third model estimate.

In operation the client accesses the first corpus and or the second corpus in the word alignment server via the network . The word alignment engine processes the first corpus and the second corpus to generate word alignments in the first corpus. Additionally the word alignment server may receive generated word alignments from the client via the network .

The first corpus may comprise parallel segments. Parallel segments are translations of at least one segment in at least two languages. The parallel segments include sentence pairs. Sentence pairs may comprise one or more sentences in a first translation that correspond to one or more sentences in a second translation. The first translation and or the second translation however do not include word alignments according to some embodiments. Word alignments comprise annotations indicating a correspondence of words and or phrases in one language to words and or phrases in another language. The first corpus may comprise millions of sentences.

The model estimate may comprise one or more sub models. The sub models can be utilized to calculate a probability of a word to word alignment or a word to phrase alignment. For example a sub model may indicate that if the first four letters of words in two translations match a word alignment between these words is more probable than other possible word alignments. A second sub model may indicate that the left most words in a sentence pair are likely to result in an accurate word alignment.

The word alignments are based on a linear logarithmic model according to exemplary embodiments. The linear logarithmic model may include at least five sub models h e.g. IBM Model 4 for example. Each sub model may have an associated weight . The probability p of a word alignment a may be represented as 

After calculating the probability distribution throughout the first corpus the probability module modifies the model estimate according to the probability distribution. In alternative embodiments the probability module creates a new model estimate based on the probability distribution of the model estimate. For example the probability module may add or delete sub models. The probability module may additionally alter various parameters within the sub models. For example a modified sub model may indicate that if the first five letters rather than the first four letters of words in two translations match a word alignment between these words is more probable than other possible word alignments. Further a second sub model may indicate that the second from left most words rather than the left most words in a sentence pair are likely to result in an accurate word alignment.

The probability module uses the sub models in the model estimate to evaluate the suitability of a hypothesized alignment. The probability module may for example compare a suitability of a first sub model to a suitability of a second sub model for each hypothesized word level alignment. The probability module may additionally determine an ability of the sub models to discriminate between hypothesized word alignments.

The probability module may modify the model estimate by adjusting a weighting factor of each of the sub models within the model estimate. A weighting factor may comprise a multiplier indicating the likelihood that the sub model will yield an accurate translation. For example a first sub model having a weighting factor of 0.85 is more likely to be accurate than a second sub model having a weighting factor of 0.35. Because the weighting factor of the first sub model is greater the first sub model is more favored during a second calculation of the probability distribution based on the modified model estimate.

The model estimate can also be modified by generating new sub models removing indiscriminative sub models and or combining sub models. For example an indiscriminative sub model may comprise a sub model that has a low probability of generating an accurate word alignment. For example a sub model that is indiscriminative may specify that a first word in a first translation is likely to correspond to the last word of the source.

If the model estimate has been modified the discrimination module performs a discriminative process. The discriminative process steers the modification of the model estimate or corrects a new model estimate. To steer the model estimate the discrimination module generates an N best list comprising sub models and sub model weights according to word alignment annotations within a second corpus.

The second corpus comprises a smaller set of parallel segments translated into the same two or more languages as the first corpus. The second corpus may comprise a section of the first corpus or the second corpus may be completely separate from the first corpus. The second corpus may include approximately one hundred to ten thousand sentence pairs. However any number of sentence pairs may be included in the second corpus according to some embodiments.

The sentence pairs in the second corpus include annotations to indicate word to word alignments and word to phrase alignments within each of the sentence pairs. The annotations may be generated by a human translator. The word alignments may be referred to as gold standard word alignments. Alternatively the annotations may be initially generated using SMT or any other automated process and corrected by a human translator.

Based on the annotations in the small corpus the discrimination model creates an N best list where N is a constant indicating the size of the list. The N best list includes a specified number of sub models that are each associated with a weighting factor based on the gold standard word alignments discussed herein. After generating a list of sub models based on the annotations within the second corpus the discrimination module removes sub models or word alignments that have a weighting factor that is less than the weighting factor of N number of sub models. For example the constant N may be 128. The N best list includes the 128 most heavily weighted sub models derived from the annotations in the second corpus. In alternative implementations the probability module may generate the N best list.

The discrimination module may check whether the model estimate generated based on the first corpus has converged with the model estimate based on the second corpus. If these model estimates have converged such that there are no new N best entries in the N best list the word alignment is complete.

If there are new N best entries the discrimination module then enriches the model estimate generated by the probability module based on the first corpus with the N best list based on the second corpus. The enrichment adds the weighting factors in the N best list based on the second corpus to the weighting factors in the model estimate based on the first corpus compares the manual alignments to the hypothesized alignments and weights one or more sub models within the model estimate based on the first corpus according to the comparison. For example a sub model associated with a weighting factor of 0.15 in the model estimate may have a weighting factor of 0.45 in the N best list. As a result of the enrichment the sub model may be re weighted to a weight of 0.30. Having a higher weight the sub model is more likely to generate word alignments in a subsequent iteration. In this example the weights are evenly weighted. However in other embodiments the weighting factor in the model estimate may be greater than the weight of the sub model in the N best list and vice versa.

To re weight the model estimate the discrimination module compares the gold standard word alignments to hypothesized word alignments in the first corpus. The hypothesized word alignments in the first corpus are the word alignments generated according to the model estimate. The discrimination module compares the weighting factor of each sub model to randomly generated weighting factors. In one implementation the discrimination module generates 999 weighting factors. To determine the best weighting factor for each sub model in the model estimate an error for each weighting factor is calculated.

A one dimensional error minimization is performed on the selected weighting factor. The one dimensional error minimization is the weight that results in increased error reduction if the weights associated with the other sub models are held constant. The one dimensional error minimization is repeated until there is no sub model weight that can be modified to reduce error. The weighting factor with the lowest error is selected and a corresponding component of the sub model weight vector may be modified. The discrimination module repeats the discriminative step until substantially all of the hypotheses in the N best list are in the model estimate. Other error minimization methods such as Powell s method that are apparent to one skilled in the art may be used.

The error module determines whether the model estimate has converged with the N best list. The model estimate has converged if the error was not decreased from a previous iteration. If there is no convergence the error module instructs the probability module to perform another iteration comprising calculating a second probability distribution creating a second modified model estimate and or performing the discriminative step. The error module may additionally transmit a command to display and or record the word alignments generated by the model estimate or a final version of the model estimate. The F measure is used to measure the error of the word alignments using the value 1 F measure. The F measure may be calculated as 

In alternative embodiments the error module may determine a finite number of iterations to perform. In these embodiments the error module may not calculate the F measure. For example if the model estimate typically converges at iteration number ten the error module may perform subsequent word alignments according to a default of ten iterations. Although various modules are illustrated as comprising the statistical word alignment engine in fewer or more modules may comprise the statistical word alignment engine and still fall within the scope of various embodiments.

Step includes initializing the model estimate that induces word alignments in the first corpus. The initial model estimate may comprise an assumption that all translations are equally probable. In alternative embodiments the initial model estimate may comprise one or more default sub models associated with one or more default weightings.

Step includes inducing word alignments in the first corpus. The word alignments are induced according to the sub models within the model estimate. In the initial inducing step using the initial model estimate the sub models may be equally weighted.

Step includes calculating the probability distribution of all or substantially all of the induced word alignments in the first corpus. The probability distribution indicates the likelihood of each induced word alignment according to the model estimate. Based on the probability distribution associated with the first corpus the sub models having a higher probability will be assigned a higher weighting factor than the less probable sub models in the model estimate.

In step according to the probability distribution of the first corpus a new model estimate replaces the former model estimate. In some embodiments the former model estimate may be simply modified by for example changing a weighting factor of a sub model within the model estimate. In some embodiments Viterbi training may approximate the hypothesized word alignments to update the new model estimate using an assumed word alignment.

Step includes determining whether the hypothesized word alignments in the first corpus have converged. Convergence occurs if there are no new N best entries in the modified model estimate. If the hypothesized word alignments have not converged the process continues to step . In alternative embodiments step may comprise determining whether a default number of iterations have been performed.

In step the sub models within the model estimate are re ranked using the small corpus of annotated parallel segments. The sub models are re ranked by modifying the weighting factors associated with each sub model. This process is discussed in greater detail in connection with and .

If the word alignments have converged in step or if the default number of iterations has been performed the process continues to step . Step includes recording the word alignments in the first corpus. The word alignments may be recorded in an electronic media such as ROM a hard disk or similar media.

In step manual word alignments within the second corpus are added to the hypothesized word alignments within the first corpus according to sub model weighting factors. More specifically the model estimate derived from the first corpus comprises at least one sub model that is associated with a weighting factor. The sub models in the N best list associated with the first corpus correspond to one or more weighted sub models within an N best list associated with the second corpus. The weighting factor of each sub model within the N best list associated with the first corpus is processed with the weighting factor in the N best list associated with the second corpus to generate an updated weighting factor.

In step to compare the manual word alignments in the second corpus to the hypothesized word alignments in the first corpus the updated weighting factor for each sub model derived using the first corpus is compared to randomly generated weighting factors. The weighting factor that generates the least amount of error is selected. By comparing the weighting factors of the sub models the accuracy of the word alignments generated by those sub models is also compared. If the weighting factors associated with the sub models have a smaller amount of error the model estimate associated with the first corpus will produce more accurate word alignments because the model estimate associated with the first corpus is more likely to apply an accurate sub model when performing each word alignment within the first corpus.

In step weighting the one or more sub models according to the comparison the selected weighting factor is further refined using a one dimensional error minimization until there is no further error reduction. An example of a one dimensional error minimization algorithm includes calculating a piecewise constant function which evaluates the error of the word alignments which are selected by the best word alignment equation if all weights associated with the sub models remain constant except for the weight of the sub model on which the error is evaluated.

In step determining whether to change a weight associated with a sub model to reduce error a weighting factor associated with one or more of the sub models may be selected. The selected weighting factors are modified to reduce overall error generated by the N best list associated with the first corpus. If no further error reduction is possible by adjusting the weighting factors the process returns to step depicted in .

In step re weighting word alignment sub models to steer model estimate associated with the first corpus the weighting factor is associated with the sub model in the model estimate is modified to decrease word alignment error in the first corpus. In some embodiments a component of the sub model weight may be updated. The new weighting factor for each sub model within the model estimate re ranks the model estimate. If the weighting factor is selected the process returns to step to further refine the new weighting factor until there is substantially no further error reduction.

While various embodiments have been described above it should be understood that they have been presented by way of example only and not limitation. For example any of the elements associated with the statistical word alignment engine may employ any of the desired functionality set forth hereinabove. Thus the breadth and scope of a preferred embodiment should not be limited by any of the above described exemplary embodiments.

