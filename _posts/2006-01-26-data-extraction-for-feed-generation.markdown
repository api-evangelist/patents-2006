---

title: Data extraction for feed generation
abstract: A system (and a method) automatically generates a feed from structured or unstructured data. The system identifies a resource having two or more data elements. The resource is matched with a pre-defined template. The pre-defined template is structured for a feed and includes a plurality of fields. The system extracts data elements from the two or more data elements of the resources. Each extracted data element corresponds to a field or the plurality of fields in the pre-defined template. Each extracted data element is then merged into the corresponding field or the plurality of fields in the pre-defined template to generate the feed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08661001&OS=08661001&RS=08661001
owner: Simplefeed, Inc.
number: 08661001
owner_city: Los Altos
owner_country: US
publication_date: 20060126
---
This application is a continuation in part of and claims a benefit of U.S. patent application Ser. No. 11 129 634 filed on May 13 2005 now U.S. Pat. No. 8 065 383 and titled Customizable and Measurable Information Feeds for Personalized Communication which claims a benefit of and priority under 35 USC 119 e to U.S. Provisional Patent Application No. 60 572 174 filed May 17 2004 and titled System and Method for Providing Customizable and Measurable Information Feeds to Constituents and U.S. Provisional Patent Application No. 60 615 005 filed Sep. 30 2004 and titled System and Method for Providing Personalized XML Syndication Feeds in Conjunction with Auto Discovery and Continuously Updating the Personalized XML Syndication Feeds for Each Subscriber the contents of each which is herein incorporated by reference.

This invention relates generally to information extraction and distribution and more particularly to the extraction and distribution of customizable and measurable information feeds to users.

Many entities spend millions of dollars in communicating with their constituencies. These constituencies may represent current past and potential customers employees shareholders and business partners. However it is a challenging task to effectively communicate with such constituencies. For example it is difficult for a business to deliver the right marketing message to the right customer at the right time.

Typically entities use telephone face to face meetings advertising web sites and e mails to communicate with their constituencies. However each of these methods has limitations. Telephone calls and face to face meetings are unable to reach a broad number of constituencies in a finite amount of time. Advertising may be poorly targeted and cost ineffective. Web sites may have difficulty getting repeat visitors. E mails are facing limitations due to viruses spam customer resentment and apathy and the lack of personalization. In addition recent legislations such as the Controlling the Assault of Non Solicited Pornography and Marketing Act of 2003 impose significant restrictions on entities in their use of e mail correspondence.

Some entities try to overcome these limitations by using information syndication technologies such as rich site summary or really or real simple syndication RSS and Atom both of which are generally referred to as feeds. Feeds consist of information in a file with extensible markup language XML tags and saving the file in a server such as a web server. Users can use client side agents such as aggregators portals or browsers to monitor these files understand changes to information e.g. via the XML metadata and download updates if appropriate. Feeds have many advantages over traditional communication methods including cost effectiveness potential higher user opt ins e.g. since an e mail address is not necessary to subscribe to a feed compliance with related laws and regulations and presently a lack of viruses and spam.

Nevertheless feeds have many limitations including the difficulty for non technical people to create a feed the lack of personalization and the lack of a way to measure the effectiveness of feed communications. For example early adopters of feed publishing have hundreds of feeds on their web sites. Thus users are forced to guess and select which feeds are desirable to them. In addition it is difficult for an entity to understand which feeds if any are effective in meeting its communication objectives since there is not an available method to measure and analyze the effectiveness of feed communications. Furthermore designing an effective feed is difficult since entities are communicating with a client side agent to gain a user s attention. Such a client side agent may become increasingly sophisticated and vital to an entity s objectives.

To address the problems of end user usability an auto discovery technique was developed for a client side agent to automatically discover the availability of feeds on a particular network location. In this auto discovery technique a user s client side agent searches pages on a web site to look for a hypertext markup language HTML tag that indicates support for feeds. The client side agent then places a universal resource identifier URI such as a uniform resource locator URL of the feed into the client side agent to allow the user to subscribe to the feed. However even though auto discovery provides the ease of discovering feeds it still lacks the ability to create personalized feeds.

In addition entities and their constituencies information needs change over time. For example a business s products and services may be introduced sold supported and ultimately removed from the market place. A customer s interest in a business products and services may change based on competitors pricing. As a result the business may no longer have information to send to a particular customer via a feed and the customer may find the feed less relevant to his or her interest. One solution is to insert content into the feed suggesting the customer to subscribe to a new feed. But requiring the customer to unsubscribe visit a web site and re subscribe to a new feed is a hassle for the customer which may eventually decrease feed subscriptions.

In addition as feeds are delivered by means of a URL such URLs can be discovered by software agents and or shared with other users via a variety of methods such as Outline Processor Markup Language OPML search engine and directories. This presents problems for entities that wish to deliver personalized information via feeds and or wish to measure feed use on a per subscriber basis. It also presents problems for subscribers who may get irrelevant content and or who may intentionally or unintentionally customize another subscriber s feed.

Further feeds are taxing on systems that serve the particular feeds due to automatic user agents polling the server continuously at a preset interval for information updates. This may cause either severe spikes in load for the servers or cause bandwidth spikes that would exceed thresholds and thus result in excessive charges. This problem may get worse as more real time data is placed in RSS Feeds and user agents increase the frequency of their requests. In addition if systems are unavailable due to maintenance or failure user agents typically return error messages an unsatisfactory experience for users.

Still another problem is the labor intensiveness necessary to maintain a feed. This is often compounded by repetitive efforts of maintaining a web site along with separately maintaining a feed. Hence duplicative efforts are necessary to keep multiple sources updated.

In addition options for formatting feeds are limited to manual tools. There are limitations associated with formatting feeds which include issues involving control of publishing processes getting subscribers relevant content content appearance and measurability relative to supplied feeds. Thus there remains a difficulty in extracting information for a feed as well as formatting that information into a feed.

Therefore in view of these shortcomings in the art there is a need for 1 a technique that allows feed personalization in an auto discovery environment 2 feeds that provide continuous monitoring of feed use to enhance feed relevancy and personalization 3 securing authenticating and identifying feed publishers feeds and feed subscribers as well as 4 distributing the load and handling availability while maintaining an entities desired quality of service as well as 5 an automated method for capturing updates from a resource and extracting relevant data into a feed with appropriate formatting.

To address the above the present invention includes a system and a method for providing a personalized feed to a user. In an embodiment of the invention information regarding the user is obtained from a source. For example a user profile module may obtain the information regarding the user via customization content provided to the user. The customization content indicates various categories of content from which a user may make a selection. In response to the user selecting his or her categories of interest a feed personalization module selects content pieces whose associated categories match the user selected categories. The feed personalization module then provides a personalized feed including these content pieces to the user.

In another embodiment of the invention the system and method of the present invention assigns a unique identifier to the user and provides the personalized feed to the user via the unique identifier. The unique identifier can be any unique identifier for example a unique URL a cookie a digital certificate an IP address a machine fingerprint or a username and or password. Using the unique identifier the present invention is able to track the user s actions with respect to the provided feed. Thus an embodiment of the invention further re personalizes the feed according to the user s actions. Another embodiment of the invention requests an input from the user regarding the relevance of the feed to the user s interests. Based on the input from the user the feed may further be re personalized to provide relevant content to the user.

In addition one embodiment of the present invention includes maintaining a database of content formats for example templates that have predefined rules for presenting information of a finished content item e.g. a feed. A mechanism captures updates from a resource e.g. structured or unstructured content such as a web page email rich site summary or really or real simple syndication RSS feed a video or audio stream or fragment a graphic or text and matches a template from the database with the contents of the resource. Once an appropriate template is identified a resource analyzer extracts relevant data from the resource to populate the template and generate the feed. Thus relevant feeds can be quickly assembled for distribution from a large body of available resources without the need for time intensive data entry and customization necessary for each resource.

The features and advantages described in the specification are not all inclusive and in particular many additional features and advantages will be apparent to one of ordinary skill in the art in view of the drawings specification and claims. Moreover it should be noted that the language used in the specification has been principally selected for readability and instructional purposes and may not have been selected to delineate or circumscribe the inventive subject matter.

The Figures FIG. and the following description relate to preferred embodiments of the present invention by way of illustration only. It should be noted that from the following discussion alternative embodiments of the structures and methods disclosed herein will be readily recognized as viable alternatives that may be employed without departing from the principles of the claimed invention.

The present invention includes a system and a method for providing a personalized feed to a user. Feeds are created by putting information into a file with extensible markup language XML tags and dynamically generating or saving the file in a server such as a web server. Users can use client side agents such as aggregators portals or browsers to monitor these files understand changes to information e.g. via the XML metadata and download updates if appropriate. In one embodiment customization content is provided to the user for the user to define categories of content that are of interest to the user. Alternatively the user can define other parameters for example keywords limits ranges or the like. In addition a unique identifier is provided to the user for directing the user s client side agent e.g. an aggregator browser or portal to feeds personalized based on the defined categories. The unique identifier also allows a feed publisher to track the effectiveness of the feeds provided to the user.

Additionally the system collects user inputs with regard to the provided feeds. The system is adapted to continuously re personalize feeds based on the collected user inputs in order to provide relevant and desirable content to the user. The personalized feeds may be used for product marketing sales customer support training recruiting investor relations business partner relations product development internal corporate communications etc.

One skilled in the art will readily recognize from the following description that alternative embodiments of the structures and methods illustrated herein may be employed without departing from the principles of the invention described herein.

A publisher e.g. an entity s employee creates feeds using the system . The publisher can log on to the system following authenticating himself or herself for example using a user identifier and or password. In response to successfully authenticating the publisher the system generates a user interface such a web page for the publisher to create new feeds view and edit existing feeds review alerts and updates concerning the system and perform reporting and analysis on the effectiveness of feed communications. Alternatively all this functionality can be accessed via optionally secured and or protected application programming interface API .

The system allows a non technical publisher to create categorize and publish feeds. According to an embodiment of the invention to create personalized feeds the publisher first creates new content. For example the publisher can use the user interface provided by the system to navigate a network e.g. the Internet or intranet to find the location of the data file or files to be provided to a user as a feed. The user may be a human or a machine such as a business process a software agent a search engine etc. If the data files do not include the XML tags necessary for creating a feed a content generation module is adapted to convert the files into a readable feed by adding the necessary XML tags.

The publisher can also create text or other content e.g. copying from a content creation software program in a browser based text box of the user interface via API and or upload discrete data files and attachments or enclosures for the content generation module to create the necessary XML tagged data file. The content generation module further allows the publisher to name a feed and decide if the feed content can be personalized. The publisher can use the user interface to find and decide on a network location to publish the feed and to specify how often to check for changes to the feed content.

The user interface and or API further allows the publisher to preview the feed and examine the XML tagged file before deciding to publish the feed. If the publisher decides to publish the feed a content database is adapted to store the XML tagged data file including its content and the related information such as the location where the feed is published created by the publisher manually or via the content generation module .

The system further allows the publisher to create relations between a given piece of content and one or more categories to assign the categories to the piece of content for personalization purposes. In an embodiment of the invention a content description builder module builds the content description for each piece of content. The content description is then stored in a content description database . The content description builder module can build the content description for a piece of content by receiving inputs from the publisher directly by analyzing the content piece automatically or by some other methods. For example the publisher may define a set of categories that various contents may be related to.

The content description thus comprises a list of categories that apply to the particular piece of content. Hence the content description builder module can build the content description for a content piece by receiving a complete list of categories from the publisher and receiving inputs from the publisher specifying the categories that are applicable to the particular content piece. Alternatively the content description builder module can build the content description by performing textual analysis on the content piece to derive the applicable categories for the content piece.

Mapping content descriptions stored in the content description database to pieces of contents stored in the content database can also be done dynamically. Dynamic mapping can be affected by various factors including explicit user input information provided by third party systems information stored in system such as reporting statistics other content items and runtime characteristics both of the user agent and of the system . Dynamic mapping based on system reporting usage e.g. most popular category that gets mapped to the piece of content that was clicked the most number of times . In one embodiment dynamic mapping can be based on relative scoring compared to other content for example article length . In another embodiment dynamic mapping can be based on external data. In another embodiment dynamic mapping could be based on temporal factors for example last updated newest today . In another embodiment dynamic mapping can be based on aggregators runtime characteristics e.g. most popular for the region of the world where the client is located .

From the analysis the content description builder module generates content information for each piece of content analyzed as well as a category association for the analyzed content piece. The category association specifies one or more categories associated with the given content information . The category association and the content information is then stored in a database as a map between the content database and the content description database .

Referring back to after the user creates a new user account on the system an identification module assigns the user a unique identifier which can be a mnemonic. According to an embodiment of the invention the unique identifier may be a unique URL cookie or other client side storage Internet protocol IP address machine fingerprinting e.g. a unique property or identifier of a piece of hardware or software such as a unique software installation digital certificate username and or password or other tracking methods that uniquely identify the user . The mnemonic identifier may be based on any of the above tracking methods or assigned from other systems. The unique identifier e.g. a mnemonic identifier for the user is stored in a user profile module that obtains and stores profile information regarding the user .

Also shown in a user interest builder module is configured to continuously build and update interests of the user by directly receiving inputs from the user analyzing actions of the user accessing the profile of the user in other systems e.g. the internal customer relationship management CRM of the publisher or some other methods. For example user interests may comprise a list of categories or other parameters e.g. such as keywords or ranges that the user has explicitly or implicitly indicated to be of interest to him or her. Thus the user interest builder module may identify the user interests of the user by asking the user e.g. in response to the user creating an account with the system or re personalizing an existing feed to select categories of interest out of the categories stored in the content description database . The user interests for the user are stored in a user interest database .

The user interest builder module can also build the user interest database using the actions of the user . Actions of the user are tracked e.g. via the unique identifier and server redirects and stored in a user action database which is linked from the record of the user stored in the user profile module . The user actions may represent behaviors of the user e.g. based on past user activities relative to a document a feed a web site or the system or any information regarding the user such as purchase history . The user actions may also be derived from analysis of external data e.g. obtained from third party web sites agencies or other entities regarding the user as well as statistical information with regard to the feed use of the user .

A feed personalization module generates feeds out of the contents stored in the content database . In particular the feed personalization module is adapted to take the list of categories out of the user interests stored in the user interest database and compare them to the categories stored in the content description database to determine which pieces of contents are relevant to the user . By referring to the map the feed personalization module selects the content pieces whose assigned categories match the user interests for creating a personalized feed . The system then inserts certain user identifiable information e.g. a user name or company name and tracking methods such as cookies and GIFs. The system replaces embedded URLs with re direct URLs and provides the personalized feed to the user when requested by a client side agent such as an aggregator portal or browser or by a software agent running on a server.

In one embodiment the system serves the personalized feed to the user via the unique identifier to enable further user action tracking. The unique identifier tracks future actions of the user . The user actions are stored in the user action database for the user interest builder module to continuously update the user interest database . Thus the feed personalization module can continuously provide relevant personalized feeds to the user based on various user actions.

Additionally the completed view served to the user in the feed may contain both readily identifiable and hidden watermarks identifying the particular user. Information stored in these watermarks may include for example a user s name handle or other identifier feed identification client software identification client IP address or server name time and date of content creation or feed generation applicable copyright statements applicable distribution restrictions time interval during which this information can be accessed as well as other DRM information. Readily identifiable watermarks can include adding the information to the content of the item attaching it as meta or semantic tags or embedding into elements e.g. background image . Hidden watermarks can be embedded by using steganographic techniques or by setting specific information if the document format supports it e.g. rights management properties of PDF format .

A watermarking technique may be used in accordance with the present invention. After the content formatting module constructs the feed content to be sent to the user a watermarking module may optionally embed some or all of the information including information listed above including the feed s unique identifier anything from user profile database or client side agent runtime properties . The resulting content items are then assembled into a feed and served to the user .

Turning back to the content of the personalized feed may be in any number of views e.g. complete or summary form based on information regarding the user that is stored in the user profile module and or run time information e.g. server and or client and or based on the company s business rules. For example if the user is a subscriber to a particular publication the feed personalization module may provide the entire content of the publication s article in the feed provided to the user . But if the user is not a subscriber to the publication the feed personalization module may provide a summary description of the article in the feed provided to the user .

To further personalize the feed the system can insert mnemonic identifiers in the feed URL and or in various places in the Feed such as the title and the content text. The mnemonic identifiers can come from subscriber input or unique identifiers or from company sources such as database records located in other systems. Such mnemonic identifiers have the benefit of insuring subscribers are using feeds which are personalized for them.

In an embodiment of the invention the user is able to specify the categories of interest directly to the user interest builder module via customization content provided by the publisher e.g. a customization web page or a customization feed . In particular the user interface or optionally secured and or protected API provided by the system allows the publisher to select a method to be used by the user to specify the categories of interest. Such a method may include checkboxes keywords categorization navigating to an appropriate section of a web page to personalize information etc. The publisher can choose to publish the customization content in a variety of look and feel options. The publisher can further preview and examine the customization content before providing it to the user .

The publisher may examine the feed use to determine if the feed has met its objectives. Via a report module the publisher can access a report and analysis user interface provided by the system . Within the report and analysis user interface the publisher can run a variety of preconfigured reports or download data in a variety of formats e.g. XML spreadsheet word processor comma separated values etc. to analyze the feed use. For example to generate a preconfigured report the publisher can choose one or more feeds a beginning and ending date range and the type of report to be included e.g. the number of subscribers the growth in subscription feed read rates feed open rates click through by the subscribers revenue from the feed relations to various cost parameters such as bandwidth and relative benchmarks of similar feeds etc. . Alternatively the reporting system may be accessed via optionally secured and or protected API.

The user interface and or API also allows the publisher to generate and view graphical representations of the data. Feed use data is stored in a database of the system not shown and derived from tracking users via unique identifiers such as URLs embedded URL redirects cookies and integration with other corporate systems. The publisher can analyze and generate reports on the feed use on a per user basis or as an aggregated group of users to determine if the feed communication has met its objectives.

The web server may send to the user a web page that includes a customization URL which may be automatically inserted into the client side agent of the user . In response to the user requesting the customization URL using the client side agent the system sends to the user a customization feed that allows the user to personalize future feed contents. The customization feed may include checkboxes keywords categorization or navigation to allow the user to select categories that are of interest to him or her. The customization feed may also include other contents than the customization content.

In an embodiment of the invention instead of a customization feed the system provides a customization web page to the client side agent. The customization web page includes customization contents that allow the user to personalize feeds by choosing categories of interest. The system may also respond with or provide a location to get the data type and description of the categories of interest. The client side agent then either requests the categories of interest from the user or automatically fills out the categories of interest based on data profiles of the user stored in the client side agent or information obtained from an external source.

In response to the user requesting the customization content the system may also obtain data regarding the user e.g. the IP address aggregator type browser type etc. from the client side machine of the user . The system is adapted to record the obtained data in the user profile module . The system then dynamically builds customization content translates the customization content into an appropriate format based on the information stored in the user profile module and serves the appropriately formatted customization content to the user .

The user accesses the customization content e.g. via a customization feed or customization web page using the client side agent personalizes future feeds by choosing categories of interest and sends the chosen categories back to the system . The system then provides content e.g. a web page a file etc. including a unique identifier e.g. a unique URL to the user via the client side agent. The user can then use the unique identifier to request personalized feeds. The system then searches the user profile module for a user record that matches the unique identifier .

An alternate embodiment performs auto discovery in accordance with the present invention. When user visits a web page which contains auto discovery URL the user s client software receives response containing the auto discovery URL. The auto discovery module creates an individual feed URL in a subsequent request by client software to fetch this feed. Auto discovery module further determines capabilities of the client software based on for example runtime characteristics of the client software contents of the request and any heuristic database of client capabilities potentially stored in the system or available from some external resource.

If the auto discovery module determines that client software is capable of automatically switching subscription URL then a response is sent back instructing it to switch subscription URL to point to the individual URL. Such instruction can come in the form of for example a HTTP redirect XML redirect or any other protocol specific mechanism. If the auto discovery module determines the client software is not capable of switching subscription URL automatically it responds back with feed containing optionally some or all of the content and a special signup item. The signup item contains users individual URL and optional instructions on how to manually switch subscription URL in the client software. In either scenario the client software can be configured to switch its subscription URL from the generic auto discovery URL to an individual URL and all subsequent requests to the system come through that URL.

Once the user is subscribed to their unique feed they can customize it to fit their preferences or it may be tuned automatically as discussed in relevant sections of this document. Each newly generated feed may be either initialized with some default personalization values or alternatively may try to determine optimal personalization preferences of the user based on variety of factors including original source of the auto discovery request e.g. which section of the website the user was on user s runtime properties or make a heuristic estimate based on user s behavior e.g. providing the user with default preferences that match other users with similar behavioral patterns .

It should be noted that any mixture of auto discovery mechanisms outlined above can be used in conjunction to improve user experience and maximize chances of successful subscription. Factors influencing choice of the auto discovery mechanism can consist of but not limited to run time characteristics of the client software publisher settings system wide configuration explicit choice by the user and heuristic databases stored either locally within the system or at an external resource.

Special care must be taken with automatic agents including but not limited to crawlers and robots. When such an agent requests a personalization URL optionally it should not be redirected to the personalized URL but instead given appropriate content immediately. Appropriate content can be configured to be all none or publisher and or system defined subset of the content on the system optionally based on a specific runtime characteristics of the particular automatic agent . Further automatic agent can be optionally redirected to a special feed URL. This URL would identify that the feed as served to a particular automatic agent. Should a user find that feed though such automatic agent for example from search or directory their subsequent requests will be treated as auto discovery requests for feed and so they would be issued an individual URL . This is done to enable tracking the source of the signup for example to evaluate how users find out about presence of feeds on a particular site .

It is noted that another example of special handling of automatic agents is handling of the click throughs on any URL or link in the feed. Such links can be rewritten by system to facilitate tracking of user activity. For example automatic user agents can be served with permanent redirect e.g. HTTP status code e.g. to facilitate SEO search engine optimization while other user agents can be served temporary redirect e.g. HTTP status code e.g. ensure accuracy of counting by preventing user agent from caching the destination link .

Based on the user interests stored in the user interest database the system queries the content description database for matching categories in order to find appropriate contents stored in the content database to be provided to the user . The system dynamically builds a content feed based on the user interests translates the feed into appropriate feed format based on user information stored in the user profile module and serves the appropriately formatted feed to the user via the client side agent. For example the user may cut and paste the unique URL into the client side agent to obtain the personalized feeds. Alternatively the system may automatically insert the unique URL into the client side agent without any user action.

In an alternative embodiment of the invention if the user requests the customization content from the system the system serves the client side agent of the user a cookie and adds the cookie s identifier to the user profile module . In response to the user personalizing future feeds by choosing categories of interest the system reads the cookie residing on the client side agent and serves the user personalized feeds. Accordingly the user does not need to insert the unique URL into the client side agent to obtain the personalized feeds.

Alternatively the system may authenticate the user via a client side digital certificate or a combination of user identifier and password. The client side certificate or the user identifier and password may be stored in the client side agent or other client resources or may be requested from the user . Other authentication methods include security tokens smart cards etc. If the user is successfully authenticated the server serves the personalized feeds to the user via the client side agent.

The personalized feeds provided to the user can include encrypted information. Specifically the content generation module obtains content pieces from a source and tags the content pieces with machine readable tags before storing them in the content database . The machine readable tags alert an encryption module not shown to encrypt some or all of the data in the content pieces. The user information stored in the user profile module also includes security attributes such as encryption keys digital certificates security tokens user identifier password biometrics etc.

In response to the user requesting personalized feeds the encryption module encrypts the content pieces stored in the content database if not already encrypted using the security attributes of the user . The encrypted contents are then provided to the client side agent as feeds via an encrypted or non encrypted transport. The client side agent then uses the appropriate security attributes to decipher the contents. Accordingly the publisher may use feeds to sell and distribute confidential and or rights protected information to the user .

The system may also provide contents to the user indirectly. For example instead of directly providing contents to the user within a feed the feed may include a link to encrypted or unencrypted contents residing on the content database . By providing a link to the contents instead of directly providing the contents to the user the user is prevented from saving or transferring the contents. The system may further record the decryption of contents by the user in the user action database for reporting and analysis purposes. Furthermore communications between the user and the system may take place over encrypted communication channels such as a secure sockets layer SSL or virtual private network.

In an embodiment an authentication module not shown may establish a content creator s authenticity using a variety of methods such as digital signatures. Authenticated content is stored in the content database and requested by the user . Based on the characteristics of the client side agent the system serves a feed to the user via a secure or insecure transport with contents that may be authenticated by one or more third parties. Thus the client side agent is able to verify if the original creator of the contents actually produced the contents even if the contents are provided to the user via one or more third parties.

The system can track the user via the unique identifier for example a unique URL cookie client side certificate IP address user identifier and password machine fingerprinting etc. Feed and web site usage are recorded in the user action database which may be flat file relational XML etc. and used for reporting and analysis purposes. In addition the customization content may be provided to the client side agent on a regular basis to encourage the user to update the feed personalization. Alternatively the customization content can be provided to certain users based on the customization rules of the publisher . For example the customization content can be provided to users who have below average feed open rates or click through rates. Alternatively customization content may be embedded with the regular content either always or by following some publisher defined rules . This embedding may happen in either all or some of the regular content. Examples of such embedding include at the top of the content side bar in the middle of content or at the bottom of content.

The system is adapted to evaluate if a feed provided to the user is relevant to the interests of the user . In particular each feed provided to the user is evaluated for relevancy through ways that are transparent to the user or through explicit user feedback. Based on these methods the system can provide feeds that are optimized for each user. Explicit user feedback may include responses to textual or graphical questions regarding the content relevancy e.g. yes no responses numerical ratings letter grade ratings sliding scale of relevancy etc. and written comments. In an embodiment the publisher selects a feedback method that is inserted into a feed provided to the user . The user can review the feed rank the relevancy of the feed and provide a feedback to the system . The user feedback is stored in the user action database for reporting and analysis purposes and for intelligently determining categories that are of interest to the user . Based on the user feedback the system continuously updates the feed contents to provide personalized feeds to the user .

An explicit user feedback is scored normalized weighted and added to information collected from the user transparently through server redirects the unique URL client side certificate user identifier and password cookie IP address machine fingerprint etc. Information collected transparently may include whether when and or how often the user opened a feed whether when and or how often the user unsubscribed a feed or changed his or her personalization setting whether when and or how often the user clicked on a link in a feed and his or her actions during and after landing on the linked web site as well as whether when and or how often they recommend or forward this content to others. The combined data is compared with the data from other users and scored based on similarities and heuristic rules to determine trends and likely actions of the user . Based on historical trends of feed use correlated actions by users and the heuristic rules the system develops experience rules and records the developed rules in the user action database .

If the user requests personalized feeds the system queries the user action database for the appropriate record and based on the experience rules queries the content description database for categories that match the experience of the user . The system dynamically builds a feed including contents that are associated with the matching categories translates the feed into an appropriate feed format based on information stored in the user profile module and serves the personalized feed to the user via the client side agent. The system can further send customization content to the user for re personalization by the user . The system can thus adjust content inserted into the personalized feeds provided to the user to encourage trends and actions desirable to the publisher .

Based on the structure and or formatting of a particular piece of content a content processing module parses the content piece and removes styles and formatting as necessary based on a set of data structure and format specific rules. For example the content processing module decomposes each content piece into various components. The processed content piece is then stored in the content database . In addition to selecting optimal formatting for content delivery the system may also select optimum time for delivery based on various rules. This may include delaying or not including at all some content based on the same factors as above.

A particular example of dynamic format and delivery timing variations is format and delivery based on the status of a user s subscription. The publisher may choose to configure the system to construct various tiers of subscription whereby the higher tiers receive full information without delay while lower tiers may receive the information with progressively increasing delay. Additionally the information included in the feed may be reduced for lower tiers e.g. switching from full text feeds to summary feeds to title only feeds. Further some content items may be excluded from lower tiers. This differentiation can occur on a per content item and or on a per subscription basis. Therefore it is possible in the above example to have a subscription tier with some items being full content and appearing instantly while others being title only and appearing with some time delay.

In response to the user requesting a feed a content formatting module selects an optimal component of content stored in the content database and an optimal formatting stored in the formatting database based on a variety of factors. Such factors may include the user profile stored in the user profile module and user actions tracked via the unique identifier . The factors may also include runtime properties of the client side agent such as the client side agent s capabilities database state geographic location authentication encryption rendering state digital rights management DRM and other factors that may influence the optimal components and formatting.

In one embodiment the content may be converted in full or in part to an alternate format for any number of reasons including to support users whose client software does adequately support a certain format. Examples of such conversion include converting some or all text HTML and or images to single or multiple images in the case where client does not support certain text formatting. Another example is converting some or all of the content to a partial or complete audio or video stream or file to work with non text based clients. Another example is transcribing all or parts of an audio or video stream to a text format to support clients that do not have audio and or video support.

In another embodiment all or part of the content may be converted to a non text format with embedded readily identifiable or invisible watermarks. These embodiments of format conversion and watermarking may discourage and or enable tracking of authorized or unauthorized content re distribution. Examples conversion formats include one or more images one or more partial or complete audio and or video streams or files or various other formats that include rights protection mechanisms such as Portable Document Format PDF from Adobe Systems Incorporated San Jose Calif. .

Optionally the conversion may include steps to prevent conversion back to the original format. These steps include for example adding analog noise and or distortion to the format. The noise and or distortions makes automated conversion back to the original format difficult without interfering with human consumption of the information. In addition the system can introduce random elements to the conversion to make automated conversion to the original format more difficult. Examples of randomness include for example breaking up an image into multiple randomly shaped parts breaking up an audio and or video stream into multiple random length segments or mixing different techniques formats and techniques e.g. converting part of the item to an image and part to an audio stream . The system may be configured to use many sources to generate randomness for example a combination of content item identification and unique feed identifier.

Once the content is converted to these non text formats a watermark e.g. as previously described can be embedded into the content for a variety of purposes including enabling easy identification of the original source of this content. Readily identifiable watermarks e.g. content meta data background images and or sounds explicit mentions of the user s personally identifiable information etc. serve to deter the users from sharing content they receive w o prior authorization. Hidden watermarks e.g. seganographically embedded unique feed identifier can serve many purposes including facilitating investigation into where the unauthorized content re distribution originated.

The content formatting module maps the content piece to appropriate fields in the templates stored in the formatting database . The content formatting module decides which template applies to a piece of content automatically or manually based on the preferences of the publisher . The feed personalization module then generates a feed with appropriately formatted content and provides it to the user optionally subject to restrictions in the user profile stored in the user profile module. For example the user may not have rights to receive the requested content or may not have rights to receive the content at that time. Thus the system is able to receive data that may be variously structured or formatted e.g. dbase word processing documents audio stream or file video stream or file images HTML email RSS feed XML etc. and output a feed whose appearance is consistent with an entity s style guidelines for a given type of communication. And the system is able to provide content whose format or structure is appropriate for the client side agent of the user .

The resource can be provided to the system through automated or manual processes. For example a crawler receives instructions from a rules engine as to which resources to inspect . The criteria can include for example which source resources to check for new or updated information the types resources to check the frequency checking and the extent of changes. The crawler crawls one or more source resources e.g. web sites identified through URLs in the resources to inspect instructions from the rules engine to identify one or more particular resources e.g. an updated or new web page.

In an alternative embodiment the system may be configured to include an external application programming interface API that receives updated or new resources . In still another embodiment the system is configured to include a mechanism for manual resource selection that provides a user interface or other mechanism to select an updated or new resource . In still another embodiment the system waits for the user to make a request for the feed and then contacts external sources for the relevant resource to be added as content. One of many examples of such system would be a feed for a financial institution containing transactions for each user. At the time the user makes a request for the feed the system goes out to the financial institution and fetches a list of transactions for that user. These transactions are then imported as content into the system.

To further illustrate the robustness of the described configuration illustrates one embodiment of a process for on demand resource retrieval in accordance with the present invention. When user makes a request for the feed the dynamic resource requester then contacts the publisher via some resource API this API may include for example web requests SOAP RPC REST XML RPC and other mechanisms . The publisher s resource API responds with resource or resources . This resource is then processed by the resource analyzer to produce a finished content item or items . These items are then included into the user s personalized feed and sent back to the user in a response.

Once the resources are identified the rules engine invokes a module having rules to match a particular resource with a template from one or more predefined templates in the formatting database . The rules engine may contain pre built rules based on commonly used data structures and or may contain rules created by the publisher and or rules provided dynamically via an API or an external resource. The pre defined templates may be incorporated with the system may be commercially available templates or may be user defined predefined templates. The templates are structured as described above and include fields that will be populated combined or merged with data elements from the resources to ultimately create a feed. Instructions or criteria for matching may be determined by type of resource and characteristics of the resource.

By way of example consider a resource that is a web site having a web page for product offered for sale. On the web page is product related text such as price and description along with product images. The rules engine module for matching resources to templates searches the formatting database for a template that includes fields for product descriptions pricing and images. In another example a resource may be an audio file that includes a predetermined time or length of silence between segments. The rules engine module for matching resources to templates searches the formatting database for a template that includes fields for integrating audio streams based on identification of silence of a predetermined length or time. In still another example a resource may be a video having a blanking interval or a video stream with blank frames of a predetermined length or time. The rules engine module for matching resources to templates searches the formatting database for a template that includes fields for integrating video streams based on identification those blanking intervals or frames.

Once an appropriate template is selected a resource data extraction module in the rules engine instructs the resource analyzer to extract data elements corresponding to appropriate fields in the template from the resource . The resource analyzer determines a resource description of the contents within the resource to assign it to a category. This information is entered into the content description database . The resource analyzer also extracts data elements from the resource that corresponds to fields in the template. This data is entered into the content database .

Once the resource analyzer completes its operation the resource is categorized in the content description database and the data elements of the resource extracted and stored in the content database . The system now has the necessary components to create a feed as previously described using the appropriate template from the formatting database and data in the content description database and content database .

To help develop efficiencies in some embodiments the resource can be structured so that it is updated once in a resource and available for use by the system for appropriate analysis categorization and extraction as described above. For example consider an example of a publisher that seeks regularly maintains a resource which also includes data that may be suitable for RSS feeds. In one embodiment the publisher may insert semantic or structured data into resource via mark up references or other means. The reference to mark up includes for example meta tags re using existing HTML XML tags and adding custom attributes to existing HTML XML tags creating custom HTML XML tags.

The information can be inserted into resources or content e.g. some or all web pages email RSS feed documents databases content management systems CMS images partial or complete audio or video content or other web content either manually or through automated methods scripts or changes to a content management system. The mark up may contain information necessary for RSS feed creation. This may include for example a title date summary content enclosure author and subject. The resources are optionally marked up with standard and or publisher definable semantic information for example content categories layout information templating information digital rights management information inclusion or links to related resources access restrictions.

The mark up and the associated data or the entire web content can be restricted to be only visible by approved parties by using any number of authentication mechanism for example source IP address user agent HTTP or HTTPS authentication request parameters digital certificates and other means of authentication. Further markup and the associated data can be partially or fully encrypted using public or private cryptography and or digitally signed to ensure authenticity and integrity. Alternatively the semantic and or structured data can be part of normal structure and or content of the page and specified using pre configured rules for finding it. Examples of such rules include regular expressions XPath expressions time intervals for audio video content and audio video signal matching e.g. predefined set of tones .

In one embodiment the semantic and or structured information can be contained in a separate resource for example other web resource and local or remote data stores. The linking of the web page to such resource can be accomplished either via explicit referencing of the resource location in the page itself for example meta tags custom XML HTML tags as attributes to existing tags or via a prearranged rules for example for a page http www.company.com page.html the semantic resource would be stored at http semantic.company.com page.html . Alternatively the separate resource may contain rules for extracting the necessary semantic information from the page rather than semantic information itself. For example the web resource may contain regular expression or XPath expression needed to extract a particular piece of semantic content from the page.

Any combination of the above mechanisms can be used within the same page some of the semantic may be included on the page with special markup some may be part of the normal content of the page and some may come from an external resource. Thus some may directly come as semantic content in that resource and some as instructions to extract semantic content from the page itself.

With the resource structured as noted above the crawler can be configured to crawl the target web site recording some or all of the web site content into a database. Optionally crawling can be limited to only some sub sections of the site. Furthermore multiple disjointed subsections can be used to extract content items. Also some pages may be designated to be either crawled and analyzed or only crawled through without analyzing or not crawled any further. These restrictions on which pages are crawled and whether they are analyzed can be based on rules in the rules engine as to resources to inspect and may include for example page URLs page content page structure image audio video pattern or content size. The site may be re crawled at regular intervals to ensure that all the information stored is current. Alternatively rather than crawl all or parts of the web content the system can check external source of information for additions removals or changes or relevant pages. The rules controlling which pages are crawled just like the rules controlling how to process resources can be either created by a publisher and or provided dynamically via an API or an external resource.

Every page or web element is crawled and entered into the database as a content item utilizing the semantic information to construct the look and feel categories and other presentation information for the item. The system potentially constructs content items out of the extracted semantic information. There does not need to be a direct correlation between web resources and content items. Multiple content items can be constructed out of a single resource e.g. when parsing a directory listing a separate product can be extracted into separate content items. Further determination of timestamp applicability can happen for each content item individually. For example if the source resource contains a catalog and the rules are configured to convert each entry into an individual item addition of new entry to the catalog or modification of only one entry would cause only one content item to be added as opposed to re importing all entries due to the fact that the version timestamp of the page has changed . Alternatively multiple resources can be combined into a single item e.g. if a particular product description is spread across several pages such as description images specifications price it may be assembled as a single content item.

Alternatively an email client can be used to receive new resources. For example they system may receive updates via newsletter. This newsletter will be parse in the manner describe earlier and the content entered into the system as one or more content items. In still an alternative embodiment an RSS client can be used to receive new resources. For example the system may subscribe to some external RSS feed. Once a new item is entered into the external feed or an existing one is updated the system can apply the techniques described to enter new content into the system as one or more content items.

Once the item is created the content description builder module constructs a semantic description of the content for the content description database . In one embodiment the system is configured to build an index that potentially gives greater weight to the mark up. In particular the index may be scored and or ranked based on a variety of factors. For example inbound and outbound links keyword frequency content age and other factors. Each item is analyzed syntactically and semantically to enable searching. When the user enters a search query a custom feed is constructed for them based on the query parameters and their matches and or relevance to the syntactic and semantic indices.

In alternative embodiments the system is configured to enter found or changed pages as new content items including potentially meta information such as title author and categories utilizing the semantic information to construct the look and feel categories and other presentation information for the item. As previously noted a one to one correlation between resource content and content items is not necessary. Changes in the resource content can be detected by various methods for example comparison with previous versions including parts of the resource content comparison of pre computed hashes of the resource content or part of the resource content with earlier computed versions of these hashes special sections of the content or meta content indicating age time stamp of creation or modification or status of the page or external source of information indicating creation time stamp modification time stamp or changes of content for the resource content.

Alternatively rather than crawl all or parts of the resource content the system can check external source of information for additions removals or changes or relevant pages. For a resource that contains multiple content items the determination of changes or additions to individual items is independent of each other as described earlier. Further different methods can be used for different items in the same resource e.g. some items may have embedded meta information regarding its insertion or update date while others could be check by direct comparison with previously imported versions .

With the information for the template collected and populated a prospective subscriber is alerted to availability of content deliverable. The alert and delivery may be via syndicated feeds web pages simple messaging service SMS multimedia messaging service MMS or other content delivery mechanism that may be configured based on textual description buttons images or automatic detection of a user agent.

The prospective subscriber can optionally personalize an RSS feed through checkboxes classification navigation or keyword s e.g. search request as described previously. After the optional personalization the feed can be provided via general or unique URL. Content may be served via a feed electronic mail email a web site or mobile messaging channels such as SMS or MMS based upon the user requested data and the score or rank of the content. Using semantic information and optionally the predefined templates the system serves content in a manner most applicable to the selected delivery medium and user and system properties and preferences. In addition as noted use actions can be recorded and there may be continuous revisions of the feed score or rank.

Using the rules the resource analyzer identifies fields in the template . The resource analyzer extracts c data elements from the web page that corresponds with the relevant fields in the template . This process generates the resulting content item which is now suitable for delivery for example as a RSS feed or other immediate communication protocol or vehicle. Thus the disclosed configuration advantageously generates immediate information e.g. as a feed from structured or unstructured data through application of that data to predefined templates that appropriately package the information for delivery.

The system is able to deliver feeds at levels of service despite unpredictable requests from user agents. When the request for feed is received system checks its current usage level and or bandwidth utilization and or quality of service requirements and decides if the feed should be served immediately or if the feed serve should be delayed. If the answer is to delay system can communicate to the client its inability to respond with content due to load or other conditions .

In one embodiment of the system the system sends back an HTTP redirect to the user agent possibly after small delay to come back to the server. This causes the user agent to transparently re request the feed from the server again. This process can be repeated as many times as needed. Other methods include the creation of a specialized pre arranged protocol between the system and the user agent for retry or delay in streaming data back e.g. send the data back slowly . To prevent a user agent from never getting a feed a counter e.g. in redirect URL in the cookies or stored in the server s internal table associated with each unique feed identifier . Once the timeout is exceeded the feed would be returned immediately.

In step the server service or software replies with customization content or personalization content. In step the user personalizes his or her desired content at the software agent and the software agent submits the desired content of the user to the server service or software. In step the server service or software replies with personalized content or a URL for a personalized feed. In step the user evaluates the replied content and provides the evaluation to the server service or software. And in step the server service or software continuously updates the feed content according to the user s evaluation.

In response to the user submitting his or her categories of interest a web page is displayed to the user as shown in . This web page provides a unique identifier such as a unique URL from which the user can access a feed that has been personalized according to the interests of the user . The exemplary web page shown in also displays an add to MyYahoo icon. If the user clicks on the add to MyYahoo icon the user is directed to his or her MyYahoo page which is a popular third party Internet portal. The personalized feed content is automatically added to the MyYahoo page of the user . In an embodiment of the invention other third party Internet portals may be used instead of MyYahoo to provide personalized feed content to the user .

Numerous specific details have been set forth herein to provide a thorough understanding of the embodiments. It will be understood by those skilled in the art however that the embodiments may be practiced without these specific details. In other instances well known operations components and circuits have not been described in detail so as not to obscure the embodiments. It can be appreciated that the specific structural and functional details disclosed herein may be representative and do not necessarily limit the scope of the embodiments.

Various embodiments may be implemented using one or more hardware elements. In general a hardware element may refer to any hardware structures arranged to perform certain operations. In one embodiment for example the hardware elements may include any analog or digital electrical or electronic elements fabricated on a substrate. The fabrication may be performed using silicon based integrated circuit IC techniques such as complementary metal oxide semiconductor CMOS bipolar and bipolar CMOS BiCMOS techniques for example. Examples of hardware elements may include processors microprocessors circuits circuit elements e.g. transistors resistors capacitors inductors and so forth integrated circuits application specific integrated circuits ASIC programmable logic devices PLD digital signal processors DSP field programmable gate array FPGA logic gates registers semiconductor device chips microchips chip sets and so forth. The embodiments are not limited in this context.

Various embodiments may be implemented using one or more software elements. In general a software element may refer to any software structures arranged to perform certain operations. In one embodiment for example the software elements may include program instructions and or data adapted for execution by a hardware element such as a processor. Program instructions may include an organized list of commands comprising words values or symbols arranged in a predetermined syntax that when executed may cause a processor to perform a corresponding set of operations. The software may be written or coded using a programming language. Examples of programming languages may include C C BASIC Perl Matlab Pascal Visual BASIC JAVA ActiveX assembly language machine code and so forth. The software may be stored using any type of computer readable media or machine readable media. Furthermore the software may be stored on the media as source code or object code. The software may also be stored on the media as compressed and or encrypted data. Examples of software may include any software components programs applications computer programs application programs system programs machine programs operating system software middleware firmware software modules routines subroutines functions methods procedures software interfaces application program interfaces API instruction sets computing code computer code code segments computer code segments words values symbols or any combination thereof. The embodiments are not limited in this context.

Some embodiments may be described using the expression coupled and connected along with their derivatives. It should be understood that these terms are not intended as synonyms for each other. For example some embodiments may be described using the term connected to indicate that two or more elements are in direct physical or electrical contact with each other. In another example some embodiments may be described using the term coupled to indicate that two or more elements are in direct physical or electrical contact. The term coupled however may also mean that two or more elements are not in direct contact with each other but yet still co operate or interact with each other. The embodiments are not limited in this context.

Some embodiments may be implemented for example using any computer readable media machine readable media or article capable of storing software. The media or article may include any suitable type of memory unit memory device memory article memory medium storage device storage article storage medium and or storage unit such as any of the examples described with reference to memory . The media or article may comprise memory removable or non removable media erasable or non erasable media writeable or re writeable media digital or analog media hard disk floppy disk Compact Disk Read Only Memory CD ROM Compact Disk Recordable CD R Compact Disk Rewriteable CD RW optical disk magnetic media magneto optical media removable memory cards or disks various types of Digital Versatile Disk DVD subscriber identify module tape cassette or the like. The instructions may include any suitable type of code such as source code object code compiled code interpreted code executable code static code dynamic code and the like. The instructions may be implemented using any suitable high level low level object oriented visual compiled and or interpreted programming language such as C C Java BASIC Perl Matlab Pascal Visual BASIC JAVA ActiveX assembly language machine code and so forth. The embodiments are not limited in this context.

Unless specifically stated otherwise it may be appreciated that terms such as processing computing calculating determining or the like refer to the action and or processes of a computer or computing system or similar electronic computing device that manipulates and or transforms data represented as physical quantities e.g. electronic within the computing system s registers and or memories into other data similarly represented as physical quantities within the computing system s memories registers or other such information storage transmission or display devices. The embodiments are not limited in this context.

As used herein any reference to one embodiment or an embodiment means that a particular element feature structure or characteristic described in connection with the embodiment is included in at least one embodiment. The appearances of the phrase in one embodiment in various places in the specification are not necessarily all referring to the same embodiment.

Upon reading this disclosure those of skill in the art will appreciate still additional alternative structural and functional designs for a system and a process for generating and formatting personalized feeds through the disclosed principles of the present invention. Thus while particular embodiments and applications of the present invention have been illustrated and described it is to be understood that the invention is not limited to the precise construction and components disclosed herein and that various modifications changes and variations which will be apparent to those skilled in the art may be made in the arrangement operation and details of the method and apparatus of the present invention disclosed herein without departing from the spirit and scope of the invention as defined in the appended claims.

