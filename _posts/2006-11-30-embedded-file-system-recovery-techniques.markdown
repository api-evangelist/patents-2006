---

title: Embedded file system recovery techniques
abstract: Various Embedded File System recovery techniques are described. A mobile computing device may comprise a radio, a processor coupled to the radio, and a memory coupled to the processor. The memory may be arranged to store a file system manager module (FSMM) that when executed by the processor manages an Embedded File System (EFS). The FSMM may create a factory image of the EFS on a periodic basis, or in response to a specific event such as a power down event. The FSMM may detect an error condition for the EFS, and replace the EFS with the factory image when an error is detected. Other embodiments are described and claimed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07941403&OS=07941403&RS=07941403
owner: Hewlett-Packard Development Company, L.P.
number: 07941403
owner_city: Houston
owner_country: US
publication_date: 20061130
---
A mobile computing device such as a combination handheld computer and mobile telephone or smart phone generally may provide voice and data communications functionality as well as computing and processing capabilities. In order to support various computing services a mobile computing device may implement file system. In computing a file system may generally refer to a set of abstract data types that are implemented for the storage hierarchical organization manipulation navigation access and retrieval of data. Consequently a file system is a method for storing and organizing computer files and the data they contain to make it easy to find and access them. File systems may store files using a storage device such as memory a hard disk or CD ROM. Accordingly there may be a need for improved techniques to manage EFS for a mobile computing device.

Various embodiments may be directed to improved techniques to manage a file system for an electronic device such as a mobile computing device. In some cases a mobile computing system may be considered an embedded system or device. An embedded system is a general term to describe a special purpose system in which a processing system such as a computer is completely encapsulated by the device it controls. To the extent a mobile computing system is implemented as an embedded system or device a file system for the mobile computing system may be considered an Embedded File System EFS . The embodiments however may apply to any type of file system and are not necessarily limited to an EFS.

More particularly some embodiments may be directed to techniques to automatically backup and restore an EFS for a mobile computing device such as a mobile telephone or smart phone for example. If the EFS becomes corrupted the mobile computing device will become unstable and in some cases inoperable. As a result a user typically attempts to return the mobile computing device to the manufacturer which is inconvenient for the user and costly for the manufacturer. In an attempt to solve these and other problems a mobile computing device may be arranged to periodically create a backup copy of its EFS system. The backup copy may be sometimes referred to as a factory EFS image or simply factory image. In the event of a fatal error encountered in the EFS the mobile computing device will check for a valid factory image stored in a reserve area of memory. If a valid factory image exists the mobile computing device will erase the corrupted EFS and write the most recent factory image in its place. Once the corrupted EFS has been replaced the mobile computing device may be successfully booted or re booted to the state it was in prior to the EFS failure.

In one embodiment for example a mobile computing device may comprise a radio a processor coupled to the radio and a memory coupled to the processor. The memory may be arranged to store a file system manager module FSMM that when executed by the processor manages an EFS. The FSMM may create a factory image of the EFS on a periodic basis or in response to a specific event such as a power down event or power up event. The FSMM may detect an error condition for the EFS and replace the EFS with the factory image when an error is detected. Other embodiments are described and claimed.

In various embodiments the mobile computing device may implement one or more radios or radio subsystems. For example the mobile computing device typically includes a radio that is compatible with various types of cellular radiotelephone systems. In another example the mobile computing device typically includes a radio that is compatible with various types of wireless network systems.

In one embodiment for example the mobile computing device may provide voice communications functionality in accordance with different types of cellular radiotelephone systems. Examples of cellular radiotelephone systems may include Code Division Multiple Access CDMA systems Global System for Mobile Communications GSM systems North American Digital Cellular NADC systems Time Division Multiple Access TDMA systems Extended TDMA E TDMA systems Narrowband Advanced Mobile Phone Service NAMPS systems third generation 3G systems such as Wide band CDMA WCDMA CDMA 2000 Universal Mobile Telephone System UMTS systems and so forth.

In addition to voice communications functionality the mobile computing device may be arranged to provide data communications functionality in accordance with different types of cellular radiotelephone systems. Examples of cellular radiotelephone systems offering data communications services may include GSM with General Packet Radio Service GPRS systems GSM GPRS CDMA 1xRTT systems Enhanced Data Rates for Global Evolution EDGE systems Evolution Data Only or Evolution Data Optimized EV DO systems Evolution For Data and Voice EV DV systems High Speed Downlink Packet Access HSDPA systems High Speed Uplink Packet Access HSUPA and so forth.

The mobile computing device may be arranged to provide voice and or data communications functionality in accordance with different types of wireless network systems. Examples of wireless network systems may include a wireless local area network WLAN system wireless metropolitan area network WMAN system wireless wide area network WWAN system and so forth. Examples of suitable wireless network systems offering data communication services may include the Institute of Electrical and Electronics Engineers IEEE 802.xx series of protocols such as the IEEE 802.11a b g n series of standard protocols and variants also referred to as WiFi the IEEE 802.16 series of standard protocols and variants also referred to as WiMAX the IEEE 802.20 series of standard protocols and variants and so forth.

The mobile computing device may be arranged to perform data communications in accordance with different types of shorter range wireless systems such as a wireless personal area network PAN system. One example of a suitable wireless PAN system offering data communication services may include a Bluetooth system operating in accordance with the Bluetooth Special Interest Group SIG series of protocols including Bluetooth Specification versions v1.0 v1.1 v1.2 v2.0 v2.0 with Enhanced Data Rate EDR as well as one or more Bluetooth Profiles and so forth. Other examples may include systems using infrared techniques or near field communication techniques and protocols such as electromagnetic induction EMI techniques. An example of EMI techniques may include passive or active radio frequency identification RFID protocols and devices.

In addition to having one or more radios to provide wireless communications capabilities some embodiments may implement one or more processors to provide computing capabilities. As shown in the embodiment of the mobile computing device may comprise a dual processor architecture including a host processor and a radio processor . In various implementations the host processor and the radio processor may be arranged to communicate with each other using interfaces such as one or more universal serial bus USB interfaces micro USB interfaces universal asynchronous receiver transmitter UART interfaces general purpose input output GPIO interfaces control status lines control data lines audio lines and so forth.

The host processor may be responsible for executing various software programs such as system programs and applications programs to provide computing and processing operations for the mobile computing device . The radio processor may be responsible for performing various voice and data communications operations for the mobile computing device such as transmitting and receiving voice and data information over one or more wireless communications channels. Although some embodiments may be described as comprising a dual processor architecture for purposes of illustration it is worthy to note that the mobile computing device may comprise any suitable processor architecture and or any suitable number of processors consistent with the described embodiments.

The host processor may be implemented as a host central processing unit CPU using any suitable processor or logic device such as a as a general purpose processor. Although some embodiments may be described with the host processor implemented as a CPU or general purpose processor by way of example it may be appreciated that the embodiments are not limited in this context. For example the host processor may comprise or be implemented as a chip multiprocessor CMP dedicated processor embedded processor media processor input output I O processor co processor microprocessor controller microcontroller application specific integrated circuit ASIC field programmable gate array FPGA programmable logic device PLD or other processing device in accordance with the described embodiments.

As shown the host processor may be coupled through a memory bus to a memory . The memory bus may comprise any suitable interface and or bus architecture for allowing the host processor to access the memory . Although the memory may be shown as being separate from the host processor for purposes of illustration it is worthy to note that in various embodiments some portion or the entire memory may be included on the same integrated circuit as the host processor . Alternatively some portion or the entire memory may be disposed on an integrated circuit or other medium e.g. hard disk drive external to the integrated circuit of host processor . In various embodiments the mobile computing device may comprise an expansion slot to support a multimedia and or memory card for example.

The memory may be implemented using any machine readable or computer readable media capable of storing data such as volatile memory or non volatile memory removable or non removable memory erasable or non erasable memory writeable or re writeable memory and so forth. Examples of machine readable storage media may include without limitation random access memory RAM dynamic RAM DRAM Double Data Rate DRAM DDRAM synchronous DRAM SDRAM static RAM SRAM read only memory ROM programmable ROM PROM erasable programmable ROM EPROM electrically erasable programmable ROM EEPROM flash memory e.g. NOR or NAND flash memory content addressable memory CAM polymer memory e.g. ferroelectric polymer memory phase change memory ovonic memory ferroelectric memory silicon oxide nitride oxide silicon SONOS memory magnetic or optical cards or any other type of media suitable for storing information.

The host processor may also be coupled to various components such as a keypad a display an input output I O interface various audio visual A V devices a power supply and so forth. In some cases the host processor may further implement a digital interface to communicate digital signals between the host processor and the various coupled components. Examples of such digital signals may include without limitation digital clock signals such as from an integrated circuit IC clock source. The digital clock signal is typically a signal used to coordinate the actions of two or more circuits. The clock signal oscillates between a high and low state normally with a fifty percent duty cycle and is usually a square waveform. Circuits using the clock signal for synchronization may become active at either the rising edge or falling edge or both of the oscillating clock signal. Consequently the host processor typically delivers a clock signal to the various components coupled to the host processor in part to synchronize and control the coupled components.

The mobile computing device may comprise an alphanumeric keypad coupled to the host processor . The keypad may comprise for example a QWERTY key layout and an integrated number dial pad. In some cases the keypad may comprise a thumbboard arranged for operation using the thumbs of a user. The mobile computing device also may comprise various keys buttons and switches such as for example input keys preset and programmable hot keys left and right action buttons a navigation button such as a multidirectional navigation button phone send and power end buttons preset and programmable shortcut buttons a volume rocker switch a ringer on off switch having a vibrate mode and so forth.

The mobile computing device may comprise a display coupled to the host processor . The display may comprise any suitable visual interface for displaying content to a user of the mobile computing device . In one embodiment for example the display may be implemented by a LCD such as a touch sensitive color e.g. 16 bit color thin film transistor TFT LCD screen. In some embodiments the touch sensitive LCD may be used with a stylus and or a handwriting recognizer program.

The mobile computing device may comprise an I O interface coupled to the host processor . The I O interface may comprise one or more I O devices such as a serial connection port an infrared port integrated Bluetooth wireless capability and or integrated 802.11x WiFi wireless capability to enable wired e.g. USB cable and or wireless connection to a local computer system such as a local personal computer PC . In various implementations mobile computing device may be arranged to transfer and or synchronize information with the local computer system.

The host processor may be coupled to various A V devices that support A V capability of the mobile computing device . Examples of A V devices may include for example a microphone one or more speakers an audio port to connect an audio headset an audio coder decoder codec an audio player a digital camera a video camera a video codec a video player and so forth.

The host processor may be coupled to a power supply arranged to supply and manage power to the elements of the mobile computing device . In various embodiments the power supply may be implemented by a rechargeable battery such as a removable and rechargeable lithium ion battery to provide direct current DC power and or an alternating current AC adapter to draw power from a standard AC main power supply.

As mentioned above the radio processor may perform voice and or data communication operations for the mobile computing device . For example the radio processor may be arranged to communicate voice information and or data information over one or more assigned frequency bands of a wireless communication channel. In various embodiments the radio processor may be implemented as a communications processor using any suitable processor or logic device such as a modem processor or baseband processor. Although some embodiments may be described with the radio processor implemented as a modem processor or baseband processor by way of example it may be appreciated that the embodiments are not limited in this context. For example the radio processor may comprise or be implemented as a digital signal processor DSP media access control MAC processor or any other type of communications processor in accordance with the described embodiments.

In various embodiments the radio processor may perform analog and or digital baseband operations for the mobile computing device . For example the radio processor may perform digital to analog conversion DAC analog to digital conversion ADC modulation demodulation encoding decoding encryption decryption and so forth.

The mobile computing device may comprise a memory coupled to the radio processor . The memory may be implemented using one or more types of machine readable or computer readable media capable of storing data such as volatile memory or non volatile memory removable or non removable memory erasable or non erasable memory writeable or re writeable memory and so forth. The memory may comprise for example flash memory and secure digital SD RAM. Although the memory may be shown as being separate from and external to the radio processor for purposes of illustration it is worthy to note that in various embodiments some portion or the entire memory may be included on the same integrated circuit as the radio processor .

The mobile computing device may comprise a transceiver module coupled to the radio processor . The transceiver module may comprise one or more radio transceivers arranged to communicate using different types of protocols communication ranges operating power requirements RF sub bands information types e.g. voice or data use scenarios applications and so forth. In various embodiments the transceiver module may comprise one or more transceivers arranged to support voice communication for a cellular radiotelephone system such as a GSM UMTS and or CDMA system. The transceiver module also may comprise one or more transceivers arranged to perform data communications in accordance with one or more wireless communications protocols such as WWAN protocols e.g. GSM GPRS protocols CDMA 1xRTT protocols EDGE protocols EV DO protocols EV DV protocols HSDPA protocols etc. WLAN protocols e.g. IEEE 802.11a b g n IEEE 802.16 IEEE 802.20 etc. PAN protocols Infrared protocols Bluetooth protocols EMI protocols including passive or active RFID protocols and so forth. In some embodiments the transceiver module may comprise a Global Positioning System GPS transceiver to support position determination and or location based services. It may be appreciated that the term transceiver as used herein may describe a transmitter a receiver or both a transmitter and receiver.

The transceiver module generally may be implemented using one or more chips as desired for a given implementation. Although the transceiver module may be shown as being separate from and external to the radio processor for purposes of illustration it is worthy to note that in various embodiments some portion or the entire transceiver module may be included on the same integrated circuit as the radio processor . The embodiments are not limited in this context.

The mobile computing device may comprise an antenna system for transmitting and or receiving electrical signals. As shown the antenna system may be coupled to the radio processor through the transceiver module . The antenna system may comprise or be implemented as one or more internal antennas and or external antennas.

The mobile computing device may comprise a subscriber identity module SIM coupled to the radio processor . The SIM may comprise for example a removable or non removable smart card arranged to encrypt voice and data transmissions and to store user specific data for allowing a voice or data communications network to identify and authenticate the user. The SIM also may store data such as personal settings specific to the user.

As mentioned above the host processor may be arranged to provide processing or computing resources to the mobile computing device . For example the host processor may be responsible for executing various software programs such as system programs and application programs to provide computing and processing operations for the mobile computing device .

System programs generally may assist in the running of the mobile computing device and may be directly responsible for controlling integrating and managing the individual hardware components of the computer system. Examples of system programs may include without limitation an operating system OS device drivers programming tools utility programs software libraries application programming interfaces APIs and so forth. The mobile computing device may utilize any suitable OS in accordance with the described embodiments such as a Palm OS Palm OS Cobalt Microsoft Windows OS Microsoft Windows CE Microsoft Pocket PC Microsoft Mobile Symbian OS Embedix OS Linux Binary Run time Environment for Wireless BREW OS JavaOS a Wireless Application Protocol WAP OS and so forth.

Application programs generally may allow a user to accomplish one or more specific tasks. Examples of application programs may include without limitation one or more messaging applications e.g. telephone voicemail facsimile e mail IM SMS MMS video conferencing a web browser application personal information management PIM applications e.g. contacts calendar scheduling tasks word processing applications spreadsheet applications database applications media applications e.g. video player audio player multimedia player digital camera video camera media management gaming applications and so forth. In various implementations the application programs may provide one or more graphical user interfaces GUIs to communicate information between the mobile computing device and a user. In some embodiments application programs may comprise upper layer programs running on top of the OS of the host processor that operate in conjunction with the functions and protocols of lower layers including for example a transport layer such as a Transmission Control Protocol TCP layer a network layer such as an Internet Protocol IP layer and a link layer such as a Point to Point PPP layer used to translate and format data for communication.

As shown in the mobile computing device may comprise or implement a FSMM arranged to manage an EFS for the mobile computing device . The FSMM may be implemented as part of the radio processor as shown or separate from the radio processor e.g. host processor as desired for a given implementation. Further the FSMM may be implemented in hardware software or a combination of hardware and software as desired for a given implementation. The embodiments are not limited in this context.

In various embodiments the FSMM may be arranged to automatically backup and restore the EFS for the mobile computing device . If the EFS becomes corrupted the mobile computing device will become unstable and in some cases inoperable. The mobile computing device may therefore be arranged to create a backup copy of the EFS referred to herein as a factory image . In the event of a fatal error encountered in the EFS the mobile computing device will check for a valid factory image stored in a reserve area of the memory . If a valid factory image exists the mobile computing device will erase the corrupted EFS and write the factory image in its place. Once the corrupted EFS has been replaced the mobile computing device may be successfully booted or re booted to the state it was in prior to the failure of the corrupted EFS .

Operations for the mobile computing device and or the FSMM may be further described with reference to one or more logic flows. It may be appreciated that the representative logic flows do not necessarily have to be executed in the order presented or in any particular order unless otherwise indicated. Moreover various activities described with respect to the logic flows can be executed in serial or parallel fashion. The logic flows may be implemented using any desired hardware elements software elements or combination of both.

As shown in in one embodiment logic flow may create a factory image of an EFS for a radio at block . Logic flow may detect an error condition for the EFS at block . Logic flow may replace the EFS with the factory image when the error condition is detected. The embodiments are not limited in this context.

In one embodiment for example the FSMM may be arranged to manage an EFS such as the EFS stored and implemented using memory . The EFS may comprise a file system having a set of abstract data types that are implemented for the storage hierarchical organization manipulation navigation access and retrieval of data. Consequently the EFS is a system apparatus and method for storing and organizing electronic files and electronic data within the electronic files in a manner that makes the files and data accessible to a system or user.

In one embodiment for example the EFS may comprise any EFS suitable for the power and form factor requirements of the mobile computing device . In one embodiment for example the memory may comprise a flash memory unit having various amounts of memory space. In one embodiment for example the memory may comprise a flash memory unit with 32 Megabytes MB 64 MB and so forth. In this case the EFS may comprise any number of electronic files and file data stored using the available memory space of the flash memory .

In various embodiments the FSMM may be arranged to create a factory image of the EFS . The factory image may comprise any type of information or data that may be used to restore replace or recreate the EFS . In some cases for example the factory image may represent a backup copy of the EFS . A backup copy typically refers to the copying of data so that these additional copies may be restored after a data loss event. Backups are useful to restore the EFS of the mobile computing device to an operational state following an error condition and restore some or all of the files after they have been accidentally deleted or corrupted. As shown in the factory image may be stored in the memory . Alternatively the factory image may be stored using other memory elements available to the mobile computing device such as the memory the SIM an SD card offline storage online storage e.g. a network server and so forth. The embodiments are not limited in this context.

In one embodiment for example the factory image may be created on a periodic basis. In various embodiments the FSMM may create the factory image of the EFS on a periodic basis or regular intervals such as every X number of minutes when the mobile computing device is placed in a powered state. Alternatively the FSMM may also create the factory image of the EFS in response to a system event such as when the mobile computing device is placed in an unpowered state. For example the FSMM may be programmed to automatically create the factory image upon removal or shut down of power from the power supply such as during a power down event or sequence. In another example the FSMM may be programmed to automatically create the factory image upon application of power from the power supply such as during a power up event or sequence. The FSMM may also be arranged to manually create the factory image in response to user commands. These various options may be configured by a user via I O interface or with default settings.

In the event more than one copy of the factory image is created the FSMM may be arranged to manage the multiple copies of the factory image using any number of file management techniques. For example the FSMM may use different version numbers to keep track of a most recent factory image . In another example the FSMM may use various types of metadata to keep track of various factory images such as a date a time a date and time a version number a copy number a user identifier ID a login ID and so forth. In some cases the FSMM may store a second factory image to a second set of storage media such as memory . For example if the one or more physical storage locations of the memory fails or becomes inoperative the factory image may be used to restore the EFS to a different memory resource for the mobile computing device such as the memory or SIM for example. This can also be done to rearrange the backup images to optimize restore speed or to have a second copy for safe keeping in a different location or on a different storage medium. The embodiments are not limited in this context.

In one embodiment for example the EFS may be compressed when creating the factory image. Since the factory image contains at least one copy of all data worth saving for the EFS the data storage requirements may be considerable. For example if memory can store 32 MB worth of data then the factory image needs to save up to 32 MB worth of data to make a proper backup copy for the EFS . To reduce storage requirements however the FSMM may be arranged to implement various data compression techniques to compress data for the EFS in order to reduce or conserve memory space consumed by the factory image . The FSMM may implement or use any data compression or source coding algorithm capable of encoding information using fewer bits or other information bearing units than an unencoded representation would otherwise use without the encoding scheme. The embodiments are not limited in this context.

In one embodiment for example the factory image may be encrypted. To reduce security risks the FSMM may implement various encryption techniques to encrypt the factory image . This may prevent access to the factory image from unauthorized access. This may be particularly desirable for example when the factory image is stored on removable media e.g. SIM or an SD card or on a separate device e.g. PC or network server .

In one embodiment for example the factory image may be stored in a reserved area or space of a flash memory unit. In various embodiments the FSMM may create the factory image and store the factory image in a reserved space of the memory . By storing the factory image in the reserved space there is a reduced chance of the same error condition that corrupted the EFS to also corrupt the factory image . Further this also reduces or eliminates the risk of the FSMM accidentally writing over data for the factory image during the normal course of file management operations for the EFS or when deleting or erasing the EFS in preparation of replacing or restoring the EFS with the factory image .

In one embodiment for example the factory image may be stored by a server. In addition to storing the factory image in different memory units available to the mobile computing device some embodiments may store the factory image in a device separate from the mobile computing device . For example the FSMM may create the factory image and transmit the factory image to another device such as a computer used to synchronize data with the mobile computing device . In another example the FSMM may transmit the factory image to a server or other online network storage device. The FSMM may transmit the factory image to the target device via the transceiver of the radio subsystem or any other radios available to the mobile computing device e.g. a WiFi transceiver Bluetooth transceiver and so forth . Upon detection of an error condition the FSMM may retrieve the factory image from the off site storage system and restore the EFS with the retrieved factory image .

In one embodiment for example the FSMM may be arranged to detect an error condition by monitoring power cycles for the radio. When the EFS becomes corrupted other components relying upon data from the EFS may hang or suspend operation of the mobile computing device . In some cases internal timers may be used to determine when to reboot the system in an attempt to re initialize the system. The FSMM may be arranged to monitor such power cycles and implement the EFS backup operations after a predetermined number of power cycles. Alternatively the FSMM may be arranged with one or more timers to trigger the EFS backup operations. The embodiments are not limited in this context.

In one embodiment for example the FSMM may be arranged to detect an error condition by performing periodic checks of data integrity. For example the FSMM may read a data sample from a file in the EFS compare the requested data sample with a defined data sample and detect the error condition when the requested data sample does not match the defined data sample.

Once the FSMM detects an error condition the FSMM may attempt to repair replace or restore the EFS using data from the factory image . In one embodiment for example the FSMM may completely delete all the files managed by the EFS and write corresponding files from the factory image to the memory . In one embodiment for example the FSMM may attempt to replace only those files that have been actually corrupted. In one embodiment for example the FSMM may attempt to restore one or more corrupted files rather than replacing the entire EFS . Once repaired replaced or restored the FSMM may request a reboot of the mobile computing device to instantiate the new EFS .

As shown in a situation may occur where the phone powers off or resets at block . Logic flow determines whether the power off condition or reset condition is caused by an error condition at block . If the power off condition or reset condition is not caused by an error condition at block then logic flow initiates backup operations to backup the EFS to create the factory image . Logic flow then proceeds to handle the power off or reset operations at block .

If the power off condition or reset condition however is caused by an error condition at block then logic flow determines whether the error condition is an error condition for a file or files from a corrupted EFS . If the error condition is an error condition for the EFS then logic flow increments a tracking flag at block . Logic flow then passes control to block . If the error condition is not an error condition for the EFS however then logic flow passes control directly to block .

As shown in logic flow begins with initiation of a power up sequence at block . For example the power up sequence may be performed by a boot loader system program comprising part of the system OS typically stored in firmware. Logic flow may determine whether a tracking flag is set at block . If the tracking flag is not set at block logic flow may handle subsequent power on operations at block . If the tracking flag is set at block however logic flow may retrieve and restore the most recent copy of the factory image to replace one or more files of the EFS at block . Logic flow may clear the tracking flag at block and pass control to block to handle subsequent power up operations.

Numerous specific details have been set forth to provide a thorough understanding of the embodiments. It will be understood however that the embodiments may be practiced without these specific details. In other instances well known operations components and circuits have not been described in detail so as not to obscure the embodiments. It can be appreciated that the specific structural and functional details are representative and do not necessarily limit the scope of the embodiments.

Various embodiments may comprise one or more elements. An element may comprise any structure arranged to perform certain operations. Each element may be implemented as hardware software or any combination thereof as desired for a given set of design and or performance constraints. Although an embodiment may be described with a limited number of elements in a certain topology by way of example the embodiment may include more or less elements in alternate topologies as desired for a given implementation.

It is worthy to note that any reference to one embodiment or an embodiment means that a particular feature structure or characteristic described in connection with the embodiment is included in at least one embodiment. The appearances of the phrase in one embodiment in the specification are not necessarily all referring to the same embodiment.

Although some embodiments may be illustrated and described as comprising exemplary functional components or modules performing various operations it can be appreciated that such components or modules may be implemented by one or more hardware components software components and or combination thereof. The functional components and or modules may be implemented for example by logic e.g. instructions data and or code to be executed by a logic device e.g. processor . Such logic may be stored internally or externally to a logic device on one or more types of computer readable storage media.

It also is to be appreciated that the described embodiments illustrate exemplary implementations and that the functional components and or modules may be implemented in various other ways which are consistent with the described embodiments. Furthermore the operations performed by such components or modules may be combined and or separated for a given implementation and may be performed by a greater number or fewer number of components or modules.

Unless specifically stated otherwise it may be appreciated that terms such as processing computing calculating determining or the like refer to the action and or processes of a computer or computing system or similar electronic computing device that manipulates and or transforms data represented as physical quantities e.g. electronic within registers and or memories into other data similarly represented as physical quantities within the memories registers or other such information storage transmission or display devices.

It is worthy to note that some embodiments may be described using the expression coupled and connected along with their derivatives. These terms are not intended as synonyms for each other. For example some embodiments may be described using the terms connected and or coupled to indicate that two or more elements are in direct physical or electrical contact with each other. The term coupled however may also mean that two or more elements are not in direct contact with each other but yet still co operate or interact with each other. With respect to software elements for example the term coupled may refer to interfaces message interfaces API exchanging messages and so forth.

Some embodiments may be implemented as an article of manufacture. The article of manufacture may include a storage medium to store logic and or data for performing various operations of one or more embodiments. The storage medium may represent any storage media capable of storing data or information such as volatile or non volatile memory removable or non removable memory erasable or non erasable memory writeable or re writeable memory and so forth. Examples of storage media may include without limitation those examples as previously provided for memory units. In various embodiments for example the article of manufacture may comprise a magnetic disk optical disk flash memory or firmware containing computer program instructions suitable for execution by a general purpose processor or application specific processor. The embodiments however are not limited in this context.

While certain features of the embodiments have been illustrated as described above many modifications substitutions changes and equivalents will now occur to those skilled in the art. It is therefore to be understood that the appended claims are intended to cover all such modifications and changes as fall within the scope of the embodiments.

