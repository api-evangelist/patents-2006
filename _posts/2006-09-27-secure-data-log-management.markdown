---

title: Secure data log management
abstract: In one embodiment a secure computer system comprises a processor and a memory module including logic instructions stored on a computer readable medium which. When executed by the processor, the logic instructions configure the processor to receive, in a secure computing environment, a portion of a data log from an application operating outside the secure computing environment, and when the portion of the data log exceeds a size threshold, to assign a timestamp to the portion of the data log, assign an identifier to the portion of the data log, create a digital signature load block comprising the portion of the data log, the timestamp, and the identifier, and store the digital signature load block in a memory module.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07996680&OS=07996680&RS=07996680
owner: Hewlett-Packard Development Company, L.P.
number: 07996680
owner_city: Houston
owner_country: US
publication_date: 20060927
---
This application relates to electronic computing and more particularly to secure data log management.

Computer system security remains an important issue. As computer networks expand the opportunity for malicious attacks on computer systems expands concomitantly. Hence additional computer security techniques are desirable.

Described herein are exemplary systems and methods for secure data log management. The methods described herein may be embodied as logic instructions on a computer readable medium. When executed on a processor the logic instructions cause a general purpose computing device to be programmed as a special purpose machine that implements the described methods. The processor when configured by the logic instructions to execute the methods recited herein constitutes structure for performing the described methods.

Memory includes an operating system for managing operations of computer . In one embodiment operating system includes a hardware interface module that provides an interface to system hardware . In addition operating system includes a file system that manages files used in the operation of computer and a process control subsystem that manages processes executing on computer . Operating system further includes a system call interface module that provides an interface between the operating system and one or more application modules and or libraries.

In operation one or more application modules and or libraries executing on computer make calls to the system call interface module to execute one or more commands on the computer s processor. The system call interface module invokes the services of the file system to manage the files required by the command s and the process control subsystem to manage the process required by the command s . The file system and the process control subsystem in turn invoke the services of the hardware interface module to interface with the system hardware .

The particular embodiment of operating system is critical to the subject matter described herein. Operating system may be embodied as a POSIX compliant operating system with secure memory partitions and mandatory access controls. For example the operating system that may be Common Criteria certified to evaluation levels of 5 or higher against established Common Criteria operating system protection profiles.

In one embodiment computer system implements a secure computing environment. For example computer system may implement trust methodologies that comply with level 3 or level 4 of the Federal Information Processing Standards Publications FIPS PUBS and issued by the National Institute of Standards and Technology as described in patent application Ser. No. 11 125 458 now U.S. Pat. No. 7 549 064 entitled Secure Circuit Assembly filed May 10 2005 the disclosure of which is hereby incorporated by reference in its entirety. The system may also implement a secure initialization paradigm described in commonly assigned U.S. Pat. No. 6 378 072 the disclosure of which is also incorporated herein by reference in its entirety.

In one embodiment a trusted cryptographic application layer runs on top of a secure operating system to provide security services the secure data log collection application will utilize as described in patent application Ser. No. 11 177 715 entitled Policy Based Cryptographic Application Programming Interface Deployed in Secure Memory filed Jul. 8 2005 U.S. Patent Publication No. 2007 0011736 the disclosure of which is hereby incorporated by reference in its entirety.

Operation of one embodiment of a system for secure data log management will be explained with reference to . is a schematic illustration of data flows in a computing system configured to implement secure data log management. Referring to an application generates a source data log . Application may execute within computing system or may execute on a remote computing system coupled to computing system via a communication network. Application and source data log may be implemented as any type of application that generates a data log. The particular details of application and source data log are beyond the scope of this disclosure.

Data from data log is delivered to data buffer module over a communication network via any suitable transport protocol e.g. HTTP FTP etc. and may be encrypted using one or more encryption techniques such as e.g. IPSec TLS or the like. shows a single application generating a single source data log . In practice any number of applications may generate one or more source data logs which may be delivered to data buffer module .

Data from the source data log is received via an interface module of computer system . Interface module may manage input output operations with data buffer module . Received data may be operated upon by data log module . is a flowchart illustrating operations implemented by data log module in one embodiment of a system for secure data log management. In one embodiment the interface module and the data log module may be located inside the certified FIPS boundary.

Referring to at operation a data stream from a source data log such as source data log is received. In some embodiments the data from data log may be pushed to computing system . In alternate embodiments computing system may need to pull data from data log .

In some embodiments data log module may implement one or more pre processing operations. For example if the data received is encrypted then data log module may implement a decryption operation to decrypt the received data. Data log module accumulates received data in a suitable memory location.

If at operation the amount of data received fails to exceed a threshold then control passes back to operation and the data log module continues to receive data. In some embodiments the threshold may be a static threshold that corresponds to an amount of data that can be packaged into a digital signature load block. In alternate embodiments the threshold may be a dynamic value.

By contrast when the amount of data exceeds the threshold control passes to operation and a timestamp is assigned to the received data. In one embodiment the time apparatus is also maintained inside the FIPS boundary such that the time stamp is a trusted time stamp. At operation an identifier is assigned to the received data and at operation a digital signature load block is created. In one embodiment creating a digital signature load block may include obtaining a digital signature for the load block. The digital signature may be generated locally on the hardware that is inside the FIPS boundary. The timestamp assigned in operation must represent a time at which the digital signature is generated and the identifier generated in operation may be implemented as an integer counter that indicates the position of the digital signature load block in a sequence of digital signature load blocks. After each digital signature is applied to a block the counter is incremented by the integer one. This insures that when blocks are retrieved that deleted blocks can be detected. Observe that the data in the load block may be encrypted with a symmetric encryption algorithm e.g. Triple DES AES etc. before the digital signature is applied.

At operation the digital signature load block is stored in a memory module. Because a digital signature has already been applied to this data this memory module disk etc does not have to be inside the FIPS boundary. To further secure computing system operating system may be implemented in compliance with a Common Criteria Evaluation Assurance Level EAL 5 which implements memory partitions that prevent applications using the operating system from compromising other applications running on the operating system.

Thus the computing system may maintain one or more data buffer modules each of which includes a plurality of data buffers i.e. buffer buffer buffer up to buffer N . When the computer system receives an incremental data log i.e. the system stores this data in a temporary buffer inside the secure boundary. The schematic illustration depicted in demonstrates a single source data log and a single buffer. In alternate embodiments the computer system may accommodate additional source data logs. For example assume the computer system collects data from three log sources. Each of the log sources will incrementally produce a data log which will each be stored in a different memory buffer module.

When a buffer threshold is reached the threshold may be different for each source a count and timestamp are generated and the digital signature is applied to the buffer entries timestamp and count which become one load block for that source. The load block can then be written into a database on disk i.e. digital signature and data in Buffer A Buffer A Buffer A N . After that action the incremental buffers may be erased to accommodate new incremental data.

Once the digital signature load blocks are stored in the memory module the data associated with the digital signature data blocks may be used by one or more applications executing on computing system or on a remote computing system coupled to computing system . is a flowchart illustrating operations in one embodiment of a system for secure data log management. In one embodiment the operations of may be implemented by the data log module .

Referring to at operation a request for data stored in the secure data buffer module is received in the computing system . The request may be initiated one or more applications executing on computing system or on a remote computing system coupled to computing system .

At operation one or more digital signature blocks that contain the requested data of interest may be retrieved from memory i.e. from the data buffer module . At operation one or more of the digital signature blocks and the data in the signature blocks may be verified. Verification may include confirming that digital signature blocks retrieved from data log are in the correct sequence order and that in the span of blocks retrieved there are no gaps in sequence numbers which would indicate detection of a block deletion for example by comparing the identifiers associated with the respective digital signature loads. At operation the retrieved data may be transferred to the requesting entity. In some embodiments the retrieved data may be encrypted before the data is transmitted to requesting entity in which case the requesting entity may be required to authenticate itself to the computer system . In the event that contents of the data blocks are already encrypted such encryption for transfer would not be necessary. Verification of the digital signature may occur inside the FIPS boundary. Evaluation of the unique identifiers on the span of data blocks should also be performed in the FIPS boundary.

Some embodiments discussed herein may include various operations performed by hardware components or may be embodied in machine executable instructions which may be in turn utilized to cause a general purpose or special purpose processor or logic circuits programmed with the instructions to perform the operations. Alternatively the operations may be performed by a combination of hardware and software.

The various components and functionality described herein are implemented with a number of individual computers. shows components of typical example of such a computer referred by to reference numeral . Generally various different general purpose or special purpose computing system configurations can be used. Examples of well known computing systems environments and or configurations that may be suitable for use with the invention include but are not limited to personal computers server computers hand held or laptop devices multiprocessor systems microprocessor based systems set top boxes programmable consumer electronics network PCs minicomputers mainframe computers distributed computing environments that include any of the above systems or devices and the like.

The functionality of the computers is embodied in many cases by computer executable instructions such as program modules that are executed by the computers. Generally program modules include routines programs objects components data structures etc. that perform particular tasks or implement particular abstract data types. Tasks might also be performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules may be located in both local and remote computer storage media.

The instructions and or program modules are stored at different times in the various computer readable media that are either part of the computer or that can be read by the computer. Programs are typically distributed for example on floppy disks CD ROMs DVD or some form of communication media such as a modulated signal. From there they are installed or loaded into the secondary memory of a computer. At execution they are loaded at least partially into the computer s primary electronic memory. The invention described herein includes these and other various types of computer readable media when such media contain instructions programs and or modules for implementing the steps described below in conjunction with a microprocessor or other data processors. The invention also includes the computer itself when programmed according to the methods and techniques described below.

For purposes of illustration programs and other executable program components such as the operating system are illustrated herein as discrete blocks although it is recognized that such programs and components reside at various times in different storage components of the computer and are executed by the data processor s of the computer.

With reference to the components of computer may include but are not limited to a processing unit a system memory and a system bus that couples various system components including the system memory to the processing unit . The system bus may be any of several types of bus structures including a memory bus or memory controller a peripheral bus and a local bus using any of a variety of bus architectures. By way of example and not limitation such architectures include Industry Standard Architecture ISA bus Micro Channel Architecture MCA bus Enhanced ISA EISA bus Video Electronics Standards Association VESA local bus and Peripheral Component Interconnect PCI bus also known as the Mezzanine bus.

Computer typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by computer and includes both volatile and nonvolatile media removable and non removable media. By way of example and not limitation computer readable media may comprise computer storage media. Computer storage media includes volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical disk storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by computer .

The system memory includes computer storage media in the form of volatile and or nonvolatile memory such as read only memory ROM and random access memory RAM . A basic input output system BIOS containing the basic routines that help to transfer information between elements within computer such as during start up is typically stored in ROM . RAM typically contains data and or program modules that are immediately accessible to and or presently being operated on by processing unit . By way of example and not limitation illustrates operating system application programs other software components and program data .

The computer may also include other removable non removable volatile nonvolatile computer storage media. By way of example only the computer system of may include a hard disk drive that reads from or writes to non removable nonvolatile magnetic media a magnetic disk drive that reads from or writes to a removable nonvolatile magnetic disk and an optical disk drive that reads from or writes to a removable nonvolatile optical disk such as a CD ROM or other optical media. Other removable non removable volatile nonvolatile computer storage media that can be used in the exemplary operating environment include but are not limited to magnetic tape cassettes flash memory cards digital versatile disks digital video tape solid state RAM solid state ROM and the like. The hard disk drive is typically connected to the system bus through a non removable memory interface such as data media interface and magnetic disk drive and optical disk drive are typically connected to the system bus by a removable memory interface.

The drives and their associated computer storage media discussed above and illustrated in provide storage of computer readable instructions data structures program modules and other data for computer . In for example hard disk drive is illustrated as storing operating system application programs software components and program data . Note that these components can either be the same as or different from operating system application programs software components and program data . Operating system application programs other program modules and program data are given different numbers here to illustrate that at a minimum they are different copies. A user may enter commands and information into the computer through input devices such as a keyboard and pointing device commonly referred to as a mouse trackball or touch pad. Other input devices not shown may include a microphone joystick game pad satellite dish scanner or the like. These and other input devices are often connected to the processing unit through an input output I O interface that is coupled to the system bus but may be connected by other interface and bus structures such as a parallel port game port or a universal serial bus USB . A monitor or other type of display device is also connected to the system bus via an interface such as a video adapter . In addition to the monitor computers may also include other peripheral output devices e.g. speakers and one or more printers which may be connected through the I O interface .

The computer may operate in a networked environment using logical connections to one or more remote computers such as a remote computing device . The remote computing device may be a personal computer a server a router a network PC a peer device or other common network node and typically includes many or all of the elements described above relative to computer . The logical connections depicted in include a local area network LAN and a wide area network WAN . Although the WAN shown in is the Internet the WAN may also include other networks. Such networking environments are commonplace in offices enterprise wide computer networks intranets and the like.

In some embodiments the computing system may be implemented as a secure computing system. Hence various components such as e.g. processor ROM and RAM and its components operating system application programs software components and program data may be inside a FIPS boundary. Further operating system may implement secure memory partitions and access controls such as e.g. common criteria EAL 5 .

When used in a LAN networking environment the computer is connected to the LAN through a network interface or adapter . When used in a WAN networking environment the computer typically includes a modem or other means for establishing communications over the Internet . The modem which may be internal or external may be connected to the system bus via the I O interface or other appropriate mechanism. In a networked environment program modules depicted relative to the computer or portions thereof may be stored in the remote computing device . By way of example and not limitation illustrates remote application programs as residing on remote computing device . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.

Moreover some embodiments may be provided as computer program products which may include a machine readable or computer readable storage medium having stored thereon instructions used to program a computer or other electronic devices to perform a process discussed herein. The machine readable storage medium may include but is not limited to floppy diskettes hard disk optical disks CD ROMs and magneto optical disks ROMs RAMs erasable programmable ROMs EPROMs electrically EPROMs EEPROMs magnetic or optical cards flash memory or other suitable types of media or computer readable media suitable for storing electronic instructions and or data. Moreover data discussed herein may be stored in a single database multiple databases or otherwise in select forms such as in a table .

Reference in the specification to one embodiment or an embodiment means that a particular feature structure or characteristic described in connection with the embodiment is included in at least an implementation. The appearances of the phrase in one embodiment in various places in the specification are not necessarily all referring to the same embodiment.

