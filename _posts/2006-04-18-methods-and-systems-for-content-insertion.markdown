---

title: Methods and systems for content insertion
abstract: A method for content insertion is provided. In this method, a first media data is received from a server and a placement request is transmitted to a content provider service. As a result, a placement response is received from the content provider service. The placement response includes data identifying a second media data associated with the first media data. The second media data is retrieved and merged with the first media data. After the merge, the first and second media data are transmitted to the server.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08291095&OS=08291095&RS=08291095
owner: Limelight Networks, Inc.
number: 08291095
owner_city: Tempe
owner_country: US
publication_date: 20060418
---
This application claims the benefit of U.S. Provisional Application No. 60 673 128 filed Apr. 20 2005 which is herein incorporated by reference.

The present invention relates generally to software and more particularly to methods and systems for content insertion.

There are a variety of techniques to distribute and receive media data e.g. audio files video files etc. over a computer network. For example podcasting is the distribution of media data such as radio programs or music videos over the Internet using World Wide Web Web feeds. Advertisers advertise on podcasts by placing advertisements in the distributed media data. For example a listener may listen to a short radio announcement from an advertiser before the start of the radio program.

Currently advertisements are manually combined with the media data such that the advertisements become a permanent part of the media data. For example once the advertisement is placed at the start of the radio program the advertisement will always play at the start of the radio program. An advertiser cannot change the advertisement to a different time or location within the radio program.

Furthermore to determine the effectiveness of advertisements advertisers typically track the number of times the advertisements are distributed or downloaded. A conventional tracking technique is to access the server logs to determine how many times the media data has been transmitted. However accessing the server logs is inconvenient and the server logs cannot track when the advertisement was actually downloaded. Another conventional tracking technique is to attach a redirect e.g. Universal Resource Locator URL directed to a tracking service at the header of a response. Thus instead of providing the media data an URL to the media data is provided in the response. Every time the media data is requested a client is redirected to the tracking service that tracks the number of times the advertisements are requested and provides the media data with the advertisements to the client. Therefore to accurately track the advertisements a redirect must be attached to every reference to the media file. Since there may be a large number of references to the media data across the Internet and because some of those references may be outside the control of the content owner it is difficult to ensure that a redirect is attached to all requests. Thus the attachment of redirects to track advertisements can be highly inaccurate.

As a result there is a need for continuing efforts to improve the placement of advertisements or other contents on media data transmitted over a computer network.

Various embodiments may be implemented in numerous ways including as a system a process an apparatus or as computer program instructions included on a computer readable medium such as a computer readable storage medium or a computer network wherein program instructions are sent over optical or electronic communication links. In general the steps of disclosed processes may be performed in an arbitrary order unless otherwise provided in the claims.

A detailed description of one or more examples is provided below along with accompanying figures. The detailed description is provided in connection with such examples but is not limited to any particular embodiment. The scope is limited only by the claims and numerous alternatives modifications and equivalents are encompassed. Numerous specific details are set forth in the following description in order to provide a thorough understanding. These details are provided for the purpose of example and the described embodiments may be implemented according to the claims without some or all of these specific details. For the purpose of clarity technical material that is known in the technical fields related to the embodiments has not been described in detail to avoid unnecessarily obscuring the description.

The embodiments described herein provide methods and systems for placing an advertisement or other content into media data transmissions for distribution across a computer network. In general a server e.g. World Wide Web Web server retrieves an advertisement and inserts the advertisement into a transmission of media data e.g. a Web feed . In some embodiments as will be explained in more detail below the placement of advertisement may be tracked by counting the number of placement requests transmitted by the server.

Advertisers or other content producers may want to insert other media data into the media data produced by content producers . For example advertisers may want to publicize their products or services to users by inserting advertisements into the media data provided by content producers . Advertisers create or produce media data and upload the media data to content provider service . Content provider service allows advertisers to manage the distribution of their media data. For example advertisers may use content provider service to manage their advertising policy. Furthermore content provider service also transmits the media data provided by advertisers to server for distribution to user by way of Internet . A variety of hosting services may host content provider service . For example in some embodiments content provider service may be integrated into the content management tools that are hosted on a hosting service selected by advertisers . In addition to providing advertisers with the ability to manage media data content provider service allows a large network of content producers to have access to a large network of advertisers and vice versa. For example content producers can search for one or more advertisers though content provider service . With advertisers located content producers may create an offer to the advertisers to carry the content i.e. media data provided by the advertisers. By way of content provider service advertisers may accept or reject the offer. In another example an entity may be both content producers and advertisers . In other words both content producers and advertisers may be represented by the same entity. Here for instance the entity can use content provider service to manage the advertisement sales of its advertisements. A sales organization within the entity could setup the advertisers and the entity may use content producers both as content producers and advertisers to create and manage the advertisement campaigns.

Server receives the media data provided by content producers and by advertisers . It should be appreciated that server is a computing device configured to execute software applications. Exemplary server includes Web servers FTP servers and other servers. Server hosts a filter module and as will be explained in more detail below the filter module may be configured to insert the media data provided by advertisers into the media data provided by content producers . In other words the filter module merges the media data provided by content producers with the media data provided by advertisers .

After the insertion server transmits the merged media data to media processing software . Media processing software receives or downloads the merged media data and is configured to render the merged media data onto speakers displays and other devices. Exemplary media processing software includes Windows Media Player iTunes WinAmp iPodder and other media processing software. Media processing software may receive merged media data by way of Internet computer networks or other communication channels. For example in an embodiment server may transmit the merged media data to media processing software by way of Internet using HyperText Transfer Protocol HTTP File Transfer Protocol FTP Voice over Internet Protocol VoIP or other communication protocols.

In general as will be explained in more detail below content provider service identifies the media data provided by advertisers to be inserted into the media data provided by the content producers. Content provider service transmits the identification in a placement response to a placement request made by filter module . Content provider service may also transmit the media data provided by advertisers to filter module . In some embodiments content provider service may additionally include multimedia codec to encode and or decode media data provided by advertisers into different media formats sizes and or sample rates as requested by server .

On the other hand if the first media does match the criteria the filter module transmits a placement request to the content provider service in operation . In some embodiments the placement request may be an HTTP request where the server can serve as an HTTP client and the content provider service can serve as an HTTP server. The server and the content provider service may communicate for example with Representational State Transfer REST or Simple Object Access Protocol SOAP . The placement request may include identification and or authentication data that identify the content producers listeners listener locations and other identification and or authentication data. The placement request may additionally include data identifying the first media data. For example the data identifying the first media data may be a list of entries based on the contents of the first media data e.g. Extensible Markup Language XML feed requested by the media processing software. The entries may include an article link URL that refers to the text html article for the first media data. For instance with RSS 2.0 the article may correspond to the contents of the element of an element which uniquely identifies the entries. In another example the entries may include a content link URL that refers to MP3 data or other media formats such as WMA. With RSS 2.0 the content link URL may correspond to an element. In still another example the entries may include a content type that is a text field defining the media format of the file referred to by the content link. For instance the text field may include audio mpeg for first media data with an MP3 media format. In RSS 2.0 the content type may correspond to the element.

As a result of the placement request in operation the filter module receives a placement response associated with the first media from the content provider service. In some embodiments as will be explained in more detail below the placement response may include data that identifies the media data provided by advertisers or other content providers hereafter second media data associated with the first media data. The placement response may also include other identification and or authentication data. With the information included in the placement response e.g. data identifying the second media data and identification and or authentication data the filter module retrieves the second media data in operation . In an embodiment the filter module may send a content request for the second media data to the content provider service. In response the content provider service retrieves the second media data stored at the content provider service and transmits the second media data to the server. Alternatively in another embodiment the filter module may first check whether the second media data has been previously retrieved and stored in a cache for example the cache associated with the server shown in . If the second media data is stored in the cache then the filter module retrieves the second media data from the cache. However if the second media data is not stored in the cache then the filter module transmits the content request for the second media data to the content provider service.

Thereafter in operation the filter module may insert the second media data into the first media data at the location associated with the first media data. In other words in an embodiment the filter module merges the first media data with the second media data. It should be appreciated that in an embodiment the second media data may be inserted into the first media data such that the second media data interrupts the first media data. For example a still picture that is inserted and that interrupts the action of a video. In another embodiment the second media data may be inserted into the first media data such that the second media data becomes a portion of the first media data. For example scrolling text may be inserted into a portion of a video. In another example a semi transparent logo may be inserted as an overlay at a corner portion of a picture.

The second media data may be inserted at the beginning of the first media data inserted at the end of the first media data or inserted at a location between the beginning and the end of the first media data. To insert the second media data at the beginning or at the end of the first media data the filter module concatenates together the first media data and the second media data. In an embodiment a period of silence e.g. one second may be inserted between the first media data and the second media data to differentiate the second media data from the first media data.

To insert the second media data at a location between the beginning and the end of the first media data a variety of insertion techniques may be used. For example a quiet space detection technique may be used. With quiet space detection a location associated with the first media data which is included in the response is initially located. The location may be for example identified by the span of time associated with the first media data e.g. every ten minutes at twenty seconds and other time and or length associated with the first media data e.g. at two bytes at 2000 kilobytes . From this location associated with the first media data two imaginary pointers are extended from the beginning of the of the first media data to the end of the first media data. Thereafter each pointer is extended outwards from the location by a certain number of bytes corresponding to a time range for example one half second in each direction which would create a window of one second.

If the maximum volume of the first media data within this window is below a specified threshold then the first media data within this window may be a quiet space designated for the second media data and the second media data may be inserted in the middle of the window. A specified time may be inserted at the ends of the second media data for example one half second of silence at both ends of the second media data. However if the maximum volume within the window exceeds the specified threshold then the window is moved towards both the beginning and the end of the first media data until the maximum program volume of the window is below the specified threshold. At this location the second media data is inserted. If the window has moved more than a specified time and the maximum program volume is still greater than the specified threshold then the second media data is not inserted into the first media data.

Another exemplary approach to insert the second media data at a location between the beginning and the end of the first media data is the explicit marker approach. With the explicit marker approach the location within the first media data can be marked where the second media data can be inserted. A variety of marking techniques may be used. For example first media data can include metadata tags that can indicate locations e.g. via byte offset where second media data can be inserted. For instance with MP3 based first media data locations may be stored in custom ID3 tags. Another exemplary marking technique includes signature byte markers where a sequence of bytes that identifies the location of insertion may be inserted into the first media data.

If the first media data includes metadata e.g. ID3v1 or ID3v2 tags on MP3 files the metadata can be preserved in the insertion operation. On the other hand the metadata associated with the second media data may be erased when inserted into the first media data. It should be appreciated that in another embodiment the filter module may delegate or direct the insertion operation to another software module e.g. an insertion module or computing device configured to insert the second media data into the first media data. For example in an embodiment the filter module may transmit both the first media data and the second media data to the insertion module for insertion operations. After insertion the insertion module transmits the first and second media data i.e. merged media data to the filter module. In another exemplary embodiment the filter module may receive data identifying a location of the first media data e.g. URL pointers and other location identifiers from the server and receive data identifying a location of the first media data from the placement response. The filter module then transmits the data identifying the locations of the first media data and the second media data to the insertion module. The insertion module retrieves the first media data and second media data based on the data identifying the locations of the first media data and the second media data. Thereafter the insertion module merges the first media data with the second media data and transmits the merged media data to the filter module. The filter module then transmits the merged media data to the server in operation . The server subsequently transmits the merged media data to a media processing software.

The content service provider receives the placement request when media processing software requests the first media data. Therefore in some embodiments the number of placement requests received from the server may be tracked. In other words the content provider service may store a count of the number of placement requests received. The number of placement requests received may correspond to the number of advertisements placed. Accordingly tracking the number of placement requests can correspond to tracking the number of advertisements placed. Furthermore the filter module can detect when a transmission or download to the media processing software is complete or incomplete. In other words the filter module can detect when the first and second media data are not completely transferred to the media processing software. If the transmission is incomplete the filter module can request the content provider service to reduce or subtract the count of the number of placement requests received. The reduction of the count may be dependent on the particulars of the placement requests. For example if the HTTP header identifies that a Flash based player is requesting the first media data and enough bytes have been transmitted such that the Flash based player had played an advertisement i.e. second media data appearing at the beginning of the first media data then the filter module may not transmit the request to reduce the count. On the other hand if a Web browser was requesting the first media data the Web browser would delete an incomplete first media data. Accordingly the filter module may transmit a request to reduce the count for incomplete transmissions to Web browsers. In response to the request the content provider service may reduce the count of the number of placement requests received.

After authentication the content provider service extracts data e.g. data identifying the first media data from the placement request in operation . In an embodiment the content provider service then searches for data that are associated with the first media data in operation based on the data extracted from the request. In another embodiment the content provider service may also search for data that are associated with other identification and or authentication data included in the placement response. For example data may include data identifying media data provided by advertisers hereinafter second media data that may be inserted into the first media data. Another exemplary data may include a location associated with the first media data.

Thereafter a placement response is composed in operation . In some embodiments the placement response may be composed by formatting the data identifying the second media data and the location associated with the first media data into the placement response. The placement response may include a list of entries where each entry can include data identifying the second media data. For example data can include a second media data identifier that uniquely identifies the second media data within the content provider service. The entry may additionally include the location associated with the first media data. For instance a location code that indicates the time associated with the first media data where the second media data is to be inserted within the first media data. With the placement response composed the content provider service transmits the placement response to the server in operation .

In some embodiments the attributes associated with the second media data can match the attributes associated with the media data provided by content providers hereinafter first media data . If the attributes are different then the second media data may be resampled converted decoded and or coded in operation to match the attribute of the first media data. For example the second media data may be resampled to match the bit rate of the first media data. In another example to match the media format of the first media data the second media data may be recoded to MP3 format. It should be appreciated that a variety of known multimedia codecs such as the multimedia codec of may be included in the content service provider to resample decode encode the second media data. In another embodiment the filter module may also include codecs to resample decode encode the second media data. Still referring to after the second media data is retrieved the content provider service transmits the second media data to the server in operation .

According to some embodiments of the invention computer system performs specific operations by processor executing one or more sequences of one or more instructions stored in system memory . Such instructions may be read into system memory from another computer readable medium such as static storage device or disk drive . In some embodiments hard wired circuitry may be used in place of or in combination with software instructions to implement the invention.

The term computer readable medium refers to any medium that participates in providing instructions to processor for execution. Such a medium may take many forms including but not limited to non volatile media volatile media and transmission media. Non volatile media includes for example optical or magnetic disks such as disk drive . Volatile media includes dynamic memory such as system memory . Transmission media includes coaxial cables copper wire and fiber optics including wires that comprise bus .

Common forms of computer readable media includes for example floppy disk flexible disk hard disk magnetic tape CD ROM punch cards paper tape solid state disk drives or any other physical medium with patterns of holes RAM PROM EPROM FLASH EPROM any other memory chip or cartridge or any other physical medium from which a computer can read.

In some embodiments of the invention execution of the sequences of instructions to practice the invention is performed by a single computer system . According to some embodiments of the invention two or more computer systems coupled by communication link e.g. LAN PSTN or wireless network may perform the sequence of instructions to practice the invention in coordination with one another. Computer system may transmit and receive messages data and instructions including program i.e. application code through communication link and communication interface . Received program code may be executed by processor as it is received and or stored in disk drive or other non volatile storage for later execution.

The above described embodiments provide methods and systems for inserting advertisements or other contents into media data transmissions and tracking the number of placed or inserted advertisements. By inserting the advertisements into the media data at the server that distributes the media data the advertisements may be dynamically inserted at a variety of places within the media data. Furthermore a count of the placement requests received by the content provider service provides an accurate tracking of the placed advertisements.

Although the foregoing embodiments have been described in some detail for purposes of clarity of understanding implementations of the above described system and techniques is not limited to the details provided. There are many alternative implementations and the disclosed embodiments are illustrative and not restrictive.

