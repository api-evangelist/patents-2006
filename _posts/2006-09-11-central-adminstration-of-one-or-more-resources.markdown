---

title: Central adminstration of one or more resources
abstract: A central administration tool or manager supports entry or selection of attribute data or datum (e.g., an attribute value) associated with at least one of a resource and a user. The entered or selected attribute data is arranged into a data structure (e.g., a file) for transmission over a communications network. The data structure is transmitted over the communications network to a directory interface. The transmitted data structure is processed to be compatible with interpretation by a directory services system. The directory services system is invoked consistent with the contents of the data structure (e.g., the file) and the previous processing of the data structure. Resources (e.g., applications) that are under the control of the directory services are managed consistent with the contents of the data structure.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08291096&OS=08291096&RS=08291096
owner: Accenture Global Services Limited
number: 08291096
owner_city: Dublin
owner_country: IE
publication_date: 20060911
---
This application is a divisional patent application of application Ser. No. 10 288 275 filed Nov. 5 2002 now pending the entire contents of which are incorporated herein by reference wherein Applicants claim under 35 U.S.C. 119 e the benefit of priority of the filing date of Nov. 5 2001 of U.S. Provisional Patent Application Ser. No. 60 332 874 filed on the aforementioned date.

This invention relates to a security administration method and system for remotely managing and administering one or more resources via a communications network.

In the prior art a server may have an administrative module for management of the administration of one or more resources associated with the server. The administration module typically supports local access of an administrator for management or administration of one or more of the following users groups and resources. Local access may mean that an administrator or a technician may perform maintenance or operations support by electrically or electromagnetically coupling a terminal to a port of the server.

To revise settings associated with users an administrator may need to travel to a server located at a remote location. Travel expenses and the attendant delay associated with traveling may increase the time required for the implementation of an additional resource troubleshooting of an existing resource modification of settings to comply with user preferences or other modifications. Thus a need exists for administration and management of resources remotely via a communications network such as the Internet.

In accordance with the invention a central administration tool or manager supports entry or selection of attribute data or datum e.g. an attribute value associated with at least one of a resource and a user. The entered or selected attribute data is arranged into a data structure e.g. a file for transmission over a communications network. The data structure is transmitted over the communications network to a directory interface. The transmitted data structure is processed to be compatible with interpretation by a directory services system. The directory services system is invoked consistent with the contents of the data structure e.g. the file and the previous processing of the data structure. Resources e.g. applications that are under the control of the directory services are managed consistent with the contents of the data structure.

Accordingly an administrator may administer resources remotely from a central administrative tool which may be located at a central site apart from the directory services system. The elimination of travel expenses and delays from the central administration tool reduce the cost of administering resources. Further the central administrative tool may support batch or aggregate transactions that relate to multiple users multiple attributes multiple groups and multiple resources to promote a convenient process for administering resources to one or more data processing systems e.g. servers .

In accordance with the invention shows a block diagram of a client server data processing system or a network. The client server data processing system includes a central administration tool for administering maintenance and operation for one or more clients that seek access to one or more resources e.g. and via an internal network or another communications network. A central administration tool communicates with a server via a communications network e.g. the Internet . A user interface is coupled to the central administration tool to support an administrator s entry or selection of information such as attributes of users attributes of groups attributes of resources attributes of objects access of users or groups to resources configurations or other data associated with operations and maintenance of the client server data processing system .

The server may be coupled to one or more clients via an internal network e.g. intranet . The server may be coupled to a storage device that stores a database . Clients e.g. user terminals may seek access to a first resource e.g. a first application associated with the server or a second resource via the internal network .

The central administration tool comprises a data entry module coupled to a format converter arranger . Further the central administration tool includes a transmitter in communication with the format converter arranger . A security controller may manage an administrator s remote access to the first resource the second resource or both to facilitate the management of attribute data. The security controller may support an administrator s entry of a global password and an account identifier e.g. log in identifier via the user interface to gain access to one or more resources in a single transaction from the administrator s perspective.

An administrator or user may select or enter attribute values of attributes via the user interface as supported by the data entry module . In one embodiment the user interface comprises a graphical user interface and the data entry module cooperates with and supports the graphical user interface. The data entry module facilitates an administrator s entry of data on attributes attribute values or other parameters associated with resources objects users or groups. In one embodiment the data entry module may facilitate the selection of data attributes and data attribute values on an electronic form or template. In another embodiment the data entry module supports menu driven data input into the user interface .

The format converter arranger accepts the entered data from the data entry module and converts or arranges the entered data into a file format or another data structure that is suitable for communication over the communications network . For example format converter arranger may comprise an extensible markup language XML converter. The format converter arranger may be coupled to the transmitter . Extensible markup language is a specification for an electronic document or a file that is compatible for transmission over the Internet or another communications network. XML defines the data structure that supports customization of tags to support the definition transmission validation and interpretation of data between different entities or users.

The transmitter may support the transmission of data packets or another data structure over the communications network. In one embodiment the transmitter may support the transmission of the formatted file or another data structure consistent with HTTP HTTPS or another suitable format. HTTP refers to hypertext transfer protocol and HTTPS refers to hypertext transfer protocol in a secure e.g. encrypted mode. HTTP is a protocol that defines the format of the messages the transmission of the messages and the response of network devices e.g. web browsers . HTTPS supports the secure transfer of one or more messages over a communications network.

In an alternate embodiment the communications between the central administration tool and the server may take place via a virtual private network a dedicated link a public switched telephone network PSTN or by another suitable communications technique.

The server comprises a receiver which is arranged to receive a transmission of a data structure e.g. an XML file data packets or another suitable data structure from the transmitter . The receiver is coupled to a directory interface . In turn the directory interface is coupled to a directory services system . The server or an associated computer may host or support a first resource e.g. a first application . A second resource may be coupled to the internal network and may be associated with an additional server computer or network element.

The receiver receives the transmitted data structure e.g. an XML file from the central administration tool via the communications network . The receiver may comprise a data packet receiver for example. The receiver may contain a buffer for buffering the file or data structure upon receipt. The receiver is coupled to a directory interface . The directory interface may parse or otherwise process data in the data structure e.g. an XML file for arrangement in a format that is compatible with the directory services system .

As shown in the directory services system includes a central authentication module for authorization and authentication of one or more clients who seek access to at least one resource e.g. or . The central authentication module supports requests for an access grant of the clients via the internal network . In one embodiment the central authentication module may grant access of one or more clients to one or more resources e.g. the first resource or the second resource consistent with the entry of a password and a proper log in identifier. The central authentication module first authenticates whether a password and log in identifier e.g. account identifier are genuine for a particular client and then may provide access to the client to one or more resources upon confirmation of the authenticity of the log in identifier and password.

The central authentication module may use encryption techniques and other security measures instead of or in addition to a password log in identifier and a password for example. Other security measures may include verification of a user s use of a log on terminal a log on domain and a log on organization as conditions prior to the grant of access to one or more resources. Further the directory services system may restrict the extent that features or capabilities associated with resources are available to clients or users.

In one embodiment the central authentication module may support an archive of error logs and success logs for defined time intervals e.g. daily . Error logs represent a record of unsuccessful log on attempts which may be reviewed from the user interface . Success logs represent a record of successful log on attempts which may be reviewed from the user interface .

As shown in the first resource and the second resource include a first security manager and a second security manager . The first security manager and the second security manager may comprise security modules that are under the control of the central authentication module of the directory services system . In one embodiment the first security manager may have a first set of passwords and log in identifiers for granting access of one or more clients to the first resource . Similarly the second resource identifier may have a second set of log in identifiers and passwords for granting access of one or more clients to the second resource . Accordingly the first security manager and the second security manager may have different user names and different passwords for the same users unless the first security manager and the second security manager are coordinated.

In an alternate embodiment the central authentication module may support a global password and global identifier that allows a user to enter the global password and the global identifier once from a client terminal and obtain access to one or more resources e.g. the first resource and the second resource without the necessity of the following 1 re entering a password and corresponding identifiers multiple times or 2 manually entering different passwords and different identifiers for the first access manger and the second security manager .

A directory service system may comprise a commercially available directory service such as LDAP lightweight directory access protocol network directory service NDS an Active Directory and a X.500 ITU standard service. ITU refers to the International Telecommunications Union. LDAP supports resources such as e mail addresses and printer addresses of a network. Lightweight Directory Access Protocol LDAP is a set of protocols for accessing information directories. LDAP is based at least partially on the X 500 ITU standard and supports TCP IP for Internet type communications. X.500 refers to an ITU standard that defines the structure of global directories in accordance with a hierarchical scheme. LDAP is compliant with at least a portion of the X.500 ITU standard. LDAP is an open protocol such that is compatible with different type formats and different servers hosting directory services. Access to a public key is from encryption is another resource that may be supported by a directory service.

NDS or Novell directory services is compliant with the X.500 standard. NDS provides a tree structure view of resources available via a communications network so a user can access the resource through a convenient index. Network Directory Service NDS is used for Novell Netware networks.

An Active Directory is a directory service that is associated with a Windows 2000 operating system or another operating system available from Microsoft Corporation. Windows 2000 operating system is a trademark of Microsoft Corporation. In one embodiment the directory services system comprises a light weight directory access protocol LDAP compliant directory services system such as a Windows 2000 Active Directory. Windows 2000 is a trademark of Microsoft Corporation.

The directory services system may interact with the directory interface via scripts or via data files that are placed in a certain data structure format. Scripts mean instructions or program modules such as macros. In one embodiment the directory interface comprises a visual basic program or another program that is supported by an application programming interface associated with the directory services system . The directory services system includes the central authentication module .

The directory services system is invoked consistent with the contents of the received file or data structure e.g. an XML file . The received file refers to the file that was received by receiver . The directory services system may apply an action to a directory service such as the provision of access of a client or user to a resource. The action may include a modification deletion or addition of attribute data associated with one or more of the following the directory services system the first resource the second resource a resource an object a user and a group of users.

In an alternate embodiment the directory service system may be readily customized and scaled to support non standard directory attributes or non standard attributes of users or non standard attribute values.

The system may support multiple levels of security. In one embodiment a primary level of security is provided by the central authentication module or another security component of the directory services system . One or more secondary levels of security are associated with the security components e.g. of corresponding applications or resources e.g. .

The central administration tool allows an administrator to add new users to the directory services and new users to individual applications by means of a group membership. The group membership may be expressed as attribute data. If a user is moved to a directory services group secondary security information or secondary application specific information is updated in a security component e.g. of the directory services system and in a secondary security component e.g. or associated with a resource. Where the applicable resource is an application the secondary component data may be referred to generically as an application security store.

In step S a user enters or selects attribute data or an attribute datum e.g. an attribute value associated with the user a resource or both. Attribute data may define user attributes resource attributes or both. A resource may refer to one or more of the following the first resource the second resource another resource an object a printer a router a server a database a network element a computer program and an application. The user may select or enter at least one attribute value or attribute from a user interface coupled to the central administration tool . In one embodiment the selection of an attribute data may occur by making entries on an electronic form or template that is displayable via the user interface . In such a case the user interface may comprise a browser e.g. an Internet browser . In another embodiment the user interface supports a menu driven format for entry of attribute data.

The displayable electronic form or menu driven format of the user interface allows an unsophisticated user to make entries in an error free or accurate manner. Accordingly the form or menu driven entries may prevent or eliminate mistakes and allow less sophisticated employees to act as administrators or to participate in the administration of resources associated with clients .

User attributes include respective characteristics that are associated with a corresponding user or client. The attributes may be organized into a user profile that may comprise one or more of the following 1 access data on accessing different resources for a particular user 2 permissions for accessing associated portions of resources for a particular user 3 configuration of user preferences for a particular user and 4 configuration of user settings for a particular user. User preferences may include such features as the selection of a screensaver for a user the selection of display features for a user the settings of events sounds for a user the organization and storage of data files associated with the user and software settings and installed software information associated with the user. Attributes may be associated with attribute values or selections to define a user profile.

Step S follows step S. In step S the format converter arranger arranges the entered or selected attribute data e.g. attribute value for a user into a file e.g. an XML file or another data structure for transmission over a communications network . The data structure may comprise an extensible markup language XML file. XML refers to a specification that supports customized tags on the definition transmission validation and interpretation of data between different applications or different entities. The extensible markup language file or another data structure suitable for transmission over a communications network e.g. Internet is used. Other files that are suitable for the data structure or transmission over a communications network include hypertext markup language HTML standard generalized markup language SGML directory service markup language DSML or other applicable standards for files or documents.

HTML refers to a language for creating a document or file which may be defined by tags and attributes.

SGML refers to a system of rules for organizing and structuring e.g. tagging elements of a document or a file. SGML supports the exchange of data between different platforms.

Directory service markup language DSML combines directory services with XML support to provide the technique for exchanging data between different platforms. Directory service markup language DSML may support LDAP compliant directory services a hypertext mark up language HTML document a standard generalized markup language SGML document an extensible mark up language XML document or some other file format e.g. an Internet compatible file format .

The format of the document or data structure may be specified in accordance with the document type definition DTD . The document type definition may define how markup tags are interpreted by an application that forms or creates the document.

In step S the transmitter transmits the file e.g. data structure e.g. an XML file or another data structure over the communications network to a directory interface . The file may be transmitted over the communications network such as the Internet consistent with a hypertext protocol standard HTTP or hypertext protocol standard secure HTTPS communications procedure for example. The file e.g. data structure e.g. an XML file is transmitted over the communications network to a server . The file may be transmitted to one or more servers e.g. server via the communication network .

The transmission of step S may be carried out in accordance with various alternate techniques. Under a first technique the transmitter or the central administration tool transmits the selected attribute data to the affected resources in a group transmission to multiple resources. That is the file or data structure may be distributed to multiple servers simultaneously to efficiently update the affected resources. An affected resource refers to any resource in which an update or change in attribute data is present in the data structure . The first technique may be applied where an administrative account is assigned a global password and a global log in identifier for example.

Under a second technique the transmitter or the central administration tool transmits the selected attribute data in each affected resource in a series of separate transmissions e.g. sequentially to multiple resources. The second technique may be applied where an administrative account is not assigned a global password and a global log in identifier for example. In one embodiment a global password and a global log in identifier may be incompatible with the restrictions imposed on administration of certain resources.

Step S allows operation and maintenance of one or more servers or resources to be executed remotely from the user interface of central administration tool . Accordingly for many operations and maintenance tasks the administrator does not need to be on site where the server is to configure or service the server or associated resources e.g. applications .

In step S a directory interface processes the file to be compatible with interpretation by a directory services system after the receiver receives the transmitted data structure e.g. an XML file via the communications network . For example the directory interface processes the file to be compatible with interpretation by a lightweight directory access protocol LDAP compliant system. The directory interface may parse the received file or data structure e.g. an XML file to place the components of the data structure e.g. an XML file into a format that can be interpreted by a lightweight directory access protocol compliant LDAP directory service.

In step S the directory services system invokes an action consistent with the contents of the file. In one example the action may comprise definition modification deletion or addition of an attribute or an attribute value to the directory services system . In another example the action may comprise one or more of the following activities management of security measures for one or more users provision of access to software programs features or capabilities for one or more users and the management of resources for one or more users.

A directory services system may support security measures for authentication of users in groups associated with the network. For example the directory services system may prevent access of an unauthorized user or client to one or more resources. In addition to providing support for security measures for clients users and resources associated with the communications network the directory services system may also support the provision of application programs and resources with a desired future set as defined by attributes and attribute values of a user.

A directory service system refers to a service that identifies resources associated with a communications network and accessibility measures for making the resources accessible to clients users and applications. Resources may include but are not limited to e mail addresses computers network elements and peripheral devices e.g. printers . The directory service system may support a physical network typology and protocol that are transparent to a user a user or a client on the network can access any resource without knowing where or how it is physically connected to the communications network .

The directory services system may support security measures for users resources and groups associated with a communications network . Directory services may also support management of attributes security measures and attribute values associated with users of the communications network . The directory services may provide access of users or clients to resources associated with a communications network . To this end directory services system e.g. may provide an index a table a search engine or other organization for supporting the selection of user resources via the communications network .

The action associated with the directory services system may be performed consistent with several different procedures. In accordance with one procedure the directory services system implements a security procedure where a user or user group is authenticated for access to a resource . The authentication may be provided by a log on procedure an encryption procedure or other security measures.

In accordance with another procedure the directory services system may support confirmation of the identity of a user trying to log on in a certain domain and the provision of access to resources associated with the communications network . For example the resources may include but are no limited to data applications physical devices printers computers servers and network elements.

In accordance with another procedure directory services system may support user authentication of a user and a single entry of a log in identifier and a password to provide access to multiple resources e.g. applications on the communications network without requiring more than one entry of the password and log in identifier. The directory services may support the assignment of attributes and attribute values to corresponding users. Attribute values may include user rights permissions and control permissions for interacting with resources or objects. An object may be associated with object attributes. The objects may include limitations on the control presentation manipulation and access of objects for example.

In step S an administrator at the user interface may manage resources e.g. applications under the control of the directory services system consistent with the contents of the transmitted file. A directory service system may identify one or more resources e.g. available for at least one client or user associated with a network. The directory service system may support the assessing of the resources for the client users and applications to manipulate e.g. add delete or modify attribute data. For example a resource may include one or more of the following items that are associated with a network an e mail address an address of a printer an address of a server an address of a router an address of a data packet switch an address of a peripheral device and an address of a network element.

The directory services system or an affiliated data processing system e.g. a transaction server interprets the transmitted file. The management may include one or more of the following 1 changing user attributes or attribute values associated with users or at least one resource 2 establishing user templates for creating new users or additional users 3 establishing templates or establishing new groups of users 4 making changes to groups of users simultaneously and 5 provisional security access to resources accessible via the communications network .

The central administration tool is configured to support one or more security management components including a security component e.g. a central authentication module of the directory services system a first security manager and a second security manager . The security management components facilitate authentication and authorization procedures for managing access of users to resources associated with the network.

In one embodiment the server may place selected documents in a database . A database manager of the database and a security component may assign user rights and group rights to accessing or editing corresponding data in the database .

The method of and the central administration tool support the ability of an administrator to administer and manage multiple applications and security modules from a central location such as the site of a central administration tool . The central administration tool supports the ability to allocate storage and security storage for one or more applications. The security storage or allocated storage for different applications may be segregated among one or more servers or otherwise. The user interface and the central administration tool may support the transmission and communication of a file or document via a communications network such as the Internet. Where the central administration tool is compatible with the Internet the central administrative tool may be used to control a variety of servers and or resources associated with the communications network regardless of where the servers and or resources are physically located. For example the central administrative tool may be located remotely in a geographically separated location.

In step S a first set of administrative user identifiers and a first set of corresponding passwords is established to support access on an administrative level to a first resource allocated within a communications network . Access on an administrative level may refer to the capability to modify delete or add attribute data.

In one embodiment the first security manager and the security controller supports the first set of administrative user identifiers and the first set of corresponding passwords. The first resource may comprise a knowledge management system or another type of resource. For example the first resource may comprise a lightweight directory access protocol compliant knowledge management system.

In step S a second set of administrative user identifiers and a second set of corresponding passwords is established to support access on an administrative level to a second resource associated with the communications network . The second security manager and the security controller support the second set of administrative user identifiers and the second set of corresponding passwords. In one embodiment the second resource comprises a knowledge management system. For example the second resource comprises a filenet document center.

In step S a global administrative user identifier is provided to represent the first set of administrative user identifiers and a second set of administrative user identifiers. The administrative global user identifier is associated with an administrative global user profile of a corresponding administrator. The global administrative user identifier may be displayed to an administrator of a user interface coupled to a central administrative tool .

In an alternative embodiment the global user identifier may be transparent to the administrator and the administrator may enter a user identifier selected from the first set or the second set of administrator identifiers.

In step S a global password is established for the global administrator identifier. The password may be assigned by entry of an administrator into the user interface . In one embodiment the password may be dynamically updated on a regular or a random basis to improve the robustness of the security measure. At the user interface of the central administration tool the administrator may be required to enter both the administrative user identifier and the corresponding global password to obtain access on an administrative level to one or more user resources. The resources that the user can gain access to may be defined by user attributes or a set of administrative user attributes and values defined by an administrative user profile. Accordingly in one example if the administrator enters the proper global user identifier and corresponding global password the administrator is automatically granted access on an administrative level to a set of resources as defined by the corresponding administrative user attributes. The set of resources may reflect an administrative preference or selection of a corresponding administrator.

In step S the administrator may enter the global user identifier and the corresponding global password into the client terminal to get access on an administrative level to one or more desired resources. In one embodiment the access is granted by executing a script which is transparent to an administrator. In one example the script supports access to at least one of a first resource and a second resource consistent with any authorization in a global user profile. The global administrative user profile may define access to user attributes and corresponding attribute values that differ from one administrator to another. A script is another term for a set of instructions such as a macro or a batch file. A script may contain a listing of commands that may be executed without the intervention of a user. Scripts may be written in various programming languages.

In one configuration the central authentication module has a third set of administrative user identifiers and corresponding passwords. Further the global password and the global identifier are arranged to log the administrator into a directory services system associated with the central authentication module . The administrator logs into the directory services system at an administrative level which allows greater capabilities and security privileges than a user level of a client .

After the administrator s entry of the global administrative identifier and global password via the user interface and the administrator s successful log in at the administrative level the server may read the contents of a data structure transmitted from the central administrative tool . The data structure allows the administrator to modify delete or add an attribute of one or more resources on an administrative level in as few as one transaction required to form the data structure .

The ancillary support module may support enhanced features of the directory services system. The ancillary support module may support one or more applications or systems. For example the ancillary applications module may comprise one or more of the following a knowledge management application e.g. Plumtree Corporate Portal Plumtree Document Directory or an Eprise Participant Server a corporate portal application and a communications application e.g. filenet communications for access to data associated with a UNIX operating system environment .

The directory services system may be integrated or enhanced by the ancillary support module such that the directory services system support the provision of one or more of the following to clients links to documents web pages or other resources in an index a table of contents or a topical hierarchy. In one embodiment the topical hierarchy may be searchable or browsable.

The integration of the ancillary support module with the directory service system may support the display of a personalized home page personalized community portal page an enterprise portal page an intranet portal page or the like once the user or client is authenticated and authorized. For example if the global user identifier and corresponding global password are entered by a client for user level access the global user or client may be taken to a personalized home page on the Internet that lists a directory of all of the resources that the user or client may access. In the presented directory at the client the resources may be indexed in topical arrangements in alphabetical order or may be otherwise searchable by one or more key words. The information in the home directory or personalized portal of the client may include the last accessed documents or resources via the communications network .

Document attribute data may include dates or creation of the document or last updating of a document that is displayed on the home page or home portal. In one embodiment the document attribute data may comprise historical access or use data. At the client the portal or start up page may include an index of last used files and the storage location of the last used files on a storage device associated with the communications network .

A first application through an nth application provide reports of security data e.g. application security data to the security message queue . The first application represents an illustrative example of the first resource . Similarly where a total of two applications are present i.e. n equals 2 the nth application represents an illustrative example of the second resource . The security message queue of the log in module collects security data on clients and network usage. The security message queue holds the security data until the security data is processed.

A data manager extracts security data from the security message queue to prepare the extracted security data for storage in a database . The data manager may extract the security data in accordance with the time of receipt or order of receipt of the security data into the security message queue or in accordance with another priority scheme.

A log harvester is an interface that supports centralized logging of application information rather than distributed or decentralized logging within each specific application. In one embodiment the log harvester comprises an extractor that extracts security data from an application or resource associated with the ancillary support module . The extractor or the log harvester may parse one or more existing applications log files to extract relevant security data. The relevant security data may be selected from the application information based on a priority scheme of the security data a sorting algorithm or a filtering algorithm. The log harvester or the organizer organizes the extracted e.g. parsed information into a log file that is compatible with centralized storage in the database .

The Knowledge Management application may support data storage and retrieval e.g. queries with respect to a database.

The Document Center application may include one or more of the following user profile or attribute fields for each corresponding user a primary group an account expiration date an access level or functionality level within the Document Center application a domain identifier a maximum number of allowable unsuccessful log on attempts an organization affiliation and a maximum number of permitted or licensed users. The primary group may be assigned to a user where the user is a member of more than one user group.

The Workflow application may include user attributes on whether a user is eligible to receive a new work the identify of the user s supervisor and other user information.

The central administration tool and method of the invention provides an administrator with a centralized management tool to manage one or more resources e.g. administer application security for client server applications . The central administration tool uses a directory services system e.g. Windows 2000 active directory to centralize the security data. The central administration tool and method is compatible with transmission reception or communication of files or documents over the communications network such as the Internet to permit remote management and an administration of client server applications and other resources associated with the communications network . The central administration tool supports user maintenance group maintenance and is customizable to interact with one or more applications.

The central administration tool is scalable to handle multiple applications or multiple servers. In one embodiment the central administration tool provides an XML file for conveying instructional messages to a server or a processor associated with a resource. Advantageously the central administration tool can manage multiple applications and multiple resources that are widely geographically disbursed. Accordingly travel time to different locations to administer remotely situated servers may be eliminated or greatly reduced to reduce to the expenses of administration and management of resources. Accordingly an administrator can maintain the network and its resources from virtually anywhere in the world where the central administration tool is located and Internet access is available. Further a user may be able to create and save custom templates. The custom template may be used to create one or more users or one or more groups to automatically apply a default attribute or a default permission associated with the user or group. A user may require two or more user identifiers associated with corresponding communication systems.

A central administration tool communicates to a server via a communications network . In turn the server communicates with a directory services system and one or more resources . Although the resources of comprise a first data processing system that supports a first application and a second data processing system that supports a second application the resources may be supported by a single data processing system a database management system or the like. Clients access the resources via the internal network according to parameters defined by an administrator of the central administration tool . For example from a user interface of the central administration tool the administrator may define whether a client has access to the first application the second application or both. Further the from the central administration tool an administrator may define the extent of the access of each client to the first data processing system and the second data processing system and other attributes besides access associated with a user or a resource .

The server comprises a communications interface a transaction handler and a directory services interface . The communications interface supports communications e.g. two way communications between the central administration tool and the server over the communications network . The communications interface is coupled to the transaction handler . In turn the transaction handler is coupled to the directory services interface .

The directory services interface is arranged to communicate with a directory services system to support management of attributes associated with users. The directory services system facilitates maintenance of the attributes associated with users resources or both.

The transaction handler facilitates communication with one or more resources . As shown the resources include a first data processing system and a second data processing system . The first data processing system supports a first application and the second data processing system supports a second application . One or more clients may use the first application and the second application to carry out data processing tasks in accordance with program instructions of the first application and second application .

In a system for administering a resource for a user of a computer system network or client server system supports maintenance of data integrity and or synchronization between the directory services system and one or more resources . A user interface supports inputting a request to manage an attribute of a resource . A central administration tool arranges the request into a file for transmission over a communications network . A directory services interface determines if a user associated with the request is authorized to carry out a command embedded in the request. A transaction handler for interprets the request if the use associated with the request is authorized and or if a logical constraint upon the request is satisfied.

The transaction handler executes the request with respect to data storage associated with one or more applications. The transaction handler updates a value of the attribute of at least one application per the request. The directory services interface supports saving a former state of the attribute for a directory services system . The directory services interface is arranged to revert to the saved former state of the attribute for the directory services system if the command cannot be executed by at least one of the first data processing system the second data processing system and a data storage allocation associated with an application .

The transaction handler generates an acknowledgement for transmission to the central administration tool . The acknowledgement message contains data on whether or not the request updated a value of the attribute in data storage for at least one application . The transaction handler accesses the applications or resources to modify add or delete one or more attributes pursuant to the request. For example the transaction handler applies a global password and account identifier to access one or more data storage allocations associated with corresponding applications to update the data storage units consistent with the request.

In one embodiment the communications server the transaction server and the directory interface server of perform the same functions as the server of . The directory interface server communicates with a directory services data storage to determine whether the administrator is authorized to take an action associated with a request.

The transaction server communicates with at least one of a first application data storage and a second application data storage if the directory interface server indicates that the administrator is authorized to take an action associated with the request. The transaction server interprets the request which may be expressed in a file e.g. an XML file transmitted from the central administration tool via the communications network . The transaction server may log into or access the first application data storage and the second application data storage at an administrative level to execute a command in the transmitted file e.g. the XML file . For example the command may modify delete or add an attribute or an attribute value associated with a user or a resource e.g. an application program .

In step S an administrator inputs a request to manage an attribute of a resource or or user. For example an administrator inputs a request to modify add or delete an attribute of a resource or or a user via a user interface of a central administration tool . The user uses or seeks to use one or more resources or associated with a computer system e.g. a client server network . An administrator can enter a modification addition or deletion of an attribute of a user or resource or into an electronic form template or document via a user interface .

In step S a request is arranged into a file for transmission over a communications network . In one example the central administration tool may convert the request into an extensible mark up language file or some other data structure that is compatible with transmission over the communications network e.g. the Internet . In another example the central administration tool converts an electronic form or data from a template e.g. of . into an extensible mark up language file or some other data structure that is compatible with transmission over the communications network .

The file may contain a command identifier a resource identifier an attribute and an attribute value of the attribute. The command identifier defines an action such as adding deleting or modifying an attribute. The resource identifier e.g. application identifier specifies which resources or applications are affected by the action. The resource identifiers may include a first application identifier for the first application and a second application identifier for the second application that is distinct from the first application identifier. The attribute may be defined by an attribute identifier that defines a characteristic of a resource or or a user. The attribute may have a numerical value a vector value a scalar value or a logical value for example.

In step S the server the directory services interface or the directory interface server determines if an administrator associated with the request is authorized to carry out a command embedded in the request. The determination of whether an administrator is authorized may depend upon a security level assigned to an administrator the requisite work responsibilities of an administrator any supervisory authority of the administrator the characteristics of resources or the characteristics of a user associated with the request the characteristics of a group associated with the request the characteristics of applications associated with the request and a logical validation of the request. If a user is authorized to carry out the command embedded in the request the method continues with step S. However if a user is not authorized to carry out the command embedded in the request the method continues with step S.

In an alternate embodiment step S may include an additional procedure concerning the logical validation of the request. With respect to the configuration of a logical validation of the request determines if the request is consistent with the proper format of data structure and overall logical scheme of the directory services system the first data processing system and the second data processing system . With respect to the configuration of a logical validation of the request determines if the request is consistent with the proper format of data structure and overall logical scheme of the directory services data storage the first application data storage and the second application data storage . The logical validation may be applied in addition to the evaluation or determination that an administrator is otherwise authorized to carry out a command embedded in the request. In the alternate embodiment if the request passes the logical validation and if the administrator is otherwise authorized to carry out the command in the request the method would continue with step S otherwise the method would continue with step S.

In step S a server a transaction handler or a transaction server interprets the request and prepares for execution of the request. In one embodiment prior to requesting the execution of a change modification or addition of an attribute value the transaction handler or transaction server may use a global password and account identifier e.g. administrative log in identifier to log onto a resource or in a single transaction for expedient management of administrative matters. With respect to the configuration of the transaction handler may use a global password and administrative log in identifier to log onto the first data processing system and the second data processing system

In another embodiment prior to making the change modification or addition of an attribute value the transaction handler may use different password and an a different account identifier to log onto the first data processing system and the second data processing system or into the first application and the second application .

In step S the server the transaction handler or the transaction server returns a feedback message to an administrator at the user interface . In one example the feedback message may inform the administrator that an administrator is not authorized to execute the command embedded in the request. In another example the feedback message may inform the administrator that the administrator is not authorized the command is logically inconsistent with the resources or or both.

In step S after step S a server transaction handler or transaction server determines the viability of the request or attempts to execute a request with respect to at least one resource or . In one example the transaction handler attempts to execute a request with respect to a data storage allocation associated with one or more applications e.g. a first application and a second application or a resource or . Accordingly the server or the transaction server transmits a request to change modify add or delete attribute data e.g. an attribute value of a resource or consistent with the request in the file received via the communications network .

In step S if the server transaction handler or transaction server is unable to make a change to the desired resource or identified in the received data structure the transaction handler informs the directory services system or the directory services data storage and undoes any update that may have already taken effect at the directory services system or the directory services data storage .

For example if the server is unable to make a change in the first application the second application or another application the server informs the directory services system . Accordingly the attribute data e.g. attribute values defined by the directory services system the first application and the second application are consistent with each other. The server the transaction handler or the transaction server may be unable to make change because of the lack of authorized access a communications failure the absence of an attribute or the absence of a permitted attribute value. Yet data integrity and consistency is preserved amongst the resources to the extent possible.

If the transaction handler the server or the transaction server is unable to update the attribute data e.g. attribute value of the selected applications per the request the transaction handler the server or the transaction server may take the following remedial action. First a former state of the attribute for the directory services system or the directory services data storage is saved. Second the former state of the attribute data is reverted to for the directory services system or the directory services data storage if the command cannot be executed by at least one resource e.g. a data storage allocation for an application or all desired resources to be updated by the attribute data per the request e.g. the data structure .

The server or communications server acknowledges whether or not the request updated attribute data in a resource or for at least one application. The server or communications server may receive a status of whether or not the request was implemented via the transaction handler or the transaction server . The transaction server or the transaction handler may serially update the attribute data in the data storage allocations of different applications or resources or .

In step S if the request is viable attribute data is updated for at least one of following a resource or a directory services data storage and a directory services system . For example the first application data storage the second application data storage or both may modify add or delete an attribute value consistent with the request in the file received via the communications network .

Following step S the administrator may receive an acknowledgement if the server e.g. server was able to update e.g. modify add or delete the attribute of the directory services and the corresponding associated attribute of at least one resource or . The administrator may receive an acknowledgement if an update could not be executed because of a data inconsistency. Previous data is restored to the directory services data storage or the directory services system if the update is successful in the directory services system and if the update is not successful in the resources or such as the first application and the second application .

The foregoing description of the invention describes several illustrative embodiments. Other embodiments variations alterations or alternatives may fall within the scope of the invention and the following claims. Accordingly the claims should be accorded the broadest interpretation possible consistent with the specification set forth in the description.

