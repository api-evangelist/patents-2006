---

title: Context-based routing of requests in a service-oriented architecture
abstract: Context-based routing of requests in a service-oriented architecture (SOA) is achieved by using context information received from service providers to make routing decisions. Service providers publish information about their context on a publish-and-subscribe channel. A router (e.g., a JBI normalized message router) subscribes to the channel to receive the context information, and may store the context information in a context repository. A consumer issues a service request specifying a context, and the router uses the context information received from the service providers to select the service provider that best satisfies the context. The request is then routed to the selected service provider.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08516116&OS=08516116&RS=08516116
owner: Accenture Global Services Limited
number: 08516116
owner_city: Dublin
owner_country: IE
publication_date: 20061130
---
Service oriented architectures SOAs are systems that support interactions between two kinds of software entities service providers which provide services and consumers which use these services. Typically a consumer issues a message containing a request for a service and a component within the SOA selects a provider for that service. In some cases the SOA contains a router that in addition to selecting a provider also forwards the request message to the selected provider.

SOAs exist in which a provider can be selected based on information contained in the message. However it would be desirable for a provider to be selected based on information about the provider s context. The provider s location is one example of a type of context. Moreover it would be desirable to add to an existing system such as one based on Java Business Integration JBI functionality to select a provider based on context.

The subject matter described here provides context based routing within a system such as a SOA. Service providers publish their context information e.g. their location on a publish and subscribe channel. A router subscribes to this channel to receive the context information and may store the received context information in a context repository. A consumer issues a request for service that specifies a context and the router compares the received context information with the context specified in the request in order to select a provider for the service. The request is then routed to the selected provider.

In one example the subject matter described herein provides one or more computer readable storage media encoded with executable instructions that are loadable into a first router to cause the first router to perform acts comprising subscribing to a facility where each of a plurality of service providers publishes information descriptive of its context through said facility receiving a request for a service said request specifying a first context receiving through said facility the information published by said plurality of service providers descriptive of the service providers contexts whereby the information that is received constitutes received context information selecting a first one of said plurality of service providers based on a comparison of said received context information with said first context and routing said request to said first one of said plurality of service providers.

In another example the subject matter described herein provides an apparatus comprising one or more processors one or more data retention devices a first routing module that comprises instructions that are executable on at least one of said processors and that are stored in at least one of said data retention devices wherein said first routing module subscribes to a facility through which each of a plurality of service providers publishes information descriptive of the service providers contexts receives through said facility the information published by said plurality of service providers descriptive of the service providers contexts whereby the information that is received constitutes received context information selects a first one of said plurality of service providers based on a comparison of said received context information with said first context and routes said request to said first one of said plurality of service providers.

In another example the subject matter described herein provides a method of using a first one of a plurality of providers to provide a service to a consumer the method comprising publishing over a channel by each of said plurality of providers context information descriptive of a context associated with each of said plurality of providers subscribing by a first router to said channel so that said router receives said context information issuing by said consumer a request for said service said request specifying a first context determining by said first router based on a comparison of said first context with said context information that said first one of the plurality of providers satisfies said first context better than the other ones of said plurality of providers routing by said first router said request to said first one of the plurality of providers and providing by said first one of the plurality of providers said service.

Service oriented architectures SOAs are systems that support interactions between two kinds of software entities service providers which provide services and consumers which use these services. The exchange of data between producers and consumers is in the form of messages. The service offered by any individual providers is usually defined by a service contract specifying what response the producer will send in answer to a request message sent by a consumer. For example a producer might provide current stock market prices its contract might define that if it receives a message containing the ticker symbol of a stock it will return a message containing the current share price of that stock. The current practice of SOAs includes formally defined languages for expressing such contracts most notably the Web Services Definition Language WSDL .

A job of a SOA is to connect consumers with suitable providers. In some examples of a SOA this connection is often accomplished by the consumer s specifically contacting the provider at some known Internet address. In such a case the SOA is simply some collection of mechanisms to help the consumer discover this address and does not participate in the exchange.

Other examples of SOAs however mediate the exchange between the two entities by locating the provider s address based on some identifier supplied by the consumer. The Java Business Integration JBI specification is one example of a standard for constructing such SOAs. As known to those in the relevant field several implementations of JBI are available.

The JBI standard distinguishes abstract services from concrete service implementations. An abstract service is one that conforms to a particular contract. A concrete service implementation is a physical entity that provides the service and which is reachable through a service endpoint. An endpoint may be specific Internet addresses that would permit location by any Internet entity or it may be a symbol that is only meaningful to the JBI system itself.

JBI implementations are required to have an entity called the router whose job is to direct consumer requests to suitable service providers. Two particular tasks of the router are to determine the endpoint of a provider and to find a handler that can transmit the request in the protocol specified by that endpoint. A JBI consumer can request a specific endpoint or it can specify only the name of the service contract leaving the router to choose the endpoint. If the endpoint is omitted the router is free to choose the endpoint of any provider of the specified service.

A provider instance is a specific implementation of a service provider. A provider instance may take the form of particular machine code executed by a particular physical computer. Typically each provider instance is associated with a particular endpoint although there is not necessarily a one to one correspondence between endpoints and provider instances since a provider instance could have more than one endpoint.

A provider instance typically has properties that are not shared by other providers of the same service. For example a provider instance may be characterized by the physical location of the computer on which it is running. Properties such as physical location can be of great importance in systems that contain many providers of the same service. A military network for example may have a large number of aircraft each of which provides surveillance reports conforming to the same service contract the report from an aircraft at location X however is of different value and has a different significance from one at location Y.

The term service provider context refers to a collection of properties that belong to specific service provider instances. While JBI routers can supply provider endpoints they presently do not base the selection of an endpoint on provider context. For example it would be desirable for a consumer to be able to request a report from an aircraft at location X. In this case location X is an example of a context and it would be desirable to allow the router to choose the endpoint based on which provider is at or near location X. A router that can support such requests is described herein.

Some properties may require the provider s continued cooperation e.g. in the location example above the provider should recurrently transmit its location since the location can change frequently. In other examples however the information is either relatively static or is information that is knowable without direct communication from the provider. For example the context information for a provider instance might include its average response time. A router could keep track of the response time of each endpoint and use this information to route requests that demand a certain level of performance. Other context information however such as the provider s location in the example above may be known only to the provider instance. The subject matter described herein provides a mechanism by which such information can be made known to routers.

Router routes requests from a consumer to one of a plurality of providers and . A normalized message router NMR of a JBI system is an example of router . A consumer submits request to router . The router then identifies a provider to which to route request . Request is then routed to the selected provider provider in this example via message channel .

Each of providers and is associated with an endpoint and respectively. An endpoint is essentially an address that router can use to route messages to a particular provider. In the example of each endpoint uniquely identifies a particular provider and vice versa. However the endpoint and the provider are conceptually distinct and there need not be a one to one correspondence between providers and endpoints.

Providers and publish their context information via publish and subscribe channel . Publish and subscribe channel is preferably independent of the JBI system. In particular a JBI system may provide message channel and publish and subscribe channel is preferably independent of message channel . An application programming interface API may be provided by which providers and may publish their context information to publish and subscribe channel .

Router stores context information in context repository . Router may later retrieve context information from context repository in order to use context information as part of routing decisions. Context repository preferably stores for each provider both context information and at least one endpoint. The physical location of a provider is an example of context information that context repository may store for a particular provider.

An API may be provided that router may use to collect context information from channel and to store context information in context repository .

For example if consumer wishes to make a context based request e.g. if consumer requests service X from a provider located near point Y consumer sends a request to router where request specifies not only a service that consumer wishes to obtain but also a particular context. Router examines the context specified in request and using previously received context information which is preferably stored in context repository selects an endpoint corresponding to a provider instance with the correct context or that most closely satisfies the correct context . The request is then routed to the selected provider. The selected provider then provides the requested service.

It is advantageous for a provider in one container to be accessible to a router in a different container. Since many publish and subscribe systems are implemented on wide area networks such as the Internet both context information and endpoints can be shared across container boundaries. Thus publish and subscribe channel is available to providers and routers in both container and in container . Each provider and can publish its context information over publish and subscribe channel thereby making the context information available to routers in a container other than the one that the provider is associated with. Moreover a provider can use publish and subscribe channel to publish endpoint information which can be used by a router in a different container. Each router is preferably associated with a corresponding context repository . A context repository may be used in addition to the purposes described above to store endpoint information about providers that are outside of a given container. E.g. router in container may receive context and endpoint information about providers registered with container router may store this context and endpoint information in context repository .

In the example of consumer issues a request that specifies a context and request is processed by router . Router determines e.g. based on previously received context information that provider best satisfies the context specified in request . Router then arranges for request to be routed to provider which is outside of router s container .

In a JBI system a function of a router is to identify an endpoint to which a request is to be sent and a JBI normalized message router NMR is designed to route a request to an endpoint that is visible to that router which conventionally means an endpoint within that router s container. Thus a binding component may be designed to handle requests that the router needs to route outside of its own container and the binding component may be assigned an endpoint that is usable within the router s container. A binding component is essentially a JBI implementation of what could otherwise be called a handler. Thus endpoint is associated with binding component and is usable by router . When router determines to route a request to a provider outside of container router directs the request to endpoint . The request is then received by binding component which can then arrange to send the request to its actual destination e.g. provider . For example if provider is accessible by Internet without the need for a JBI container binding component may simply direct the request to the Internet Protocol IP address associated with provider . But if provider is situated in another container that container provides its own binding component whose job is to receive remote requests through a non JBI protocol and forward the requests to the router of container so that the requests may be forwarded to a provider within container such as provider . Binding component can be said to forward a request to a provider regardless of whether binding component forwards the request directly as in the example where binding component directs the request to the provider s IP address or if binding component forwards the request to some intermediary e.g. binding component for further forwarding. The protocol between binding component and binding component may be any protocol they have agreed on and their connectivity may or may not be via the Internet. In request is shown by dotted line as being routed from router to provider the solid lines that show request traveling from router to binding component to binding component to router to provider is one way of implementing the path that is shown by the dotted line.

While context repository from is shown similar information may be stored in context repositories from .

A standard may specify the location within a given message where the specification of context is to be located. This location may be defined in various ways. For example in the example of the context portion is shown as occupying the space between two offsets into the message.

The standard that specifies the location of the context specification can be agnostic as to the format or content of the context itself. In one example context information could be specified in XPath which is an Extensible Markup Language XML query language. However it is possible for the standard to specify that the context specification will be located at a particular place in the message that contains the request without specifying the format of what will be contained at that location.

A standard may for example be a published standard or other specification that defines behavior interfaces data etc. for a particular type of system.

At providers such as providers and shown in or providers and shown in publish their respective context information over a channel such as publish and subscribe channel shown in .

At a router such as routers and shown in subscribes to the channel. At the router receives context information via the channel. Optionally the router may store the received context information in a context repository.

At the router receives a request for service. The request that is received from consumer as shown in is an example of the kind of request for service that may be received. Such a request contains a specification of a context that is relevant for the requested service.

At the router selects a provider to which to route the request. This selection may be made based on the context specified in the request and the previously received context information. The router may consult a context repository to learn the most recent context information for the relevant service providers.

The subject matter described herein can be deployed in existing systems that support message routing such as systems conforming to JBI. In one example the system in which the subject matter is to be deployed provides a router that can make a routing decision based on information contained in the request but that does not provide a mechanism to collect context information about providers and to use that information in routing decisions. In such a case a publish and subscribe channel and a mechanism by which providers can publish their context information can be added to such a system. Additionally program code can be loaded into the router to enable the router to receive and use the context information. In one example the router has some functionality that is defined by a standard where that standard calls for the router to be able to select a particular service provider but does not call for the router to be able to do so by comparing context information specified in a request with the service providers actual context. In this case the router is essentially enhanced by loading into it instructions that allow the router to take context into consideration in making routing decisions.

Program code to enable the router to receive and use context information as well as program code to perform any other functionality described herein can be stored on one or more computer readable media e.g. optical or magnetic disk tape semi conductor memory etc. and then loaded into the computing device that implements such a router. The use of such media to store and load such program code is generally known in the relevant field.

Aspects of the subject matter described herein may be deployed in an apparatus that comprises one or more processors e.g. one or more central processing units and or one or more data retention devices e.g. disks tapes semi conductor memories etc. . For example a router may be implemented in the form of such an apparatus by storing program code in one or more of the data retention devices and by causing the stored code to execute on one or more of the processors.

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims.

