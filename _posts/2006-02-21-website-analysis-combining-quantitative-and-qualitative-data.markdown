---

title: Website analysis combining quantitative and qualitative data
abstract: Systems, methods, media, and other embodiments associated with predicting website user satisfaction based on current actions analyzed in light of combined quantitative and qualitative data are described. One example system embodiment includes logic for acquiring both quantitative website usage data and qualitative website satisfaction data. The example system also includes logic for creating a satisfaction categorization data from the quantitative website usage data and the qualitative website satisfaction data.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08396737&OS=08396737&RS=08396737
owner: Hewlett-Packard Development Company, L.P.
number: 08396737
owner_city: Houston
owner_country: US
publication_date: 20060221
---
A portion of the disclosure of this patent document contains material that is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction of the patent document or the patent disclosure as it appears in the Patent and Trademark Office patent file or records but otherwise reserves all copyright rights whatsoever.

As web based e commerce has flourished website usage tracking has become an important tool for economic analysis. Traditionally summary statistics including page views click throughs purchase conversion e.g. where a page viewer becomes a purchaser and so on have been compiled from a limited sample of web page visits. Statistics concerning customer and or visitor satisfaction has also been acquired for websites. Typically a visitor may be offered some reward e.g. discount coupon in return for spending the time required to complete a satisfaction survey or a focus group may be retained to answer questions concerning a website. Thus direct customer feedback concerning satisfaction level has been acquired. Conventionally customer feedback data has not been collected from all website visitors.

Although websites are increasingly becoming crucial elements in corporate business models traditional methods for measuring effectiveness in terms of revenue generation and customer satisfaction are limited. Thus e commerce site owners may have made decisions concerning their websites based on uncorrelated limited quantitative data and or limited summary quantitative data. Additionally these decisions may have been either completely objectively based on quantitative data or completely subjectively based on qualitative data.

Example systems and methods combine analysis of quantitative data with analysis of qualitative data to not only analyze what has happened in the past satisfaction wise in regards to a website but also to predict the degree of satisfaction a current visitor is experiencing with a website. Example systems and methods may selectively take an action s based on that degree of satisfaction. In one example rather than base satisfaction decisions and or one to one marketing actions on traditional data samples all or substantially all website visit data may be considered as it arrives. In one example click stream data will be analyzed in a context determined by customer satisfaction data. The context will take the perspective that a good website navigation experience yields a high customer satisfaction. A good website navigation experience may be determined by customer feedback and or actions e.g. purchases taken during a navigation. Therefore session level page sequence data may be correlated to high low satisfaction data.

In one example survey satisfaction data and quantitative data e.g. conversions vs. abandonments may be used to train up a classifier that may then be used to predict customer satisfaction with subsequent website visits. The prediction may be based on a sequence of web pages viewed during the session. For example certain sequences may typically lead to a purchase. In some cases a purchase alone may be equated with a high satisfaction experience. Additionally and or alternatively certain sequences may be correlated with high satisfaction data acquired from customer feedback and thus categorized as being a potential high satisfaction session. Thus the correlations may be used by the classifier to predict satisfaction levels associated with on going visits. In one example transitions between pages in sequences may be analyzed using first order Markov chains. Different approaches to computing conditional probabilities and handling missing page transitions may be taken in different examples.

Example systems and methods may also facilitate taking actions based on the satisfaction prediction for an ongoing visit and or for a set of ongoing visits. At its most basic a signal may be generated to indicate that a user is having a good or bad experience. Downstream components may then respond to the signal. In a different example individual session level actions intended to enhance the user experience may be taken. For example actions that enhance a one to one marketing experience or that increase the likelihood of finalizing a sale e.g. offering a discount and so on may be taken.

In addition to actions directed at an ongoing session larger scale decisions may also be made based on analysis of combined quantitative and qualitative data. For example decisions concerning website redesign sales promotion effectiveness website designer compensation e.g. bonus and so on may be made based on overall satisfaction levels. By way of illustration a set of pages associated with a promotion may consistently be generating low satisfaction experiences and low sales and thus may be discontinued. By way of further illustration a set of pages may produce sequences that lead to both high customer satisfaction and significant sales and thus the page designer s may receive a bonus.

Example systems and methods examine more complete sets of both quantitative and qualitative data to facilitate predicting session satisfaction levels. Satisfaction data may also be used at the individual level to customize a user interaction and or at the aggregate level to incentivize designers developers and so on. Additionally low level decisions concerning an ongoing session can be made as can high level decisions concerning overall site effectiveness.

Example systems and methods may treat predicting customer satisfaction based on web page visitation sequences as a classification problem. Thus a set of training data may be used to extract data that identifies high and low satisfaction sessions. The training data may include a set of observations. In one example an observation may include a sequence of pages visited during a customer session and for each visited page an associated binary valued satisfaction category variable. e.g. 0 low satisfaction 1 high satisfaction . The value of the binary valued satisfaction category variable may be based on direct user feedback e.g. reporting high satisfaction level on a user survey and or on other interpretative feedback e.g. user is repeat buyer using same sequence previously used to get to purchase user is daily visitor .

Predictions may be based on the results extracted from the training data. For example to predict the class e.g. low high of a current session its page sequence can be compared to analyzed page sequences and when a match is found the classification for the analyzed sequence can be assigned to the ongoing sequence. Since ongoing sequences may be shorter than complete analyzed sequences partial sequences can be assigned a classification based on the probability that the ongoing sequence will result in a known analyzed sequence.

An example method includes acquiring a set of training data for building a classifier. The training data may include a number of individual session level page sequences with corresponding class labels. In the training data customer sessions that yield high or low ratings may be separated into two groups. Unique transitions between web pages can be extracted from sessions in each of the two groups. The transitions provide one way to partition the available data. In one example first order Markov chains can be used to analyze the transitions. With the amount of information available from greater sets of user data focusing on transitions facilitates restricting the data space. The labeled unique page transitions can be used as canonical units of analysis in a two class classification problem setting. The training data for the two class classification problem can include the two categories of individual sessions identified by session identifiers sequences of pages clicked sequence numbers that facilitate tracking temporal ordering of pages accessed by a user and corresponding class labels. Page sequences in the categories are used to build prototype one step page transitions that can help describe user sessions.

The following text describes techniques and methods associated with establishing categories and predicting a category for an ongoing session. For a given class consider a set S of all the sessions in the given class where P the number of unique pages in S. Create a P P matrix M whose element P i j is the number n of one step transitions between Pand Pin both directions. A one step transition is a movement between page Pand page Pin one click. The probability Pof a transition between Pand Pis given by 

Consider the pages as nodes with edges between the nodes representing traffic between the pages. A high satisfaction prototype can be defined as a sequence of highest frequency one step transitions in set S associated with high satisfaction sessions. For a two class classification problem e.g. G 1 2 extract pages exceeding a pre defined and in some cases configurable threshold e.g. user satisfaction level x . In one example a threshold can be based on the number of transitions between any two pages i and j exceeding a certain threshold. The extracted sequences of one step page transitions define prototype sequences for the given class. Thus let 

Let nand nbe the number of one step transitions in Gand G. Let L P P . . . Pbe the page sequence corresponding to a session Si 1 2 . . . n nbeing the number of sessions in the validation set. Extract all one step page transitions P Pfrom L. Let Vbe the set P P P P 1. Let k be the number of one step transitions in V. Using sets N N and V enumerate the number of common one step sequences between Nand Vand between Nand V. Let Nand Nbe the number of common one step pages sequences for example 

Thus if assign session Sto class G otherwise assign it to class G. The rational for and concerns accounting for the number of typical transitions in each class G being unequal. Therefore the denominator adjusts for the difference and results in the ratios being normalized proportions.

With these equations and explanations in hand an example process for training a classifier and classifying sessions can now be described. While this process includes several actions it is to be appreciated that other equivalent processes may include a greater or lesser number of actions and that various actions may be broken into smaller sub actions and or combined into larger actions. The process may include 

In one example page sequences may be analyzed using Markov chains. Discrete space Markov chains can facilitate examining the probability of a transition within a group. Thus discrete space Markov chains can facilitate identifying the likelihood that a current sequence does or will match another stored sequence. A Markov chain is a discrete time stochastic process X n 0 1 2 . . . that assures a finite e.g. countable number of possible values such that 

A Markov chain concerns the conditional probability distribution of future state j at time n 1 given the present state at time n and past states at times n 1 n 2 . . . 2 1 0 is independent of the states before the present state i at time n. Let p p . . . pbe the page sequence of a new unlabelled session. The probability that the sequence belongs to a class is given by prob prob prob . . . prob 

Sometimes a sequence being studied may include a transition that has not been handled in previously examined data. To handle this case compute the probability of a missing transition P pusing 

where N the number of all possible one step transitions from p. The imputed probability is the expectation of a missing one step transition probability based on a beta binomial model. The expected value is an approximation of the probability of a transition from a given state i to a missing state j . In one example the imputed value of the transition p pin one class may be greater than the probability of the same transition in the other class. Thus in one example the value used for the missing transition may be given by 

This heuristic may be applied in situations where it is assumed that transitions to other pages exist from page p. If both pand pare absent then the estimated probability of a transition is given as 

The following includes definitions of selected terms employed herein. The definitions include various examples and or forms of components that fall within the scope of a term and that may be used for implementation. The examples are not intended to be limiting. Both singular and plural forms of terms may be within the definitions.

 Computer component as used herein refers to a computer related entity e.g. hardware firmware software combinations thereof . Computer components may include for example a process running on a processor a processor an object an executable a thread of execution a program and a computer. A computer component s may reside within a process and or thread. A computer component may be localized on one computer and or may be distributed between multiple computers.

 Computer readable medium as used herein refers to a medium that participates in directly or indirectly providing signals instructions and or data that can be read by a computer. A computer readable medium may take forms including but not limited to non volatile media e.g. optical disk magnetic disk volatile media e.g. semiconductor memory dynamic memory and transmission media e.g. coaxial cable copper wire fiber optic cable electromagnetic radiation . Common forms of computer readable mediums include floppy disks hard disks magnetic tapes CD ROMs RAMs ROMs carrier waves pulses and so on. Signals used to propagate instructions or other software over a network like the Internet can be considered a computer readable medium. 

 Data store as used herein refers to a physical and or logical entity that can store data. A data store may be for example a database a table a file a list a queue a heap a memory a register and so on. A data store may reside in one logical and or physical entity and or may be distributed between multiple logical and or physical entities.

 Logic as used herein includes but is not limited to hardware firmware software and or combinations thereof to perform a function s or an action s and or to cause a function or action from another logic method and or system. Logic may include a software controlled microprocessor discrete logic e.g. application specific integrated circuit ASIC an analog circuit a digital circuit a programmed logic device a memory device containing instructions and so on. Logic may include a gate s a combinations of gates other circuit components and so on. In some examples logic may be fully embodied as software. Where multiple logical logics are described it may be possible in some examples to incorporate the multiple logical logics into one physical logic. Similarly where a single logical logic is described it may be possible in some examples to distribute that single logical logic between multiple physical logics.

An operable connection or a connection by which entities are operably connected is one in which signals physical communications and or logical communications may be sent and or received. An operable connection may include a physical interface an electrical interface and or a data interface. An operable connection may include differing combinations of interfaces and or connections sufficient to allow operable control. For example two entities can be operably connected to communicate signals to each other directly or through one or more intermediate entities e.g. processor operating system logic software . Logical and or physical communication channels can be used to create an operable connection.

 Signal as used herein includes but is not limited to electrical signals optical signals analog signals digital signals data computer instructions processor instructions messages a bit a bit stream or other means that can be received transmitted and or detected.

 Software as used herein includes but is not limited to one or more computer instructions and or processor instructions that can be read interpreted compiled and or executed by a computer and or processor. Software causes a computer processor or other electronic device to perform functions actions and or behave in a desired manner. Software may be embodied in various forms including routines algorithms modules methods threads and or programs. In different examples software may be embodied in separate applications and or code from dynamically linked libraries. In different examples software may be implemented in executable and or loadable forms including but not limited to a stand alone program a function call local and or remote a servelet an applet instructions stored in a memory part of an operating system and so on. In different examples computer readable and or executable instructions may be located in one logic and or distributed between multiple communicating co operating and or parallel processing logics and thus may be loaded and or executed in serial parallel massively parallel and other manners.

Suitable software for implementing various components of example systems and methods described herein may be developed using programming languages and tools e.g. Java C C C C SQL APIs SDKs assembler . Software whether an entire system or a component of a system may be embodied as an article of manufacture and maintained or provided as part of a computer readable medium. Software may include signals that transmit program code to a recipient over a network or other communication medium. Thus in one example a computer readable medium may be signals that represent software firmware as it is downloaded from a server e.g. web server .

 User as used herein includes but is not limited to one or more persons software computers or other devices or combinations of these.

Some portions of the detailed descriptions that follow are presented in terms of algorithm descriptions and representations of operations on electrical and or magnetic signals capable of being stored transferred combined compared and otherwise manipulated in hardware. These algorithmic descriptions and representations are the means used by those skilled in the art to convey the substance of their work to others. An algorithm is here and generally conceived to be a sequence of operations that produce a result. The operations may include physical manipulations of physical quantities.

It has proven convenient at times principally for reasons of common usage to refer to these electrical and or magnetic signals as bits values elements symbols characters terms numbers and so on. These and similar terms are associated with appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated otherwise it is appreciated that throughout the description terms including processing computing calculating determining displaying automatically performing an action and so on refer to actions and processes of a computer system logic processor or similar electronic device that manipulates and transforms data represented as physical electric electronic magnetic quantities.

System may also include a qualitative data logic that is configured to acquire a qualitative data associated with the website. In different examples the qualitative data may include an overall satisfaction data a navigation satisfaction data an ease of use satisfaction data a quality of use satisfaction data and so on. It is to be appreciated that different qualitative data sets may include a greater and or lesser number of data points and a different mixture of data types.

System may also include a training logic that is configured to produce a satisfaction categorization data by analyzing the quantitative data and the qualitative data. The analysis may include partitioning quantitative data qualitative data and or combinations thereof into different satisfaction categories identifying unique pages and page transitions identifying sequences of page visits that yield high and or low satisfaction results and so on. In one example a set of unique page transitions can result in a prototype page sequence for satisfied customers or a prototype page sequence for unsatisfied customers. In some examples the analysis may include computing probabilities for sequence states using first order Markov chains.

Thus in one example the training logic may be configured to produce the satisfaction categorization data by acquiring a set of user satisfaction data and partitioning the set of user satisfaction data into two classes of satisfaction data a first category and a second category. With the partitioned data available the training logic may then identify unique pages in the first category and identify unique pages in the second category. With the unique pages identified interesting one step transitions may be determined and retained with less interesting one step transitions being logically discarded. Retaining a one step transition may be a physical and or logical action. For example data values representing a one step transition may be physically moved from one data store to another data store may be marked with a flag in a data store may be logically identified as belonging to a data set and so on. Thus training logic may retain in the first category one step transitions appearing more than a threshold number of times and may retain in the second category one step transitions appearing more than the threshold number of times. In some examples the threshold may be pre defined and or user configurable.

Having selected interesting one step transitions sequences of transitions that lead to high and or low satisfaction results can be identified and established as prototype sessions to which ongoing sessions can be compared. Thus training logic may establish sets of retained one step transitions as prototype transitions for the first category and establish sets of retained one step transitions as prototype transitions for the second category. These prototype transitions may then be analyzed by components like those described in connection with .

System may include a classification logic that is configured to receive a session level page sequence data associated with a current website visit and to produce a predicted user satisfaction level based on the session level page sequence data and the satisfaction categorization data . In one example the session level page sequence data may include page identifiers that identify a sequence of pages visited during the current website visit. In one example the classification logic may be configured to produce the predicted user satisfaction level based at least in part on a probability that the current website visit matches a visit associated with a category described in the satisfaction categorization data . In one example the probability may be computed using a first order Markov chain associated with unique page transitions identified in the session level page sequence data and in the satisfaction categorization data .

System may also include a prediction logic that is configured to select an action to take in response to the predicted user satisfaction level . Different actions may be selected. For example the action may include offering a discount in a current session offering a discount in a future session related to the current session and making an offer in a future session related to the current session.

System may also include an overall satisfaction logic that is configured to rate website performance with respect to effectiveness as a sales tool based on the satisfaction categorization data . The overall satisfaction logic may consider the satisfaction categorization data at an aggregate level rather than searching for matches to individual sequences that lead to high and or low satisfaction. For example the overall satisfaction logic may determine the ratio of high satisfaction experiences to low satisfaction experiences trends in high satisfaction and or low satisfaction experiences improvements in satisfaction rankings and so on. Then high level decisions e.g. redesign website incentivize designer may be based on aggregated satisfaction data.

Example methods may be better appreciated with reference to flow diagrams. While for purposes of simplicity of explanation the illustrated methods are shown and described as a series of blocks it is to be appreciated that the methods are not limited by the order of the blocks as some blocks can occur in different orders and or concurrently with other blocks from that shown and described. Moreover less than all the illustrated blocks may be required to implement an example method. In some examples blocks may be combined separated into multiple components may employ additional not illustrated blocks and so on. In some examples blocks may be implemented in logic. In other examples processing blocks may represent functions and or actions performed by functionally equivalent circuits e.g. an analog circuit a digital signal processor circuit an application specific integrated circuit ASIC or other logic device. Blocks may represent executable instructions that cause a computer processor and or logic device to respond to perform an action s to change states and or to make decisions. While the figures illustrate various actions occurring in serial it is to be appreciated that in some examples various actions could occur concurrently substantially in parallel and or at substantially different points in time.

It will be appreciated that electronic and software applications may involve dynamic and flexible processes and thus that illustrated blocks can be performed in other sequences different than the one shown and or blocks may be combined or separated into multiple components. In some examples blocks may be performed concurrently substantially in parallel and or at substantially different points in time.

Method may also include at predicting a degree of satisfaction for the user. The prediction may be based at least in part on categorizing the probability that a visit belongs to a satisfaction category. The probability may be computed by analyzing visit sequence data in light of category data.

Thus in one example predicting the degree of satisfaction includes computing probabilities that a user visit described by the visit sequence data belongs to various satisfaction categories. The probabilities may be based on Markov chain based analysis of prototype page transitions identified in the satisfaction categories and unique page transitions identified in the visit sequence data. Computing the probabilities using Markov chains may include computing the conditional probability of a state in a chain. Thus in one example a conditional probability for an element of a Markov chain may be computed according to 

Method may also include at generating a signal based on the degree of satisfaction. In one example the signal may be used to trigger customizing an offer to present to the user visiting the website. For example if a user is having a high satisfaction experience then they may be likely to purchase additional items. Therefore a special volume discount may be offered or a related product may be offered for sale. However if a user is having a low satisfaction experience then they may need incentives to purchase anything. Thus a discount may be offered or an introductory offer may be presented. In different examples these offers may be presented in the ongoing session and or in connection with a future website visit.

While illustrates various actions occurring in serial it is to be appreciated that various actions illustrated in could occur substantially in parallel. By way of illustration a first process could receive visit sequence data a second process could predict a degree of satisfaction and a third process could generate a signal. While three processes are described it is to be appreciated that a greater and or lesser number of processes could be employed and that lightweight processes regular processes threads and other approaches could be employed.

In one example a method is implemented as processor executable instructions and or operations stored on a computer readable medium. Thus in one example a computer readable medium may store processor executable instructions operable to perform a method that includes receiving a visit sequence data associated with a user visiting a website predicting a degree of satisfaction for the user based at least in part on categorizing the visit sequence data as more likely belonging to one of two or more satisfaction categories and generating a signal based on the degree of satisfaction. While the above method is described being stored on a computer readable medium it is to be appreciated that other example methods described herein may also be stored on a computer readable medium.

Method may include at acquiring a set of user satisfaction data. The user satisfaction data may be acquired for example from user surveys from pop up questions presented to a user from observed user behavior from purchase analysis from conversion analysis from abandonment analysis and so on. In different examples the user satisfaction data may be updated over time.

Method may also include at partitioning the set of user satisfaction data into two classes of satisfaction data a first category and a second category. While two classes are described it is to be appreciated that in other examples a greater number of categories may be employed.

Method may also include at identifying unique pages in the first category and identifying unique pages in the second category. Identifying unique pages facilitates identifying unique transitions between pages. Furthermore identifying unique pages and or unique page transitions facilitates reducing the data space involved in subsequent computations. Identifying transitions and sequences may also facilitate computing probabilities and or matches between sequences using Markov chain based analysis.

Method may also include at counting one step transitions that occur between unique pages. Counting the number of matches between one step page transitions may occur in different manners in different examples. For example counting may involve computing values including a Hamming distance between sequences a limited joint probability between the sequences a Jacquard distance between the sequences and an edit distance between the sequences.

Method may also include at retaining in the first category one step transitions appearing more than a threshold number of times. The one step transitions occur between unique pages in the first category. Method may also at retain in the second category one step transitions appearing more than the threshold number of times. In this case the one step transitions occur between unique pages in the second category. As described above retaining a transition may be a physical and or logical action that involves physically moving a data value between data structures updating a data structure and so on.

Method may also include at establishing sets of retained one step transitions as prototype transitions for the first category and establishing sets of retained one step transitions as prototype transitions for the second category. Establishing a set of retained one step transitions may be a physical and or logical operation. For example a physical operation may involve moving a data value from one data structure to another adding an entry to a data structure and so on. A logical operation may involve identifying a data value as belonging to a data set without physically moving the data value. For example a membership bit related to a data value may be set to indicate its inclusion in a prototype transition sequence.

With the satisfaction categories available from method closer examination may be paid to how to predict a degree of satisfaction in method . Consider a case where there are two satisfaction categories e.g. a high satisfaction category a low satisfaction category . Given the satisfaction categories predicting the degree of satisfaction in method may include computing a probability that a visit described by the visit sequence data belongs to a satisfaction category. This probability may be computed by identifying a sequence of one step transitions in the visit sequence data counting the number of one step page transition matches between prototype transitions in the satisfaction category and the sequence of one step transitions computing a normalized probability of a match between the visit and the prototypes for the satisfaction category based at least in part on the number of one step page transition matches and categorizing the visit as belonging to a satisfaction category based on a maximum normalized probability.

While unique pages and unique page transitions may be identified some pages and or page transitions in an ongoing sequence may not appear in the categorization data. Thus in some examples the probability computations may be extended. Therefore predicting the probability in method may also include determining the probability of a transition being in a satisfaction category and or determining the probability of a transition not being in the satisfaction category. Computing the probability may therefore also include considering the probability of a transition being in a satisfaction category and the probability of a transition not being in the satisfaction category when computing a normalized probability.

Generally describing an example configuration of computer processor may be a variety of various processors including dual microprocessor and other multi processor architectures. Memory may include volatile memory and or non volatile memory. Non volatile memory may include for example ROM PROM EPROM and EEPROM. Volatile memory may include for example RAM synchronous RAM SRAM dynamic RAM DRAM synchronous DRAM SDRAM double data rate SDRAM DDR SDRAM and direct RAM bus RAM DRRAM .

Disk may be operably connected to the computer via for example an input output interface e.g. card device and an input output port . Disk may be for example a magnetic disk drive a solid state disk drive a floppy disk drive a tape drive a Zip drive a flash memory card and or a memory stick. Furthermore disk may be a CD ROM a CD recordable drive CD R drive a CD rewriteable drive CD RW drive and or a digital video ROM drive DVD ROM . Memory can store processes and or data for example. Disk and or memory can store an operating system that controls and allocates resources of computer .

Bus may be a single internal bus interconnect architecture and or other bus or mesh architectures. While a single bus is illustrated it is to be appreciated that computer may communicate with various devices logics and peripherals using other busses e.g. PCIE SATA Infiniband 1394 USB Ethernet . Bus can be types including for example a memory bus a memory controller a peripheral bus an external bus a crossbar switch and or a local bus. The local bus may be for example an industrial standard architecture ISA bus a microchannel architecture MSA bus an extended ISA EISA bus a peripheral component interconnect PCI bus a universal serial USB bus and a small computer systems interface SCSI bus.

Computer may interact with input output devices via i o interfaces and input output ports . Input output devices may be for example a keyboard a microphone a pointing and selection device cameras video cards displays disk network devices and so on. Input output ports may include for example serial ports parallel ports and USB ports.

Computer can operate in a network environment and thus may be connected to network devices via i o devices and or i o ports . Through the network devices computer may interact with a network. Through the network computer may be logically connected to remote computers. Networks with which computer may interact include but are not limited to a local area network LAN a wide area network WAN and other networks. In different examples network devices may connect to LAN technologies including for example fiber distributed data interface FDDI copper distributed data interface CDDI Ethernet IEEE 802.3 token ring IEEE 802.5 wireless computer communication IEEE 802.11 and Bluetooth IEEE 802.15.1 . Similarly network devices may connect to WAN technologies including for example point to point links circuit switching networks e.g. integrated services digital networks ISDN packet switching networks and digital subscriber lines DSL .

API may facilitate providing data values to system and or may facilitate retrieving data values from system . For example a process that processes page sequence data can provide that data to system via API by using a call provided in API . In one example an API can be stored on a computer readable medium. Interfaces in API can include but are not limited to a first interface that communicates a page sequence data a second interface that communicates a satisfaction categorization data and a third interface that communicates a predicted website satisfaction data based on analyzing the page sequence data in light of the satisfaction categorization data. The page sequence data may include for example a session identifier a time ordered set of page identifiers a count of page transitions and so on. The satisfaction categorization data may include for example prototype transition sequences associated with high and or low satisfaction sessions. The predicted website satisfaction data may include for example a signal concerning of which category if any the session is likely to be a member and a probability of that membership.

While example systems methods and so on have been illustrated by describing examples and while the examples have been described in considerable detail it is not the intention of the applicants to restrict or in any way limit the scope of the appended claims to such detail. It is of course not possible to describe every conceivable combination of components or methods for purposes of describing the systems methods and so on described herein. Additional advantages and modifications will readily appear to those skilled in the art. Therefore the invention is not limited to the specific details the representative apparatus and illustrative examples shown and described. Thus this application is intended to embrace alterations modifications and variations that fall within the scope of the appended claims. Furthermore the preceding description is not meant to limit the scope of the invention. Rather the scope of the invention is to be determined by the appended claims and their equivalents.

To the extent that the term includes or including is employed in the detailed description or the claims it is intended to be inclusive in a manner similar to the term comprising as that term is interpreted when employed as a transitional word in a claim. Furthermore to the extent that the term or is employed in the detailed description or claims e.g. A or B it is intended to mean A or B or both . The term and or is used in the same manner meaning A or B or both . When the applicants intend to indicate only A or B but not both then the term only A or B but not both will be employed. Thus use of the term or herein is the inclusive and not the exclusive use. See Bryan A. Garner A Dictionary of Modern Legal Usage 624 2d. Ed. 1995 .

To the extent that the phrase one or more of A B and C is employed herein e.g. a data store configured to store one or more of A B and C it is intended to convey the set of possibilities A B C AB AC BC and or ABC e.g. the data store may store only A only B only C A B A C B C and or A B C . It is not intended to require one of A one of B and one of C. When the applicants intend to indicate at least one of A at least one of B and at least one of C then the phrasing at least one of A at least one of B and at least one of C will be employed.

