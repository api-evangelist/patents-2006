---

title: Remote copy system
abstract: A remote copy system includes a first storage system including a first storage controller and a first data volume. The first storage controller is configured to control data access requests to the first data volume. The first storage system is configured to store write data in the first data volume upon receiving a write request from a first host associated with the first storage system and generate a journal including control data and journal data. A second storage system includes a journal volume and configured to receive and store the journal generated by the first storage system in the journal volume. A third storage system includes a second data volume and configured to receive the journal from the second storage system and store the journal data of the journal to the second storage system according to information provided in the control data.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07606940&OS=07606940&RS=07606940
owner: Hitachi, Ltd.
number: 07606940
owner_city: Tokyo
owner_country: JP
publication_date: 20060928
---
This application is a continuation of U.S. patent application Ser. No. 10 602 223 filed Jun. 23 2003 the entire disclosure of which is incorporated herein by reference.

The present invention relates to a storage system more particularly to a storage system configured to perform a remote copy function.

Data is the underlying resources on which all computing processes are based. With the recent explosive growth of the Internet and e business the demand on data storage systems has increased tremendously. Generally storage networking encompasses two applications or configurations network attached storage NAS or storage area network SAN . A NAS uses IP over Ethernet to transports data in file formats between storage servers and their clients. In NAS an integrated storage system such as a disk array or tape device connects directly to a messaging network through a local area network LAN interface such as Ethernet using messaging communications protocols like TCP IP. The storage system functions as a server in a client server system.

Generally a SAN is a dedicated high performance network to move data between heterogeneous servers and storage resources. Unlike NAS a separate dedicated network is provided to avoid any traffic conflicts between client and servers on the traditional messaging network. A SAN permits establishment of direct connections between storage resources and processors or servers. A SAN can be shared between servers or dedicated to a particular server. It can be concentrated in a single locality or extended over geographical distances. SAN interfaces can be various different protocols such as Fibre Channel FC Enterprise Systems Connection ESCON Small Computer Systems Interface SCSI Serial Storage Architecture SSA High Performance Parallel Interface HIPPI or other protocols as they emerge in the future. For example the Internet Engineering Task Force IETF is developing a new protocol or standard iSCSI that would enable block storage over TCP IP while some companies are working to offload the iSCSI TCP IP protocol stack from the host processor to make iSCSI a dominant standard for SANs.

Regardless of the type of storage system used the data storage system users are acutely interested in maintaining back up data in order to prevent loss of valuable data from failure in storage unit or storage subsystem . Accordingly the data storage systems generally includes back up units to store data for emergency recovery when the primary units experience failure. The failure however may result from occurrence of natural disasters e.g. earth quake or storm in the area where the storage unit is provided as well as from the break down of the unit itself. If the back up units are placed nearby the primary units both of them may be destroyed when the natural disaster strikes. Accordingly many storage system users prefer to place the primary units and the back up units separated over along distance e.g. over 100 miles apart. In fact some users have even placed the primary and back up units in different continents.

Currently two operational modes are used by storage systems to copy the data to the back up or secondary sites synchronous mode and asynchronous mode. In synchronous mode a write request from a host to the primary storage system completes only after write data are copied to the secondary storage system and acknowledge thereof has been made. Accordingly this mode guarantees no loss of data at the secondary system since the write data from the host is stored in the cache of the primary system until the acknowledgement has be received from the secondary system. In addition the primary volume PVOL in the primary storage system and the secondary volume SVOL in the secondary storage system are identically maintained so that the SVOL can be promptly used to replace the PVOL if the PVOL experiences failure. However the primary and secondary storage systems cannot be placed too far apart e.g. over 100 miles under this mode. Otherwise the storage system efficiently execute write requests from the host.

In asynchronous mode a write request from a host to the primary storage system completes upon storing write data only to the primary system. The write data is then copied to the secondary storage system. That is the data write to the primary storage system is an independent process from the data copy to the secondary storage system. Accordingly the primary and secondary systems may be placed far apart from each other e.g. 100 miles or greater. However data may be lost if the primary system does down since the PVOL and SVOL identically maintained. Accordingly it would be desirable to provide a data storage system or remote copy system that provides the benefits of the synchronous and asynchronous modes i.e. enables the primary and secondary systems to be placed far apart while guaranteeing no data loss.

Embodiments of the present invention relate to a storage system configured to perform a remote copy function. In one embodiment a primary storage system synchronously sends write data along with its control data to an intermediary storage system. The intermediary storage system stores the write data and the control data to a volume e.g. journal volume JNL . The intermediary storage system maintains the order of arrival of the data and assigns or associates order information to each of the control data. Subsequently the intermediary storage system sends write data and its corresponding control data to a secondary storage system asynchronously or independent of the storing of the write and control data in the primary storage system. The secondary storage system stores the write data a secondary volume SVOL according to the control data and the order information associated with the control data.

As used herein the term storage system refers to a computer system configure to store data and includes one or more storage units or storage subsystems e.g. disk array units. Accordingly the storage system may refer to a computer system including one or more hosts and one or more storage subsystems or only a storage subsystem or unit or a plurality of storage systems or units coupled to each other via a communication link.

As used herein the term storage subsystem refers to a computer system that is configured to storage data and includes a storage area and a storage controller for handing requests from one or more hosts. An example of the storage subsystem is a disk array unit.

As used herein the term host refers to a computer system that is coupled to one or more storage systems or storage subsystems and is configured to send requests to the storage systems or storage subsystems. The host may be a server or client.

As used herein the term remote copy system refers to a computer system that is configured to perform a remote copy function. The remote copy system may refer to a single storage system subsystem or unit or a plurality of storage units systems or subsystems that are linked by a network or communication link. Accordingly the remote copy system may refer to a primary storage system a secondary storage system an intermediary system or a combination thereof. The remote copy system also may include one or more hosts.

In one embodiment volumes in the primary storage system are mirrored to the secondary storage system using the intermediary storage system . The intermediary storage system is generally located relatively close to the primary storage system while the secondary storage system is located relatively far away from the intermediary storage system and or the primary storage system. The write data is copied from the primary storage system to the intermediary storage system synchronously when a write request is received from a host that is associated with the primary storage system. The write data that is copied to the intermediary system is in a form of journal information including control data and journal data. The write data corresponds to the journal data and control data provides administrative information about the journal data. The journal is then copied from the intermediary system to the secondary storage system asynchronously with respect to the host write request. The write data is secure unless both primary and intermediary storage systems are damaged during the above copy process. In one implementation the intermediary system includes one or more journal volumes and does not include data volumes thereby lowering the equipment cost.

In one embodiment a remote copy system includes a first storage system including a first storage controller and a first data volume. The first storage controller is configured to control data access requests to the first data volume. The first storage system is configured to store write data in the first data volume upon receiving a write request from a first host associated with the first storage system and generate a journal including control data and journal data. A second storage system includes a journal volume and configured to receive and store the journal generated by the first storage system in the journal volume. A third storage system includes a second data volume and configured to receive the journal from the second storage system and store the journal data of the journal to the second storage system according to information provided in the control data.

In one embodiment a storage system includes a first storage controller to receive data access requests from a first host a first storage area that is associated with the first storage controller and configured to store information according to controls of the first storage controller the first storage area including a primary volume a second storage controller provided at least 100 miles away from the first storage controller and a second storage area that is associated the second storage controller and configured to store information according to the controls of the second storage controller the second storage area including a secondary volume. The secondary volume mirrors the primary volume. The first storage controller is configured to store write data associated with a write request from the first host in the primary volume and generate a journal including control data and journal data in response to the write request the journal data corresponding to the write data the journal being transmitted synchronously to an journal volume provided external to the first storage area.

In another embodiment a method for operating a remote copy system includes generating a journal including control data and journal data at a primary storage system after receiving a write request from a primary host associated with the primary storage system and transmitting the journal to an intermediary storage system for data mirroring between the primary storage system and a secondary storage system the secondary storage system being remotely located from the intermediary storage system.

The controller also includes a cache memory used to temporarily store data read from or to be written to the storage unit . In one implementation the storage unit is a plurality of magnetic disk drives not shown .

The subsystem provides a plurality of logical volumes as storage areas for the host computers. The host computers use the identifiers of these logical volumes to read data from or write data to the storage subsystem. The identifiers of the logical volumes are referred to as Logical Unit Number LUN . The logical volume may be included in a single physical storage device or a plurality of storage devices. Similarly a plurality of logical volumes may be associated with a single physical storage device. A more detailed description of storage subsystems is provided in U.S. patent application Ser. No. 10 394 631 now U.S. Pat. No. 6 950 915 entitled Data Storage Subsystem filed on Mar. 21 2003 claiming priority to Japanese Patent Application No. 2002 163705 filed on Jun. 5 2002 assigned to the present Assignee which is incorporated by reference.

Referring back to in the present embodiment the write data is sent synchronously between the primary system and intermediary and asynchronously between the intermediary system and secondary system . Accordingly the intermediary system is generally located relatively close to the primary system when compared to its distance from the secondary system . For example the intermediary system is located about 5 miles or less or 10 miles or less or 20 miles or less from the primary system. In one embodiment the intermediary system is no more than 100 miles apart from the primary system. In comparison the intermediary system is located about 50 miles or more or 100 miles or more 200 miles or more or in a different continent from the secondary system according to one embodiment of the present invention.

The remote copy system includes a primary host coupled to the primary storage system via a communication link and a secondary host couple to the secondary storage system via a communication link . The primary host includes an application program APP to access read and write storage areas or volumes in the primary storage system . In one embodiment the APP is operable to fails over to the secondary host if the primary host or and primary storage system become unavailable i.e. experiences failure in order to provide uninterrupted access to data to users particularly enterprise businesses. A remote copy management software RCM runs on both of the hosts and to provide user and or application interface for controlling the remote copy system.

The system includes three types of volumes. The primary storage system includes one or more primary volumes PVOL . PVOL includes production data that APP reads and writes. The secondary storage system includes one or more secondary volumes SVOL . SVOL includes copy data of PVOL . The intermediary storage system includes one or more journal volumes JVOL or JNL . JVOL stores write data written to PVOL and corresponding control data thereof.

In the present embodiment the control data and journal data are both stored in the same journal volume in a sequential manner i.e. the journals received are stacked onto one another in a FIFO memory. The intermediary storage system may include a plurality of such FIFO memories. In one embodiment first control data is first stored in the volume and first journal data corresponding thereto is stored in the same volume. Then a second control data is stored next to the first journal data and second journal data corresponding to the second control data is stored next thereto and so on.

The control data includes an index IDX that is an identifier for PVOL from which journal data is derived e.g. the unique number assigned for PVOL in the primary storage system or in a journal group . An address provides an offset address in the PVOL from which the write data is written e.g. starting logical block address LBA of the write data. A length provides the length of the write data e.g. the number of logical blocks or total bytes of the write data. A time indicates the time when a host writes data to PVOL . A sequence number SEQ provides the sequence information of the write. That is the sequence number provides write ordering within the primary storage system . A JVOL identification JVOL ID identifies the journal volume that contains corresponding journal data e.g. a unique number assigned to the journal volume in primary storage system or in the journal group . A journal offset JOFS provides the offset address in the journal volume from which the journal data is stored or starting address of journal data. Alternatively the control data may not include the JVOL ID and JOFS since the control data is stored adjacent to the corresponding journal data.

The intermediary storage system maintains two pointers a first pointer JOPTR and a second pointer JIPTR . JOPTR points to a journal that is to be sent to the remote storage system . JIPTR points to an address to where next journal received from the primary system is to be stored. Accordingly JIPTR should not get ahead of JOPTR to prevent new journals from overwriting the journals that have not yet been sent to the remote storage system

As will be explained in connection with the intermediary storage system allocates a space on a journal volume. This space allocation is performed by adding the length of the control data and journal data to the JIPTR i.e. Next JIPTR JIPTR length of control data and journal data .

As described previously when the intermediary storage system receives a JNLWR command from the primary storage system it allocates a space on the JNL volume along with a space on the cache memory in order to store the control data and journal data. When a journal is stored to the cache memory the intermediary storage system sends the completion of the JNLWR command. The journal is stored to the JNL volume subsequently.

In one implementation the control data includes an index IDX that is an identifier for PVOL from which journal data is derived e.g. the unique number assigned for PVOL in the primary storage system or in a journal group . An address provides an offset address in the PVOL from which the write data is written e.g. starting logical block address LBA of the write data. A length provides the length of the write data e.g. the number of logical blocks or total bytes of the write data. A time indicates the time when a host writes data to PVOL . A sequence number SEQ provides the sequence information of the write. That is the sequence number provides write ordering within the primary storage system . A JVOL identification JVOL ID identifies the journal volume that contains corresponding journal data e.g. a unique number assigned to the journal volume in primary storage system or in the journal group . A journal offset JOFS provides the offset address in the journal volume from which the journal data is stored or starting address of journal data. The control data also includes JOFS and JVOL ID since the control data and the journal data are stored in separate areas in the present embodiment.

There are two types of journals update journal and base journal. The update journal is journal for data written from a host. Journal is taken when a host writes data to PVOL . The base journal is journal for preexisting data that has been residing on PVOL prior to pairing. The base journal is taken when a new copy of PVOL is created or resynchronization is necessary.

Journal group has attribute of either Master or Restore. A master journal group generates journal while a restore journal group restores journal to SVOLs . The master journal group is associated with the primary storage system and includes one or more PVOLs and optionally includes one or more journal volumes. The restore journal group is associated with the secondary storage system and includes one or more SVOLs and optionally includes one or more journal volumes.

The journal group may also have an Intermediary attribute not shown e.g. the JVOL . In the present embodiment the intermediary journal group has been grouped with the master journal group and the restore journal group. Such an intermediary journal group not shown is associated with the intermediary storage system and includes one or more JVOLs and optionally includes one or more SVOLs

A journal group number GRNUM indicates a number uniquely assigned to the journal group within the storage system . A journal group name GRNAME indicates the name assigned to the journal group typically by a user. If two or more journal groups have the same GRNAME then they have the remote mirroring relationship. A journal group attribute GRATTR indicates the attribute assigned to the journal group e.g. MASTER INTERMEDIARY or RESTORE. As explained above a master journal group generates journal from data volumes PVOLs in the journal group. An intermediary journal group is a transitional journal group between the master and restore journal groups. A restore journal group restores journal from journal volumes to data volumes SVOLs .

A group status GRSTS indicates the status of the journal group. The journal group may have the following status COPY PAIR SUSP and SMPL. The COPY status indicates that there is a data volume in the journal group from which base journal is taken. That is the data stored in the PVOL prior to the pairing i.e. preexisting data stored in the base journal has been retrieved for copying to the SVOL. The PAIR status indicates that all preexisting data have been copied to the SVOL and the journal group is or has retrieved updated data from the update journal for copying to the SVOL. The SUSP or suspend status indicates that the journal group has suspended taking or retrieving updated data from the update journal. The SMPL status indicates that no volume in the journal group has started taking the preexisting data from the base journal i.e. the remote copy is to begin.

An array DVOL INFO stores information about all data volumes in the journal group. Each entry of the array contains the following information a volume identification VOLID that is uniquely assigned to the volume in the storage systems VOLID generally has an integer value a volume name VOLNAME assigned to the volume by a user a volume status VOLSTS indicating the status of the volume e.g. COPY PAIR SUSP SMPL and others and a pointer BJPtr keeps track of the progress of taking the base journal. The data volume in a journal group is assigned a unique index in the group for indexing the DVOL INFO .

An array JVOL INFO stores information relating to all journal volumes in the journal group. JVOL INFO includes VOLID the identifier of a journal volume . The journal volume in a journal group is assigned a unique index in the group for indexing the JVOL INFO array.

The primary storage system performs the process upon receiving one of these two commands. At step a base journal pointer BJPtr is initialized to start taking base journal from the first data e.g. first block track chunk of blocks or any addressable data on the data volume in the data volume. A next target it retrieved step . The next target is obtained from the value of BJPtr . For example the next target is j th block if BJPtr has j. In one embodiment a journal is taken for several blocks of data at a time for more efficient processing. Accordingly the next target after the j th block is n blocks from the j th block in the present example. The process determines whether there is additional target step . The process ends if no more target exists i.e. all base journals have been taken.

However if an additional target exists a control data for the target blocks is created step . The created control data is stored in a cache memory in the primary storage system . The target data is read from PVOL to the cache memory step . After reading the target data the control data is validated. The control data includes the following information IDX Address and Length . Other information may be included as well.

The journal data and control data are sent to the intermediary storage system step . Generally only journals a pair of control data and journal data that have been validated in step are transmitted to the intermediary system. In one embodiment a plurality of validated journals are sent together in a single command. BJPtr is incremented to the next target after successfully transmitting the journals step . That is BJPtr is incremented to be j n. Steps and are repeated until no more target exists.

The primary storage system determines whether a write command has been received step . All read commands are ignored at this time. The storage also determines if the pair status of PVOL is COPY or PAIR. If the these conditions are satisfied the primary storage system checks if the pair status is COPY step . If so it is checked to determine if base journal has already been taken for the write target address step . This is done by examining the pointer BJPtr . That is if Write Target Address 

If step is true or step is false i.e. the process of taking base journal has been completed then update journal is taken for the write. For this purpose the control date is first created. The control data includes IDX address and length . The write commands includes the address and length . Other information may be included in the control data.

Write data is received from the host and stored in a cache memory step . The write data corresponds to the journal date associated with the control data created at step . The control data and journal data are transmitted to the intermediary storage system step . The process waits for an acknowledgement from the intermediary storage system step . The write completion is send to the host upon receiving the acknowledgement step . The storage of the write data to the primary and intermediary systems are guaranteed since the write completion is not notified to the host until the acknowledgement from the intermediary system has been received.

The intermediary storage system allocates a storage space on a JNL volume according to the information provided in the command parameter step . The space allocation is also performed on a cache memory buffer to improve write performance as explained in more detail later. The allocated buffer is associated with the allocated storage space in the volume. A transfer ready packet or message is sent to the primary storage system once the storage allocation has been performed.

The primary system transfers the journal information to the intermediary system upon receipt of the transfer ready packet step . In one embodiment the control data is sent first and then the journal data.

The intermediary system stores the control data and journal data to the buffer on the cache memory step . The journal is eventually stored in the allocated JNL volume in the intermediary system when the primary storage system is idle according to the buffer storage association performed at step . In addition a sequence number and or current timestamp are assigned to the journal i.e. attached to the control data. The sequence number is sequentially assigned to journals received from the primary system and stored in the JNL volume. The sequence number provides the order of the journals received from the primary system which is helpful in a data recovery process. In the present embodiment the intermediary system attaches the sequence number to the journals and otherwise manages the sequence number. A counter is provided in the intermediary system to attach the sequence numbers to the journals transmitted by the primary system see . A timestamp is also attached to the journals to indicate the time it was received by the intermediary storage system . In another embodiment the sequence information is attached to the journals at the primary system prior to transmitting them to the intermediary system. Similarly the timestamp may also be attached to the journals by the primary system to indicate the time they were transmitted to the intermediary system. Once the journal has been properly received and stored the intermediary system sends an acknowledge of the safe receipt of the journal to the primary system. Thereafter the primary storage system issues a completion of Write Journal command.

The process is similar to the process relating to the journal transfer from the primary system to the intermediary system. A JNL WR command with parameters is issued from the intermediary system to the secondary storage system step . The secondary system allocates a buffer space on its cache memory according to the data length specified by the parameters and sends a transfer ready notification back to the intermediary system step . The intermediary system sends a journal including control data and its corresponding journal data step . In one embodiment the control data is first transmitted followed by the journal data. The secondary system stores the journal to the allocated buffer space and sends an acknowledgement of the receipt of the journal to the intermediary system step . The journal data is stored in a SVOL based on the sequence number and timestamp assigned at step of the process . For example a journal having a lower sequence number is restored before that having a higher sequence number. Upon receipt of the acknowledgement the intermediary issues a WRJNL command to indicate the completion of the write data step . A pointer associated with the journal volume in the intermediary system e.g. JOPTR is moved forward to the next batch of data to be copied to the secondary system.

The control data of the journal selected at step is used to determine the storage area of the journal data e.g. a particular SVOL and a location therein step . For example the following information in the control data are examined IDX Address and LENGTH . The IDX indicates an index for PVOL in the MASTER JNL group i.e. the primary storage volume in the primary system. The journal data is stored in a SVOL that has the same index step . That is the journal data is stored in the SVOL specified by the IDX at the address indicated by the Address for the length corresponding to the LENGTH . In the present embodiment the control data is not stored in the SVOL since the storage locations of the journal data in the PVOL and SVOL are mirrored.

The intermediary storage system is used as an intermediary storage as before. However since the intermediary storage system may be located far from the secondary storage system the new primary system i.e. the secondary system transmits journal asynchronously with respect to the write request of the host . For this purpose the process is performed without step and . That is the journals are created synchronously but sent asynchronously with host write requests. A timestamp and sequence number are attached to the control data at the new primary system prior to transmitting it to the intermediary system . Accordingly such steps need not be performed at the intermediary system during the fail over.

The intermediary system includes a journal volume and a plurality of data volumes . In one implementation the data volumes may be placed at remote location from the journal volume e.g. in another storage system. An intermediary host is coupled to the intermediary system via a communication link . The intermediary host includes a RCM .

In the system the intermediary system and the secondary system both mirror the primary system. The data mirroring in the intermediary system is performed using the processes and described above. The system may fail over to the intermediary storage system or the secondary storage system when the primary storage system goes down. In such a configuration the intermediary storage system serves as a more efficient storage center than the secondary system since it is likely to be closer to the primary system and the users than the secondary system. During the fail over the intermediary host functions as a primary host alone or in conjunction with the host .

The above detailed descriptions are provided to illustrate specific embodiments of the present invention and are not intended to be limiting. Numerous modifications and variations within the scope of the present invention are possible. Accordingly the present invention is defined by the appended claims.

