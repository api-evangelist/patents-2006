---

title: System for and method of motion and force synchronization with time delay reduction in multi-user shared virtual environments
abstract: Systems, methods and computer-executable code stored on computer readable media for synchronizing the evolving state of a dynamic object in a shared virtual environment among a plurality of geographically separated computers connected in a communications network including data communications links introducing time delays in the propagation of data between said computers. The synchronization scheme utilizes an advanced feedback controller to compensate for the state error between sites, comprised of a linear compensator and a Smith predictor based internal model, to determine correct control forces creating a smooth input while maintaining high levels of responsiveness and consistency. A recovery filter for restoring the natural motion of the virtual object distorted by synchronization control is also described.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07642989&OS=07642989&RS=07642989
owner: Massachusetts Institute of Technology
number: 07642989
owner_city: Cambridge
owner_country: US
publication_date: 20060317
---
This application claims the benefit of priority to U.S. Provisional Application Ser. No. 60 662 584 filed 17 Mar. 2005 and entitled Motion Synchronization Scheme for Multi User Shared Virtual Environment Simulations with Time Delay the contents of which are hereby incorporated by reference in their entirety.

The U.S. Government may have certain rights to this invention under Grant No. N66001 02 C 8022 from the U.S. Navy.

This invention relates generally to software systems and methods for representing user activity in a multi user multi location shared virtual environment and in particular to computer based feedback control systems and methods for presenting physically realistic simulations to the users while compensating for time delays inherent in the communications links between the user stations.

Shared virtual environments SVEs provide virtual places and low level supportive frames using network communication in various applications including CAD military training simulation remote conferencing general haptic collaboration interactive educations on line games and so forth. See S. Singhal and M. Zyda Addison Wesley 1999 incorporated herein by reference. Consistency and responsiveness the two most important concepts in SVEs correspond to the closeness of the states among participating user sites i.e. computers or stations and how quickly the users receive the response to their and others interaction with the SVE respectively.

Conventionally consistency and responsiveness are achieved by using a concurrency control strategy whose approach coordinates all the transactions that occur between participants. However if the communication delays between participants become large such approaches lead to poor responsiveness. For example a pessimistic concurrency control allows only one transaction between a server and the clients at a time. One of the primary complaints about these systems is that they are laggy in other words that they respond sluggishly and erratically when the user invokes a command due to inherent system latency created by the need to transmit information to and from the user to a central server which processes the information. This lag occurs because the user s computer cannot process the command and display the results until after it has consulted with a central server. If every client contends for a transaction each client needs to wait idly until its transaction is approved. Semi optimistic concurrency control improves the responsiveness momentarily but leads to unsatisfactory consistency and sometimes non smooth behaviors which is not suitable for treating the SVEs where motion is involved.

There is appreciable interest in the class of SVEs that is designed for haptic collaboration which deals with a manipulation of shared virtual objects by multiple users exchanging haptic forces that is forces involved in the touch feel and manipulating of objects such as during manual exploration and manipulation. The introduction of haptic forces initiates dynamic motion of the engaged virtual object. For a realistic display of haptics and graphics the motion needs to be created so as to follow physical laws e.g. Newton s laws . If the latency of response is over 30 msec to a user s action he perceives a disorder in the sense of touch. This suggests that every distributed user should receive immediate response to his input via haptic and or visual feedbacks and that the concurrency control strategy will not guarantee such a high responsiveness if communication delay is large. Hence SVEs for haptic collaboration need a new method that is perhaps an improvement over a concurrency control strategy and also is suitable for a situation where the delay can be large.

The Transatlantic Touch was a long distance virtual touch project carried out between Massachusetts Institute of Technology MIT and University College of London UCL . see J. Kim et al. Transatlantic Touch A study of haptic collaboration over long distance vol. 13 no. pp. 328 337 2004. In the project two users one at MIT and the other at UCL performed collaborative grasping of a shared virtual object as pre planned sequences feeling the presence of remote users through the haptic force communication by direct peer to peer connection. Each user interacted with his local replica of the SVE state managed separately so each received instant haptic and visual responses from his input. However as the communication delay became severe the haptic task induced a large inconsistency between users who could not recover from the situation.

Sensitivity to latency also presents a significant obstacle to implementing SVEs on the Internet because the latencies associated with the Internet can be substantial and quite unpredictable. Therefore what is needed is a technique for overcoming such difficulties associated with the prior art when implementing SVEs. In particular what is needed is a technique for resolving latency concerns in a multi user SVEs not only within a local area network but also with other IP Internet configurations having random variation of time delay during the communication having a specified maximum tolerable delay.

The present invention provides in distinct aspects methods systems and machine readable program storage media tangibly embodying programs of instructions for synchronizing the state of a dynamic virtual object in a shared virtual environment SVE among a plurality of geographically separated computers connected in a communications network. A synchronization scheme is presented to achieve a high level of consistency in peer to peer and certain client server based SVEs. The invention focuses on SVEs with dynamic virtual objects that show physically realistic behaviors as in haptic collaboration tasks. The synchronization scheme utilizes an advanced feedback controller to compensate for state errors between separated sites with a significant amount of time delay. The controller which is comprised of a linear compensator and a Smith predictor based internal model creates smooth input to accommodate the state error in real time.

The synchronization controller is applied to each participating computer network which each simulate both static SVE components and dynamic virtual objects through the use of synchronous local models of the state of dynamic virtual objects in the SVE. At initiation each synchronous local model of the virtual object state is identical but thereafter continuously evolves with users input. Each user is permitted to provide inputs via input means such as for example haptic devices in order to interact with the corresponding synchronous local model of the dynamic virtual object state so as to induce one or more local changes. The local changes in state are propagating from each computer sequences of data packets to another computer either another peer or a server depending upon the embodiment along network communications links that introduce time delays latency into the propagation. Each computer also receives similar sequences of data packets propagated from another computer that have time delays. The synchronization controller compensates at each computer for dynamic virtual object state errors as will be described in detail below.

With reference to the present invention provides a computerized system and feedback control method for providing physically realistic computer simulations in multi user shared virtual environments SVEs to being simulated at each of a plurality of geographically separated computers to in a data communications network having associated varying time delays inherent in data communications links to between the computers. The present invention enables each user using one of the computers or participants to an immediate interaction with virtual objects in the SVEs to while maintaining consistency within a tolerable bound a maximum tolerable delay between the users. When a user interacts with the locally simulated synchronous model of the SVE including both static and dynamic portions such as through input devices such as haptic devices to for example a local change in the state of a dynamic virtual object in the SVE reflected in the synchronous local model is induced and is propagated in sequences of time stamped data packets to along the communication links to and it is received and adopted continuously by the rest of the computers in network in real time. The static portions of the SVE are maintained at each computer and are independent of the evolving dynamic states of the virtual objects whose state data circulates. The propagation can continue by using a ring type topology between or among the networked computers to such that the data packets to circulate in a closed network.

As will be described the present invention provides a control algorithm that accommodates latency reduction not only in local area network LAN environments but also wide area IP Internet network configurations having random variation of time delay during the data communications provided the total round trip delay is below a maximum allowable delay R. Due to the real time nature of collaborative haptic simulation a UDP User Datagram Protocol streaming method is preferred instead of a TCP Transmission Control Protocol streaming one. At the instances at which the data is sent the local time is always stamped so that the amount of round trip delay may be computed during feedback.

Server client embodiments of the invention are substantially equivalent to ring type peer to peer as a sever acts only as a linker or switch that distributes data packets in order that flow of data packets circulates the whole participant network in an ordered manner. In a server client implementation a every client is communicating with server and no direct peer to peer connection is made b the server receives all the data packets from clients and c the server then links data flow from i th station to i 1 th station creating a system equivalent to a closed ring network. The server client configuration provides preferred data management because of its capability of regulating data flow rate checking lost packets and doing other well known server roles. The cost is the increased network round trip delay.

The user naturally expects an immediate response to his input action when using an interactive realistic physical simulation such as haptic simulations. In certain situations for improved human perception comfort and satisfaction fast responsiveness may be more critical than strict consistency. Thus a goal of the present invention is to provide a feedback algorithm that enables high responsiveness while maintaining a sufficient level of consistency of the dynamic virtual objects in SVE applications using the communications network . The system includes a feedback controller described in detail below for the regulation of differences in the local states of the SVEs between or among the networked computers.

In the following description for purposes of explanation numerous specific details of a two participant network with an advanced feedback controller to compensate for state error between geographically separated computers with a significant amount of time delay are set forth in order to provide a thorough understanding of the present invention. It will be evident however to one skilled in the art that the present invention may be practiced without all of the specific details presented and that the invention is more generally applicable to higher numbers of dynamic virtual objects and or computers which may be arranged in ring type peer to peer or certain client server communications networks permitting circulatory information data packet propagation and having compensable latency. Furthermore the present invention includes methods having various steps. These steps may be embodied in computer program instructions on computer readable media. The instructions can be used to cause a general purpose processor which is programmed with the instructions to perform the steps. Alternatively the steps of the present invention may be performed by specific hardware components that contain hardwired logic for performing the required steps or by any combination of programmed general purpose computer components and custom hardware components. Also the terms computer station and participant are used interchangeably in the description that follows.

Each computer and in client server embodiments the server may be a conventional IBM Personal Computer PC or Intel Central Processing Unit CPU based computer utilizing Microsoft Windows 95 or Windows NT a computer from Apple Corporation such as the iMac a computer utilizing Linux and the X Window System which may be based on the Intel PowerPC DEC Alpha or more powerful computer such as a Cray X MP a parallel UNIX based supercomputer such as a Cray T3E Thinking Machines CM 5 or SGI Origin 2000. The computers may be assisted by servers forming a bank of servers connected via Ethernet an Asynchronous Transfer Mode ATM switch or other fast local interconnect or via a long distance interconnect or other high speed Internet connection. Each computer requires a suitable connection to provide appropriate bandwidth and data transmission speed for use with the invention. The exact computing power and communications bandwidth requirements for the system will depend upon the specific use of the invention e.g. CAD military training simulation remote conferencing general haptic collaboration interactive educations on line games and so forth. 

The computers support numerous types of program components including a display component an interaction component a feedback controller component and optionally but preferably a recovery filter component the latter two of which will be described in detail below. The interaction component is responsive to user input through one of the input devices which comprises any combination of devices such as a mouse a joystick a trackball a keyboard and preferably includes haptic input devices with or without force feedback and or audible outputs. The display component is responsible for rendering graphics on display devices connected to associated computers. Each of the computers is time synchronized with the other computers in order that time stamped data in the data packets to may be exploited by the other computers.

Each computer to includes internal not shown memory including both random access memory RAM and read only memory ROM and a mass storage device such as for example optical magnetic or other similar storage medium suitable for use with a personal computer system. In one embodiment the present invention provides software that when executed implements the inventive methods described below the software being stored on media readable by the processors of the computers.

Conventional techniques for implementing virtual environments are known in the art and will not be described herein but typically involve modeling a SVE in a database and through rendering commands data are sent from the database to a display of the computer system to generate various scenes representing the SVE.

The present invention is probably best understood in the context of a problem solved by the invention and illustrated in the kinematic pose of a dynamic virtual object a cube used in the Transatlantic touch haptic collaboration project referenced above where two long distance users at site and site respectively were asked to hold the cube and lift it against the gravitational force for a duration of time by applying forces in two opposite directions.

The challenge is how to synchronize the SVE at each site. The motion of the cube at site X t is computed by local force F t and remote force F t T by Newton s law while motion of the cube at site X t is computed by remote force F t T and local force F t where T and T are communication delays from site to site and from site to site respectively. As time progresses because the user input histories are different at both sites the deviation of the position X t X t X t develops and would accumulate without any synchronization treatment.

The present invention provides a feedback controller that produces corrective inputs F s on participant sites to such that the inconsistency of state X t arising in general physical motions of virtual objects in SVEs with large communications delay remains small or tends to zero asymptotically.

Each of the computers maintain in resident or nonresident memory a local model implemented by the software architecture described below which provides an all inclusive description of the SVE. The SVE can range from a set of virtual objects having simple interrelationships defined by the users such as for example a game to an entire simulated environment having a landscape with varied terrain. Each model contains an all inclusive description of each virtual object in the virtual environment. The descriptions of virtual objects modeled by the software not only include the appearance of the virtual object but also a description of how those virtual objects respond to stimuli referred to herein as the object dynamics of the virtual object. 

With reference again to at the start of the control method each of the local models of the SVEs are initialized to be an identical replica of a virtual environment including one or more dynamic virtual objects and each participant computer for example is allowed to locally simulate its local SVE independently without consideration of other participants thereby yielding ideally high responsiveness. Then continuous change of the synchronous local models of the state of a virtual object in the SVE including state information x and user input forces f included in a sum of forces data type are propagated to a remote participant computer . In this setting at each computer a feedback controller such as synchronization controller implemented in software hardware or a combination of both operates to minimize the difference between the conveyed state and its corresponding local value. Eventually through successive information propagation and simultaneous action of the synchronization controllers to consistency of the SVEs between or among participant computers is achieved. In client server topologies the virtual object state information in the data packets is sent to a central server rather than a peer. 

It is desirable to choose a network configuration demonstrating the smallest round trip delay among the participating computers i.e. the shortest circle . In order to determine the optimal configuration a computer based search is run under the assumption that communications time delays between participants are known a priori. Time stamping the data packets helps to measure the round trip time in real time. Since the structure of network is static the shortest circle configuration is fixed once determined. The data packets required for information exchange are issued by a first participant and travel along the shortest circle determined. First participant continues to propagate data packets at regular intervals until the first data packet is returned to the first participant . Afterward the existing propagating packets continue circulating unless lost in transmission. Data extrapolation techniques may be employed to compensate for lost data packets.

Each data packet contains all of the state information x of dynamic virtual objects in the SVE such as position and velocity as well as a sum of all of the forces f externally input by n participating users such that

With reference to each time a data packet is received at an i th station local position data and velocity data reflective of local changes induced in the synchronous model of the state of the dynamic virtual object is substituted in the data packet for the old one along with its local time i.e. at each station only the local data is updated. Additionally the sum of all the external forces f is recalculated by substituting the updated local force component for its previous value in the data packet.

Two adjacent stations in the network act as a leader and a follower reversed with respect to the direction of information flow. For example the i th local station is the leader of the i 1 th remote station . The state of the i th station acts as a desired state the i 1 th station should follow. The problem of state difference minimization is thus reduced to one of feedback control except that certain conditions are required to be met beyond state error minimization.

Messages received by and propagated from a participant computer station I are coupled to the network through a program component which can be represented in a Laplacian domain as synchronization controller C s . In this two user embodiment the network renders to a bilateral communication between the stations which synchronize each other.

 R2 the effect of feedback forces should not overwhelm the physical motions of the dynamic virtual object and

 R3 the state of dynamic objects must be consistent after transient time and the overall structure must be stable.

Synchronization control is applied to all of the participating computers. At station I The time delayed state output eX from a previous participating computer station II is received as an input into synchronization controller C s and in return the current output X of synchronization controller is sent to the next participant computer in this simplified case station II for time delayed input into its synchronization controller . Output X is allowed to propagate completely about the closed loop and returns as a time delayed feedback data packet eX.

Synchronization controller C s is comprised of two components a linear compensator K s and state estimators P s and P s e illustrated as Smith predictor based internal model of the virtual object s dynamics where K s ks kis a proportional derivative PD controller having a velocity gain kand a proportional constant gain k P s comprises the virtual reality object dynamics of the virtual object being acted upon by the user and edenotes the closed loop round trip time delay R in this case the sum of delays T and T in the Laplace domain representation. Linear compensator K s being a simple PD controller compensates for the state difference between the reference time delayed state output eX from station II and the time delayed feedback value eX while the state estimators play more complicated roles.

In order to meet design criteria R1 in a network with time delays the output of synchronization controller C s is not instantly fed back but must be fed back after the round trip time. Since user input force F is the disturbance to the point of the controller if direct feedback were to be used any disturbance effect may be compensated. Therefore feeding back output X of synchronization controller C s after a round trip delay presents the local user with an immediate display of the response to his action without being affected by the immediate feedback compensation. Furthermore the feedback after the round trip time matches the input force timing of the reference time delayed state output eX from station II .

On the other hand the effect of corrective input F should be reflected immediately in order that the state difference can be compensated instantly in accordance with design criteria R2 R3 . So the corrective input force F only is directly fed back through P s in the control loop. This permits the synchronization controller C s to know how much the output is corrected.

Finally feedback of a time delayed corrective input force F the ecomponent of the Smith predictor is added to negate the controller effect to the feedback state resulting in pure output representing the user s force input. This feedback is applied to comply with stability requirement R . As noted above a real time measured round trip time R can be calculated via the time stamps applied to the data packets. With R measurement this third feedback becomes possible in combination with a queue of the previous values of the second feedback directly fed back corrective input force F.

Walton and Marshall s method provides a convenient way to examine the stability of the described system. K. Walton and J. E. Marshall Direct method for tds stability analyses vol. 2 no. 2 pp. 101 107 1987 incorporated herein by reference. 

Theorem 1. For the closed loop system a constant R 0 such that i the closed loop system has bounded stability if 0

For the two user system described above with a virtual object with a mass m 1 and the damping resistance coefficient b 0 the solution for the maximum allowable delay reduces to

Thus the overall system shows exponential stability under the condition that the actual round trip time R is bounded by the maximum allowable delay R. is a plot of the stability bounds for this system and relates the velocity gain kand proportional constant gain kof the linear compensator K s to the maximum allowable delay R. Stable system conditions can now be found by substituting numerical values into the system parameters. According to the result Rtends to increase as the control gains become smaller. This means that a large communications delay shrinks the stable bound of the control gains. Since the speed of the closed loop response is usually proportional to the magnitude of the control gains if the delay is large the speed of the response would be reduced.

Referring again to the application of synchronization control represented by the closed inner loop inevitably changes the natural motion of the dynamic virtual object. If the amount of change is large the user may perceive the motion of the object as unnatural. Thus an optional but highly preferred additional compensatory means referred to herein as a recovery filter may be employed to recover the original natural motion. The user s input force F is augmented by the recovery filter. Since the recovery filter represented in the two user embodiment by augmenting force eF is placed outside of the closed loop the stability and robustness properties will be unaffected.

Quantifying how much the synchronization controller C s changes the natural motion is a first step toward recovery filter design. For the situation where F0 and F 0 where

It is noted that D s and eD s represent the deviation of the object motion from its natural motion. With D eD 1 the object has no deviation from the natural motion. Now suppose a new filtered input F s is defined as F s L s F where L s is a filter transfer function. If we apply Fto the system instead of F new input output relations become .

In order to give the user at site I who has introduced Fphysically a natural perception of the object s motion L s needs to be designed so as to minimize 1 . And because D s behaves like a lag compensator L s is chosen as a lead compensator of the form

The data packet transmission control synchronization controller and recovery filter for a particular SVE are written in a software language specifically for the purpose. The scripting language may be a full featured programming language much like Java or C allowing the scriptwriter to use control constructs data structures complicated state variables and the like which allows changing the appearance of objects play sounds move things around create and destroy inventory items modify state variables pop up dialog boxes alter player statistics play animation and in general control every aspect of the virtual environment. This section briefly describes how to implement the synchronization control algorithm the steps of which are summarized in . Here a rough sketch of computer code in the i th station is provided. It will be assumed for explanatory purposes that there is only one dynamic object to simulate and the dynamics are given by

Two experiments using real Internet and LAN communications were carried out. These tests clearly support the validity of the analyses and demonstrate the applicability of the synchronization controller. The first experiment demonstrates the performance and stability of the synchronization control over a long distance Internet communication without human users involved while the second experiment shows the synchronization performance with human users interacting in a sample SVE over the LAN communication. A schematic of the test configuration is shown in .

In the first study information exchange occurred between MIT Cambridge Mass. and the Pohang University Pohang Korea. UDP streaming was applied since prompt delivery was more important than inaccuracies that might have been introduced by possible data packet disorder and data loss. No haptic devices were used to generate the forces and displacements. Instead modeled forces were simulated with sin 1.8 5 MIT site sin 1.0 5 1 POSTECH site.

The shared dynamic object utilized was a cube that has mass and damping resistance with values of m 1 and b 0. The gains of the synchronization controller were selected to be k 20 and k 6 such that the closed loop system s stability is obtained with a maximum delay of R 574 ms.

The corresponding forces Fand Fand two outputs Xand Xare shown in respectively. These Figures clearly show that very good synchronization has been achieved. Noting the Rwas 547 ms is very conservative compared to the actual delay R shown in . Further experiments were performed for different values of k. As kbecame smaller the performance was slightly degraded and instability was observed for k 1.5 which was a far more aggressive choice of R 256 ms. The resulting response is shown in .

In the second experiment two sites were connected to a LAN where the time delay was only a few milliseconds therefore an artificial delay was introduced between the sites in order to simulate long distance communications. In both sites an identical haptic device a Phantom from Sensable Technologies Inc. was used to manipulate a solid virtual cube comprising the dynamic virtual object. Two separate experiments of i independent motions and ii cooperative motions of the haptic devices. The other required parameters of the experiments are shown in Table 1. The synchronization controller parameters were chosen as k 2 k 2 and R 2218 ms.

Two participants were placed in different rooms and were each asked to push and hit the cube arbitrarily using the haptic device independent of the motion of the other device.

A reference test was first conducted with the synchronization control turned off. That is F F 0 for R 100 ms. The resulting force and position response in the x coordinate direction are shown in respectively which illustrates that large state inconsistency is observed between the two sites as the users forces are applied. Under the same test conditions the synchronization controller was activated. The resulting force and position responses are illustrated in respectively. As can be seen very little state discrepancy exists between the two sites.

Further experiments with random input and different time delays were conducted with the results shown in . When R was set to 200 ms both sites remained well synchronized except for a few transitions. Even when R 400 ms the synchronization controller still worked except that the transient lasted longer and the overall motion was not as smooth as in the case with smaller time delays.

In this experiment the two users were asked to hold the cube collaboratively by exerting forces in the opposite directions along the x axis similar to a tug of war game except for the application of compressive force rather than tensile forces. The resulting responses are shown in for a delay of R 120 ms and R 240 ms. In the case of R 120 ms as seen in for the first 10 seconds contact with the cube is barely made. Following this time very small forces were applied by both participating users for the next 10 seconds causing a slight positive motion of the cube while maintaining synchronized behavior that is X X . After t 18.5 sec a firm contact is made with the cube at which time equal and opposite forces are applied by the users. While from t 18.5 s to t 24 s a very good tug of war ensues while after t 24 s these forces become somewhat oscillatory which is primarily due to the natural feedback in the human s sensory motor system. As the oscillation amplitude increased it was observed that the users comfort level deteriorated leading finally to a release of contact with the cube at 29 s.

Although the invention has been described with respect to various embodiments it should be realized this invention is also capable of a wide variety of further and other embodiments within the spirit of the invention.

