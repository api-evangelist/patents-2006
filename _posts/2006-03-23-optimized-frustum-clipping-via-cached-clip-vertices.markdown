---

title: Optimized frustum clipping via cached clip vertices
abstract: Apparatus, systems and methods for optimized frustum clipping via cached clip vertices are disclosed. For example, a method is disclosed, the method including generating a clip vertex for a leading edge of a triangle of a triangle strip or fan, indicating that the leading edge is shared with an adjacent triangle of the triangle strip or fan, and in response to the indication, using the clip vertex as a clip vertex of a trailing edge of the adjacent triangle in the triangle strip or fan. Other implementations are disclosed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07589746&OS=07589746&RS=07589746
owner: Intel Corporation
number: 07589746
owner_city: Santa Clara
owner_country: US
publication_date: 20060323
---
A typical 3D graphics system employs a pipelined data rendering scheme including two stages a geometry stage and a rasterizer stage. Rendering stages often include a collection of fixed function rendering units as well as more general purpose geometry and pixel processing units capable of employing shaders to perform specific rendering calculations. Applications or graphics drivers frequently use shaders in conjunction with the general purpose units to directly implement standard 3D pipeline rendering stages. For example geometry stages commonly use fixed function clip set up units to determine in a process known as 3D frustum clipping which of the rendering primitives e.g. points lines triangles provided by the application or graphics driver will eventually be displayed. Such clipping is typically done in 3D space using a trapezoidal shaped view volume known as a view frustum. When a clip set up unit determines that a triangle primitive lies partially within the view frustum the unit will typically employ a clipper shader to calculate the points of intersection between the edges of that triangle and the view frustum and ultimately a new set of clip vertices lying at those points.

3D performance is frequently optimized by the use of triangle strip and or fan primitives where two or more triangles share a common edge and thus have vertex information common to more than one triangle. When a typical geometry stage s clip set up unit or module undertakes frustum clipping for triangle strip and or fan primitives the fact that edges are shared between triangles is ignored. This means that a typical clipper shader will undertake separate redundant calculations for adjoining triangles generating two identical clip vertices along the shared edge between the triangles.

The following detailed description refers to the accompanying drawings. The same reference numbers may be used in different drawings to identify the same or similar elements. In the following description specific details are set forth such as particular structures architectures interfaces techniques etc. in order to provide a thorough understanding of the various aspects of the claimed invention. However such details are provided for purposes of explanation and should not be viewed as limiting. Moreover it will be apparent to those skilled in the art having the benefit of the present disclosure that the various aspects of the invention claimed may be practiced in other examples that depart from these specific details. In certain instances descriptions of well known devices circuits and methods are omitted so as not to obscure the description of the present invention with unnecessary detail.

System may assume a variety of physical implementations. For example system may be implemented in a personal computer PC a networked PC a server computing system a handheld computing platform e.g. a personal digital assistant PDA a gaming system portable or otherwise a 3D capable cellular telephone handset etc. Moreover while all components of system may be implemented within a single device such as a system on a chip SOC integrated circuit IC components of system may also be distributed across multiple ICs or devices. For example host processor along with components and may be implemented as multiple ICs contained within a single PC while graphics processor and components and may be implemented in a separate device such as a television coupled to host processor and components and through communications pathway .

Host processor may comprise a special purpose or a general purpose processor including any control and or processing logic hardware software and or firmware capable of providing graphics processor with 3D graphics data and or instructions. Processor may perform a variety of 3D graphics calculations such as 3D coordinate transformations etc. the results of which may be provided to graphics processor over pathway and or that may be stored in memories and or for eventual use by processor .

In one implementation host processor may be capable of performing any of a number of tasks that support 3D graphics processing. These tasks may include for example although the invention is not limited in this regard providing 3D scene data to graphics processor downloading microcode to processor initializing and or configuring registers within processor interrupt servicing and providing a bus interface for uploading and or downloading 3D graphics data. In alternate implementations some or all of these functions may be performed by processor . While system shows host processor and graphics processor as distinct components the invention is not limited in this regard and those of skill in the art will recognize that processors and possibly in addition to other components of system may be implemented within a single IC.

Graphics processor may comprise any processing logic hardware software and or firmware capable of processing graphics data. In one implementation graphics processor may implement a 3D graphics architecture capable of processing graphics data in accordance with one or more standardized rendering application programming interfaces APIs such as OpenGL 2.0 The OpenGL Graphics System A Specification Version 2.0 Oct. 22 2004 and DirectX 9.0 Version 9.0c Aug. 8 2004 to name a few examples although the invention is not limited in this regard. Graphics processor may process 3D graphics data provided by host processor held or stored in memories and or and or provided by sources external to system and obtained over pathway from interfaces and or .

Graphics processor may receive 3D graphics data in the form of 3D scene data and process that data to provide image data in a format suitable for conversion by display processor into display specific data. In addition graphics processor may implement a variety of 3D graphics processing components and or stages not shown such as an applications stage a geometry stage and or a rasterizer stage. Further the geometry stage implemented by graphics processor may include a fixed function clip set up module coupled to a shared return memory SRM such as memory as will be described in greater detail below.

Bus or communications pathway s may comprise any mechanism for conveying information e.g. graphics data instructions etc. between or amongst any of the elements of system . For example although the invention is not limited in this regard communications pathway s may comprise a multipurpose bus capable of conveying for example instructions e.g. macrocode between processor and processor . Alternatively pathway s may comprise a wireless communications pathway. In this way pathway may couple together the components of system .

Antenna may in some implementations of the invention receive or transmit information to or from system where that information may include configuration data and or image data. For example configuration data and or image data received by antenna may using interface and pathway be supplied processors and or . The configuration data may be used to configure processors and or such that one or more of those processors may be enabled to undertake implementations of the invention. Image data received by antenna may in some implementations of the invention include graphics data primitives such as primitives specifying triangle fans or triangle strips to be processed by graphics processor .

Display processor may comprise any processing logic hardware software and or firmware capable of converting image data supplied by graphics processor into a format suitable for driving a display i.e. display specific data . For example while the invention is not limited in this regard processor may provide image data to processor in a specific color data format for example in a compressed red green blue RGB format and processor may process such RGB data by generating for example corresponding LCD drive data levels etc. Further the image data provided to processor may be derived from triangle strips or fans and may include one or more clip vertices. Although shows processors and as distinct components the invention is not limited in this regard and those of skill in the art will recognize that some if not all of the functions of display processor may be performed by processor .

Stage also includes a one or more general purpose execution GPE module s accessible by at least module and capable of implementing geometry processing functions such as calculating clip vertex coordinates etc. Stage further includes a clipping shader module employed or initiated by clip set up module and capable of utilizing GPE module s to undertake clipping of triangle edges. Shader may further be capable of utilizing clip set up module to access SRM i.e. to read or write data to or from SRM . Modules may comprise any combination of hardware firmware and or software logic capable of implementing optimized frustum clipping via cached clip vertices in accordance with some implementations of the invention as will be explained in greater detail below.

Shared return memory SRM may comprise any memory suitable for implementing storage of an indication or indicator of a shared edge relationship condition or state in accordance with some implementations of the invention. Further in accordance with some implementations of the invention as will be explained in greater detail below SRM and in particular a shared edge relationship state indicator held therein may be read writeable by module and or shader . Thus in some implementations of the invention the shared edge relationship indicator may be a hardware data bit such as Clip Vertex Re use Bit CVRB held or stored in SRM and configurable i.e. settable or re settable by and or accessible to module and or shader .

SRM may in some implementations of the invention comprise cache memory internal to a graphics processor such as processor although the invention is not limited in this regard. Thus for example in another implementation SRM may comprise external memory cache or otherwise such as memory coupled to graphics processor . In one implementation SRM may comprise the same memory used to store other information such as clip vertex coordinates etc. although the invention is not limited in this regard.

In some implementations of the invention clip set up module may in the process of undertaking frustum clipping for a triangle strip or fan employ or implement shader module . Shader may although the invention is not limited in this regard utilize general purpose GPE module s to calculate or determine clip vertices and may store those clip vertices in SRM as will be explained in greater detail below.

Those skilled in the art will recognize that FIGS. A B and are intended merely as examples to aid in the following discussion of process and the quantities and or relationships shown therein should not be construed to limit the claimed invention in anyway. While process will be discussed below with respect to implementations for optimizing frustum clipping via cached clip vertices in the context of triangle strips such as strip the invention is not limited in this regard and those skilled in the art will recognize that process could be undertaken for the clip processing of triangle fans and or polygon or quadrilateral strips or other structures sharing clipped edges in accordance with some implementations of the invention.

The strip primitive data for strip might also include coordinate data for vertices and connectivity data representing how vertices are connected together to form triangles . For example the primitive for strip may list in order the coordinates of vertices through followed by subsequent vertices each of which is preceded by a vertex header specifying how each subsequent vertex connects to the previous vertex in the list. Those skilled in the art will recognize that edge may be considered both the leading edge of triangle and the trailing edge of triangle and edge may be considered a shared edge of triangles and . Similarly edge may be considered both the leading edge of triangle and the trailing edge of triangle and edge may be considered a shared edge of triangles and . Moreover those skilled in the art will recognize that view frustum represents merely a stylized two dimensional representation of a typical trapezoidal shaped three dimensional view frustum. As can be seen in a clip plane of frustum intersects triangles .

Process may begin with the initiation of clip processing for a first triangle of a triangle strip or fan act . In one implementation clip set up module may initiate clip processing upon receipt of a triangle strip or fan primitive from module . For example clip set up module may receive from lighting module the primitive specifying triangle strip including the primitives for triangles and associated connectivity data.

Process may continue with the setting of the clip vertex re use bit to FALSE act . In other words in some implementations of the invention act calls for an indicator of a shared clip vertex state e.g. CVRB of SRM to be initialized e.g. setting CVRB to FALSE . In some implementations clip set up module may undertake act by setting CVRB to FALSE although the invention is not limited in this regard and other components of stage such as shader may undertake act . In further implementations of the invention act may also be undertaken whenever a system reset context switch etc. occurs in system .

Process may continue with a determination of whether the triangle intersects the view frustum act . In some implementations clip set up module may determine based on a comparison of the coordinate space defined by the view frustum with the vertex coordinates of the triangle whether any edge of the triangle intersects the view frustum. For example referring to in undertaking act for triangle module would determine that edges and intersect clip plane and act would yield a positive determination. If the determination of act is negative that is if the triangle submitted in act does not intersect the view frustum then process may continue with the initiation of clip processing for a next triangle act of the triangle strip or fan.

If the determination of act is positive that is if the triangle does intersect the view frustum then process may continue with clip processing of that triangle act . In some implementations clip set up module may undertake act by initiating or employing shader . In such event act may for example involve shader obtaining triangle s primitive from clip set up module where module has obtained the primitive from SRM . Shader may then use GPE modules to calculate clip vertices for edges of that triangle. For example Shader may then use GPE modules to calculate clip vertices for edges and of triangle to complete act where edge is the leading edge of triangle .

With regard to undertaking act on either edge or shader in conjunction with GPE module s may undertake calculating a clip vertex using well known techniques. For example shader may calculate the point at which edge of triangle intersects clipping plane . provided specifically to aid in the discussion of act illustrates representative quantities for a triangle edge e.g. edge defined by vertices and e.g. vertices and intersecting a clip plane of a view frustum such as clip plane of frustum at a point P .

Those skilled in the art will recognize that the clip processing of act includes the following well known calculations that may be undertaken by shader in conjunction with GPE module s . For example leading edge can be described by the parametric line equation 0 10 1 where P0 represents vertex where 0 P1 represents vertex where 1 and P represents the point at which leading edge intersects clip plane .

The intersection point P may then be obtained by taking the dot product of equation 1 with the column vector representing clip plane using the boundary conditions imposed by the frustum and solving for 0 01 2 where i 0.5 and BC0 and BC1 represent each of the six boundary planes of the trapezoidal view frustum. The value of obtained from solving equation 2 may then be used in equation 1 to compute new vertex attribute values position color texture coordinates etc. for the clip vertex at the point where leading edge intersects clip plane . For example referring again to and B the result of act for leading edge of triangle of strip may be the generation of clip vertex where edge intersects clip plane and clip vertex where shared edge intersects clip plane .

Process may continue with a determination of whether a shared leading edge is clipped act . In some implementations of the invention shader may undertake act with regard to the edge or edges clip processed in act . For example in undertaking act on triangle shader may determine that edge while clipped is not shared and that leading edge is both clipped and shared by triangles and . Hence shader may recognize edge as a clipped shared edge. Further shader may undertake act in response to connectivity data included in the primitive specifying the triangle. If the result of act is negative that is if no shared leading edges were clipped in act then process may continue with the initiation of clip processing for a next triangle act .

If the result of act is positive that is if a shared leading edge is clipped in act then in some implementations of the invention process may continue with the setting of the clip vertex re use indicator or bit to TRUE act . In some implementations shader may configure or set CVRB in SRM to TRUE to indicate that a shared clip vertex is available. Thus continuing the example from above when shader calculates a clip vertex for edge in act shader may set CVRB to a TRUE state in act . While act and other acts may be described as being undertaken by shader those acts may be undertaken by shader in conjunction with clip set up module . For example although the invention is not limited in this regard act may be undertaken by having shader use clip set up module set CVRB to a TRUE state.

Process may continue with the storing or caching of the shared clip vertex act . In some implementations of the invention shader may store the shared clip vertex resulting from act in SRM . Clearly shader may utilize module to do so. The invention is not limited in this regard however thus in alternative implementations act may involve shader using clip set up module to store the shared clip vertex elsewhere in system e.g. in external memory such as memory and to store a pointer in SRM where the pointer specifies the storage location of the shared clip vertex.

Process may continue with the initiation of clip processing for a next triangle act . This may be done by having shader obtain the next triangle s primitive from clip set up module . To do so module may retrieve the next triangle s primitive from SRM . For example act may involve module retrieving triangle s primitive from SRM and providing that primitive to shader .

In addition to providing the next triangle s primitive in act and in accordance with some implementations of the invention process also includes providing the shared clip vertex act to be re used in clip processing the next triangle act . Thus in some implementations of the invention acts and may be undertaken by having clip set up module check CVRB when it provides the next triangle s primitive to shader in act and if CVRB indicates a shared edge state e.g. when CVRB has been set TRUE in act then module may also provide the shared clip vertex associated with the shared edge clipped in act to shader in act .

In some implementations of the invention the shared clip vertex provided in act may be placed in SRM . Alternatively the shared clip vertex provided may be stored elsewhere in system and act may involve providing a pointer to that location. In other words and for example acts and may comprise module providing shader with the primitive for triangle along with the shared clip vertex or a pointer to where shared clip vertex is stored or held.

In accordance with some implementations of the invention when the next triangle is clip processed in act the shared clip vertex may be re used as the clip vertex of the trialing edge of the next triangle. For example when shader undertakes clip processing of adjacent triangle in act it may re use the shared clip vertex as the clip vertex for shared trailing edge rather than have GPE module s calculate a clip vertex for edge .

Referring to process may continue with a determination of whether a shared leading edge of the triangle clip processed in act is clipped act . Act is similar to act as described above. If the result of act is negative that is if the leading edge of the triangle processed in act is not both clipped and shared then process may continue with act . If the result of act is positive that is if the leading edge of the triangle processed in act is both clipped and shared then process may continue with acts . It can be seen from FIGS. A B acts are similar to respective ones of acts discussed above. Each subsequent triangle clip processed in act having a clipped shared leading edge will result in another iteration of acts .

The acts shown in need not be implemented in the order shown nor do all of the acts necessarily need to be performed. Also those acts that are not dependent on other acts may be performed in parallel with the other acts. For example acts and may be undertaken in parallel or acts and may be undertaken in parallel. Further at least some of the acts in this figure may be implemented as instructions or groups of instructions implemented in a machine readable medium.

The foregoing description of one or more implementations consistent with the principles of the invention provides illustration and description but is not intended to be exhaustive or to limit the scope of the invention to the precise form disclosed. Modifications and variations are possible in light of the above teachings or may be acquired from practice of various implementations of the invention. For example while and the accompanying text may show and describe a geometric stage including one clip set up module those skilled in the art will recognize that graphics processors in accordance with the invention may include geometric stages having more than one clip set up module functioning in parallel. Clearly many other implementations may be employed to provide rasterizer driven cache coherency consistent with the claimed invention.

No element act or instruction used in the description of the present application should be construed as critical or essential to the invention unless explicitly described as such. Also as used herein the article a is intended to include one or more items. Moreover when terms or phrases such as coupled or responsive or in communication with are used herein or in the claims that follow these terms are meant to be interpreted broadly. For example the phrase coupled to may refer to being communicatively electrically and or operatively coupled as appropriate for the context in which the phrase is used. Variations and modifications may be made to the above described implementation s of the claimed invention without departing substantially from the spirit and principles of the invention. All such modifications and variations are intended to be included herein within the scope of this disclosure and protected by the following claims.

