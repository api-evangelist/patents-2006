---

title: Access control and encryption in multi-user systems
abstract: In a storage system, multiple information units are individually associated with an access control policy (ACP) of multiple ACPs. Each respective information unit corresponds to a respective information unit encryption key (IUEK). The multiple information units are grouped into encryption zones based on their associated ACPs. In a described implementation, each ACP is associated with a zone root key (ZRK). In another described implementation, each IUEK corresponding to a given information unit is encrypted by an IUEK corresponding to an information unit at a most-proximate linked node of the storage system.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07792301&OS=07792301&RS=07792301
owner: Microsoft Corporation
number: 07792301
owner_city: Redmond
owner_country: US
publication_date: 20060629
---
Computers are used for many different tasks in a variety of environments. For example computers are used in people s personal lives to conduct financial transactions and communicate private thoughts. Computers are also used in professional environments to share vital business information collaborate on technical projects exchange business plans and so forth. In many such cases people prefer to protect the underlying data by limiting access to it.

In other words people often prefer to maintain the confidentiality of the data that is being exchanged shared stored etc. using some mechanism. Such mechanisms often involve encryption because access to encrypted data may be limited. Unencrypted data is encrypted using an encryption key to produce encrypted data. To access the encrypted data the same or a cryptographically related encryption key is used to decrypt the data. The decrypted data may then be accessed in standard manners.

In a storage system multiple information units are individually associated with an access control policy ACP of multiple ACPs. Each respective information unit corresponds to a respective information unit encryption key IUEK . The multiple information units are grouped into encryption zones based on their associated ACPs. In a described implementation each ACP is associated with a zone root key ZRK . In another described implementation each IUEK corresponding to a given information unit is encrypted by an IUEK corresponding to an information unit at a most proximate previous linked node of the storage system.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used as an aid in determining the scope of the claimed subject matter. Moreover other method system scheme apparatus device media procedure API arrangement etc. implementations are described herein.

In some storage systems information units are associated with access control policies ACPs . An ACP is a rule or set of rules that controls access to its associated information unit. It lists or otherwise identifies those users that are permitted to access the associated information unit. The ACP can also indicate what type s of accesses are permitted by the users as a group or by individual users. Accesses to information units include by way of example but not limitation the following types read only access write access copy access move access some combination thereof and so forth. An ACP can also indicate which user or users is sufficiently privileged to change the ACP information.

In typical hierarchical storage systems the ACP is inherited. For example a file information unit that is created within a directory information unit inherits the same ACP that is associated with the directory information unit. Subfolders of the directory information unit as well as their contents may also inherit the same ACP. Also changes to an upper level information unit may be applied to i.e. inherited by those information units that are lower in the hierarchy.

ACPs in hierarchical storage system environments therefore have two useful attributes First ACPs enable or provide an ability to specify which users have what access rights to an information unit. Second ACPs can offer inheritancy so that ACPs do not need to be instituted or adjusted manually information unit by information unit when information units are created moved and so forth. These two attributes are particularly relevant to scenarios involving group access to information units.

Encryption on the other hand is typically not inherited even in hierarchical storage systems. In conventional approaches each information unit is encrypted using at least partially an encryption key that is unique to a given user. Consequently a user may be granted access to a directory folder that includes an encrypted file without also being granted access e.g. the ability to decrypt the encrypted file within the directory folder. Moreover with existing approaches the user would need to be manually granted decryption rights to each individual encrypted file within the directory folder.

The lack of inheritancy and the absence of an ability to grant decryption rights to users in groups results in a very tedious mechanism for providing group access to encrypted information units in traditional storage systems including hierarchical ones. In contrast certain implementations as described herein enable inheritancy to be provided in conjunction with access control and encryption in multi user systems along with the automated management of encryption access rights.

In an example described implementation encryption zones are defined that include information units that are associated with a common ACP. Each respective information unit corresponds to a respective information unit encryption key. Each encryption zone has at least one zone root node that is the initial e.g. highest most prominent entry point etc. node in the encryption zone. Certain e.g. non hierarchical implementations may have multiple zone root nodes. The information unit encryption key of the zone root node or nodes comprises a zone root key for the encryption zone.

Each encryption zone thus corresponds to a zone root key. Each encryption zone is associated with an ACP that is common to all member information units. Hence each ACP is also associated with the zone root key. A trusted storage holds respective zone root keys in association with respective ACPs. The zone root key controls access to encrypted information units within a corresponding encryption zone.

With the exception of the zone root key each information unit encryption key is encrypted with the information unit encryption key corresponding to the most proximate previous linked node in the storage system e.g. corresponding to the immediately higher or parent node in a hierarchical storage system . This linked chain of encrypted information unit encryption keys forms an encryption key chain. A file information unit at the terminating node of a linked chain of nodes in a storage system e.g. at the lower most node of a branch of a hierarchical storage system has its data encrypted with its corresponding information unit encryption key.

To access a targeted encrypted information unit the trusted storage is contacted to retrieve the zone root key associated with the ACP of the targeted encrypted information unit. An encryption key chain terminating at the encrypted information unit is then traversed using the retrieved zone root key. Once the information unit encryption key corresponding to the targeted encrypted information unit is decrypted upon traversing the encryption key chain the corresponding information unit encryption key is used to decrypt the data of the targeted encrypted information unit.

In another example described implementation management of a described encryption zone based information unit access scheme may be automated. For example the handling of the encryption related ramifications of access operations e.g. read write move copy delete etc. to information units may be automated. Also encryption related consequences to changes to ACPs may be automated.

In a described example general implementation a data storage system has an ACP. The ACP includes a set of rules that associate user privileges with information units. The ACP may also contain rules that can be used to determine the user privileges that the system automatically associates with a newly created object.

The data storage system may be arranged hierarchically and many are for administrative and conceptual convenience. The rules to automatically determine and associate user privileges for newly created objects can adhere to an inheritance model. The ACP may be implemented as an access control list ACL . However the data storage system need not be hierarchical the user privilege association automation need not adhere to inheritance and the ACP need not be implemented as an ACL. For example principles of the present invention may be incorporated in a non ACL system such as those using a UNIX like permissions approach. Also the data storage system may be non hierarchical such as a database that adopts a relational data model.

Continuing with a described example general implementation the data storage system has an ACP. The stored information is encrypted and the encryption keys are placed in an access control system i.e. a trusted storage that differs from the actual data storage system. Thus instead of controlling access to the information directly access to the keys is controlled. The keys enable the encrypted information to be decrypted and thus accessed fully within the additional constraints of the ACP imposed restrictions .

Implementation and management of the cryptographic aspects of the data storage system are facilitated by relying on or borrowing from features of access control schemes that make them easy to manage and administer. First to facilitate management an analogous system for the ACP and for the user privilege association automation is implemented for the cryptographic keys. For example the same high level ACP may be adopted. This can include the rules for how access privileges or rights are automatically associated onto newly created objects. The term same high level ACP refers to the same overall access rights. In other words it refers to whether a user has any type of access rights to a given information unit but it does not necessarily relate to specific types of access rights e.g. read only no copy etc. for the given information unit.

Second the number of unique encryption keys that are to be stored apart from the information units of the actual data storage system may be reduced by identifying objects with the same ACP and storing a single key for each ACP grouping. This is accomplished as described herein through the encryption zone concept and its corresponding zone root key. This information unit grouping increases the efficiency of the overall system so as to make it practical in a real world environment that has communication limitations as well as finite encryption decryption processing delays. The corresponding zone root keys are stored in a trusted storage. The information unit grouping is described and the zone root key placement in a trusted storage is introduced with particular reference to .

Third each information unit is assigned a corresponding unique information unit encryption key. As many keys as is reasonably possible e.g. those that are not zone root keys are stored inside the actual data storage system itself. However the integrated or locally stored keys are stored in a form that entails accessing the separately stored zone root keys in order to make the locally stored keys useful. This is realized with an encryption key chain as described herein with particular reference to . The encryption key chaining enables efficient handling of ACP changes in the data storage system. The handling of ACP changes is also described herein with particular reference to .

Server and clients may communicate with each other over network . Network may comprise one or more networks such as an intranet an internet the world wide web WWW a public or private telephone network a Wi Fi or WiMAX network a cellular network a wired or wireless network a local area network LAN a wide area network WAN some combination thereof and so forth. Although only a single server and two clients with one user apiece are shown in example environment any number of servers and clients as well as users may be involved in encryption zone based access scheme .

In a described implementation encryption zone based access scheme enables encryption zone based access to any number of encrypted information units encrypted IUs . Example implementations for encryption zone based access to encrypted information units are introduced above in the Introduction to Access Control and Encryption in Multi User Systems section. Encryption zone based access is described in greater detail herein below in the section entitled Example Implementations for Access Control and Encryption in Multi User Systems .

Actual implementations for access control and encryption in multi user systems may include any number of community access applications and or individual access applications . By way of example only a given implementation for access control and encryption in multi user systems may involve several community access applications and many individual access applications . Alternatively a given implementation for access control and encryption in multi user systems may involve one individual access application but no community access application or vice versa.

Encrypted information units may be stored anywhere including by way of example but not limitation at one or more servers and or one or more clients . Encrypted information units may include any type of data and may be organized in accordance with any given storage scheme. Example storage schemes include by way of example but not limitation hierarchical storage schemes relational databases and so forth.

Example information environments that may have such a storage scheme include but are not limited to the following First community access application may be a server side database application and individual access application may be a client side database application. Second community access application may be a server operating system and individual access application may be a client operating system. Third community access application may be a web server application and individual access application may be a web browser application. Applications and may also be applications forming part of a document storage system. Hence encrypted information units may be part of a database part of a file system of an operating system part of a web service part of a document storage system some combination thereof and so forth. Individual and community access applications and may also be part of a database application part of an operating system program part of a web application and so forth.

Although individual implementations may vary certain implementations may involve encrypted information units that are divided into one or more data streams and or one or more utility streams. In such implementations data may be part of a data stream and metadata may be part of a utility stream. Furthermore ACP information may be part of a first utility stream and IUEK may be part of a second utility stream.

In a described implementation for a directory encrypted information unit data comprises one or more other directories and or one or more files. For a file encrypted information unit on the other hand data comprises the underlying data of the file. The underlying data may be text images extensible markup language XML information multimedia information database information some combination thereof and so forth.

ACP information includes the ACP information that is associated with encrypted information unit . As introduced above ACP information specifies which users are permitted access to encrypted information unit . ACP information may also stipulate what types of accesses are permitted generally and or by specific users. IUEK includes at least a version of the IUEK that corresponds to encrypted information unit .

In a described implementation IUEK is an encrypted version of the IUEK corresponding to encrypted information unit . More specifically IUEK is and encrypted information unit includes a copy of the corresponding IUEK as encrypted by the IUEK of the most proximate previous linked node in a storage system e.g. the immediately higher information unit node in a hierarchical storage system . However as is described further herein below the zone root node which is also an encrypted information unit of each encryption zone does not locally store its corresponding IUEK . For zone root nodes the IUEK is instead stored at a trusted storage.

There are three possible ACPs in this example ACP A ACP B and ACP C . User belongs to ACP A ACP B and ACP C. User belongs to ACP B and ACP C. User belongs to ACP B.

In a described implementation each encryption zone is an area of a storage system in which the ACP is the same. In other words each encryption zone is a group of encrypted information units that are associated with a common ACP. Hence each encrypted information unit that is a member of encryption zone A A is associated with ACP A. Each encrypted information unit that is a member of encryption zone B B is associated with ACP B. Each encrypted information unit that is a member of encryption zone C C is associated with ACP C.

Eight encrypted information units are shown in encryption zone based access scheme . Each encrypted information unit is designated as encrypted information unit XY with X denoting the associated ACP and Y denoting whether it is a file F or a directory D information unit. Encryption zone A A includes a directory encrypted information unit AD and a file encrypted information unit AF . Encryption zone B B includes a first file encrypted information unit BF a second file encrypted information unit BF and a directory encrypted information unit BD . Encryption zone C C includes a first directory encrypted information unit CD a second directory encrypted information unit CD and a file encrypted information unit CF .

In a described implementation trusted storage stores multiple associations . Each association comprises an ACP to encryption zone association and includes a zone root key ZRK . From one perspective a ZRK is analogous to a group symmetric key with the group being defined by e.g. being users that belong to the ACP. Hence encryption zone based access scheme provides respective symmetric keys e.g. respective ZRKs for respective ACPs. ZRKs are described further herein below with particular reference to . Trusted storage may be located at a server a client a third party device some combination thereof and so forth. Although only a single trusted storage is shown in an encryption zone based access scheme may alternatively implement multiple such trusted storages .

As illustrated trusted storage includes n association entries . These n association entries are association A association B association C . . . association . Association entry A associates ACP A with ZRK A which is the ZRK of encryption zone A A . Association entry B associates ACP B with ZRK B which is the ZRK of encryption zone B B . Association entry C associates ACP C with ZRK C which is the ZRK of encryption zone C C . Association entry associates ACP n with ZRK n.

When a properly authenticated user provides trusted storage with an ACP trusted storage returns the associated ZRK to the properly authenticated user . Authentication may be implemented using any of many possible authentication schemes. Examples include but are not limited to an identification password authentication scheme a so called strong authentication scheme using public private key cryptography and so forth. Example implementations for trusted storage include but are not limited to a public key infrastructure an authenticated server an authenticated portion of a client an actual key store some combination thereof and so forth. By way of example only a trusted storage may be realized using a MICROSOFT ACTIVE DIRECTORY product.

A trusted storage may be utilized because for example it can typically be made more secure than general file system components general database components and so forth. The usual ACP file system constraints for access to given information units are still enforced by the file system components. Accordingly trusted storage need not store all of the specifics of a given ACP. Instead trusted storage may store only who has the right to retrieve the ZRK for a given ACP e.g. those users that are included in the ACP without knowing for example what access rights each user may have. Trusted storage may also store which user s are sufficiently privileged so as to be permitted to change who is a member of a given ACP so that an association entry may be updated upon changes to the given ACP.

In a described implementation several characteristics of example encryption zone based access scheme are maintained. First there is a one to one correspondence between each ACP and each ZRK for each encryption zone . Second this one to one correspondence is reflected in the association entries of trusted storage . Third each file encrypted information unit and each directory encrypted information unit is a member of one and only one encryption zone at any given single moment.

As illustrated in the example encryption zone based access scheme of user belongs to ACP A ACP B and ACP C. Consequently user can access those encrypted information units that are members of encryption zone A A encryption zone B B and encryption zone C C . Similarly user belongs to ACP B and ACP C. Consequently user can access those encrypted information units that are members of encryption zone B B and encryption zone C C . User belongs to ACP B. Consequently user can access those encrypted information units that are members of encryption zone B B .

In example operations of encryption zone based access scheme it is given that user is attempting to access encrypted information units . For a first example access attempt user wishes to access file encrypted information unit CF which is associated with ACP C. File encrypted information unit CF is a member of encryption zone C C . User identifies ACP C to trusted storage . After appropriate authentication trusted storage returns ZRK C to user because user belongs to ACP C and because ZRK C is associated with ACP C as indicated by association entry C . User is then able to access file encrypted information unit CF using ZRK C. This access scheme involves the traversal of an encryption key chain which is described further herein below with particular reference to .

For a second example access attempt user wishes to access file encrypted information unit AF which is associated with ACP A. File encrypted information unit AF is a member of encryption zone A A . User identifies ACP A to trusted storage . Even after appropriate authentication if any is performed trusted storage does not return ZRK A to user because user does not belong to ACP A. In other words user is absent from the list of users in association entry A . The attempt by user to retrieve ZRK A fails. User is therefore unable to access file encrypted information unit AF .

In a described implementation each encrypted information unit corresponds to an IUEK. Specifically encrypted information unit corresponds to IUEK encrypted information unit corresponds to IUEK encrypted information unit corresponds to IUEK encrypted information unit corresponds to IUEK encrypted information unit corresponds to IUEK encrypted information unit corresponds to IUEK encrypted information unit corresponds to IUEK encrypted information unit corresponds to IUEK and encrypted information unit corresponds to IUEK .

Example linking relationships between and among encrypted information units of storage system are graphically illustrated in . As noted above storage system may be any type of storage system such as a file system a database some combination thereof and so forth. In a described implementation that utilizes an encryption key chain encrypted information units are linked in some manner. The linking may be for a file system e.g. and be based on a hierarchical scheme a database e.g. and be based on a relational scheme and so forth. A linked grouping of encrypted information units may include branches as shown in .

Each ACP based grouping of encrypted information units forms an encryption zone . Each encryption zone includes at least one zone root node that is the initial e.g. the highest the most prominent the entry point etch node in the linked grouping of encrypted information units of the encryption zone . With the exception of the zone root key each IUEK is encrypted with the IUEK corresponding to the most proximate previous linked node in the storage system e.g. corresponding to the immediately higher node in a hierarchical storage system . A file information unit which directly includes user data e.g. encrypted information unit that is located at a terminating node of a linked chain of nodes in a storage system e.g. that is located at the lower most node of a branch of a hierarchical storage system has its user data encrypted with its corresponding IUEK .

Generally the linked nodes of encrypted information units may be thought of as having parent child relationships. Hence by way of example only encrypted information unit is a parent node of two child nodes encrypted information unit and encrypted information unit . Using the terminology of a hierarchical storage system encrypted information unit is an immediately higher node of either and both of encrypted information unit and encrypted information unit .

In a described implementation automatic association of user privileges for newly created information units e.g. such as an inheritance scheme in the parlance of hierarchical storage systems is enabled for the encrypted aspects as well as the ACP aspects of storage system . For example encryption attributes as well as ACP attributes of a parent folder may be applied to child folders. Moreover an encrypted file that is dropped into a folder may be made accessible including decryptable by users that have been given access to that folder. For the purpose of providing a more concrete example to better understand the general concepts described herein storage system may be considered a hierarchical storage system that implements inheritance for its information units .

Encryption zone A A is associated with ACP A and corresponds to ZRK A. As illustrated encryption zone A A includes seven encrypted information units and . Each of these seven encrypted information units is individually associated with ACP A. Encrypted information unit is the initial node e.g. the highest node from a hierarchical perspective in encryption zone A A . Consequently encrypted information unit is the zone root node of encryption zone A A . The IUEK of the zone root node for a given encryption zone is the zone root key ZRK for the given encryption zone. Hence IUEK is ZRK A which is the ZRK for encryption zone A A .

Encryption zone B B is associated with ACP B and corresponds to ZRK B. As illustrated encryption zone B B includes two encrypted information units and . Each of these two encrypted information units is individually associated with ACP B. Encrypted information unit is the initial node in encryption zone B B . Consequently encrypted information unit is the zone root node of encryption zone B B . Hence IUEK is ZRK B which is the ZRK for encryption zone B B .

The illustrated part of encryption zone A A includes five encrypted information units and . In this example encrypted information units and are directory encrypted information units. Encrypted information units and are file encrypted information units.

The encrypted information unit that is illustrated in shows data and metadata having IUEK . Block diagram illustrates which encrypted information units have data and an IUEK . ACP information is not shown in for clarity. Each encrypted information unit includes data as represented in block diagram by Data . With the exception of the zone root node of encrypted information unit each other encrypted information unit includes a copy of its corresponding IUEK as encrypted by the IUEK corresponding to its parent encrypted information unit which occupies the most proximate previous linked node in the storage system e.g. the immediately higher node in a hierarchical storage system .

These encryption key relationships are represented in block diagram by IUEK WIUEK Z where W indicates the parent node and Z indicates the corresponding node. Thus IUEK WIUEK Z implies that an information unit encryption key corresponding to node Z is encrypted by an information unit encryption key corresponding to node W.

Encrypted information unit includes Data. It does not include a copy of its corresponding encryption key IUEK ZRK A. Instead ZRK A is located at trusted storage in association entry A . The Data of encrypted information unit is one or more other files and directories such as directory encrypted information unit .

Encrypted information unit includes Data and a copy of IUEK as encrypted by ZRK A which is also IUEK . This is indicated by ZRK AIUEK . The Data of encrypted information unit is one or more other files and directories such as file encrypted information unit and directory encrypted information unit . Encrypted information unit includes encrypted Data and a copy of IUEK as encrypted by IUEK which is the information unit encryption key corresponding to the most proximate previous linked node. The Data of encrypted information unit is encrypted by IUEK .

Encrypted information unit includes Data and a copy of IUEK as encrypted by IUEK IUEK IUEK . The Data of encrypted information unit is one or more other files and directories such as file encrypted information unit . Encrypted information unit includes encrypted Data and a copy of IUEK as encrypted by IUEK which is the encryption key corresponding to the parent node. This is indicated by IUEK IUEK . The Data of encrypted information unit is encrypted by IUEK . This is indicated by IUEK Data .

Accessing the Data of encrypted information unit entails traversing an encryption key chain including IUEK IUEK IUEK IUEK and ZRK AIUEK in addition to retrieving ZRK A from trusted storage . This enables the ultimate decryption of the Data of encrypted information unit . An example encryption key chain traversal is described below with particular reference to .

In a described implementation encryption key chain includes ZRK AIUEK IUEK IUEK and IUEK IUEK . Traversing encryption key chain enables access to encrypted information unit by unpacking IUEK which may be used to decrypt the Data of encrypted information unit . In certain implementations all or part of one or more of the encryption key chains may be stored in a lower directory e.g. in a deeply nested folder at or near the relevant information unit for performance reasons.

An access operation to access encrypted information unit is shown. In effect traversing encryption key chain is akin to unpacking the encrypted keys to derive IUEK which can be used to decrypt the Data of encrypted information unit . Access operation includes five sub operations . In a first sub operation ZRK A is retrieved from trusted storage . The ZRK A retrieval sub operation is performed by an appropriately authenticated user that belongs to ACP A and that identifies or references ACP A to trusted storage .

Encryption key chain is traversed in sub operations . Sub operations and decrypt intermediate IUEKs. In sub operation IUEK is decrypted with the retrieved ZRK A. IUEK is then decrypted in sub operation using the just decrypted IUEK . Sub operation entails decrypting IUEK with IUEK . After IUEK has been decrypted the Data of encrypted information unit is decrypted with IUEK in sub operation . After decrypting the Data of encrypted information unit the requesting user may access it normally subject to any ACP A related restrictions. When a new file a new sub folder or a new set of sub folders is created all or part of a new encryption key chain may be built using an inverse process.

At block a request from user to access a targeted information unit is received. For example a request from a user to access encrypted information unit may be received at an application . At block it is determined that the targeted information unit is an encrypted information unit.

At block the ACP that is associated with the encrypted information unit is ascertained. For example it may be ascertained that ACP A is associated with encrypted information unit .

At block a trusted storage is contacted with reference to the associated ACP which is also associated with the encryption zone of which the targeted information unit is a member. For example trusted storage may be contacted and ACP A may be identified. ACP A is also associated with encryption zone A A which includes among is members encrypted information unit .

At block the user is authenticated to the trusted storage. For example user may be authenticated to trusted storage . If authentication is successful then at block it is determined if the user belongs to the associated ACP. For example it may be determined by trusted storage if user belongs to ACP A.

If not then at block the user request to access the encrypted information unit is denied. In other words trusted storage may decline to return the corresponding ZRK. However in this example the user user does belong to the identified ACP ACP A . The trusted storage trusted storage therefore sends the ZRK ZRK A that is associated with the identified ACP ACP A to the requesting user user . At block the requester receives the corresponding ZRK. For example user may receive e.g. via individual access application ZRK A which corresponds to encryption zone A A .

At block an IUEK is decrypted using the received ZRK which starts the encryption key chain traversal. For example IUEK may be decrypted using ZRK A. If encrypted information unit were a file and the targeted information unit the data thereof could be decrypted using IUEK . However in this example there are additional links of the encryption key chain that are still to be traversed.

At block the remaining encryption key chain is traversed. For example the remaining links of encryption key chain may be traversed. In this example IUEK is decrypted with IUEK and IUEK is decrypted with IUEK .

At block the data of the targeted information unit is decrypted using its corresponding IUEK that is acquired from the encryption key chain traversal. For example data of encrypted information unit may be decrypted using IUEK which is derived by traversing encryption key chain . At block the decrypted data is provided to the user. For example decrypted data may be provided to user at client .

In a described implementation encryption zone based access scheme e.g. via community access application and or individual access application entails automatically handling storage system operations. Thus while users can directly manage ACPs the keys and the other encryption aspects are automatically handled behind the scenes by the system without needing direct manual input from users. In other words an example implementation of encryption zone based access scheme entails automatically updating information at trusted storage and or updating encryption key chains as well as any encrypted data when storage system access operations are conducted by users. The storage system may be a file system a database system some combination thereof and so forth.

Example storage system access operations include but are not limited to 1 read write 2 create 3 delete 4 move 5 backup restore and 6 ACP modifications.

With regard to 1 read write access operations the encryption aspects of both reads and writes are the same. A ZRK that is associated with the ACP that is associated with the targeted encrypted information unit is retrieved and used to traverse an encryption key chain to derive an IUEK. The IUEK corresponds to the targeted encrypted information unit and is used to decrypt the data thereof. The data is then presented to the user who may read from it and or write to it if ACP stipulations so permit . When the reading and or writing is completed e.g. when the file is closed the data of the file at least if there are changes to the data is re encrypted using the corresponding IUEK. If the encrypted copy of the corresponding IUEK is not readily available e.g. if it was not retained from the encryption key chain traversal then the IUEK is re encrypted using the IUEK of the parent node prior to its storage in metadata of encrypted information unit .

With regard to 2 creation access operations they occur when a new information unit is created that is to be encrypted. Two examples are described below i a file that is created within one or more folders and ii a directory that is created at an initial node of a linked grouping e.g. at the top of a hierarchy . If i the new encrypted information unit is a file within one or more folders then the data of the new file is encrypted with a new IUEK that is to correspond to the new file. The corresponding IUEK is encrypted with the IUEK of the directory at e.g. the immediately higher level in a hierarchical storage system. This may entail traversing an encryption key chain to first derive the unencrypted version of the IUEK of the immediately higher level.

If ii the new encrypted information unit is a directory at the top of a new sub hierarchy of a new encryption zone the encrypted information unit constitutes a new zone root node of a new encryption zone . A new IUEK is created that constitutes the ZRK of the new encryption zone . The ZRK is therefore provided to trusted storage to be stored in an association entry with the new ACP that is associated with the new encryption zone as well as the new encrypted information unit .

With regard to 3 deletion access operations a deleted encrypted information unit may be a standard encrypted information unit or a zone root node. For standard encrypted information unit deleted encrypted information units are merely deleted. There are no additional encryption related sub operations. For a zone root node on the other hand when the encrypted information unit is deleted trusted storage is contacted. Trusted storage is requested to unpublish the association entry that is associated with the encryption zone for which the deleted encrypted information unit was formerly the zone root node.

With regard to 4 move access operations they can be separated into i moves within an encryption zone and ii moves between two different encryption zones . With i an intra encryption zone move trusted storage is contacted once to retrieve the ZRK of the encryption zone. The encryption key chain leading to the origin location of the encrypted information unit is then traversed to ultimately decrypt the IUEK corresponding thereto. The encryption key chain leading to the destination location for the encrypted information unit is then traversed to ultimately re encrypt the corresponding IUEK of the moved encrypted information unit with the IUEK corresponding to the encrypted information unit of the new most proximate previous linked node. With ii an inter encryption zone move the move may be separated into a delete operation and a create operation which are both described above.

With regard to 5 backup restore access operations the storage system may be backed up in its encrypted state with its encryption key chains in effect. The associations are maintained at trusted storage or at another e.g. backed up location. After restoration the storage system may be accessed as described herein.

With regard to 6 ACP modification accesses there are three major scenarios. First there may be a change to an ACP such that all objects with that ACP now have a new ACP. For example a user may be added to an ACP. Second two ACPs may be merged when a change to one ACP makes it the same as another ACP in the system. Third an ACP may be split and created from another ACP when a change to a given ACP portion creates another unique ACP in the system. These three scenarios are described below with particular reference to .

Flow diagram illustrates the addition of a user to an ACP. Flow diagram includes two 2 blocks and . At block it is determined if a privileged requestor is attempting to add a user to a given ACP. If so then at block the trusted storage is instructed to add the user to the given ACP. Thereafter the added user may retrieve the ZRK that is associated with the given ACP. Another example of the first major scenario is the deletion of a user from an ACP. These and other such changes to ACPs involve changing the corresponding ACP to encryption zone association entry .

Flow diagram illustrates the merging of two ACPs. Flow diagram includes four 4 blocks . At block it is determined if a second ACP is being merged into a first ACP. This may occur for example if encrypted information unit of is moved into encrypted information unit which merges encryption zone B B into encryption zone A A .

If the second ACP is determined to be merging into the first ACP at block then at block it is automatically determined that the associated second encryption zone is to be merged into the associated first encryption zone. At block a second ZRK corresponding to the second encryption zone is incorporated into an encryption key chain of the first encryption zone. At block the trusted storage is instructed to unpublish the second ZRK including unpublishing the association entry of the second ACP .

Flow diagram illustrates the splitting of one ACP from another ACP. Flow diagram includes four 4 blocks . At block it is determined if a second ACP is being split or created from a first ACP. This may occur for example if the ACP associated with encrypted information unit of is altered such that it is no longer the same as ACP A which is associated with encryption zone A A .

If the second ACP is determined to be splitting from the first ACP at block then at block a second ZRK for a new second zone root node is extracted from an encryption key chain of a first encryption zone associated with the first ACP. At block the encryption key meta data is removed from the second zone root node of the new second encryption zone. At block the trusted storage is instructed to publish the second ZRK in association with a second ACP that is associated with the second zone root node and with the second encryption zone.

Generally a device may represent any computer or processing capable device such as a server device a workstation or other general computer device a personal digital assistant PDA a mobile phone a gaming platform an entertainment device some combination thereof and so forth. As illustrated device includes one or more input output I O interfaces at least one processor and one or more media . Media include processor executable instructions .

In a described implementation of device I O interfaces may include i a network interface for communicating across network ii a display device interface for displaying information on a display screen iii one or more man machine interfaces and so forth. Examples of i network interfaces include a network card a modem one or more ports and so forth. Examples of ii display device interfaces include a graphics driver a graphics card a hardware or software driver for a screen or monitor and so forth. Examples of iii man machine interfaces include those that communicate by wire or wirelessly to man machine interface devices e.g. a keyboard a remote a mouse or other graphical pointing device etc. .

Generally processor is capable of executing performing and or otherwise effectuating processor executable instructions such as processor executable instructions . Media is comprised of one or more processor accessible media. In other words media may include processor executable instructions that are executable by processor to effectuate the performance of functions by device .

Thus realizations for access control and encryption in multi user systems may be described in the general context of processor executable instructions. Generally processor executable instructions include routines programs applications coding modules protocols objects components metadata and definitions thereof data structures application programming interfaces APIs etc. that perform and or enable particular tasks and or implement particular abstract data types. Processor executable instructions may be located in separate storage media executed by different processors and or propagated over or extant on various transmission media.

Processor s may be implemented using any applicable processing capable technology. Media may be any available media that is included as part of and or accessible by device . It includes volatile and non volatile media removable and non removable media and storage and transmission media e.g. wireless or wired communication channels . For example media may include an array of disks for longer term mass storage of processor executable instructions random access memory RAM for shorter term storing of instructions that are currently being executed link s on network for transmitting communications and so forth.

As specifically illustrated media comprises at least processor executable instructions . Generally processor executable instructions when executed by processor enable device to perform the various functions described herein including those actions that are illustrated in flow diagrams and of respectively those data structures illustrated in those schemes illustrated in and so forth. By way of example only processor executable instructions may include encrypted information units . . . n one or more community access applications one or more individual access applications a trusted storage including data structures thereof some combination thereof and so forth.

The devices actions aspects features functions procedures modules data structures protocols models components etc. of are illustrated in diagrams that are divided into multiple blocks. However the order interconnections interrelationships layout etc. in which are described and or shown are not intended to be construed as a limitation and any number of the blocks can be modified combined rearranged augmented omitted etc. in any manner to implement one or more systems methods devices procedures media apparatuses APIs arrangements etc. for access control and encryption in multi user systems.

Although systems media devices methods procedures apparatuses mechanisms schemes approaches processes arrangements and other implementations have been described in language specific to structural logical algorithmic and functional features and or diagrams it is to be understood that the invention defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims.

