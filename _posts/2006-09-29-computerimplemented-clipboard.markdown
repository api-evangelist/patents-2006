---

title: Computer-implemented clipboard
abstract: A note can be generated in a clipboard by detecting an information capture operation performed in an application, creating a clipboard item comprising information collected by the information capture operation, wherein the clipboard item is associated with a clipboard, receiving input from a user defining a note, wherein the note includes at least a portion of the clipboard item, and presenting the note in an output text box of the clipboard. Further, a filter can be applied to the information collected by the information capture operation. The filter also can detect an item of meaningful data in the information collected by the information capture operation and execute one or more instructions that correspond to the filter. Additionally, executing the instructions that correspond to the filter can retrieve supporting information from a second application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07624353&OS=07624353&RS=07624353
owner: 
number: 07624353
owner_city: 
owner_country: 
publication_date: 20060929
---
The present disclosure relates to a computer implemented clipboard for capturing information from one or more separate applications such as a database application or a word processing application.

A computer system can be configured to execute a number of applications that are available for use by a computer user. In some instances a computer user can desire to share information between two or more such applications. For example a user may wish to copy text or figures from a word processing application into a spreadsheet application instead of manually reentering the information. Thus the word processing application and the spreadsheet application can communicate via a user s executing of cut copy and paste operations to share the information. If the applications cannot communicate directly they can be configured to communicate through an additional application such as an electronic clipboard clipboard .

The computer system can implement the clipboard in a manner that allows the clipboard to operate as a common buffer that is accessible to two or more applications. For example information that has been selected in a first application can be added to the clipboard through a capture operation such as a cut or copy command. Further once it is available in the clipboard the captured information can be transferred to one or more separate applications. The captured information also can be retained in the clipboard for further use. Additionally a clipboard can be associated with one of the communicating applications hosted on the computer system. Alternatively the clipboard can comprise a separate application. The clipboard also can be part of a graphical user interface GUI environment hosted by the computer system and can be structured as a block of memory that is accessible to the applications operating within the GUI environment.

A basic clipboard can accept simple objects such as plain text and figures. In some implementations however a clipboard can be configured to accept meta information associated with an object including font text size style color and formatting. Further a clipboard also can be configured to accept data structures used to define various attributes of an object including formulae and references. An object that includes corresponding meta information or a data structure is referred to as a complex object.

If supported by the clipboard and the receiving application meta information and or data structures associated with a complex object also can be transferred between applications. For example a spreadsheet cell can be copied into a clipboard such that an associated formula or reference is preserved and updated when the information is inserted into a different application. Alternatively if a clipboard cannot support a complex object the clipboard can be configured to reformat the complex object into a simple object that is supported. For example the clipboard can convert a complex object such as a HyperText Markup Language HTML object into a simple object such as plain text.

An object that is to be added to a clipboard can be selected through a number of operations including a cut or copy command applied to a selected item of information. For example a portion of text can be selected and captured from a document and added to a clipboard using the copy command included in an associated word processor application. Further the copy operation used to select information can be initiated by a user through an input interface such as a keyboard or a cursor. Alternatively the information to be captured can be automatically selected from an application and copied to the clipboard in response to an event detected by an associated application.

Once information has been added to the clipboard it can be inserted at a specific location in a target application such as an electronic document a spreadsheet or a form. For example a user can initiate a paste command to insert the contents of the clipboard into an electronic document at a selected location. If the paste operation is nondestructive the object in the clipboard is retained and can be successively reapplied.

Further the amount of storage allocated to a clipboard can be limited. Once the clipboard is full additional information cannot be added until existing information is deleted. Therefore the amount of information made accessible through the clipboard can be restricted. In some implementations the clipboard can be limited to a single transaction. Under such a model each operation that adds an object to the clipboard also functions to overwrite the previous clipboard contents. Therefore a newly added object is available for use only until the next item of information is captured.

In another implementation a clipboard manager can enable a clipboard to store multiple objects and to perform multiple transactions. The clipboard can be configured as a first in first out FIFO stack or a scrap book. In such an implementation the object most recently added to the clipboard can be inserted at the top of the stack. When an object is subsequently added to the clipboard the object at the bottom of the stack is deleted. Thus the clipboard retains the objects that have been most recently captured.

Alternatively once the clipboard is at capacity the clipboard manager can permit the user to select one or more objects to remove from the clipboard when a new object is to be added. As such a frequently used object can be retained in the clipboard regardless of when it was added. Further the clipboard manager also can be configured to permit a user to select the object that is to be inserted into the target application. Thus the user can browse all of the objects available in the clipboard and select the desired object.

Clipboards have been used in conjunction with a variety of applications that process or otherwise utilize text based information including word processing spreadsheets databases web browsers and custom applications. A clipboard also can be configured to support graphical objects including images and executable objects including hyperlinks. With respect to both text based information and graphical objects clipboards are configured to maintain the integrity of the captured information. Therefore with the exception of unsupported information an object that has been captured from one application retains the same appearance and characteristics when it is inserted into a different application. Once inserted however the object can be modified by a user.

The present inventor recognized the need to provide an improved system and method for capturing information in an intelligent clipboard. Further the need was recognized to apply one or more filters to an item of captured information to determine whether the captured information includes meaningful data and if so to execute one or more corresponding instructions. Additionally the present inventor recognized the need to provide a library of filters that can be applied to captured information through the intelligent clipboard.

The present inventor also recognized the need to capture in the intelligent clipboard information corresponding to one or more applications that are accessible on a computer system. Further the present inventor recognized the need to permit a user to utilize one or more items of captured information to generate a note in the intelligent clipboard. The present inventor also recognized the need to permit a user to edit a note in the intelligent clipboard. Additionally the need was recognized to output a note generated in the intelligent clipboard to an associated application such as a customer relationship management CRM application.

The present inventor also recognized the need perform spelling and grammar checks on a note generated in the intelligent clipboard prior to outputting the note. Further the need was recognized to localize spelling and grammar checking in accordance with user preference or a particular geographic region. Additionally the present inventor recognized the need to store all of the information captured during a transaction in a single instance of the intelligent clipboard such as an individual window. The present inventor also recognized the need to make each item of captured information accessible to a user. Additionally the need was recognized to delete one or more items of information from the clipboard.

In general in one aspect the techniques can be implemented to include detecting an information capture operation performed in an application creating a clipboard item comprising information collected by the information capture operation wherein the clipboard item is associated with a clipboard receiving input from a user defining a note wherein the note includes at least a portion of the clipboard item and presenting the note in an output text box of the clipboard.

The techniques also can be implemented such that receiving input from the user further comprises receiving one or more items of text. Further the techniques can be implemented to include outputting the note to a second application wherein the second application is associated with the clipboard. Additionally the techniques can be implemented to include analyzing one or more operating system messages to identify the occurrence of the information capture operation.

The techniques also can be implemented to include applying a filter to the information collected by the information capture operation. The techniques further can be implemented to include detecting an item of meaningful data in the information collected by the information capture operation and executing one or more instructions corresponding to the applied filter. Additionally the techniques can be implemented to include retrieving supporting information from a second application.

The techniques also can be implemented to include receiving an input selecting the clipboard item and inserting the selected clipboard item into the output text box. Further the techniques can be implemented to include detecting a second information capture operation and creating a second clipboard item comprising information collected by the second information capture operation wherein the second clipboard item is separately displayed in the clipboard.

In general in another aspect the techniques can be implemented as a computer program product encoded on a computer readable medium operable to cause data processing apparatus to perform operations comprising detecting an information capture operation performed in an application creating a clipboard item comprising information collected by the information capture operation wherein the clipboard item is associated with a clipboard receiving input from a user defining a note wherein the note includes at least a portion of the clipboard item and presenting the note in an output text box of the clipboard.

The techniques also can be implemented such that receiving input from the user further comprises receiving one or more items of text. Further the techniques can be implemented to be further operable to cause data processing apparatus to perform operations comprising outputting the note to a second application wherein the second application is associated with the clipboard. Additionally the techniques can be implemented to be further operable to cause data processing apparatus to perform operations comprising analyzing one or more operating system messages to identify the occurrence of the information capture operation.

The techniques also can be implemented to be further operable to cause data processing apparatus to perform operations comprising applying a filter to the information collected by the information capture operation. Moreover the techniques can be implemented to be further operable to cause data processing apparatus to perform operations comprising detecting an item of meaningful data in the information collected by the information capture operation and executing one or more instructions corresponding to the applied filter. Additionally the techniques can be implemented to be further operable to cause data processing apparatus to perform operations comprising retrieving supporting information from a second application.

The techniques also can be implemented to be further operable to cause data processing apparatus to perform operations comprising receiving an input selecting the clipboard item and inserting the selected clipboard item into the output text box. Additionally the techniques can be implemented to be further operable to cause data processing apparatus to perform operations comprising detecting a second information capture operation and creating a second clipboard item comprising information collected by the second information capture operation wherein the second clipboard item is separately displayed in the clipboard.

In general in another aspect the techniques can be implemented as a system comprising a user interface for presenting a clipboard to a user and for receiving one or more inputs from the user and processor electronics configured to perform operations comprising detecting an information capture operation performed in an application creating a clipboard item comprising information collected by the information capture operation wherein the clipboard item is associated with the clipboard generating a note based on input received from the user wherein the note includes at least a portion of the clipboard item and presenting the note in an output text box of the clipboard.

The techniques also can be implemented to include processor electronics configured to perform operations comprising outputting the note to a second application wherein the second application is associated with the clipboard. Further the techniques can be implemented to include processor electronics configured to perform operations comprising applying a filter to the information collected by the information capture operation. Additionally the techniques can be implemented to include processor electronics configured to perform operations comprising detecting an item of meaningful data in the information collected by the information capture operation and executing one or more instructions corresponding to the applied filter. The techniques further can be implemented to include processor electronics configured to perform operations comprising retrieving supporting information from a second application.

The techniques also can be implemented to include processor electronics configured to perform operations comprising receiving an input selecting the clipboard item and inserting the selected clipboard item into the output text box. Additionally the techniques can be implemented to include processor electronics configured to perform operations comprising detecting a second information capture operation and creating a second clipboard item comprising information collected by the second information capture operation wherein the second clipboard item is separately displayed in the clipboard.

The techniques described in this document can be implemented to realize one or more of the following advantages. For example the techniques can be implemented to permit a user to capture information from multiple applications and to store the captured information in a single instance of an intelligent clipboard. The techniques also can be implemented to reduce the time required to generate a note by making one or more items of information captured from a separate application accessible to a user. Additionally the techniques can be implemented to reduce the time required for a user to complete a transaction such as servicing a customer by displaying one or more items of relevant information in a single screen.

The techniques also can be implemented to automatically retrieve additional information associated with a captured item of information such as from a networked data server or an independent application. Additionally the techniques can be implemented to prompt a user to consider one or more automated indications or suggestions relating to an item of captured information. The techniques further can be implemented such that the intelligent clipboard provides a record of the information gathered during a single transaction such as a service call with a customer. Moreover the techniques can be implemented to reduce the number of errors contained in a note by allowing information from other applications to be replicated and by performing spelling and or grammar checking prior to outputting a note.

These general and specific techniques can be implemented using an apparatus a method a computer program product a system or any combination of an apparatus methods computer program products and systems. The details of one or more implementations are set forth in the accompanying drawings and the description below. Further features aspects and advantages will become apparent from the description the drawings and the claims.

A system and method for an intelligent clipboard or clipboard that can be configured to capture information such as text copied from a database application or a word processing application and to apply one or more text filters to the captured information can be implemented in computer software on a conventional computer. presents an implementation of an intelligent clipboard that can be displayed as a window in a GUI generated by a conventional computer. The intelligent clipboard can include one or more window controls such as minimize maximize and close that permit a user to manipulate the window. Additionally the window controls can be adapted to correspond to the operating system OS of the computer on which the intelligent clipboard is hosted.

A clipboard panel included in the intelligent clipboard can be configured to store and present a plurality of clipboard panel items or clipboard items . Further the intelligent clipboard also can include a clipboard listener not shown that is registered with the computer system OS. The clipboard listener is operable to detect messages produced by the computer system OS including messages indicating the occurrence of clipboard events. A clipboard event comprises any operation in which information is captured from an application such as a cut or copy operation performed on a selected portion of text. For example the Microsoft Win32 application programming interface API provides messages indicating the occurrence of each information capture operation performed in a registered application.

Upon detection of a clipboard event by the clipboard listener the intelligent clipboard determines whether the captured information already has been added to the clipboard panel . If the captured information is not included in the clipboard panel a new clipboard panel item containing the captured information is generated. In an implementation each new clipboard panel item is added to the top of the clipboard panel . Thus the first or earliest clipboard panel item added to the clipboard panel is displayed as the last clipboard panel item in the group. Further a scroll bar associated with the clipboard panel can be displayed if the clipboard panel items exceed the available display space.

In the clipboard panel the clipboard panel items such as the most recent clipboard panel item and the initial clipboard panel item are separately presented. Further in addition to the captured information a clipboard panel item can include a designation identifying the specific application or window that was the source of the captured information. For example the initial clipboard panel item includes both the captured information and a source identifier . The source identifier indicates that the information was captured from a Microsoft Internet Explorer window. In an implementation a source identifier can be captured from an application in the same operation as the information. For example the Microsoft Win32 API can extract an application title or other such application identifier during an information capture operation.

An output text box also can be included in the intelligent clipboard to provide an area in which a user can enter information. A clipboard panel item such as the first clipboard panel item can be inserted into the output text box as a text entry by double clicking any portion of the clipboard panel item displayed in the clipboard panel . Further once the clipboard panel item is displayed in the output text box as a text entry the text can be edited by a user. For example the user can delete information from the text entry add information to the text entry modify one or more formatting attributes associated with the text entry and combine multiple text entries. Thus one or more clipboard panel items can be inserted into the output text box as text entries for use in generating a note. In an implementation a clipboard panel item also can be added to the output text box in various other ways including by dragging and dropping the clipboard panel item through a menu option or through one or more hot keys.

Information also can be manually entered into the output text box such as through typing. Further the manually entered information can be combined with text from one or more text entries to generate a note. For example manually entered information can be combined with one or more text entries to generate a record of an event or a transaction summary. Additionally if the information presented in the output text box exceeds the limits of the display area a scroll bar can be provided to permit a user to view all of the information.

The intelligent clipboard also can include one or more controls that can be activated by a user such as through the GUI. For example the intelligent clipboard can include a clear clipboard items button . Selecting the clear clipboard items button causes all of the clipboard panel items displayed in the clipboard panel to be deleted. In an implementation one or more clipboard panel items also can be selectively deleted from the clipboard panel . For example a user can designate one or more clipboard panel items and enter a delete command to remove only the designated items.

Further the intelligent clipboard can include a clear note button which is operable to delete all of the information displayed in the output text box . A send note button also can be presented in conjunction with the output text box . In an implementation the intelligent clipboard can be associated with one or more other applications. Selecting the send note button causes the information contained in the output text box such as a user note to be output to a corresponding application. For example the send note button can be configured to output a call summary to a CRM application that will associate the call summary with a corresponding customer record. If the intelligent clipboard is associated with more than one application a send note button corresponding to each associated application can be presented. Alternatively upon selecting the send note button the user can be presented with a menu of associated applications to which the note can be output. Additionally the intelligent clipboard can include a cancel button to terminate the application and close the intelligent clipboard .

In an implementation the intelligent clipboard instance associated with a transaction also can be automatically loaded with one or more clipboard panel items associated with that transaction. For example an associated computer telephony integration CTI application can pass one or more items of information such as a caller name and a caller telephone number to the intelligent clipboard for display as clipboard panel items. Thus the passed information will be available to the intelligent clipboard user early in the transaction.

One or more information capture operations can be detected during the transaction and each item of captured information can be added to the intelligent clipboard as a clipboard panel item . A single clipboard panel item comprises all of the information corresponding to a single capture operation. For example an entire paragraph of text can be captured from a word processing application through a copy operation and added to the intelligent clipboard as an individual clipboard panel item.

As indicated above a clipboard listener associated with the intelligent clipboard can be configured to detect information capture operations performed in one or more other applications. For example the clipboard listener can receive captured information through the OS of the host computer such as Microsoft Windows . Additionally the intelligent clipboard can be configured to format captured information prior to displaying the information as a clipboard panel item. For example a complex object including meta information that is not supported by the intelligent clipboard can be translated into a supported format such as a simple object by deleting one or more items of meta information. In an implementation the intelligent clipboard further can be configured to create a new clipboard panel item from captured information only if the captured information is not already displayed in the clipboard panel.

As discussed above an identifier that describes the source of the captured information also can be incorporated into a clipboard panel item. The user can thus access the source application corresponding to a specific clipboard panel item if additional information is required. Further the identifier can be extracted from the source application during the information capture operation. For example the intelligent clipboard can receive the identifier and the captured information from the Microsoft Win32 API.

One or more text filters also can be applied to an item of captured information . A text filter can be configured to analyze the captured information to determine whether the information contains one or more items of meaningful data. The text filter further can be configured to automatically perform one or more actions based on the items of meaningful data that are detected. For example a text filter can be configured to determine whether a product number is included in captured information. If a product number is detected the text filter can then trigger one or more operations to retrieve supporting information such as accessing a product catalog to obtain a corresponding product description or accessing an inventory management application to determine product availability.

The supporting information retrieved by a text filter also can be added to the intelligent clipboard as a clipboard panel item. Consequently the supporting information is automatically made available to the user. Further the supporting information also can be incorporated into the output text box for use in generating a note. Alternatively the supporting information can be separately displayed to the user such as in a pop up window. The supporting information thus can be utilized to prompt the user to perform a task. For example the user can be prompted to mention service upgrades or new products to customers who have a particular plan or live in a specific region.

One or more clipboard panel items displayed in the clipboard panel can be added to the output text box . The process of adding a clipboard panel item to the output text box is nondestructive so the clipboard panel item also is retained in the clipboard panel. Thus if a user clears the output text box using the clear note button all of the clipboard panel items will remain available in the clipboard panel for use in creating a new note. As indicated above a user can add a clipboard panel item to the output text box by double clicking the item dragging the item from the clipboard panel and dropping the item in the output text box through a menu option or by actuating one or more hot keys. Additionally a selected clipboard panel item can be distinguished in the clipboard panel from one or more non selected clipboard panel items such as through highlighting or shading or by changing the color of a border appearing around the clipboard panel item.

A user can generate a note in the output text box using information from one or more clipboard panel items information entered by the user or both . For example in the customer care implementation a user can generate a note describing a service transaction with a customer. The note can include information added to the clipboard panel through one or more capture operations performed in associated applications such as a customer database or an intranet page. Further the note can include information that is manually entered by the user such as details regarding the customer service transaction.

Once it has been generated the note in the output text box can be output to an associated application . Further the associated application can be configured to receive the note and perform one or more operations. For example a note generated in response to a customer service transaction can be output to an associated CRM application which can store the note in a corresponding customer record. Transfer of the note can be initiated by the user such as by clicking the send note button.

Additionally the intelligent clipboard can be configured to perform a spelling check and or a grammar check when the send note button is clicked. The spelling check and the grammar check both can be performed prior to outputting the note to the associated application. Alternatively user selectable spelling check and grammar check controls can be provided in the intelligent clipboard interface. In an implementation spelling and grammar errors recognized by the intelligent clipboard can be automatically corrected and the user can be prompted to clear unrecognized errors. Further the spelling and grammar checking of the intelligent clipboard can be customized according to user location or preference. In an implementation the spelling and grammar checking also can be configured to support multiple languages.

Further the intelligent clipboard can be configured to determine the identity of the source application from which the information was captured . An application identifier such as an application name or a window title can be captured from the application along with the selected information. For example the Win32 API can extract the application title while performing the information capture operation. Based on the source application identifier a text filter manager associated with the intelligent clipboard can determine whether the intelligent clipboard has been loaded with one or more text filters that correspond to the source application . If the intelligent clipboard has not been loaded with any text filters that correspond to the source application no text filters are applied. Alternatively if the text filter manager determines that the intelligent clipboard has been loaded with one or more text filters that correspond to the source application the corresponding text filters can be applied.

In an implementation one or more global text filters can be specified that are applied to each item of captured information without regard to the identity of the source application. In another implementation a user can specify one or more configuration settings in the text filter manager. The user can thereby deactivate one or more text filters associated with the intelligent clipboard such that the deactivated text filters are not applied to captured information. Alternatively a text filter can be configured to require user approval before one or more of the associated instructions can be executed.

The one or more corresponding text filters can be applied in any order to analyze the contents of the captured information . In performing the analysis an algorithm associated with the applied text filter is used to parse the captured information to determine whether any meaningful data is present . For example information captured from a product catalog application can be analyzed to determine whether it includes a product identifier such as a product number.

If meaningful data is detected in the captured information one or more instructions associated with the text filter are executed . For example if a product number is detected a query can be submitted to an inventory database to determine how many units of that product are available. Further the information generated by the executed instructions can be automatically provided to the user. For example the generated information can be added to the clipboard panel as an additional clipboard panel item displayed with the clipboard panel item that contained the meaningful data or separately presented to the user such as in a pop up window.

After the instructions associated with a text filter have been executed or if no meaningful data was detected by the text filter the intelligent clipboard can determine whether all of the corresponding text filters have been applied . If all of the corresponding text filters have been applied the intelligent clipboard can await the next information capture operation. Otherwise one of the remaining text filters can be applied to the captured information .

A client OS is operable to integrate and manage the one or more applications accessible on the client computer . Further the client OS generates OS messages that indicate the occurrence of operations executed by the one or more applications such as messages identifying the occurrence of information capture operations. The intelligent clipboard can detect and process the OS messages including accessing captured information and source application identifiers included in the messages.

Additionally the client computer can include an application integration framework that provides an interface to one or more line of business applications . Thus the application integration framework can be configured to coordinate the execution of one or more line of the business applications on the client computer . The line of business applications can be hosted on one or more servers which can be separated from the client computer by any distance. Additionally a communication interface can provide bi directional access between the client computer and the servers . The communication interface can be any wired or wireless communication path including a local area network connection or an Internet connection.

In an implementation the application integration framework also can be configured to coordinate the capture of information from the one or more line of business applications and to make the captured information accessible to the intelligent clipboard . Further the application integration framework can coordinate the transfer of a note from the output text box of the intelligent clipboard to an associated application such as one of the line of business applications .

For example the intelligent clipboard can be associated with a CRM application that comprises one of the line of business applications . A note output from the intelligent clipboard can be provided as input to the CRM application which can perform one or more actions based on the received note. In an implementation the intelligent clipboard can be associated with two or more of the line of business applications . The intelligent clipboard therefore can include user controls to selectively direct a note that is being output. For example the intelligent clipboard can include a send note button that corresponds to each of the associated line of business applications . Alternatively the intelligent clipboard can include a send note menu that can be used to specify which of the associated line of business applications is to receive the note being output.

The subject matter of this specification has been described in terms of particular implementations but other implementations also are within the scope of the following claims. For example the actions recited in the claims can be executed in a different sequence and still achieve desirable results. Further the processes described with respect to the accompanying figures are not required to be performed in the order shown or in a sequential order in order to achieve desirable results. In certain implementations multitasking and parallel processing can be utilized. Other variations also are within the scope of the following claims.

