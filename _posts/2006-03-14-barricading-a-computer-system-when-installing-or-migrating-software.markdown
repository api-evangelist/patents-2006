---

title: Barricading a computer system when installing or migrating software
abstract: During a migration or installation of a software application (e.g., a security software application), a computer can be left vulnerable to attack by malicious code. However, a computer can be protected during an installation process by disabling routes through which a malicious attack might occur. More specifically, a determination module determines that the installation process for the security software application will be performed. When the installation process begins, a communication disabling module disables substantially all communication through external network connection ports for the computer that are unneeded for the installation process. In some embodiments, a process restriction module also restricts execution of processes which are not associated with the installation of the security software application. An installation module allows the installation process for the security software application to be performed on the computer. A communication reopening module then reopens the communication through the external network connection ports upon completion of the installation process.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08424088&OS=08424088&RS=08424088
owner: Symantec Corporation
number: 08424088
owner_city: Mountain View
owner_country: US
publication_date: 20060314
---
This invention pertains in general to installing and migrating of software packages on computers and more specifically to techniques for securing the computer environment during the period of time when an install or migration occurs.

Modern computer operating systems commonly communicate over networks. Typically they will send and receive messages over some network protocol and medium. Computer systems are constantly bombarded with security attacks over the network medium whether it is dialup cable modem DSL satellite WIFI BLUETOOTH any other wireless network or wired LAN WAN network connections. This medium if not protected can act as a propagation conduit for computer security risks or malicious code such as worms viruses and Trojan horses.

Modern computer systems are further threatened by the increasing speed at which this malicious code can attack and can propagate itself to other computer systems. In the 1980 s security risks took weeks and months to propagate. Today with modern networks and the Internet security risks can spread around the world in minutes. Opening up a vulnerable computer system to a network can result in a security infection in milliseconds. For example the recent Slammer worm moved so quickly that any computer that was not protected by a firewall would be almost guaranteed to be infected within minutes by this worm.

Security software such as antivirus prevention detection software can be installed on computers in an attempt to prevent malicious code attacks. For example antivirus scanning software scans computer files including electronic message attachments and electronic messages to detect the presence of malicious code. Most security software is acquired from third party vendors. Thus the security software may not be part of the base operating system or image for a computer system and may need to be installed onto the computer system. In addition when switching to a new different version of the security software a software migration must be performed once the new different version is acquired from the vendor. When installing new security software or migrating current security software from one version to another version there can be a period when no security software is actively protecting the computer system. For example when doing an installation migration there will likely be a period of time during which a firewall program that is protecting the computer may be disabled. This time window can leave a vulnerable computer system open to the risk of attack from viruses worms etc. With the speed at which malicious code can propagate itself and infect computer systems today even a very small time window without protection can put a computer system at great risk of attack.

Therefore there is a need in the art for a solution that effectively protects or barricades a computer system from attack by malicious code while software such as security software is being installed on the computer or while a software migration is being performed.

The above need is met by a protection control module that protects a computer during an installation process for a security software application on the computer. A determination module determines that the installation process for the security software application will be performed. A communication disabling module disables substantially all communication through external network connection ports for the computer that are unneeded for the installation process. The communication is disabled when the installation process begins. In some embodiments temporary installation communications are allowed to take place on the on external network connection ports required for the installation process but these communications are disabled once the external network connection ports are no longer needed for the installation process. In some embodiments all external network connections are disabled until the installation process is completed. Further in some embodiments a process restriction module restricts execution of substantially all processes which are not associated with the installation of the security software application. An installation module allows the installation process for the security software application to be performed on the computer. A communication reopening module reopens the communication through the external network connection ports upon completion of the installation process e.g. once the installation or migration has occurred or once a security scan has been conducted . The installation process can be either a process for installing a security software application on the computer or a process for migrating from one version of the security software application to second version of the security software application.

The features and advantages described in this disclosure and in the following detailed description are not all inclusive and particularly many additional features and advantages will be apparent to one of ordinary skill in the relevant art in view of the drawings specification and claims hereof. Moreover it should be noted that the language used in the specification has been principally selected for readability and instructional purposes and may not have been selected to delineate or circumscribe the inventive subject matter resort to the claims being necessary to determine such inventive subject matter.

The figures depict an embodiment of the present invention for purposes of illustration only. One skilled in the art will readily recognize from the following description that alternative embodiments of the structures and methods illustrated herein may be employed without departing from the principles of the invention described herein.

As described above during the course of installing or migrating e.g. switching from one version to another uninstalling older versions and re installing or replacing with newer versions etc. a software installation package e.g. a security software package on a computer system the computer system may become vulnerable to any number of security risks. The protection control module mitigates this risk by disabling all communication channels for the duration of the install or migration events. Once the install has been completed regular network communications can be re established.

As used herein malicious computer code or malicious code is any code that enters a computer without an authorized user s knowledge and or without an authorized user s consent. Malicious code may or may not include the ability to replicate itself and compromise other computer systems. For example malicious code may attach itself to files stored by a computer system or use a network to infect other clients through password cracking buffer overflow attacks e mail distribution etc. The term security software is any software or software package for protecting a computer system against attacks by malicious code. For example security software can include an antivirus software firewalls spy ware ad ware phishing software and so forth. The term computer or computer system includes conventional computer systems laptops electronic devices wireless mobile or handheld devices etc. and further including systems such as personal communications devices cellular telephones personal digital assistants PDAs pocket PC s tablet computers or notebooks e.g. GATEWAY CONVERTIBLE NOTEBOOK WINDOWS XP TABLET PC EDITION etc. music or MP3 player systems e.g. IPOD video players camera systems multipurpose devices or smartphones that include one or more of the features described above such as a device with phone PDA camera and other capabilities e.g. PALM TREO 700w MOTOROLA Q etc. and so forth. The client computers described below with regard to and the computer system described with regard to are some examples of a computer system. The term installation process refers to any type of installation of a software application onto a computer or migration of a software application on a computer. Migration can include switching from one version of a software application to another version uninstalling older versions and re installing or replacing with newer versions switching from one software application to a different or different type of software application etc.

As is known in the art the client computers preferably execute an operating system and one or more application programs. The operating system controls the operation of the computer system and some examples of such an operating system include LINUX one of the versions of MICROSOFT WINDOWS MAC OS and PALM OS .

In each client computer is connected to the Internet via a communications link . Preferably the communications link utilizes conventional networking technology. For example in one embodiment a client computer uses a modem to connect over standard telephone lines with an Internet Service Provider ISP having a high speed connection to the Internet . In another embodiment a client computer uses a digital subscriber line DSL or cable modem to access the ISP via a telephone line or cable television line respectively. In yet another embodiment the client computer uses a network card and Ethernet connection to directly connect to the Internet . In still other embodiments the communications link connects the client computer via a wireless 802.11 dialup cable modem DSL BLUETOOTH or mobile phone e.g. CDMA or GSM network satellite downlink uplink or bi directional link or any other wireless or wired LAN WAN network connections. Thus many different types of technology can be used to provide the functionality of the communications link .

As known in the art the Internet is a large publicly accessible network of networks. Individual computers and other devices can utilize communications protocols such as the transmission control protocol Internet protocol TCP IP to send messages to other computers on the Internet. These messages can use protocols such as the hypertext transport protocol HTTP file transfer protocol FTP simple mail transport protocol SMTP post office protocol 3 POP3 and Internet message access protocol IMAP and data representations such as the hypertext markup language HTML and extensible markup language XML to carry and exchange information. Embodiments of the present invention may use other communications protocols and languages to exchange data.

Another communications link connects the server to the Internet . The server can send software or software updates across the Internet to the client computers . For example the server might be controlled by a third party vendor selling or providing free security software for download by a user. Additionally the client computers can send out information or make requests e.g. a request for a security software application or a different version of an already installed application etc. across the Internet to the server or to other computers . In addition malicious code can travel from one computer server to another over the network links . The communications link is generally the same as the communications links connecting the client computers to the Internet . Although only one server and associated communications link are shown in embodiments of the present invention may have multiple servers and or links. The server may be a conventional computer system or a network of systems.

In the embodiment illustrated in each client computer executes a protection control module for protecting a computer system during installation or migration of software on the system. The protection control module can be a discrete application program or the module can be integrated into another application program or the client computer s operating system. In some embodiments a portion of the protection control module is executed on the server . Though the clients are shown as being connected to the Internet in some embodiments the clients are only connected to the Internet for a certain period of time or not at all. Other modifications can be made to accommodate any of the other numerous embodiments of the protection control module .

The processor may be any general purpose processor such as an INTEL x86 SUN MICROSYSTEMS SPARC or POWERPC compatible CPU or the processor may also be a custom built processor. The memory may be for example firmware read only memory ROM non volatile random access memory NVRAM and or RAM and holds instructions and data used by the processor . The storage device is in one embodiment a hard disk drive but can also be any other device capable of storing data such as a writeable compact disk CD or DVD and or a solid state memory device. The pointing device may be a mouse track ball or other type of pointing device and is used in combination with the keyboard to input data into the computer system . The graphics adapter displays images and other information on the display . The network adapter couples the client computer with the Internet .

As is known in the art the computer system is adapted to execute computer program modules for providing functionality described herein. In this description the term module refers to computer program logic for providing the specified functionality. A module can be implemented in hardware firmware and or software. Where the any of the modules described herein are implemented as software the module can be implemented as a standalone program but can also be implemented in other ways for example as part of a larger program as a plurality of separate programs or as one or more statically or dynamically linked libraries. It will be understood that the modules described herein represent one embodiment of the present invention. Certain embodiments may include other modules. In addition the embodiments may lack modules described herein and or distribute the described functionality among the modules in a different manner. Additionally the functionalities attributed to more than one module can be incorporated into a single module. In one embodiment of the present invention the modules are stored on the storage device loaded into the memory and executed by the processor . Alternatively hardware or software modules may be stored elsewhere within the computer system .

The determination module determines that an installation process for a software application will be performed. The software application may originate from a third party software vendor that is selling or offering free software. In some embodiments the user downloads the software application to be installed or the version for migration from the vendor s website via server .

The determination module can determine that the user has requested an application from the vendor or that the application is being downloaded. This determination can be made in numerous manners. In some embodiments the present invention is included as a part of installation software on the user s computer or installation software associated with the software package being downloaded. In these embodiments the determination module determines that the installation process will be performed since the module is a part of the installer itself. In other embodiments the module is separate from the installer. In these embodiments the determination module is notified or otherwise becomes aware that the installation will be occurring. For example the module might receive notification from the installation software or another process on the computer that is aware that the application will be installed on the computer or that a software migration will be occurring.

The communication disabling module disables substantially all communication through external network connection ports for the computer that are unneeded for the installation process. For example the module can shut down communication for a computer through all wireless BLUETOOTH Ethernet serial port connections and any other connection that allows the computer to communicate over a network external to the computer . This communication is typically disabled when the installation process begins. Thus once the determination module becomes aware that the installation migration will be performed or once the installation process begins or the firewall is shut down the module can disable the communication. In this manner the module can mitigate the risk of a malicious code attack on the computer while the installation process e.g. installing of the application or migration from version to version is taking place. For example when security software is being installed migrated on a computer the computer may be unprotected during the time of the installation process leaving open a chance for malicious code to strike while the computer is vulnerable. However if only communications necessary for the installation process to occur are permitted and all or substantially all other communications are prohibited the malicious code cannot easily be transferred over an external network to the computer during this period of vulnerability.

The disabling of communications can be performed in a number of ways. For example some modern operating systems include an application programming interface API for allowing programs to make certain changes such as changes to network ports or to a built in software firewall. Through these interfaces network devices e.g. a computer a pocket PC a PDA a cellular phone etc. can be disabled temporarily by disabling the network stack or disabling the driver for the network. Thus basic software firewall or network API s can be leveraged to conduct these barricading actions e.g. the disabling of communications for the computer . Through these API s the module can disable some or all external network communications thus providing protection for the computer from attacks over the network during the installation process.

Some software applications require external network communications during the installation and migration stages. For example some security software applications must communicate with an external server e.g. server in order to complete the installation or migration of the software. Some examples include managed network installations product updates e.g. using SYMANTEC LIVE UPDATE virus definition file updates and so forth. Applications performing these types of functions may require connection to an external network over which the network installation can occur the product to be updated can be sent or the new virus definitions can be sent etc. For example for some types of client server antivirus software the clients servers may need to communicate e.g. to acquire the latest virus definitions security keys etc. with a parent server to acquire all of the information needed for proper installation. The module allows these types of communications by shutting down or disabling any unneeded connections ports for the installation process. However communications necessary for installation migration can be allowed to take place on communication ports required for the installation process. In some embodiments once these required installation process communications have been completed these temporary connections are also closed down. Thus at this point all or substantially all computer systems network connections have been disabled. In other embodiments module ensures these software applications that require external network communications during the installation migration first download any information or files that might be needed to complete the installation migration before the process begins. Thus these applications will have stored locally everything needed to complete the installation migration before communication is disabled.

In some embodiments the communications disabling module disables all computer systems network connections from the beginning of the installation process. Thus the module prevents even communications that might be needed for installation. In these embodiments only installers that do not require external communications to complete the installation process or have downloaded all files needed before communications are disabled will function.

In some embodiments the module is designed to shut down all communications unless notified that the installation process requires some communications. Once notified the module can permit these installation communications. In some embodiments the user and or vendor has some ability to configure the module to control which communications are permitted or if any are permitted.

In some embodiments the process restriction module restricts execution of substantially all processes which are not associated with the installation of the software application. To further mitigate the risk of attack the module can deploy a temporary application to restrict the running of any non installer processes during the installation. In some embodiments only processes associated with or necessary for the installation process to occur are allowed to be executed. For example the module might permit only SYMANTEC installer dll s or MICROSOFT MSI engine processes to be created. If a non installation process or another process that is not trusted does spawn during the installation or migration then that process can be suspended or terminated as appropriate.

This restriction of non installer processes by module can be performed along with the disabling of communications by the communication disabling module or instead of the disabling of communications described above. In some embodiments the user and or vendor can configure or has some control over whether and when the module restricts certain processes. In some embodiments the process restriction module is not present in the invention. Thus the non installer processes are not restricted in any way but instead the computer is protected only by disabling of communications by module as described above.

The installation module allows the installation process for the security software application to be performed on the computer . While the communications are disabled by module and or the non installation processes restricted by module the module allows the installation or migration of the software application. During this time the computer is protected from attacks by malicious code since the communications and or non installer processes are disabled. Where the protection control module is a part of the installation software that is performing the installation process the installation module and or other portions of the installation software can perform the installation migration of the software.

The communication reopening module reopens the communication through the external network connection ports upon completion of the installation process. In some embodiments the module does not reopen communication until the entire installation process is completed and the application has been installed or the migration has been performed. In other embodiments the module only reopens communications when a security scan of the computer has been performed. The scan might be performed before the installation process is fully completed. The scan might also be performed after the installation process is complete. In still other embodiments the module reopens communication after some other defined event occurs.

In some embodiments the module provides a mechanism for reopening communication during the installation migration if needed. For example if the installation or migration fails during the actual process of installing or migrating the software e.g. the software is only partially installed migrated an error is received the computer crashes or some other problem occurs that affects the installation process the module will allow communication to be reestablished for the computer even though the installation process has not yet been completed. In some embodiments an administrator for the computer is given the capability to allow the computer to reconnect upon failure of the installation process or some other type of error. Thus if the installation process fails for some reason the client computer can still reconnect to the network and is not left unconnected.

Referring now to there is shown a flowchart illustrating the operation of the protection control module according to some embodiments of the present invention. Specifically illustrates the steps of the protection control module involving protecting a computer during an installation or migration of software by disabling communications. It should be understood that these steps are illustrative only. Different embodiments of the protection control module may perform the illustrated steps in different orders omit certain steps and or perform additional steps not shown in the same is true for .

As shown in the protection control module protects or barricades a computer from problems such as malicious code attacks during an installation or migration of software on the computer . The module determines that the installation process for the software application e.g. a security software application will be performed. For example the module may or may not be incorporated into the installation software for installing the application. Thus the module might be notified or otherwise become aware that the user is downloading and attempting to install migrate a software application. When the installation process begins the module disables substantially all communication through external network connection ports for the computer that are unneeded for the installation process. In some embodiments the module might actually disable all of the computer system s network connections without regard to whether the connections are needed or unneeded for installation .

In some embodiments the module allows temporary installation communications to take place on external network connection ports required for the installation process. As described above some programs for installation may require communication over an external network in order for the installation migration to be completed. If these temporary communications are allowed they may occur throughout the installation migration in some embodiments. However in other embodiments the module disables the temporary installation communications after a defined period of time or once the external network connection ports are no longer needed for the installation process.

In some embodiments the module restricts execution of substantially all processes which are not associated with the installation of the security software application. Thus in these embodiments non installation processes are prevented from being executed on the computer during the installation process. The module then allows the installation process for the security software application to be performed on the computer . Thus the application is installed or migrated on the computer .

Referring now to there is shown a flowchart illustrating the operation of the protection control module according to some embodiments of the present invention. Specifically illustrates the steps of the protection control module after installation migration to reopen communications.

As stated above the installation or migration of the software application is allowed to occur while communications are disabled and or non installation processes are restricted . The installation process can then be completed . In some embodiments the module then reopens communications through the external network connection ports upon completion of the installation process. Thus the communications can remain restricted or disabled until the installation or migration is complete. However in some embodiments communication is reopened after a security scan is conducted e.g. by the security software application or new version of the application that was just installed migrated onto the computer or after some other defined event occurs. In addition if execution of non installation processes was restricted these restrictions can be removed . In some embodiments the restrictions are removed earlier in the flow of events e.g. before communications are reopened or after the installation processeshave completed their functions and the processes are no longer needed . If there is a failure at any point in the installation process the communications can be reopened and restrictions on processes removed so the user can continue using the computer without having communications processes hindered until the installation migration is attempted again.

As will be understood by those familiar with the art the invention may be embodied in other specific forms without departing from the spirit or essential characteristics thereof. Likewise the particular naming and division of the modules managers features attributes methodologies and other aspects are not mandatory or significant and the mechanisms that implement the invention or its features may have different names divisions and or formats. Furthermore as will be apparent to one of ordinary skill in the relevant art the modules managers features attributes methodologies and other aspects of the invention can be implemented as software hardware firmware or any combination of the three. Of course wherever a component of the present invention is implemented as software the component can be implemented as a script as a standalone program as part of a larger program as a plurality of separate scripts and or programs as a statically or dynamically linked library as a kernel loadable module as a device driver and or in every and any other way known now or in the future to those of skill in the art of computer programming. Additionally the present invention is in no way limited to implementation in any specific programming language or for any specific operating system or environment. Accordingly the disclosure of the present invention is intended to be illustrative but not limiting of the scope of the invention which is set forth in the following claims.

