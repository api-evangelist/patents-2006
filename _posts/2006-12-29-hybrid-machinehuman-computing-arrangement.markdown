---

title: Hybrid machine/human computing arrangement
abstract: A hybrid machine/human computing arrangement which advantageously involves humans to assist a computer to solve particular tasks, allowing the computer to solve the tasks more efficiently. In one embodiment, a computer system decomposes a task, such as, for example, image or speech comparison, into subtasks for human performance, and requests the performances. The computer system programmatically conveys the request to a central coordinating server of the hybrid machine/human computing arrangement, which in turn dispatches the subtasks to personal computers operated by the humans. The humans perform the subtasks and provide the results back to the server, which receives the responses, and generates a result for the task based at least in part on the results of the human performances.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07801756&OS=07801756&RS=07801756
owner: Amazon Technologies, Inc.
number: 07801756
owner_city: Incline Village
owner_country: US
publication_date: 20061229
---
This application is a continuation of U.S. patent application Ser. No. 09 976 717 entitled A Hybrid Machine Human Computing Arrangement and filed Oct. 12 2001 which claims the benefit of provisional U.S. Patent Application No. 60 276 963 entitled A Hybrid Machine Human Computing Arrangement and filed Mar. 19 2001. The specification of provisional U.S. Patent Application No. 60 276 963 is incorporated herein by reference.

The present invention pertains to the field of distributed computing. More specifically the present invention relates to a new form of hybrid distributed computing involving one or more humans to assist a computer in solving a task such as for example speech to text conversion allowing the computer to solve the task in a more efficient manner.

Traditional computers excel at tasks that are easily expressed by simple algorithms. For example traditional word processing involves tasks that are easily expressed in terms of programming instructions that are machine executable. The instructions operate to handle user inputs in accordance with specific algorithms that represent the tasks that the computer will perform. For instance when a text document is scanned by a word processor for spelling errors a computer processor executes specific instructions that result in verification whether user inputs conform to specific pre determined character patterns producing outputs to the user indicating where there are mismatches between user inputs and the pre determined character patterns. There are many similar examples. In each a computer processor uses simple algorithms to do the processing.

However there are many tasks that are difficult for a computer processor to perform even if many computer processors are combined in a distributed computer network or some other computer architecture. Such tasks include among others speech to text conversion speech recognition image comparison and music comparison. While it may be a straightforward task for a human to describe the differences and similarities between two pictures for example automating the same task on a computer is overly complex and can appear insurmountable. There are a variety of reasons for this but there tend to be three major underlying reasons. First there is not an efficient way of representing human knowledge in a form that computers can understand and use. Second existing algorithms for many of these tasks take so long to execute on a computer that the algorithms are rendered only marginally useful. Third there is insufficient understanding as to how the human brain processes information to make it possible to easily transfer these processes to computers.

Finding solutions to these underlying issues has been the focus of artificial intelligence research for many years. However research and development has been directed to improving the algorithms used by computer processors to complete various tasks the have been desirable but difficult to automate increasing the performance capabilities of the computer processors themselves and optimizing computer architectures by using multiple computer processors. While advances have been made the three underlying issues above have not been satisfactorily addressed.

Thus better methods and apparatuses are needed to help solve the type of problems that tend to be almost trivial for humans but difficult to automate using computers.

A hybrid machine human computing arrangement including a central coordinating server and a number of human operated nodes is provided to involve humans to assist a computer system to solve particular tasks allowing the computer system to solve the tasks more efficiently.

In one embodiment the computer system decomposes a task such as for example image or speech comparison into subtasks for human performance and programmatically requests the performances using an API of the present invention. In response the central coordinating server dispatches the subtasks to personal computers operated by the humans by way of e.g. the Internet.

The humans perform the requested subtasks and provide the results back to the central coordinating server. The central coordinating server receives the responses corresponding to human performance of the subtasks and generates a result for the task based at least in part on the human performances of the subtasks.

In the following description various aspects of the present invention will be described. However it will be apparent to those skilled in the art that the present invention may be practiced with only some or all aspects of the present invention. For purposes of explanation specific numbers materials and configurations are set forth in order to provide a thorough understanding of the present invention. However it will also be apparent to one skilled in the art that the present invention may be practiced without the specific details. In other instances well known features are omitted or simplified in order not to obscure the present invention.

Parts of the description will be presented using terminology commonly employed by those skilled in the art to convey the substance of their work to others skilled in the art such as node server client and so forth. As well understood by those skilled in the art this terminology is merely logical in nature to facilitate explanation of the present invention. Parts of the description will also be presented in terms of operations performed by a computer system using terms such as network text data and the like. As well understood by those skilled in the art also these quantities take the form of electrical magnetic or optical signals capable of being stored transferred combined and otherwise manipulated through mechanical and electrical components of a digital system and the term digital system includes general purpose as well as special purpose data processing machines systems and the like that are standalone adjunct or embedded.

Various operations will be described as multiple discrete steps performed in turn in a manner that is most helpful in understanding the present invention however the order of description should not be construed as to imply that these operations are necessarily performed in the order they are presented or order dependent. Lastly repeated usage of the phrase in one embodiment does not necessarily refer to the same embodiment although it may.

Referring now to an overview of the hybrid machine human computer of the present invention in accordance with one embodiment is shown. As illustrated hybrid machine human computer comprises Task Server associated with Junta Computer . For this embodiment Junta Computer is that portion of the hybrid machine human computer that comprises functional components other than Task Server . In one embodiment Task Server resides at a remote premise accessible to a user wishing to utilize Junta Computer to solve a problem or a task by way of a networking fabric such as the Internet. In an alternate embodiment Task Server is co resident with the user. Task Server is at the front end of a hybrid machine human computer and functions to decompose the task to be performed into smaller potentially many subtasks to be performed by Junta Computer . As will be disclosed in greater detail below the subtasks represent basic operations that any human can trivially perform without any special training or education. That is the subtasks are generated in such a fashion as to be relatively simple for a human to perform as compared to a computer. Put another way the task or problem is broken down into smaller sub problems that may be easily solved by a human very rapidly in almost no time at all. Examples of such subtasks or basic operations include among others classifying text into one of many categories comparing music samples comparing images and converting speech into text. A more specific example of a subtask is the act of determining whether two images are photographs of the same person.

Decomposition of a task into subtasks may be performed manually by an operator of Task Server or automatically by a task decomposition application not shown executing on Task Server . Such task decomposition application may decompose a task in any one of a number application dependent manner. Preferably the manner in which such task decomposition decomposes a task is user configurable and or selectable. That is task decomposition application is equipped with a number of ways to decompose a task and the user may specific which of the available options is to be employed. For example in an example application of dispatching archive articles to humans for classification the task decomposition application may decompose the tasks into subtasks by day ranges month ranges or year ranges. Preferably which timing granularity to be employed is user specifiable or selectable.

In accordance with one embodiment Task Server sends the subtasks to be performed to Junta Computer whereby communication is directed to that functional portion of Junta Computer called Junta Server . In one embodiment communication link is implemented using the Internet. In another embodiment communication link is implemented using a local area network such as Ethernet. In yet another embodiment Task Server and Junta Server are in a single computer and share a common computer processor in which case communication link is a system bus embedded in the common computer.

Those skilled in the art will appreciate that the functional components of the present invention can be implemented in many different embodiments. For example Task Server may be implemented as a single computer or as a collection of several distributed computers or for a plurality of task servers as multiple independent computers each task server independently transacting with Junta Server or using other system architectures. Likewise Junta Server may be implemented as a single computer or as a collection of distributed computers or using other system architectures.

Junta Server as shown in serves as the central coordinating computer of the Junta Computer . Junta Server receives the subtasks from Task Server determines the availability of Junta Node to perform the subtask using network communications and if Junta Node is available sends the subtask to and receives the resulting response from Junta Node using network communications . Junta Server similarly determines availability of other Junta Nodes such as Junta Node through Junta Node n where n is the nJunta Node and Junta Server similarly sends each node a subtask and receives from each a corresponding response. Once Junta Server receives a sufficient number of responses from Junta Network which comprises the network of Junta Nodes as shown Junta Server puts together all the responses collected and sends a result for the subtask back to Task Server thereafter Task Server is then enabled to solve the problem based on the solution received for each of the subtasks.

As an overview of a hybrid machine human computer the illustration of is complemented with which illustrates one embodiment of Junta Node in closer detail and therein highlights a method of involving humans to assist a computer. As illustrated in in accordance with one embodiment Junta Server communicates with Junta Node through communication device using network connection . Communication device then interacts with human wherein interaction is text visually displayed by communication device and alterable by human using a keyboard or interaction is sound projected from communication device and text input by human using a keyboard or interaction is any output from communication device and any input from human .

For example in one embodiment communication device is a personal computer. Most personal computers provide for visual and audio outputs and human inputs using a keyboard mouse microphone and so on. In another embodiment communication device is a handheld computing device such as a personal digital assistant PDA with visual outputs and only accepting inputs using a touch screen feature. In yet another embodiment communication device is a handheld communication device such as a cellular phone that allows for two way audio visual outputs and keypad inputs. In one embodiment network connection is a cellular phone or Internet enhanced cellular phone network. In another embodiment network connection is the Internet. In yet another embodiment network connection is a combination of wireless local area network and Internet to connect for example a PDA to a local area network with Internet access.

Even though characterizes Junta Node as having human coupled with communication device this need not be the case for Junta Node through Junta Node n . In one embodiment Junta Node is as illustrated in whereas Junta Node n comprises a computer system whereby the computer system performs the subtask communicated from Junta Server . In another embodiment Junta Node follows as characterized in whereas Junta Node n comprises a human coupled with a computer whereby the computer system performs the subtask communicated from Junta Server .

As illustrated in in one embodiment Junta Server is the intermediary between Task Server and Junta Network . Junta Server performs several functions including but not limited to 1 coordinating availability of Junta Nodes comprising Junta Network 2 verifying inputs received from Junta Nodes comprising Junta Network 3 rating the power of Junta Computer 4 calculating and disbursing payments to Junta Nodes comprising Junta Network 5 maintaining records of transactions transactions with Task Server other task servers and individual Junta Nodes 6 storing data associated with Task Server other task servers and individual Junta Nodes comprising Junta Network and 7 other miscellaneous book keeping activities.

In coordinating availability of Junta Nodes Junta Server keeps track of all Junta Nodes that have registered with Junta Server as being available to perform subtasks. Registration may be facilitated in any one of a number of registration techniques know in the art. Upon registering in accordance with one embodiment each Junta Node provides additional capabilities such as for example language spoken. Junta Server identifies the Junta Nodes that have registered and fit within the scope of particular subtasks such as for instance language spoken. Those Junta Nodes registered and that meets minimum basic prerequisites comprise Junta Network . In other words the collection of Junta Nodes employed to solve one task may be different from that of another task. Junta Server sends each Junta Node in Junta Network choices of subtasks available for performance and the compensation associated with each subtask. Alternate embodiments allow for different combinations as to the type of choices offered to Junta Network . In one embodiment each Junta Node in Junta Network is able to choose which subtasks are to be performed making such choices considering relevant data such as compensation level offered for performance of each subtask.

Communications between Junta Server and the Junta Nodes may be conducted using any one of a number of known client server communication techniques. For example in one implementation Junta Nodes may be equipped with a generic browser whereas Junta Server may include a web server where communication between Junta Server and Junta Nodes may be conducted via web pages.

In verifying inputs received from Junta Nodes Junta Server collates the responses received from Junta Nodes in Junta Network responding to the same subtask. In one embodiment Junta Server uses a simple algorithm that determines the correct solution to be that solution which is most popular wherein the majority wins also referred to as majority governs that is the result provided by the most number of Junta Nodes is determined to be the correct answer for the task or an algorithm that determines the correct answer using Junta Node responses weighted according to the history of each particular Junta Node in coming up with the right answer previously effectively weighting each Junta Node response by an accuracy rating for that Junta Node. Additionally the final answer may be generated in accordance with a specific accuracy using e.g. an algorithm selecting a solution that represents at least N Junta Node responses in agreement where N is the integer number of responses in agreement assuming the subtask has been dispatched to M Junta nodes for performance where M is greater than N .

In rating the power of Junta Computer in accordance with one embodiment Junta Server bases its power rating on the number of registered Junta Nodes participating in the Junta Computer along with other adjustments for Junta Node capability Junta Node historical accuracy or accuracy rating and so forth. The power rating represents the computing power available from Junta Computer for the particular subtask being considered. This is analogous to the FLOP rating or clock speed used to rate traditional computers.

In one embodiment Junta Server also calculates the compensations for the Junta Nodes. In accordance with one embodiment Junta Server determines the compensation due and disbursement method for each Junta Node participating in Junta Computer taking into consideration data for each Junta Node such as cumulative contribution to Junta Computer quality of the work contributed and other parameters agreed to between Junta Server the particular Junta Node involved and Task Server or the particular task server involved.

In maintaining records of transactions Task Server in accordance with one embodiment uses database or data storage features to catalog and maintain transaction data associated with Task Server other task servers and all individual Junta Nodes.

Regarding handling other miscellaneous book keeping activities Junta Server in one embodiment records data relevant to security and privacy and performance measures such as for instance throughput latency and accuracy. Junta Server in one embodiment stores such performance data as throughput defined as the number of subtasks completed by Junta Computer in a unit time latency defined as how long it would take to obtain the solution to a subtask once it has been submitted to Junta Computer and accuracy defined as an accuracy rating for Junta Computer as a whole rather than accuracy ratings for Junta Nodes also tracked and maintained by Junta Server .

Regarding security and privacy Junta Server may in one instance receive data from Task Server indicating Task Server requests no special security or privacy for one task yet desires low level or lax security and privacy protection for another task. Such low level protection includes in accordance with one embodiment Junta Server ensuring that only relevant data is passed from Task Server to Junta Computer . For example if Task Server wishes to use Junta Computer to clean certain fields in a database containing sensitive information only the data containing the fields to be cleaned are sent to Junta Computer . Should Task Server desire strict security or higher level protection Junta Server in accordance with one embodiment uses Secure Sockets Layer SSL for all communication with Junta Network using network .

The aforementioned functions of Junta Server are enabled by algorithms programming instructions and data in accordance with an Application Programming Interface API . A permanent copy of the programming instructions to practice the present invention in one embodiment may be loaded into non volatile storage associated with Junta Server Task Server similar task servers or any computer system associated with Junta Computer in a factory or in the field through distribution source medium such as tapes CDROM DVD and so forth and through network connection or network connection .

The Application Programming Interface API in one embodiment provide facilities to enable Task Server to programmatically describe to Junta Server selected details of the task to be solved e.g. the nature of the task at hand the input data associated with the task to be performed the accuracy expected of the results that are sent back the desired security level the maximum amount of time to be spent for a subtask the cost to be incurred for a task and so forth. The API also provides for facilities to enable return communication from Junta Server to Task Server .

Effective communications and interactions involving the various systems and sub systems associated with hybrid machine human computer require an API that establishes certain ground rules and protocols. provide the essential aspects of an API in a C like programming language in accordance with one embodiment.

For the embodiment the API provides for various data types. Typedef declarations and provide for the establishment of the data types junta input domains t junta output domains t junta functions junta input data s and junta output data s respectively for various declared variables and data structures. Variables data structures of these types may assume one of the enumerated defined data values. That is variables of the type junta input domains t may assume text or speech whereas variables of the type junta output domains t may assume text numbers and tuples specifying the nature of the input and output data. Data structures of the type junta function s comprise data of variables with the types junta input domains t and junta output domains t. Data for the variables of type junta input data s and junta output data s are specified by the pointers pointed to by pointers text and speech data and pointers numbers and text respectively. Together these data types junta input domains t junta output domains t junta function s junta input data s and junta output data s facilitate programmatic communication between Task Server and Junta Server on input and output data including their types for a problem to be solved by Junta Computer . In alternate embodiments additional input and output data types such as video may also be defined and supported.

Additionally for the embodiment typedef declarations and provide for the establishment of the data types junta attribute type t junta accuracy functions t junta security level t junta accuracy s junta security s and junta attribute s respectively for various declared variables and data structures. Variables and data structures of these types may assume one of the enumerated defined data values. That is variables of the type junta attribute type t may assume ACCURACY SECURITY and so forth. Variables of the type junta accuracy function t may assume MAJORITY WINs SPECIFIC ACCURACY and so forth whereas variables of the type junta security level t may assume STRICT LAX and so forth. Variables data structures of the types junta accuracy s junta security s and junta attribute s may take on the accuracy security and consolidated attribute values correspondingly as defined. Together these data types junta attribute type t junta accuracy functions t junta security level t junta accuracy s junta security s and junta attribute s facilitate programmatic communication between Task Server and Junta Server on various attributes such as security accuracy and so forth for a problem to be solved by Junta Computer . In alternate embodiments additional attribute types and or attributes may be supported.

For the embodiment the API also includes function junta new problem to facilitate Task Server to request Junta Server to create a new task to be performed or a new problem to be solved. Among the invocation parameters is the parameter function type having the earlier described data type junta function s and the parameter identified by pointer problem id having the data type junta id. Returned data for the create request such as status may be found in junta return t.

The API also includes function junta set attributes to facilitate Task Server to specify for Junta Server the various attributes associated with a task to be performed or a problem to be solved. In addition to the task problem identifier problem id the invocation parameters include attribute type and attributes having data types junta attribute type t and junta attribute s respectively .

Further the API also includes functions junta input and junta set output to facilitate Task Server to provide and specify for Junta Server the input data and the range of the output data associated with a task to be performed or a problem to be solved. The API also includes function junta get output to facilitate Task Server to retrieve from Junta Server the output data for a task performed or a problem solved. In the case of junta input in addition to the task problem identifier problem id the invocation parameters include the input data input with the data type junta input data s . In the cases of junta set output and junta get output in addition to the task problem identifier problem id the invocation parameters include the output data output with the data type junta output data s .

Next illustrates an operational flow of a hybrid machine human computer arrangement in accordance with one embodiment. First is task server identification of the problem followed by task server generation of subtasks . Moving to the functions handled by Junta Computer Junta Server identifies resources needed by Junta Computer . For examples the task on hand requires French speaking humans and Task Server has requested that each subtask be performed by at least 10 humans with a past accuracy record of at least 90 Junta Server identifies the Junta Nodes meeting the criteria accordingly. If more Junta Nodes are available than the number Junta Nodes needed the subtask may be assigned randomly or by some fairness algorithm ensuring most Junta Nodes of equal quality accuracy are given substantially the same amount of work.

Upon identifying the Junta Nodes to be assigned to subtasks Junta Server then sends subtasks to each of the identified resources Junta Nodes those resources comprising Junta Network . Junta Node Junta Node through Junta Node n which are the Junta Nodes comprising Junta Network each perform their respective assigned subtasks.

Upon completing performance of the assigned subtasks each of the Junta Nodes sends the result or results back to the Junta Server. Junta Server in due course receives all responses from the Junta Nodes comprising Junta Network . Thereafter Junta Server compares and analyzes the responses and determines synthesizes the result for the task. As described the comparisons analyses as well as syntheses may take into consideration the accuracy desired as well as past accuracy of the Junta Nodes providing the answers.

Finally upon deriving an answer for the requested task Junta Server returns the derived solution to the Task Server

As an example application using the operational flow in consider a task involving the comparison of images. First the task server identifies the problem that needs to be solved by Junta Computer . Next the task server generates subtasks . For this example consider that one specific subtask is the comparison of two image files requiring a determination whether a certain individual pictured in one image file is the same person pictured in the other image file. Once subtasks have been generated these subtasks are sent to the Junta Computer via the Junta Sever. In this example the communication from task server to Junta Server as well as from Junta Server to individual Junta Nodes is in the form of electronic mail messages containing attachments for the image files. The Junta Server then identifies the resources available to complete the subtasks. For example the Junta Server might reference a data base containing information about Junta Nodes that have previously expressed interests in image comparison subtasks and have previously agreed to certain arrangements regarding level of compensation timing for receiving new subtasks and providing responses back to the Junta Server logistics such as receiving subtasks and providing responses using electronic mail and so forth.

After resources are identified the Junta Server sends the same subtask to n different Junta Nodes wherein the number of Junta Nodes n is determined when the problem was identified by the task server . For example it might be desirable for at least n Junta Nodes to produce the same result in order for a solution to be considered valid. This is an accuracy attribute identified by the task server . To make sure that at least n solutions in agreement are received the Junta Server will need to keep sending subtasks to Junta Network until at least n solutions are received . Each Junta Node receives an email with image attachments opens the attachments determines whether the two images contain the specified individual and replies to the Junta Server using an electronic mail message. Once at least n solutions in agreement are received the responses are sent to the task server for analysis . Lastly once analysis is complete the task server presents a solution to the subtask.

The above example using electronic mail messages sent out by the Junta Server to the Junta Nodes is an example of a push system. That is the Junta Server pushes the subtasks out to the Junta Nodes using the electronic mail messages sent to request action from the Junta Nodes comprising the Junta Network.

In contrast a pull system can be implemented in one embodiment by establishing queues of subtasks residing at the Junta Server awaiting performance by Junta Nodes that access the Junta Server to query whether subtasks are available to be performed. That is the Junta Server pulls the Junta Nodes into the Junta Server environment to find subtasks to be performed. For example a pull system might be implemented using a website on the Internet the website representing the Junta Server where Junta Nodes can access the website using dial up or whatever Internet access is available query the Junta Server for available subtasks and relevant compensation and other arrangements and provide responses to subtasks using the Internet website.

Thus a hybrid machine human computing arrangement has been described. While the present invention has been described in terms of the above illustrated embodiments those skilled in the art will recognize that the invention is not limited to the embodiments described. The present invention can be practiced with modification and alteration within the spirit and scope of the appended claims. The description is thus to be regarded as illustrative instead of restrictive on the present invention.

