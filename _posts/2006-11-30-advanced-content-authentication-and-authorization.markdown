---

title: Advanced content authentication and authorization
abstract: An interactive multimedia presentation playable by a presentation system includes a media content component and an interactive content component. The interactive content component includes one or more applications, which provide instructions for organizing, formatting, and synchronizing the presentation of interactive objects to a user. Prior to playing the interactive multimedia presentation, an entity responsible for authoring or publishing one or more of the applications is digitally identified and authenticated, or it is determined that the applications are unsigned. Prior to and/or during play of the interactive multimedia presentation, authorization for performing certain actions (such as executing certain application instructions, especially those that access functionality of the presentation system, computer-readable media, or external networks) is granted via a permission-based model. User input and application requests may be considered in determining whether an application is granted permission to perform certain actions.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08473739&OS=08473739&RS=08473739
owner: Microsoft Corporation
number: 08473739
owner_city: Redmond
owner_country: US
publication_date: 20061130
---
Multimedia players are devices that render combinations of video audio or data content multimedia presentations for consumption by users. Multimedia players such as DVD players currently do not provide for much if any user interactivity during play of media content media content play is generally interrupted to receive user inputs other than play speed adjustments. For example a user of a DVD player must generally stop the movie he is playing to return to a menu that includes options allowing him to select and receive features such as audio commentary or effects actor biographies or games.

Interactive multimedia players are hardware software firmware or any combination thereof that render combinations of interactive content alone or concurrently with traditional video audio or data content interactive multimedia presentations . Interactive content includes resources such as interactive objects which are user selectable visible or audible objects presentable alone or concurrently with traditional video audio or data content. One or more applications provide instructions for organizing formatting and synchronizing the presentation of interactive objects to a user. Although any type of device may be or include an interactive multimedia player devices such as optical media players for example DVD players computers and other electronic devices are particularly well positioned to enable the creation of and consumer demand for commercially valuable interactive multimedia presentations because they provide access to large amounts of relatively inexpensive portable data storage.

Applications are generally configured to access various resources such as functions of an interactive multimedia player applications may pass data to from the functions of the interactive multimedia player to provide a wide variety of user experiences for example and interactive objects and other resources stored in persistent storage or networks. Unscrupulous application authors or publishers could use certain resource accesses for malicious purposes such as gaining access to confidential user information or introducing dangerous or disruptive programs into interactive multimedia players.

To enhance investment in interactive multimedia players and interactive multimedia presentations it is desirable that interactive multimedia players protect consumers against execution of potentially malicious interactive content while providing predictable functionality associated with playing video audio or data content.

An interactive multimedia presentation playable by a presentation system generally includes a media content component and an interactive content component. One example of media content is a movie but media content may be video audio data or any combination thereof. Interactive content is in the form of one or more applications which provide instructions for organizing formatting and synchronizing the presentation of interactive objects to a user often concurrently with media content. An application includes computer executable instructions.

Methods systems apparatuses and articles of manufacture for playing applications are discussed herein. For exemplary purposes applications associated with interactive multimedia presentations are discussed. Entities that author or publish applications are digitally identified authenticated and execution of specific application instructions is authorized using a permission based model. User input and application requests may be considered in determining whether an application is granted permission to perform certain actions. Authentication is generally established independent of authorization.

Applications may be authorized to perform various virtually unlimited permitted actions and combinations thereof. In one scenario permitted actions are authorized and an operating mode of an application established based on a level of access to resources. For example execution of application instructions that access resources such as various predefined application programming interfaces APIs markup elements computer readable media external network locations may be permitted or denied. Authorization to perform permitted actions may be granted prior to and or during execution of an application.

This Summary is provided to introduce a selection of concepts in a simplified form. The concepts are further described in the Detailed Description section. Elements or steps other than those described in this Summary are possible and no element or step is necessarily required. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended for use as an aid in determining the scope of the claimed subject matter. The claimed subject matter is not limited to implementations that solve any or all disadvantages noted in any part of this disclosure.

Authentication and authorization models for applications are discussed herein. Applications associated with interactive multimedia presentations are discussed for exemplary purposes. An application includes computer executable instructions. Execution of certain application instructions especially those that access resources associated with a presentation system computer readable media or external network locations could result in the occurrence of malicious or unwanted actions such as obtaining confidential user information introducing viruses or inducing hardware failures.

One authentication related step that occurs prior to playing an application is determining whether an entity that authored or published certain applications is recognized. One way to identify the entity is via a digital identity such as a digital signature file. In an exemplary implementation the digital signature file is stored in a predetermined location and includes a signed digital certificate issued by a third party authority and a verifiable hash value. If a digital identity is not found in the case of home authored applications for example the applications may be deemed to be unsigned. If a digital identity is found the applications are deemed to be signed and it can then be determined whether the digital identify is trusted and valid. If the digital identity is not trusted or valid for example the entity is not known the signed digital certificate has been revoked or the digital signature file has been tampered with it may be desirable for all or part of the interactive multimedia presentation to be deemed un playable.

Assuming the digital identity is deemed to be trusted and valid or if applications are known to a user by some other means such as when a title is under development and is being tested the authorization for execution of specific application instructions is provided via a permission based model. User input may be considered to determine what actions the application is permitted to perform. An application may also request and or query certain permissions. Generally an application only receives the minimum permissions needed to operate.

Certain authorization related actions taken prior to and or during play of an interactive multimedia presentation include evaluating a security policy and or resource access condition to determine an operating mode of the application. The operating mode of the application is generally based on whether access to various predefined resources such as application programming interfaces APIs markup elements computer readable media locations or external network locations is permitted or denied. In one exemplary scenario there are three permitted modes of operation for an application in addition to a mode where the application is deemed to be un playable which generally correspond to a level of interactivity experienced by a user in a first mode the application has unrestricted resource access allowing a user to receive select all or a wide variety of interactive features for example in a second mode the application may access only a predetermined set of resources allowing a user to receive only basic interactive menus for example and in a third mode the application is not permitted to access any external resources in this case the user may not be allowed to receive select any interactive features .

Aspects of the authentication and authorization functionality described herein are provided by an interactive content authentication and authorization system. In one implementation the interactive content authentication and authorization system is implemented within a presentation system for playing interactive multimedia presentations. The presentation system may be implemented using any configuration of software hardware firmware or combinations thereof. Exemplary presentation systems include operating systems DVD players portable media players and personal computers. Presentation systems are optionally compliant with one or more specifications or standards.

Turning to the drawings where like numerals designate like components is a simplified functional block diagram of an interactive multimedia presentation system Presentation System . Presentation System includes a media content manager an interactive content IC manager a presentation manager a timing signal management block and a mixer renderer . In general design choices dictate how specific functions of Presentation System are implemented. Such functions may be implemented using hardware software or firmware or combinations thereof.

In operation Presentation System handles interactive multimedia presentation content Presentation Content . Presentation Content includes a media content component media component and an interactive content component IC component . Media component and IC component are generally but need not be handled as separate data streams by media content manager and IC manager respectively.

Presentation System also facilitates presentation of Presentation Content to a user not shown as played presentation . Played presentation represents the user received for example visible audible or otherwise perceivable information associated with Presentation Content that is produced by mixer renderer and receivable by the user via devices such as displays or speakers not shown . For discussion purposes it is assumed that Presentation Content and played presentation represent high definition DVD movie content in any format. It will be appreciated however that Presentation Content and Played Presentation may be configured for presenting any type of presentation of media content now known or later developed.

Media component represents the traditional video audio or data components of Presentation Content . For example a movie generally has one or more versions a version for mature audiences and a version for younger audiences for example one or more titles with one or more chapters not shown associated with each title titles are discussed further below in connection with presentation manager one or more audio tracks for example the movie may be played in one or more languages with or without subtitles and extra features such as director s commentary additional footage trailers and the like. It will be appreciated that distinctions between titles and chapters are purely logical distinctions. For example a single perceived media segment could be part of a single title chapter or could be made up of multiple titles chapters. It is up to the content authoring source to determine the applicable logical distinctions. It will also be appreciated that although media component is referred to as a movie media component may in fact be video audio data or any combination thereof.

Sets of media samples for example sets of video audio or data samples that form media component are referred to as clips clips are shown within media component media content manager and playlist . Referring to media content manager information associated with clips is handled by one or more processing units such as media processing pipelines one media processing pipeline labeled 1 N is shown to indicate that any number of media processing pipelines are possible . Within a particular media processing pipeline information associated with clips is received from a media source and demultiplexed decoded and or decrypted at a decoder block .

A particular media source is any device location or data from which video audio or data is derived or obtained. Examples of media sources include but are not limited to user input devices networks data structures or computer readable media.

Media data is data associated with media component that has been prepared for rendering by media content manager and transmitted to mixer renderer . Sets for example frames of media data generally include for each active clip a rendering of a portion of the clip. The exact portion or amount of the clip rendered in a particular set of media data may be based on several factors such as the characteristics of the video audio or data content of the clip or one or more parameters associated with the media source from which the media data is derived for example codec parameters or settings and encryption parameters or settings .

Referring again to Presentation Content IC component includes interactive objects which are optionally presentable concurrently with media component along with any instructions shown as applications and discussed further below for presenting the interactive objects. Interactive objects may be static or animated. Examples of interactive objects include among other things video samples or clips audio samples or clips images graphics text and combinations thereof.

Interactive objects originate from one or more sources not shown . A source is any device location or data from which interactive objects are derived or obtained. Examples of sources for interactive objects include but are not limited to user input devices networks data structures computer readable media or information obtained from applications associated with the same or different processes or machines . Examples of formats of interactive objects include but are not limited to portable network graphics PNG joint photographic experts group JPEG moving picture experts group MPEG multiple image network graphics MNG extensible markup language XML hypertext markup language HTML extensible HTML XHTML extensible stylesheet language XSL and WAV.

Applications provide the mechanism by which Presentation System presents interactive objects to a user. Applications represent any signal processing method or stored instruction s that electronically control predetermined operations on data. In one implementation applications are authored to execute on presentation systems in compliance with one or more Specifications for High Definition Video published by the DVD Forum.

It is assumed for discussion purposes that IC component includes three applications which are discussed further below in connection with . The first application presents concurrently with visual aspects of the movie certain interactive objects that provide a menu having multiple user selectable items the second application presents one or more interactive objects that provide graphic overlays such as circles that may be used to identify and or follow one or more items appearing in the movie a person a car a building or a product for example and the third application presents a media clip such as an animated thumbnail referred to as a script clip . Applications either alone or in response to user events may determine when media data associated with clips or interactive objects are presented to a user.

IC manager includes among other things not shown an interactive content authentication and authorization system hereinafter referred to as ICAA System which is shown and discussed in detail in connection with . ICAA System is responsible for authenticating entities that author or publish applications and for implementing a permission based model for resource access by applications . Resources are physical or logical components managed by application on an individual basis. Examples of resources accessed by a particular application include but are not limited to other applications instructions persistent and non persistent memory locations network locations media processing pipelines presentation manager and components thereof IC manager and components thereof mixer renderer and components thereof and timing signal management block and components thereof. Specifications for High Definition Video published by the DVD Forum set forth various objects and methods associated with DVD players that are accessible via script APIs and markup elements. Generally applications use instructions such as script or markup commands to access resources script and markup are shown and discussed in connection with although any type of instructions are possible.

Interactive content data IC data is data associated with IC component that has been prepared for rendering by IC manager and transmitted to mixer renderer . Each application has an associated queue not shown which holds one or more work items not shown associated with rendering the application.

Presentation manager which is configured for communication with media content manager IC manager mixer renderer and timing signal management block facilitates handling of Presentation Content and presentation of played presentation to the user. Presentation manager has access to a playlist . Playlist includes among other things a time ordered sequence of clips and applications including interactive objects that are presentable to a user. The clips and applications interactive objects may be arranged to form one or more titles . For exemplary purposes one title is discussed herein. Playlist may be implemented using an extensible markup language XML document or another data structure.

Presentation manager uses playlist to ascertain a presentation timeline for title . Conceptually presentation timeline indicates the times within title when specific clips and applications are presentable to a user. A sample presentation timeline which illustrates exemplary relationships between presentation of clips and applications is shown and discussed in connection with .

In operation presentation manager provides information including but not limited to information about presentation timeline to media content manager and IC manager . Based on input from presentation manger media content manager prepares media data for rendering and IC manager prepares IC data for rendering.

Timing signal management block produces various timing signals which are used to control the timing for preparation and production of media data and IC data by media content manager and IC manager respectively. In particular timing signals are used to achieve frame level synchronization of media data and IC data . Details of timing signal management block and timing signals are not discussed specifically herein.

Mixer renderer renders media data in a video plane not shown and renders IC data in a graphics plane not shown . The graphics plane is generally but not necessarily overlayed onto the video plane to produce played presentation for the user.

With continuing reference to is a graphical illustration of a sample presentation timeline for title within playlist . Time is shown on horizontal axis . Information presentable within title specifically about media component clips are illustrated and IC component applications which present interactive objects are illustrated is shown on vertical axis .

Regarding clips associated with media component four clips are shown a first media clip media clip a second media clip media clip a third media clip media clip and a fourth media clip media clip . Media clip is playable from zero seconds to 10 seconds media clip is playable from eight seconds to 15 seconds media clip is playable from 10 seconds to 20 seconds and media clip is playable from 30 seconds to 40 seconds. No media content is scheduled by playlist for play between 20 seconds and 30 seconds although an application may present script clip for play between 20 seconds and 30 seconds. Script clip is a media clip such as an animated thumbnail which is not generally included in the playlist but which may be optionally invoked automatically or by a user via an application at variable times such as when no media content is scheduled for play or when media content play has been paused within played presentation .

Regarding IC component as discussed above in connection with one application is responsible for presenting certain interactive objects that provide user selectable items for example buttons with associated text or graphics of menu . Another application is responsible for presenting one or more interactive objects that provide graphic overlay . As shown menu is displayed concurrently with media clips through and graphic overlay is displayable concurrently with media clip and a portion of media clip . A third application is responsible for presenting script clip when there is no media content scheduled for presentation as shown script clip is playable between 20 seconds and 30 seconds .

The particular amount of time along horizontal axis in which title is presentable to the user is referred to as play duration of title . Specific times within play duration are referred to as title times. Because a title may be played once or may be played more than once in a looping fashion for example play duration is determined based on one iteration of title . Play duration may be determined with respect to any desired reference including but not limited to a predetermined play speed for example normal or 1 play speed a predetermined frame rate or a predetermined timing signal status.

It will be appreciated that implementation specific factors such as display techniques and specific rules regarding play sequences and timing relationships among clips and interactive objects for each title may impact upon exact values of a title s play duration and title times therein. The terms play duration and title times are intended to encompass all such implementation specific details.

Although title times at within which content associated with IC component is presentable are generally predetermined it will be appreciated that actions taken when the user interacts with such content may only be determined based on user input while Played Presentation is playing. For example the user may select activate or deactivate certain applications interactive objects and or additional content associated therewith during play of Played Presentation .

With continuing reference to is a functional block diagram of a single application . Application is generally representative of applications responsible for presenting interactive objects and shown in . Application includes instructions . Instructions may be in any form or programming language examples include but are not limited to declarative form imperative form functional form or logical form . Script includes instructions in imperative form. Markup elements represent instructions written in a declarative programming language such as Extensible Markup Language XML .

Instructions when executed perform tasks among other tasks related to rendering of interactive objects associated with application based on user input. User inputs may change the state of the media source for example pause inputs fast forward inputs slow forward inputs fast reverse inputs or slow reverse inputs and control user interaction with interactive objects within played presentation such as selection of a button within menu selection of the circle associated with graphical overlay or invocation of script clip . Instructions can also draw or re draw graphics re format video or perform file input outputs or network connections. User inputs may occur using any type of user input device now known or later developed including a keyboard a remote control a mouse a stylus or a voice command. It will be appreciated that application may also perform tasks unrelated to user inputs.

In some cases execution of instructions that access certain resources such as markup elements APIs of Presentation System interactive objects or other resources stored in computer readable media locations such as persistent storage locations or other memory locations or external network locations may result in a heightened potential for the occurrence of malicious or unwanted actions for example obtaining confidential user information introducing viruses or inducing hardware failures . This is often the case in an environment where many interactive features are provided multiple applications may issue commands and the number and or amount of resources associated with an application that are loaded into memory during execution of the application necessitates the loading and unloading of resources from memory.

With continuing reference to is a simplified functional block diagram illustrating various components of ICAA System which is responsible for authenticating entities that author or publish applications and for implementing a permission based model for resource access by applications . ICAA System includes an authentication engine an authorization engine a resource verification engine and an information repository which represents general data storage capability for information and which references various kinds of data used by components of ICAA System such as signed bundles entity information security policy and resource identifiers flags .

In general design choices dictate how specific functions of ICAA System are implemented if at all. Such functions may be implemented using hardware software for example runtime APIs associated with aspects of Presentation System firmware or combinations thereof. It will also be appreciated that implementations of the functions of ICAA System are tailored to the particular environment in which ICAA System operates details of exemplary operating environments are discussed in connection with .

Authentication engine is responsible for identifying entities that author or publish applications and verifying the integrity of applications and other content purported to be authored or published by a particular entity. Signed bundles and entity information are generally used in connection with the functions of authentication engine .

Authorization engine is responsible for authorizing applications to perform certain actions using a permission based model. Resource verification engine is responsible for verifying the integrity of certain resources resource accesses during play of applications . Security policy and resource identifiers flags are generally used in connection with the functions of authorization engine and or resource verification engine .

With continuing reference to is a flowchart of a method for using aspects of ICAA System to start up play of an interactive multimedia presentation using a presentation system such as Presentation System and for selecting an operating mode for interactive content such as IC component of the presentation. For exemplary purposes IC component is assumed to include the three applications discussed in connection with all authored and published by a single entity and listed in a single playlist on or accessible via a computer readable medium computer readable media are discussed in connection with . It will be appreciated however that any number of applications and or playlists authored or published by any number of entities are possible.

The method begins at block and continues at diamond where upon identification of applications it is determined whether a digital identity of the entity that authored or published the applications is identifiable. If a digital identity is not identifiable then the applications are deemed to be unsigned. Generally applications created by consumers for personal use are unsigned. If a digital identity is identifiable then the applications are deemed to be signed. Movie studios and other commercial entities generally produce signed interactive content for distribution to wide audiences. In the context of Presentation System authentication engine is generally responsible for identification and verification of the digital entity.

A digital identity is any technique or data structure used to identify a source of interactive content. One type of digital identity is a digital signature. A digital signature is a cryptographically based electronic signature. Techniques and infrastructure for creating digital signatures are well known. Generally an entity authoring and or publishing digital content requests a digital identity certificate from a third party certificate authority and uses the digital identity certificate to sign certain digital content. The digital signature is generated using a private key and a signing algorithm. The key and or serial number used in the signing algorithm are tied to human readable information about the author publisher such as a studio name and or address by the digital identity certificate.

In the context of Presentation System a digital identity is used to assure authenticity of certain interactive content referred to herein as securable content which may impact upon the security of Presentation System . Securable content includes but is not limited to applications or instructions thereof files associated with applications or resources accessed by applications. Examples of securable content are playlist files manifest files markup files script files timing files subtitle files style sheet files certificate files certificate revocation lists and interactive object files. Particular securable content that is listed in one or more files of predetermined types locations and associated with a particular digital identity in a verifiable manner is referred to as secured content .

Referring to the flowchart of at diamond it is determined whether one or more files of predetermined types locations which identify secured content are present. If as indicated at block files of predetermined types locations are required but not present it is desirable to deem the interactive multimedia presentation interactive content invalid. It is not recommended that invalid interactive content be played in this situation the operating mode of the interactive content may be considered to be invalid or non operational although exact behavior may be defined by particular presentation systems.

In the context of Presentation System ICAA System signed bundles represent collections of files signed by a particular entity which are used to identify verify secured content. is a simplified block diagram of an exemplary implementation of a single signed bundle . Signed bundle may include one or more of the following files 1 a playlist file shown in listing applications covered by the signed bundle 2 a signature file which includes a verifiable hash value the signature for description file and a digital certificate of the author publisher that is generally issued by a third party certificate authority digital certificate may include a secure timestamp from a trusted server but may be self issued during development and at other times 3 secured content files items covered by the signed bundle and 4 a description file which includes hash values associated with items of secured content and signature file an identification of a hash algorithm used to generate hashes suitable hash algorithms include but are not limited to the SHA 1 and SHA 256 algorithms and optionally some additional metadata not shown about the signed bundle such as the resource access permissions that the applications need or are requesting to provide certain user experiences to provide interactive menus graphic overlays or animated thumbnails for example . Although the files of signed bundles may be located virtually anywhere when the playlist is present it may be convenient for the description and signature files to be in the same location as the playlist. It should be noted that if a presentation system does not recognize a particular hash algorithm it may be desirable to treat description file as invalid. An exemplary XML schema for a description file is set forth in the Specifications for High Definition Video published by the DVD Forum and is incorporated herein by reference for all purposes.

Referring again to at block assuming that required files if any are present the digital identity signature identified at block is verified to ensure that it is valid and comes from an entity trusted by the presentation system. Certain information such as a verification algorithm corresponding to the signing algorithm a public key associated with the author publisher or a list of trusted or untrusted entities may be accessed and used in the verification process. In the context of Presentation System authentication engine may verify that digital certificate used in signature file was issued by a trusted root and verify that digital certificate has not expired or been revoked. In addition certain stored entity information such as information about the trustworthiness of various entities may be consulted.

If the digital identity signature is not valid verified at diamond for example the digital certificate is not trusted or has been revoked or a file has been tampered with then it is desirable to deem the interactive multimedia presentation interactive content invalid as previously discussed in connection with block .

At block assuming that the digital identity signature was verified then the required files identified at diamond are verified. In one exemplary implementation only one file the description file is verified and other files are verified as they are loaded. In the context of Presentation System exemplary tasks associated with verifying files associated with signed bundles which may be performed by authentication engine include verifying hash value of signature file verifying that the signature of description file matches the public key in digital certificate and verifying that hash values of all secured content loaded by all applications are correctly listed in description file .

If the required files are present but their contents are not valid verified at diamond for example a file has been tampered with then as indicated at block it is desirable to deem the interactive multimedia presentation interactive content invalid as previously discussed in connection with block . It will be appreciated invalidly signed or secured interactive content can be treated as less trusted than unsigned or unsecured interactive content. Authentication engine may further include provisions for revoking digital certificates or secured content.

Assuming the contents of the required files are valid verified at diamond then as indicated at block the contents of the files may be stored in memory for later use. In the context of Presentation System the contents of description file may be stored including a list of all security sensitive files and their cryptographic hashes and resource access operating permissions requested or required by the applications resource access operating permissions are discussed further below .

Referring again to various authentication status indicators may be identified for example interactive content may be deemed invalid unsigned or validly signed and secured. It will be appreciated that other authentication status indicators are possible. In the cases where applications are unsigned or validly signed and secured the applications may be authorized to perform certain actions during play of the interactive multimedia presentation.

One factor in deciding what actions the applications are permitted to perform is based on the evaluation of a security policy as indicated at block . A security policy is generally a set of criteria used to determine optionally based on one or more authentication status indicators what level of trust interactive content is to be accorded and in turn what resource access permissions the interactive content is entitle to receive such as access to APIs markup elements interactive objects memory locations or network locations . The security policy may consider criteria such as predetermined resource access permission requirements and or definitions predefined entity to permission maps authentication information regarding digital identities or required files user inputs permission requests or other criteria to determine a general level of trust recommended access permissions for the applications. A particular security policy may be hard coded into a particular presentation system or it may allow for user interaction.

At diamond based on evaluation of the security policy and optionally considering other criteria such as user inputs requests or permission requests from applications for example via permission requests included in description file or assumptions made about permissions requested by unsigned applications it is determined whether to grant or deny certain resource access privileges to the applications. In one implementation the set of resource access permissions recommended for availability to the applications based on evaluation of the security policy is compared to the actual set of resource access permissions requested by the applications via description file shown in as permission requests . In some instances users may be able to grant more fewer or different permissions than recommended based on evaluation of the security policy and may be able to customize permissions on a per entity or per title basis. It is generally desirable however that applications receive the minimum resource access permissions needed to operate so that operating failures because of missing permissions do not occur. In one possible implementation applications can be considered to have two types of permissions required permissions and requested permissions. An application will not play if it cannot be granted all of the required permissions an application can play with zero or more requested permissions.

If it is determined at diamond that no resource access privileges should be granted to the applications for example the applications or users request more permissions than can be or are recommended to be granted a user decides not to play a certain optical disc or certain content is known to be malicious or otherwise dangerous it is desirable to deem the interactive multimedia presentation interactive content invalid as indicated at block treatment of invalid content is also discussed above in connection with block .

If it is determined at diamond that at least some resource access privileges should be granted to the applications permissions to take certain actions are granted via selection of an application operating mode at block . In one exemplary implementation three levels of resource access permissions operating modes in addition to the invalid operating mode roughly corresponding to levels of trust are available to applications 1 unrestricted resource access permission allowing trusted applications full access to available resources 2 restricted resource access permission allowing applications that are not known to be malicious but that may not be completely trusted to have access to certain predefined sets of resources and 3 no resource access permission allowing untrusted applications to access few if any resources . The resource access permission level operating mode of an application generally determines a level of interactivity experienced by a user. For example when applications have unrestricted resource access permissions a user may receive select all or a wide variety of interactive features offered by the applications such as interactive menus graphic overlays animated thumbnails and the like. When applications have restricted resource access permissions the user may receive only basic interactive menus which allow for play speed changes and title chapter jumps. When applications have little if any resource access permissions the user may not receive select any interactive features but may still be able to view the traditional video audio or data portion of the interactive multimedia presentation. It is possible to prompt a user for approval to grant individual permissions although such customized user input may cause unpredictable playback.

Thus various authorization status indicators may be identified and used to determine various levels of application operating privileges. In the context of Presentation System authorization engine may be configured to access and evaluate security policy user input s and permission requests to establish the appropriate authorization status resource access permissions application operating modes. It will be appreciated that virtually unlimited resource access permissions and combinations thereof may be defined and authorized. In one example a special circumstance may exist for the testing of applications to facilitate testing of applications certain permissions may be granted even if content is not correctly signed. In another example a stand alone DVD player may implement a different security policy than a software player on a general purpose computer with respect to the same interactive content. It is generally desirable to store some or all of the resource access permissions in memory for later use.

As indicated at block once initial resource access privileges have been granted to the applications the interactive multimedia presentation begins to play. During play of the interactive multimedia presentation applications proceed to access various internal and external resources. When applications attempt to access certain predefined security sensitive resources such as execution of instructions that access certain script files APIs markup files elements manifest files or user defined file types computer readable media locations or external networks it may be desirable to verify that the applications have been granted authorization to access the requested resources and or to verify the integrity of certain resources themselves via cryptographic hashes prior to actually allowing the application to access or load such resources during play. Generally files and other items have verifiable hash values other resources such as APIs or access to devices are often handled by looking up the resource in a data structure used to indicate whether certain resources are available for access or not.

In one possible implementation security sensitive resources that should undergo re authorization for use and or hash verification are identified using verification flags. For example certain secured resources listed in description file may have one or more associated verification flags which may be set to one value if a resource access permission or hash is to be verified during application play and which are set to another value if a resource access permission or hash verification is not necessary during application play. In one scenario there are two flags. One flag is a skip verification flag which indicates whether a hash check should be performed although an error may not occur if the hash check fails . The second flag is a force check flag which is used to indicate that a hash check should be performed even if the resource is not identified as a securable and or secured resource. In another possible implementation security sensitive resources requiring authorization and or verification are identified in other manners such as by inclusion in a set of predetermined file types or having names that match a particular pattern or inclusion in a list of secured files having hash values.

A processor is responsive to computer readable media and to computer programs . Processor which may be a real or a virtual processor controls functions of an electronic device by executing computer executable instructions. Processor may execute instructions at the assembly compiled or machine level to perform a particular process. Such instructions may be created using source code or any other known computer program design tool.

Computer readable media represent any number and combination of local or remote devices in any form now known or later developed capable of recording or storing computer readable data such as the instructions executable by processor . In particular computer readable media may be or may include a semiconductor memory such as a read only memory ROM any type of programmable ROM PROM a random access memory RAM or a flash memory for example a magnetic storage device such as a floppy disk drive a hard disk drive a magnetic drum a magnetic tape or a magneto optical disk an optical storage device such as any type of compact disk or digital versatile disk a bubble memory a cache memory a core memory a holographic memory a memory stick or any combination thereof.

Computer programs represent any signal processing methods or stored instructions that electronically control predetermined operations on data. In general computer programs are computer executable instructions implemented as software components according to well known practices for component based software development and encoded in computer readable media such as computer readable media . Computer programs may be combined or distributed in various ways.

Functions components described in the context of Presentation System are not limited to implementation by any specific embodiments of computer programs. Rather functions are processes that convey or transform data and may generally be implemented by or executed in hardware software firmware or any combination thereof located at or accessed by any combination of functional elements of Presentation System .

With continued reference to is a block diagram of an exemplary configuration of an operating environment in which all or part of Presentation System may be implemented or used. Operating environment is generally indicative of a wide variety of general purpose or special purpose computing environments. Operating environment is only one example of a suitable operating environment and is not intended to suggest any limitation as to the scope of use or functionality of the system s and methods described herein. For example operating environment may be a type of computer such as a personal computer a workstation a server a portable device a laptop a tablet or any other type of electronic device such as an optical media player or another type of media player now known or later developed or any aspect thereof. Operating environment may also be a distributed computing network or a Web service for example. A specific example of operating environment is an environment such as a DVD player or an operating system associated therewith which facilitates playing high definition DVD movies.

As shown operating environment includes or accesses components of computing unit including processor computer readable media and computer programs . Storage includes additional or different computer readable media associated specifically with operating environment such as an optical disc or other removable or non removable storage. One or more internal buses which are well known and widely available elements may be used to carry data addresses control signals and other information within to or from computing environment or elements thereof.

Input interface s provide input to computing environment . Input may be collected using any type of now known or later developed interface such as a user interface. User interfaces may be touch input devices such as remote controls displays mice pens styluses trackballs keyboards microphones scanning devices and all types of devices that are used input data.

Output interface s provide output from operating environment . Examples of output interface s include displays printers speakers drives such as optical disc drive and other disc drives and the like.

External communication interface s are available to enhance the ability of operating environment to receive information from or to transmit information to another entity via a communication medium such as a channel signal a data signal or a computer readable medium. External communication interface s may be or may include elements such as cable modems data terminal equipment media players data storage devices personal digital assistants or any other device or component combination thereof along with associated network support devices and or software or interfaces.

On client side one or more clients which may be implemented in hardware software firmware or any combination thereof are responsive to client data stores . Client data stores may be computer readable media employed to store information local to clients . On server side one or more servers are responsive to server data stores . Like client data stores server data stores may include one or more computer readable media employed to store information local to servers .

Various aspects of a presentation system that is used to present interactive content to a user synchronously with media content have been described. It will be understood however that all of the described components of the presentation system need not be used nor must the components when used be present concurrently. Functions components described in the context of Presentation System as being computer programs are not limited to implementation by any specific embodiments of computer programs. Rather functions are processes that convey or transform data and may generally be implemented by or executed in hardware software firmware or any combination thereof.

Although the subject matter herein has been described in language specific to structural features and or methodological acts it is also to be understood that the subject matter defined in the claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims.

It will further be understood that when one element is indicated as being responsive to another element the elements may be directly or indirectly coupled. Connections depicted herein may be logical or physical in practice to achieve a coupling or communicative interface between elements. Connections may be implemented among other ways as inter process communications among software processes or inter machine communications among networked computers.

The word exemplary is used herein to mean serving as an example instance or illustration. Any implementation or aspect thereof described herein as exemplary is not necessarily to be constructed as preferred or advantageous over other implementations or aspects thereof.

As it is understood that embodiments other than the specific embodiments described above may be devised without departing from the spirit and scope of the appended claims it is intended that the scope of the subject matter herein will be governed by the following claims.

