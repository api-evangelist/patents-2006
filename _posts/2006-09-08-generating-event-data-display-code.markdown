---

title: Generating event data display code
abstract: Techniques for republishing event data are provided. An event data repository contains event records defining real world events. Users request instructions for republishing event data. The request includes data identifying a set of event data and display characteristics for republication. In response to the request, event data display code is provided back to the client. The user may use the event data display code to display event data on the user's own web pages or applications. When the event data display code is processed by a web browser application, a request is sent to the events repository, which provides the identified set of event data in response. The event data is displayed to users at the web browser using the display characteristics specified by the client.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08290980&OS=08290980&RS=08290980
owner: Yahoo! Inc.
number: 08290980
owner_city: Sunnyvale
owner_country: US
publication_date: 20060908
---
This application is related to U.S. patent application Ser. No. 11 392 092 filed on Mar. 28 2006 entitled ACCESSING AN EVENTS REPOSITORY and U.S. patent application Ser. No. 11 517 972 filed Sep. 8 2006 entitled REPUBLISHING GROUP EVENT DATA the entire content of which is incorporated by this reference for all purposes as if fully disclosed herein.

The present invention relates to republishing event data and more specifically to a technique for generating event data display code.

The approaches described in this section are approaches that could be pursued but not necessarily approaches that have been previously conceived or pursued. Therefore unless otherwise indicated it should not be assumed that any of the approaches described in this section qualify as prior art merely by virtue of their inclusion in this section.

Event marketers and promoters typically desire to have event information reach a large number of people to increase the popularity and attendance of the event. Thus traditional media such as print radio and television are conventionally used to communicate event information to a large amount of the population. The larger the audience the event information reaches the more likely the attendance of the event will increase.

Through the advent of the Internet and the World Wide Web Web communication of such events may be instant and widespread to an even larger portion of the population. Further publishing event information over the Internet incurs minimal cost in relation to traditional media. For example the event information need not be replicated on physical paper and the cost of digital replication is minimal when compared to using traditional media. In order to communicate such event information to Internet users marketers and promoters create web content which may be accessed through an event application associated with a web address. Internet users may view the event information by using a web browser to send a request to the web address. In response to the request the event application sends to the browser a web page that includes event information.

Unfortunately users who do not have knowledge of an event repositories Application Programming Interface API find it difficult to re publish event information on their own web pages or within their own applications. For example a particular user may desire to publish the events he she is interested in attending on his her personal website. Although users may utilize an API to retrieve such information from an events repository such a method is labor intensive and requires the user to have extensive programming and knowledge of back end server technologies. Further users who do not have knowledge of web page design techniques and find it difficult to design interfaces for re publishing event information. For example even though a user may know how to access the event information many users do not have the time to spend to design elaborate graphical interface displays. Although presentations of event information do exist existing presentations of event information are usually pre designed and users lack the control to determine how event information is to be displayed to third parties.

In the following description for the purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the present invention. It will be apparent however that the present invention may be practiced without these specific details. In other instances well known structures and devices are shown in block diagram form in order to avoid unnecessarily obscuring the present invention.

An event sharing system includes an event application that provides access to an events repository. Event data within the events repository reflects real world events. The event application may be used by clients to share real world event data. Specifically the event application includes an event application interface that allows clients to share and collaborate in a social events network environment. The event application also allows clients to request event data display code for republishing event data to end user applications that do not interact directly with the event application or events repository. Clients can insert the event data display code into web pages or applications that are available for end user applications to retrieve.

When end user applications retrieve web pages or applications that contain the event data display code the end user applications process the code and cause a request to retrieve event data to be sent to an event republishing server. The event republishing server responds to the request by performing a query on the events repository and responding with the appropriate event records which contain event data reflecting real world events. Further through the event application interface clients may customize the manner in which event data is displayed to end users using end user applications.

Therefore according to one aspect of the invention a method is provided for generating event data display code the method comprising receiving from a client over a network first data that identifies a set of event data stored in a repository wherein the event data stored in the repository reflects real world events receiving from the client second data that identifies one or more display characteristics for the event data wherein the display characteristics indicate the manner in which the event data is to be displayed receiving from the client a request for a set of one or more instructions which when processed causes the set of event data to be displayed on a graphical user interface in the manner specified by the second data and in response to the request generating and providing the set of instructions to the client.

According to one embodiment the events repository may store event data in an organized data structure. One such data structure is a database and the event data reflecting real world events is stored in the form of event records. In one embodiment event records within the events repository may be identified by an event ID and event author an event venue and a time. The event author information identifies the user that created the event record information. Also the event venue identifies the physical location of the event while the event time identifies the calendar clock time when the event will occur. Other information that may be associated with an event record includes a title and description of the event. Additionally event records may indicate whether a client has republishing rights to an event and whether the client has selected the event record to be of interest to the client or included in a client s watch list. Note that while event data is described as being stored in the form of event records in an events repository the invention is not limited to such an embodiment and event data may be stored in any data structure and organized in any appropriate matter.

In order to access information within the events repository operations are performed against the events repository by an event application. The event application is controlled by end users through a graphical user interface known as the event application interface which may be accessed locally or via the Internet.

Referring now to a block diagram illustrating a Communications system for generating event data display code is shown in accordance with one embodiment. Communications system includes an Events Repository an Event Application an Event Application Interface a Client and a Web Server . The components of Communications system exchange data through one or more communication connections. A communication connection may be implemented by any medium or mechanism that provides for the exchange of data between the components of Communications system . Examples of a communications connection include without limitation a network such as a Local Area Network LAN Wide Area Network WAN Ethernet or the Internet or one or more terrestrial satellite or wireless links. A communication connection may be a secure or unsecured communications link depending upon a particular implementation.

Events Repository is used to store event data reflecting one or more real world events. According to one embodiment the event data is stored in a structured data object such as a database. In this particular embodiment the event data is stored as event records within the Events Repository and event records reflect real world events. Real world events may be events that take place at a geographic location at a calendar based time. For instance examples of real world events include without limitation concert shows birthday parties dinner parties meetings and other similar events.

Event Application generally represents an application that is designed to perform operations on the Events Repository . Example operations that the Event Application may perform on Event Repository include querying data according to user specified filters and inserting data into the Events Repository in the form of event records. Additionally Event Application formats data received from the Events Repository for display to a user using the Event Application Interface . Through the Event Application Interface a user may interact with the Event Application to perform a number of other tasks as outlines in further detail herein.

Event Application Interface provides an interface for allowing users to access view and modify information located within the Events Repository . The Event Application Interface allows users to control the Event Application through a graphical user interface GUI environment. According to one embodiment the Event Application Interface is implemented as a web application that may be accessed via the Internet or World Wide Web Web . In other embodiments the Event Application Interface may be located locally with the same system as Event Application or Events Repository .

In another embodiment the Event Application Interface allows users to request event data display code. Event data display code is used by users to display event data on user s own web pages or applications that are separate from the Event Application and Event Application Interface . For instance using the Event Application Interface a user of Client can interact with Event Application and select a particular set of events that the user would like to republish using an application separate from the Event Application . Specifically a user of Client may desire to re publish event data to users via Web Server . In order to do so a user of Client may request event data display code so that the display code may be inserted into client applications. Examples of such applications include without limitation web pages hosted by a Web Server or other client based applications. Instead of requiring end users to directly interact with Event Application to obtain the event data users may simply interact with Web Server and view a tailored set of event data as selected by Client .

In one embodiment when a user would like to republish event data on the user s web page or application the user may invoke a web browser and request to access the event application interface. The event application interface is provided to the web browser and when executed cause a graphical user interface to be presented to the user using the browser. Through the event application interface a user requests a set of instructions which may be used to republish the event data. The set of instructions are referred to herein as the event data display code. Using the event application interface a client can select a set of events display characteristics and other parameters causing event data display code to be generated and used to display event data on the user s web page or application.

Generally according to one embodiment clients are allowed to republish events from the Events Repository to which a user of Client has republication rights for. In order to determine which event records a user has republication rights for the event application interface can request user identification information. When Client invokes the event application interface for example through a web browser the event application interface can request that the user enter identifying information such as a user name and password. Once the event application interface verifies the user s identity the event application can communicate with the event data repository to determine which event records the user is authorized to republish to third parties.

Thus after verifying the identity of the user of Client Event Application can allow Client to request event data display code using Event Application Interface . is a flow diagram that depicts a process for generating event data display code in accordance with one embodiment. At step data is received that identifies the particular set of event data a user of Client wishes to republish. The data identifying the particular set of event data is used to create a request command which when submitted to the Events Repository causes the Events Repository to retrieve the particular set of event data. While Event Application is generating the event data display code the request command is embedded into the event data display code as described in further detail herein.

Referring now to a graphical user interface screen for selecting a set of event data for republication is shown in accordance with one embodiment. Screen includes an event selection area where a user of Client can select a set of event data that the Client wishes to republish. According to one embodiment a set of event data is defined by one or more conditions which when satisfied by an event record cause the event record to become part of the set. For instance one such condition may be that the event record must be an event that Client has selected to be part of a watch list. According to one embodiment a watch list includes events that the user of Client has selected to watch or is otherwise interested in. Thus event records which appear in the watch list of the user of Client may be identified by information within the Events Repository . For instance a particular field of an event record may indicate if the event record is part of the client s watch list. Thus when selecting a set of event data for republication the user of Client may select all event records which are part of the user s watch list.

In another embodiment a user may alternatively select all events that are included in a particular user group. Event Application may define groups of users or user groups. User groups define a set of users within the Event Application with a common interest or attribute. For example one user group may be directed towards users in one geographic location while another user group may be directed towards users with a particular taste in music. At screen a user of Client can select the particular group that Client belongs to causing all events within that user group to be included in the set of event records for republication.

In other embodiments a user of Client may choose to republish all events that the user is authorized to republish. Republishing rights may be granted to a user for a particular event if one or more conditions are satisfied. For instance republishing rights for an event record may be granted to a user if the user is the author of the event. Further republishing rights may be granted to a user if the author of the event has designated that the user may view and or republish the author s event. Whether a user has republishing rights to an event may be verified by examining the event record within the Events Repository . According to one embodiment event records may contain a field indicating weather a particular user is allowed to view and or republish the event record.

Once a user of Client has selected a set of event records for republication the user can additionally select display characteristics for presenting the selected event records at a graphical user interface. Still referring to graphical user interface screen allows a user of Client to select display characteristics for republishing event data. Display characteristics may include but are not limited to the style color and size of a display area for displaying republished event data. As shown in a user of Client may choose from a variety of display templates for displaying event data or alternatively may choose not to have any display style associated with the event data display code.

Referring now to a graphical user interface screen for selecting additional display characteristics for republishing event data is shown in accordance with one embodiment. Other example display characteristics Client may select include the number of events that the client would like to republish the types of information the client would like to display when republishing the event data and any data formats for displaying the event data. In other embodiments a user of Client may select any number of display characteristics for customizing the display of the event data during republication. Once a user of Client has selected the particular display characteristics for republishing event data using the event application interface the client requests that the event data display code be generated and provided back to Client .

Thus referring back to at step Event Application receives data identifying the display characteristics for republishing event data as selected by a user of Client . Next at step Event Application receives the request from Client to generate event data display code. In response at step Event Application generates and provides the event data display code back to a user of Client in an appropriate manner.

In one embodiment the event data display code is provided back to a user of Client on a graphical user interface screen of the Event Application Interface . Referring now to a graphical user interface screen providing the event data display code is shown in accordance with one embodiment. contains a dialogue box area which a user of Client can interact with to perform a copy and paste operation to retrieve the code and insert the code into an application of the client s choice. For example Client may copy the code from the dialogue box and then using a web design application insert the code into a desired location of a web page or client application.

In other embodiments the event data display code may be provided back to a user of Client in any appropriate manner such as through an e mail application or any other appropriate method of communicating the event data display code to the user.

Further in another embodiment the event data display code may be generated and provided to an entity other than a user of Client . For instance the event data display code may be provided to a Web Server for entry into one or more web page instructions. Web page instructions referred to hereinafter as web page code when processed causes graphical user interface screens to be displayed to users utilizing web browser applications. Additionally in another embodiment the event data display code may be provided to a user of Client through any other appropriate means.

Referring to event data display code is shown in accordance with one embodiment. Event data display code may be represented by a set of instructions which when processed by an application such as a web browser creates a visual representation of the event data which the Client wishes to republish. According to an embodiment the event data display code is in the Javascript language. Javascript is used to embed commands into the more common web language known as the Hypertext Transfer Markup Language HTML . In other embodiments the event data display code may be provided in any other language for executing instructions. Other languages that the event data display code may be in include but are not limited to Flash and ActiveX.

Once a user of Client has submitted a request for the event data display code the Event Application receives the request and generates the event data display code in accordance with the client s specifications. For instance Event Application generates event data display code which includes a a request for event records that satisfy the client s criteria b display characteristics such as the color size and of the display area c the event record fields to include in the display. Note that the invention is not limited to the aforementioned characteristics and clients may select any number of different characteristics to be used in generating the event data display code.

Thus a user of Client may request event data display code to be generated with certain characteristics from the Event Application and in response receive the event data display code as requested. In this manner a user of Client need not take the time and effort to develop the event data display code. When the event data display code is processed by applications event records which satisfy the conditions specified by the user be displayed on a graphical user interface in the manner specified by the user. According to one embodiment the event data display code is a set of one or more instructions which when executed cause the selected event data to be displayed according to the display characteristics selected by the user of Client .

According to one embodiment when a user of Client has received the event data display code the user may insert the event data display code into a web page or client application located away from the Event Application . Referring now to a system for republishing event data is shown in accordance with one embodiment. The system includes a Client a Web Server a Client a User A an Event Republishing Server and an Events Repository . A user of Client A can insert event data display code into applications such as web page editors. A web page editor may be used to create web pages and other graphical user interface environments. According to one embodiment a user of Client A inserts the event data display code into web page templates within the web page editor causing the event data display code to become part of the web page code representing the entire web page. Accordingly a user of Client A may send the web page code to Web Server for publication. Web Server hosts web pages and applications for publication to other users such as User A of Client . According to one embodiment at least one web page hosted by Web Server contains the event data display code generated by the Event Application .

According to one embodiment User A through Client requests the particular web page containing the event data display code from Web Server . In response Web Server delivers the web page code including the event data display code to Client . The web page code is executed by a web browser application hosted on Client which interprets and executes the web page code for display to User A. Web browser applications are used to parse and interpret web page code in order to create a graphical representation of web pages to end users. For example users browsing the Web may make a request for a web page to be displayed. Users request web pages by connecting to Web Server which contains one or more web pages developed by Client . When the web page code is processed by the web browsers the web page designed by Client will display to User A.

During execution of the web page code the event data display code is also executed by the browser application of Client . According to one embodiment the event data display code is in the form of Javascript commands embedded within Hypertext Transfer Markup Language HTML instructions. Javascript commands may be interpreted and executed by any machine containing the appropriate application such as a Javascript capable web browser. Further in other embodiments the event data display code may be supplied as Flash actionscript code representing a Flash movie or dynamic image. Alternatively the event data display code may be in any appropriate format. Note that in other embodiments the code may be processed in many different manners.

When the event data display code is executed a request for the particular set of event data is sent from Client to Event Republishing Server . According to one embodiment as described above the request for the particular set of event data may be embedded within the event data display code. When the event data display code is executed a request command is executed and sent to the Event Republishing Server . In response Event Republishing Server receives the request and performs one or more operations on Events Repository . Events Repository responds to Event Republishing Server with event data and the event data is forwarded to Client through Event Republishing Server . In response to the request Event Republishing Server populates the event display area of the event data with the event records retrieved from the request.

Referring now to a diagram illustrating the communication flow for processing event data display code is shown in accordance with one embodiment. At step User A of Client requests content from Web Server . According to one embodiment the content is a web page provided by Web Server and User A requests the web page via the Internet. In response to the request at step Web Server responds by providing Client with the requested content or web page. In one embodiment the web page requested by the user includes event data display code. On the user s device an application such as a web browser processes the web page code including the event data display code in order to display the web page to the user on a graphical user interface.

At step when the event data display code is processed by the browser application a request to retrieve event data is sent from the user s application to the Event Republishing Server . The Event Republishing Server is responsible for authenticating the request and querying the Events Repository for the appropriate event records. According to one embodiment the request for event data embedded within the event data display code is in a format not native to the Events Repository . Thus Event Republishing Server receives the non native request interprets the request and generates a query that is in a format native to the Events Repository . At step the Event Republishing Server submits the query to the Events Repository and at step the Events Repository responds with any event records that have satisfied the query.

The Event Republishing Server at step forwards the appropriate event records to the browser application on Client . According to one embodiment the Event Republishing Server is responsible for ensuring that the event records that satisfy conditions of the user s request are displayed with the correct characteristics. Thus the Event Republishing Server can interpret the event data display code and cause the event records to be displayed in the correct format. As such the generation of event data display code and the republishing of event data away from an Event Application is enabled.

Computer system may be coupled via bus to a display such as a cathode ray tube CRT for displaying information to a computer user. An input device including alphanumeric and other keys is coupled to bus for communicating information and command selections to processor . Another type of user input device is cursor control such as a mouse a trackball or cursor direction keys for communicating direction information and command selections to processor and for controlling cursor movement on display . This input device typically has two degrees of freedom in two axes a first axis e.g. x and a second axis e.g. y that allows the device to specify positions in a plane.

The invention is related to the use of computer system for implementing the techniques described herein. According to one embodiment of the invention those techniques are performed by computer system in response to processor executing one or more sequences of one or more instructions contained in main memory . Such instructions may be read into main memory from another computer readable medium such as storage device . Execution of the sequences of instructions contained in main memory causes processor to perform the process steps described herein. In alternative embodiments hard wired circuitry may be used in place of or in combination with software instructions to implement the invention. Thus embodiments of the invention are not limited to any specific combination of hardware circuitry and software.

The term computer readable medium as used herein refers to any medium that participates in providing data that causes a computer to operate in a specific fashion. In an embodiment implemented using computer system various computer readable media are involved for example in providing instructions to processor for execution. Such a medium may take many forms including but not limited to non volatile media and volatile media. Non volatile media includes for example optical or magnetic disks such as storage device . Volatile media includes dynamic memory such as main memory .

Common forms of computer readable media include for example a floppy disk a flexible disk hard disk magnetic tape or any other magnetic medium a CD ROM any other optical medium a RAM a PROM and EPROM a FLASH EPROM any other memory chip or cartridge or any other medium from which a computer can read.

Various forms of computer readable media may be involved in carrying instructions to processor for execution. For example the instructions may initially be carried on a magnetic disk of a remote computer. The remote computer can load the instructions into its dynamic memory and send the instructions over a telephone line using a modem. A modem local to computer system can receive the data on the telephone line and use an infra red transmitter to convert the data to an infra red signal. An infra red detector can receive the data carried in the infra red signal and appropriate circuitry can place the data on bus . Bus carries the data to main memory from which processor retrieves and executes the instructions. The instructions received by main memory may optionally be stored on storage device either before or after execution by processor .

Computer system also includes a communication interface coupled to bus . Communication interface provides a two way data communication coupling to a network link that is connected to a local network . For example communication interface may be an integrated services digital network ISDN card or a modem to provide a data communication connection to a corresponding type of telephone line. As another example communication interface may be a local area network LAN card to provide a data communication connection to a compatible LAN. Wireless links may also be implemented. In any such implementation communication interface sends and receives electrical electromagnetic or optical signals that carry digital data streams representing various types of information.

Network link typically provides data communication through one or more networks to other data devices. For example network link may provide a connection through local network to a host computer or to data equipment operated by an Internet Service Provider ISP . ISP in turn provides data communication services through the world wide packet data communication network now commonly referred to as the Internet . Local network and Internet both use electrical electromagnetic or optical signals that carry digital data streams.

Computer system can send messages and receive data including program code through the network s network link and communication interface . In the Internet example a server might transmit a requested code for an application program through Internet ISP local network and communication interface .

The received code may be executed by processor as it is received and or stored in storage device or other non volatile storage for later execution.

In the foregoing specification embodiments of the invention have been described with reference to numerous specific details that may vary from implementation to implementation. Thus the sole and exclusive indicator of what is the invention and is intended by the applicants to be the invention is the set of claims that issue from this application in the specific form in which such claims issue including any subsequent correction. Any definitions expressly set forth herein for terms contained in such claims shall govern the meaning of such terms as used in the claims. Hence no limitation element property feature advantage or attribute that is not expressly recited in a claim should limit the scope of such claim in any way. The specification and drawings are accordingly to be regarded in an illustrative rather than a restrictive sense.

