---

title: Modeling directed scale-free object relationships
abstract: Systems and methods for generating models of directed scale-free object relationships are described. In one aspect, a sequence of random numbers is generated. Individual ones of these random numbers are then selected over time to generate the directed scale-free object relationships as a graph based on sequences of in-degrees and out-degrees.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07647215&OS=07647215&RS=07647215
owner: Microsoft Corporation
number: 07647215
owner_city: Redmond
owner_country: US
publication_date: 20061208
---
This application is a continuation of U.S. patent application Ser. No. 10 421 385 filed on Apr. 23 2003 entitled MODELING DIRECTED SCALE FREE OBJECT RELATIONSHIPS which claims priority to U.S. Patent Application Ser. No. 60 463 792 filed on Apr. 18 2003 entitled GENERATING MODELS FOR DIRECTED SCALE FREE INTER OBJECT RELATIONSHIPS . This application is also related to U.S. patent application Ser. No. 10 603 034 filed on Jun. 24 2003 entitled NEWS GROUP CLUSTERING BASED ON CROSS POST GRAPH . The entireties of the aforementioned applications are incorporated herein by reference.

The invention pertains to generating models for growth and distribution of directed scale free object relationships.

Many new processes for generating distributions of random graphs have been introduced and analyzed inspired by certain common features observed in many large scale real world graphs such as the web graph whose vertices are web pages with a directed edge for each hyperlink between two web pages. For an overview see the survey papers 2 and 15 of the Appendix. Other graphs modeled are the internet graph 18 movie actor 28 and scientific 25 collaboration graphs cellular networks 21 and so on.

In addition to the small world phenomenon of logarithmic diameter investigated originally in the context of other networks by Strogatz and Watts 28 one of the main observations is that many of these large real world graphs are scale free see references 5 7 24 of the Appendix in that the distribution of vertex degrees follows a power law rather than the Poisson distribution of the classical random graph models G n p and G n M 16 17 191 see also 9 . Many new graph generators have been suggested to try to model such scale free properties and other features such as small diameter and clustering of real world events phenomena and systems that exhibit dynamically developing object relationships such as that presented by the Worldh aWide Web WWW . Unfortlunately such existing generators produce models that are either completely undirected or at most semi or uni directional i.e. either in degrees or out degrees are treated but not both simultaneously and or have a statically predetermined degree distribution.

In light of this existing techniques for generating graphs do not provide realistic treatments of dynamically generated scale free graphs with directed object relationships i.e. link s from one object to another that develop in a way depending on both links out of and into an object. As such conventional generation techniques do not adequately represent specific or fully modeled simulations of scale free directed object relationships that may exist in nature and or other dynamic environments such as the WWW.

In view of these limitations systems and methods for generating models of directed scale free graphs or dynamic communities of relationships e.g. network topologies are greatly desired. Such generators could be used e.g. to generate sample directed network topologies on which directed internet routing protocols are tested or to generate sample web graphs on which search algorithms are tested.

Systems and methods for generating models of directed scale free object relationships are described. In one aspect a sequence of random numbers is generated. Individual ones of these random numbers are then selected over time to generate the directed scale free object relationships as a graph based on sequences of in degrees and out degrees.

The following systems and methods generate directed scale free modeling of object relationships. This is accomplished through the simultaneous treatment of both in degrees and out degrees bidirectional to provide a very natural model for generating graphs with power law degree distributions. Depending on the characteristics of the entity or the abstraction being modeled power laws can be different for in degrees and out degrees. Such modeling is consistent with power laws that have been observed for example in nature and in technological communities e.g. directed hyperlinks among web pages on the WWW connections among autonomous systems on the AS internet connections among routers on the internet etc. .

Turning to the drawings wherein like reference numerals refer to like elements the invention is illustrated as being implemented in a suitable computing environment. Although not required the invention is described in the general context of computer executable instructions such as program modules being executed by a personal computer. Program modules generally include routines programs objects components data structures etc. that perform particular tasks or implement particular abstract data types.

The methods and systems described herein are operational with numerous other general purpose or special purpose computing system environments or configurations. Examples of well known computing systems environments and or configurations that may be suitable include but are not limited to hand held devices symmetrical multi processor SMP systems microprocessor based or programmable consumer electronics network PCs minicomputers mainframe computers portable communication devices and the like. The invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules may be located in both local and remote memory storage devices.

As shown in computing environment includes a general purpose computing device in the form of a computer . Computer includes one or more processors a system memory and a bus that couples various system components including system memory to processor . Bus represents one or more of any of several types of bus structures including a memory bus or memory controller a peripheral bus an accelerated graphics port and a processor or local bus using any of a variety of bus architectures. By way of example and not limitation such architectures include Industry Standard Architecture ISA bus Micro Channel Architecture MCA bus Enhanced ISA EISA bus Video Electronics Standards Association VESA local bus and Peripheral Component Interconnects PCI bus also known as Mezzanine bus.

Computer typically includes a variety of computer readable media. Such media may be any available media that is accessible by computer and it includes both volatile and non volatile media removable and non removable media. In system memory includes computer readable media in the form of volatile memory such as random access memory RAM and or non volatile memory such as read only memory ROM . A basic input output system BIOS containing the basic routines that help to transfer information between elements within computer such as during start up is stored in ROM. RAM typically contains data and or program modules that are immediately accessible to and or presently being operated on by processor s .

Computer may further include other removable non removable volatile non volatile computer storage media. For example illustrates a hard disk drive for reading from and writing to a non removable non volatile magnetic media not shown and typically called a hard drive a magnetic disk drive for reading from and writing to a removable non volatile magnetic disk e.g. a floppy disk and an optical disk drive for reading from or writing to a removable non volatile optical disk such as a CD ROM R RW DVD ROM R RW R RAM or other optical media. Hard disk drive magnetic disk drive and optical disk drive are each connected to bus by one or more interfaces .

The drives and associated computer readable media provide nonvolatile storage of computer readable instructions data structures program modules and other data for computer . Although the exemplary environment described herein employs a hard disk a removable magnetic disk and a removable optical disk it should be appreciated by those skilled in the art that other types of computer readable media which can store data that is accessible by a computer such as magnetic cassettes flash memory cards digital video disks random access memories RAMs read only memories ROM and the like may also be used in the exemplary operating environment.

A number of program modules may be stored on the hard disk magnetic disk optical disk ROM or RAM including e.g. an operating system OS to provide a runtime environment one or more application programs other program modules and program data .

A user may provide commands and information into computer through input devices such as keyboard and pointing device such as a mouse . Other input devices not shown may include a microphone joystick game pad satellite dish serial port scanner camera etc. These and other input devices are connected to the processing unit through a user input interface that is coupled to bus but may be connected by other interface and bus structures such as a parallel port game port or a universal serial bus USB .

A monitor or other type of display device is also connected to bus via an interface such as a video adapter . In addition to monitor personal computers typically include other peripheral output devices not shown such as speakers and printers which may be connected through output peripheral interface .

Computer may operate in a networked environment using logical connections to one or more remote computers such as a remote computer . Remote computer may include many or all of the elements and features described herein relative to computer . Logical connections shown in are a local area network LAN and a general wide area network WAN . Such networking environments are commonplace in offices enterprise wide computer networks intranets and the Internet.

When used in a LAN networking enviromnent computer is connected to LAN via network interface or adapter . When used in a WAN networking environment the computer typically includes a modem or other means for establishing communications over WAN . Modem which may be internal or external may be connected to system bus via the user input interface or other appropriate mechanism.

Depicted in is a specific implementation of a WAN via the Internet. Here computer employs modem to establish communications with at least one remote computer via the Internet .

In a networked environment program modules depicted relative to computer or portions thereof may be stored in a remote memory storage device. Thus e.g. as depicted in remote application programs may reside on a memory device of remote computer . It will be appreciated that the network connections shown and described are exemplary and other means of establishing a communications link between the computers may be used.

Graph is represented as a matrix wherein each horizontal row i and vertical column j of the matrix corresponds to a respective vertex or node i.e. nodethrough node . Thus i 1 . . . N and j 1 . . . N. Hereinafter the terms node and nodes are often used interchangeably with the terms vertex and vertices . To grow graph from some number of nodes to a greater number of nodes the network generating module adds a node to the graph . This means that a row and a column representing the new node are added to the graph . The i j element E i j of the graph represents the number of directed edges or connections from node i to node j modeling e.g. the number of hyperlinks from web page i to web page j or a directed transfer of E i j objects or characteristics from entity i to entity j such as the transfer of money and goods between a merchant and a buyer and or the like.

In the representation we have adopted the convention that edge direction is evaluated from the row node to the column node.

We now describe the edge E i j values of graph in view of network of which shows the exemplary network of directed object relationships. In this exemplary network objects and have at least one edge i.e. one or more edges through N to from another object. For example object shows a looping edge that indicates that the object has a relationship to itself for example a web page having a hyperlink to a point inside itself .

Referring to such a looping edge is also represented in graph at the edge value that corresponds to the intersection between row Nodeand column Node i.e. E 1 . This indicates that Nodehas a single relationship to itself. This type of edge is called a loop .

In this implementation the module may generate self loops in the graph . However the generating module can be configured not to generate loops to model systems without self loops.

In another example to represent edges of with a directed scale free graph of note that object of has three 3 edges through to node . In particular the intersection of row Nodewith column Node i.e. E 1 2 shows a value of 3 which is representative of the relationship between object of to object . This type of edge is called a multiple edge which in general refers to two or more edges from a particular object Nodeto a different object Node. In this implementation the module may generate multiple edges in the graph . However in another implementation the generating module can be configured not to generate multiple edges to model systems in which there are only single edges.

Although network of and graph of respectively represent map only 3 nodes objects it can be appreciated that the complexity and number of objects represented mapped by the exemplary network and graph are exemplary and could represent map any number of objects of any complexity.

We now describe the algorithms used by the generating module to generate directed scale free object relationships in further detail.

Referring to the generating module introduces random and probabilistic aspects during graph generation to simulate dynamically created objects e.g. web pages etc. and relationships between them e.g. hyperlinks etc. that is are often observed for example in technological e.g. the web cultural natural and or the like environments. Such a random aspect is obtained via iterative generating module requests over time t for respective random number s from the random number generating module RNG . The RNG can be a standalone module or a service provided by a computer program module such as the OS .

Some of the random numbers will be required to lie between 0 zero and 1 one . For each of these random numbers the network generating module uses the random number to determine one of three possibilities labeled A B and C depending on whether the random number lies between 0 zero and and or and respectively. The parameters and are non negative real numbers that when added together equal one 1 i.e. 1. These parameters stored as respective portions of the configuration data . The parameters and can be selected determined in different manners for example manually preconfigured by a system administrator programmatically configured in view of environmental measurements etc. This allows for considerable flexibility to customize the model generating process to simulate structural and object relationships of various types of measured environments.

When the generating module maps the random number to the range 0 the generating module augments the graph by adding a vertex and an edge from the new vertex into an existing old vertex. When the generating module maps the random number to the range the generating module augments the graph by connecting two old vertices i.e. a vertex is not added but one of the E i j values increases by one . When the generating module maps the random number to the range the generating module augments the graph by connecting an old vertex to a newly generated vertex. Additionally during graph generation the module applies configurable constants and or to introduce in degree and out degree shifts to the graph.

The degree shift or is a non negative parameter added to the in degree or out degree of a vertex respectively. The degree shift is added before applying any other rules which are used to choose random vertices.

In light of the above let Gbe any fixed initial directed graph for example a single vertex i.e. Node without edges i.e. E 0 and let tbe the number of edges of G. The generating module always adds one edge per iteration and sets G t G so at time t the graph G t has exactly t edges and a random number n t of vertices. For purposes of discussion number s of edges and vertices as well as other intermediate parameters and calculations are represented by respective portions of other data .

In the operation of the generating module to choose a vertex v of G t according to d means to choose v so that Pr v v is proportional to d v i.e. so that Pr v v d vi t n t . To choose v according to d means to choose v so that Pr v v d v t n t . Here d v and d v are the out degree of vand the in degree of v respectively measured in the graph G t .

Although the generating module makes no additional assumptions about the parameters the behavior of the resulting graph is non trivial only if certain settings of the parameters are avoided. In particular the following parameter values can be avoided to exclude trivialities 

In one implementation when graph represents a web graph is set to 0. The motivation is that vertices added under rule C correspond to web pages which purely provide content such pages do not change are born without out links and remain without out links. In this implementation vertices generated added under rule A correspond to usual pages to which links may be added later. While mathematically it may seem natural to take 0 in addition to 0 doing so would provide a model in which every page not in Ghas either no in links or no out links i.e. a trivial model.

A non zero value of corresponds to insisting that a page is not considered part of the web until something points to it for example a search engine. This allows the generating module to consider edges from search engines independently separately from the rest of the graph since they are typically considered to be edges of a different nature for purposes of implementing a search algorithm for example than other types of edges. For the same reason does not need to be an integer. The parameter is included to provide symmetry to the model with respect to reversing the directions of edges swapping with and with and to further adapt the model to contexts other than that of the webgraph.

In one implementation taking 0 and 1 the generating module includes a precise version of the special case of m 1 of the Barab si Albert model 5 wherein m represents the number of new edges added for each new vertex A more general model than that so far described here with additional parameters can be generated by adding m edges for each new vertex or as in 14 by adding a random number of new edges with a certain distribution for each new vertex. In implementing the description here the main effect of the Barab si Albert parameter m namely varying the overall average degree is achieved by varying .

Another more general model than that so far described here again with additional parameters can be generated to describe systems in which different vertices have different fitnesses. For example some web pages may be considered more fit or attractive than others and may get more connections per unit time even if their degrees are not as high as those of less fit web pages. To model this whenever the generating module creates a new vertex v the random number generator will independently generate two random numbers v and v from some specified distributions Dand D respectively independently of each other and of all earlier choices. Then steps A B and C of 0041 will be modified as follows In step A the existing vertex w will be chosen according to w d so that Pr w w w d w . In step B the existing vertex v will be chosen according to v d and the existing vertex w will be chosen according to w d so that Pr v v w w v w d vi d w . In step C the existing vertex w will be chosen according to w d so that Pr w w w d w .

The described systems and methods generate directed scale free object relationships. Although the systems and methods have been described in language specific to structural features and methodological operations the subject matter as defined in the appended claims is not necessarily limited to the specific features or operations described. Rather the specific features and operations are disclosed as exemplary forms of implementing the claimed subject matter. For instance the described systems and methods besides being applicable to generation of a directed scale free model of the web a web graph or some portion thereof can also used to generate customized models of many other naturally occurring man made and otherwise physical and abstract object relationships.

Note that the in degree distribution becomes trivial if 0 all vertices not in Gwill have in degree zero or if 1 all vertices not in Gwill have in degree 1 while for 0 or 1 the out degree distribution becomes trivial. We will therefore exclude these cases in the following theorem.

In the statement above the o t notation refers to t with i fixed while a i b i means a i b i 1 as i .

Proof. Note first that if the initial graph has nvertices then n t is equal to nplus a Binomial distribution with mean t t . It follows from the Chernoff bound that there is a positive constant c such that for all sufficiently large t we have log . 1 In particular the probability above is o t as t .

We consider how the vector x t x t . . . giving for each i the number of vertices of in degree i in the graph G t changes as t increases by 1. Let G t be given. Then with probability a new vertex with in degree 0 is created at the next step and with probability a new vertex with in degree 1 is created. More specifically with probability the in degree of an old vertex is increased. In going from G t to G t 1 from the preferential attachment rule given that we perform operation A or B the probability that a particular vertex of in degree i has its in degree increased is exactly i t n t . Since the chance that we perform A or B is and since G t has exactly x t vertices of in degree i the chance that one of these becomes a vertex of in degree i 1 in G t 1 is exactly

Let i be fixed. We wish to take the expectation of both sides of 2 . The only problem is with n t in the second term on the right hand side. For this note that from a very weak form of 1 with probability 1 o t we have n t t o t . Now whatever value n t takes we have

To prove 5 we must show exactly that t o t for each i. We do this by induction on i suppose that i 0 and t o t noting that t 0 so the induction starts. Then t o t and from 6 one can check for example by solving this equation explicitly for t in terms of t that t o t . This completes the proof of 5 .

Next we show that with probability 1 we have 7 as in the statement of the theorem. To do this we show concentration of x t around its expectation using as usual the Azurna Hoeffding inequality 4 20 see also 10 . This can be stated in the following form if X is a random variable determined by a sequence of n choices and changing one choice changes the value of X by at most then

Given A to determine G t it remains to choose at each step which old vertex for A or C or which old vertices for B are involved. There are at most 2t old vertex choices to make. Changing one of these choices from v to v say only affects the degrees of v and v in the final graph. To preserve proportional attachment at later stages we must redistribute later edges among v and v suitably but no other vertex is affected. Thus x t changes by at most 2 and applying 8 we have 2. Together with 9 this implies that 7 holds with probability one proving the first part of the theorem. Note that with a little more care we can probably replace 7 with x t pt O tlog t . Certainly our argument gives an error bound of this form in 5 the weaker bound stated resulted from replacing tlog t in 1 by o t to simplify the equations. However the technical details leading to 9 may become complicated if we aim for such a tight error bound. 

For out degrees the calculation is exactly the same after interchanging the roles of and and of and . Under this interchange cbecomes c so the exponent in the power law for out degrees is x 1 1 c as claimed.

We now turn to more detailed results considering in and out degree at the same time. Let n t be the number of vertices of G t with in degree i and out degree j.

Note that Theorem 2 makes statements about the limiting behaviour of the fas one of i and j tends to infinity with the other fixed there is no statement about the behaviour as i and j tend to infinity together in some way.

The proof of Theorem 2 follows the same lines as that of Theorem 1 but involves considerably more calculation and is thus given in Appendix B. The key difference is that instead of 10 we obtain a two dimensional recurrence relation 13 whose solution is much more complicated.

Before discussing the application of Theorems 1 and 2 to the web graph note that if 0 as we shall assume when modelling the web graph vertices born with out degree 0 always have out degree 0. Such vertices exist only if 0. Thus 0 is exactly the condition needed for the graph to contain vertices with non zero out degree which were born with out degree 0. It turns out that when such vertices exist they dominate the behaviour of ffor j 0 fixed and i . A similar comment applies to with in and out degrees interchanged. If 0 then every vertex not in Gwill have either in or out degree 0.

Note also for completeness that if 0 then 11 holds for j 0 also. If 0 then f 0 for all i. If 0 but 0 then among vertices with out degree 0 those born at a type C step the evolution of in degree is the same as among all vertices with non zero out degree taken together. It follows from Theorem 1 that in this case f Ci.

An interesting question is for which parameters if any our model reproduces the observed power laws for certain real world graphs in particular the web graph.

For this section we take 0 since this models web graphs in which there are content only pages. We assume that 0 as otherwise there will only be finitely many vertices the initial ones with non zero out degree. As before let c 1 and note that now c 1 . We have shown that the power law exponents are 1 1 for in degree overall or in degree with out degree fixed as 0 1 1 for out degree overall and that if 0 we have exponents 1 1 for in degree among vertices with fixed out degree j 1 and 1 1 for out degree among vertices with fixed in degree i 0.

For the web graph recently measured values of the first two exponents 13 are X 2.1 and X 2.7. Earlier measurements in 3 and 23 gave the same value for Xbut smaller values for X. Our model gives these exponents if and only if c 0.59 so 0.41 and c 1 1.1 so

As a test of the model one could measure the exponents X and X which may of course actually vary when the fixed out in degree is varied . We obtain 2.75 for X and anything in the interval 2.7 3.06 for X .

In this appendix we give the proof of Theorem 2. Arguing as in the proof of Theorem 1 we see that for each i and j we have n t t f where the fsatisfy

The recurrence relation 13 is of the form 1 1 for a linear operator L on the two dimensional array of coefficients f. It is clear from the form of L that there is a unique solution to this equation. By linearity we can write where L g 1 14 and L h 1. 15 

Note that from the boundary condition we have g 0 for all i. Thus for j 1 the second term on the right of 16 disappears and we see skipping the details of the algebra that

Having said that we do not need the Afor the power law we include their calculation for completeness since it is straightforward. Skipping the rather unpleasant derivation we claim that

If 0 then h 0 is zero for all j 0 so let us now assume 0. This time the boundary condition implies that h 0 for all j. For j 1 we thus have from 22 that

The second part of Theorem 2 the proof of 12 follows by interchanging in and out degrees and and and .

