---

title: Method and apparatus for creating an offline service-oriented architecture based application from an online service-oriented architecture based application
abstract: Disclosed is a method and apparatus for automatically creating an offline enterprise application from an online enterprise application by importing the data from the online enterprise application to an offline system, including importing user interface (UI) metadata, enterprise services repository (ESR) data and application data from the online enterprise application and generating the UI and enterprise services from the imported UI metadata and ESR data respectively. The created offline enterprise application switches automatically between offline mode and online mode.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07908584&OS=07908584&RS=07908584
owner: SAP AG
number: 07908584
owner_city: Walldorf
owner_country: DE
publication_date: 20061103
---
The invention relates to the field of enterprise software in particular to a Service Oriented Architecture SOA .

The characteristics and behavior of an online enterprise application and an offline enterprise application are different. Hence the online enterprise application cannot be used as the offline enterprise application or vice versa as their characteristics and behaviors are different. This brings the need to develop the online enterprise application and the offline enterprise application separately. The drawback of developing the offline enterprise application and the online enterprise application separately is the cost of development and maintenance increases by almost twice or more since two enterprise applications that is the online enterprise application and the offline enterprise application have to be developed to provide the same business functionality. Also the effort to develop separate applications is duplicated as the same enterprise application is developed for two connection modes that is online mode and offline mode.

What is described is a method and system for automatically creating an offline enterprise application from an online enterprise application by importing the data from the online enterprise application to an offline system.

An embodiment involves importing user interface UI metadata enterprise services repository ESR data and application data from the online enterprise application and generating the UI and enterprise services from the imported UI metadata and ESR data respectively. The created offline enterprise application switches automatically between offline mode and online mode.

An enterprise application is developed using enterprise service architecture ESA . An offline enterprise application may be created from an online enterprise application. The creation of the offline enterprise application from the online enterprise application typically involves importing data from the online enterprise application and generating the offline enterprise application based on the imported data.

The enterprise application provides a set of enterprise services such as sales material management financial services logistics services human resource services. The enterprise services are contained in an enterprise server in the enterprise application. A user interface UI that displays the data to a user connects to the enterprise server. The enterprise application can be an offline enterprise application or an online enterprise application. The offline enterprise application has the enterprise server on the same system as where the UI is installed whereas the online enterprise application may have the enterprise server on a system different from that of the system where the UI is installed. Such an enterprise server is known as online enterprise server. The UI connects to the online enterprise server over a communication network. The online enterprise application works in an online mode that is the UI is always connected to the online enterprise server. The offline enterprise application works in an offline mode which means the UI connects to the enterprise server on the same system as the UI. The application logic or the business functionality of both the applications still remains the same. Typically the online enterprise server caters to more than one user that is more than one user can connect to the online enterprise server. The online enterprise server contains the data of all the users connecting to the online enterprise server. The offline enterprise application caters to a limited number of users typically lesser than the number of users than the online enterprise application caters to.

Consider a sales scenario of a large company that sells consumer products like soaps toothpaste beverages etc. to retailers or resellers. The salespersons of the company take the sales orders from the retailers. The salesperson goes to the retailers shops in the designated sales area and takes the sales order in for example a portable computer like a laptop or pocket pc. In this scenario where the salespersons are in the field taking sales orders there is no network connectivity to online enterprise server of the company. Thus the online enterprise application is not suitable. The offline enterprise application is more suitable here as the offline enterprise application does not require network connectivity. The orders can be updated in the enterprise server of the offline enterprise application as the enterprise server is in the same system as the UI. Later in the day the salespersons return to their regional office and connect their portable systems to the online enterprise server of the company over a communication network and update the sales orders in the online enterprise server of the company. The online enterprise server has sales orders from all the salespersons of the company whereas the offline enterprise server on the systems of the salespersons has only the sales orders that correspond to them. Thus the characteristics and behavior of the online enterprise application and the offline enterprise applications are different.

The enterprise application is developed using the ESA which is a blue print of service oriented architecture SOA . SOA supports the design development identification and consumption of standardized software services across an enterprise thereby improving reusability and flexibility of software components. ESA is a blueprint for SOA that more effectively addresses business software needs and is rapidly deployable.

A composition layer allows a model based composition and orchestration of services to enhance business processes. The composition layer allows the development deployment and administration of enterprise service . The composition layer typically provides tools for creating and managing enterprise service and also typically supports the design implementation and execution of applications that use enterprise service such as composite application . The composition layer typically includes an enterprise service repository ESR which is a central repository where enterprise service and business object or software object are modeled and their corresponding metadata stored. The enterprise service is typically a web service that has an enterprise level business meaning. The enterprise service is typically an aggregation of application service or web service of lower or smaller business functionality combined with business logic to support a step of a business process. The enterprise service is typically hosted in an enterprise server. The web service represents a self contained self describing piece of application functionality that can be accessed by other applications. An application service represents services exposed from an application component or component and allows access to a lower or smaller level of functionality of enterprise applications. An application service can either be implemented in proprietary standard or could be implemented in web standard such as extensible markup language XML to become a web service .

Component is typically a modular re usable piece of application software and consists of various entities such as engines utilities and business object or software object . SOA applications are constructed from the component and composite application in the ESA. The business object or software object typically provides a set of functionalities or services such as a core service and a compound service . For example a customer or business partner software object may provide the core service such as obtaining the name address and contact details of a customer. The compound service may operate on multiple software objects . An example of compound service is obtaining a list of customers for a product which may involve obtaining data from the customer software object and a product software object.

The offline enterprise application includes a UI metadata repository that contains metadata of the UI of the application. The UI is generated from the metadata stored in the UI metadata repository . The ESI service layer establishes the connection between the UI and the offline enterprise server . The ESI service layer includes two logical layers namely a client layer and a server layer . The client layer of the ESI service layer has a standard application programming interface API to access the enterprise services provided by the offline enterprise server . The server layer of the ESI service layer hosts the enterprise services provided by the offline enterprise server and exposes a set of interfaces for the hosted enterprise services . The client layer accesses the hosted enterprise services by accessing the interfaces exposed by the server layer . Thus the ESI service layer acts as an interface between the UI and the offline enterprise application server .

The client device includes a UI metadata repository that contains metadata of the UI . The UI is generated from the UI metadata stored in the UI metadata repository . The UI includes pattern based user interfaces which may be developed using frameworks that include Web Dynpro patterns and Visual Composer both provided by SAP AG. JFace a freeware program that is part of the Eclipse platform provided by Eclipse Foundation Inc. which is an open source community. It will be clear to one skilled in the art that the UI may be developed in languages which include Java C and C . The ESI service layer of the client device allows the client device to connect to the online enterprise server .

The ESI service layer includes two logical layers namely a client layer and a server layer . The client layer of the ESI service layer has a standard application programming interface API to access the enterprise services provided by the online enterprise server . The server layer of the ESI service layer hosts the enterprise services provided by the online enterprise server and exposes a set of interfaces for the hosted enterprise services . The client layer accesses the hosted enterprise services by accessing the interfaces exposed by the server layer . Thus the ESI service layer acts as an interface between the client device and the online enterprise server . The online enterprise server supports more than one client i.e. more than one client can connect to the online enterprise server . The online database typically stores large amount of application data. The online database may store application data of more than one client.

The development cost and the effort involved in creating the offline enterprise application can be minimized by typically creating the offline enterprise application automatically from an already developed online enterprise application. is a flow diagram to create the offline enterprise application from the online enterprise application according to an embodiment of the invention. The process of creating the offline enterprise application from the online enterprise application involves importing data from the online enterprise application to an offline system as depicted in step and creating the offline enterprise application from the imported data as depicted in step .

After importing the above data the offline enterprise application is generated from the imported data. Creating the offline enterprise application from the imported data involves generating the offline UI and generating the enterprise services . The offline UI is generated from the imported UI metadata in the offline UI metadata repository . The online UI on the client device may be reused if the offline enterprise server is installed on the same client device . The enterprise services are generated from the imported ESR data in the offline ESR . The offline UI may access the enterprise services in the offline enterprise server by connecting to the offline enterprise server via the ESI service layer in a way similar to the online UI accessing the enterprise services in the online enterprise server via the ESI service layer . The generated enterprise services may be customized by adding any specific application logic if needed for an offline behavior. In an embodiment the whole process of creating the offline enterprise application from the online enterprise application is done automatically for example by the click of a button.

Embodiments of the invention may include various steps as set forth above. The steps may be embodied in machine executable program code which causes a general purpose or special purpose processor to perform certain steps. Alternatively these steps may be performed by specific hardware components that contain hardwired logic for performing the steps or by any combination of programmed computer components and custom hardware components.

Embodiments of the present invention may also be provided as a machine readable medium for storing the machine executable instructions. The machine readable medium may include but is not limited to flash memory optical disks CD ROMs DVD ROMs RAMs EPROMs EEPROMs magnetic or optical cards other type of machine readable media suitable for storing electronic instructions. The present invention may be downloaded as a computer program which may be transferred from a remote computer e.g. a server to a requesting computer e.g. a client by way of a communication link e.g. a modem or network connection .

Throughout the foregoing description for the purposes of explanation numerous specific details were set forth in order to provide a thorough understanding of the invention. It will be apparent however to one skilled in the art that the invention may be practiced without some of these specific details. Accordingly the scope and spirit of the invention should be judged in terms of the claims which follow.

