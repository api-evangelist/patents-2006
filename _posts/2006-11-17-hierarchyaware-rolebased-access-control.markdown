---

title: Hierarchy-aware role-based access control
abstract: A method, apparatus, and system are described herein, in which system resources and operations are assigned to roles in a role-based access control system, and the roles are assigned to a plurality of users. An RBAC system is used to resolve the client request to perform an operation on a resource, the RBAC system using a hierarchy of the plurality of resources to determine if a user is permitted to perform the operation on a parent of the resource in the hierarchy of resources. The RBAC system also determines if a user is permitted to perform the operation on the resource if a user group to which the user belongs to has the required access.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08402514&OS=08402514&RS=08402514
owner: Network Appliance, Inc.
number: 08402514
owner_city: Sunnyvale
owner_country: US
publication_date: 20061117
---
Embodiments of the invention generally relate to storage systems. More particularly an aspect of an embodiment of the invention relates to hierarchy aware role based access control for storage systems.

A common use of communication networks is to provide users access to network resources such as software electronic data or files in storage systems or databases connected to the network. As the number of users on a given network increases there is often a need to control user access rights to resources on the network.

Network environments often involve a variety of network users where the users may be grouped or categorized by a relation or role that the user serves in the environment. For example in an engineering or technical development company environment users of the company s computer network may include company officers directors managers engineers technical support staff office support staff accounting department staff information technology IT department staff contractors consultants temporary employees or other relation based or role based groups or categories of network users. Other companies organizations or network environments may have other relation or role based groups of users. Each user may have a need to access certain network resources in connection with the user s relation or role. In addition it may be desirable to restrict users with certain relations or roles from access to certain resources for example for security privacy or other reasons.

In many conventional businesses or organizations specific personnel perform the function of managing users according to their roles. For example an office administrator may place an order with the organization s IT department to have one or more resources available on the day a new user joins the organization. Individuals from the IT department would then manually set up these resources. Over the course of time the user s relationship or roles within the organization may change for example as the user is transferred promoted demoted or terminated from the organization. As a user s relationship or role with the organization changes the user s needs or rights to access resources may change.

The burden on the office administrator and office personnel to manually administer user access to resources in the above example is typically dependent on the size of the organization the number of users and the rate at which users join or leave the organization or otherwise change roles. To improve efficiency and reduce the burden on the office administrator and office personnel some organizations have used software applications which automate or partially automate some of the tasks relating to managing certain limited types of resources to users.

Because it is typically very inconvenient for a system administrator to provide each user with individual access rights and to achieve a higher grade of data security and integrity in a computer system Role Based Access Control RBAC methods have been developed. RBAC is one form of automatic access control management that has become commercially available. RBAC provides permissions access rights to a user to access certain accounts files web pages etc. available over the network based on a person s role in the organization.

Therein a role is mainly a definition of a job at the lowest level of granularity used in the enterprise or organization. In an RBAC system the system administrator only has to grant or revoke access rights to a role and has to group different subjects under each role. Role based access control RBAC is a system whereby access to resources is defined and controlled based on the role or job function of a user rather than based on organizational group.

A prior art RBAC method includes associating operations to users. Accordingly a role can perform one or more operations. For example a role Adminstrator can perform backup of all files while a role CEO can write to all files. Typically a role is defined as a data structure that includes a two column table with user ids in column and associated operations in the other column. For example for the roles Senior Administrator and Junior Administrator an example two column table is shown in . Thus users with the role Senior Administrator can perform read write and backup operations on all resources in the system while users with the role Junior Administrator can perform only read and write operations on all resources in the system. This prior art method provides very little granularity as the system does not differentiate between resources.

Also modern organizations may be structured along several intersecting lines. For example organizations may be structured according to title presidents vice presidents directors managers supervisors etc. technology electronics mechanical software etc. project product A B C etc. location Irvine N.Y. etc. and the like. A single user may appear in several or all of these organizational structures and thus may be in a somewhat unique overall role as compared to other users in the organization. Because this may require that many users be provisioned uniquely many unique roles would have to be defined in the system to further such managing. Also a large number of similar but not identical job positions in an organization require a large number of roles. This large number of roles causes a high storage requirement and high computing requirements for the security system within the computer system leading to high costs for the operation of the security system. Furthermore it is disadvantageous that the large number of roles makes it very difficult to manage the security system. The system administrator has to create a new role when a person remains in his job position but changes his location or project. Furthermore a role includes the union of all operations and resources which users of that role have in different organization units of the enterprise. This means that the role will not necessarily contain the least permission necessary for the functions of that role.

An example of a computer system that requires that accesses to data by users are controlled is a business enterprise or other organization that manages large volumes of data and may operate multiple storage servers concurrently. These storage servers may be connected to each other through one or more networks. The storage servers and other network components may be managed by one or more network administrators also called administrative users or simply administrators who are responsible for configuring managing and monitoring the storage servers scheduling backups troubleshooting problems with the storage servers performing software upgrades etc. These management tasks can be accomplished by the administrator using a separate management console on the network. The management console is a computer system that runs a storage management system application specifically designed to manage a distributed storage infrastructure. An example of such storage management software is DataFabric Manager DFM which is made by Network Appliance Inc. of Sunnyvale Calif.

Embodiments of the invention include methods and related apparatus for resource level role based access control for storage management. In one embodiment resource identifying information is stored in a role based access database for a network storage system in association with role identifying information for each of a plurality of roles and operation identifying information. The operation identifying information indicates one or more authorized operations for each of the plurality of roles and the resource identifying information identifies specific resources maintained by the network storage system. The role identifying information data indicating one or more authorized operations for at least one of the roles resource specific identifying information and a hierarchy of resources maintained by the network storage system are used to determine whether to allow or deny a request from a network storage client to access a resource maintained by the network storage system.

Other aspects of the invention will be apparent from the accompanying figures and from the detailed description which follows.

In the following description numerous specific details are set forth such as examples of specific data signals named components connections number of memory columns in a group of memory columns etc. in order to provide a thorough understanding of the present invention. It will be apparent however to one of ordinary skill in the art that the present invention may be practiced without these specific details. In other instances well known components or methods have not been described in detail but rather in a block diagram in order to avoid unnecessarily obscuring the present invention. Further specific numeric references such as first driver may be made. However the specific numeric reference should not be interpreted as a literal sequential order but rather interpreted that the first driver is different than a second driver. Thus the specific details set forth are merely exemplary. The specific details may be varied from and still be contemplated to be within the spirit and scope of the present invention. The term coupled is defined as meaning connected either directly to the component or indirectly to the component through another component.

In general the invention includes providing hierarchy aware resource level role based access control RBAC with a high level of granularity. The resource level RBAC system assigns access to resources to roles and then assigns roles to users or user groups. In one embodiment the role data structure includes a three column table having as the three columns user or user groups operation and resources. A knowledge of a hierarchy of resources is used to determine if a user has permission to perform an operation on a particular resource. Further a knowledge of a hierarchy of users is used to determine if a user has permission to perform an operation on a particular resource.

Roles are a set of capabilities that may be assigned to the users or user groups. A capability is an ability to perform an operation on a resource. Accordingly a capability is defined by a resource and an operation. An operation is an action that an application allows a user to do and may include read write back up restore delete etc. A resource is an object on which an operation may be applied. For example an administrative user with the Role Administrator role may create new roles and assign capabilities to them while an administrative user with the Backup Administrator role may only backup data.

According to an embodiment of the invention in the context of storage systems the hierarchy aware RBAC system allows administrators to refer to containers such as filers aggregates and volumes in order to grant access to the objects the containers contain. For example if a role provides access to a volume then any attempt to access a LUN contained within the volume by the role may also succeed. As an example a user can view details of a LUN if the hierarchy aware RBAC system determines that the user has a role containing a capability that grants the user the operation required for viewing the LUN details for any one of the 1 the volume the LUN is in 2 the aggregate the volume is in 3 the appliance the aggregate is in or 4 the group the appliance is in.

Referring again to the three column table shown in if an entry were to be created in the table for each resource the table could have a very large number of entries. Thus to reduce the number of entries in the table a hierarchy of resources is used. Accordingly if an operation is permitted by a user on a resource then a separate entry for a child of the resource is not required. For instance if a user has permission to perform a first operation on an aggregate then a separate entry for a volume of the aggregate is not required. Additionally to reduce the number of entries in the table a hierarchy of users can also be used. Accordingly if an operation is permitted by a user group on a resource then a separate entry for a member of the user group is not required. For instance if a user group A has permission to perform a first operation on an aggregate then a separate entry for user B of user group A to perform the first operation on the aggregate is not required.

A resource level RBAC system has a network server which provides a user interface for configuring roles and assigning roles to users and user groups. Roles specify the operations that may be performed on a specific resource. By specifying which resources a user can perform specified operations on resource level RBAC system can be used to provide a high degree of granularity. For instance access control can be specified to all resources down to each and every LUN. Besides providing greater granularity resource level RBAC also provides greater security. Resource level RBAC allows administrators to configure more secure systems by more tightly limiting the access of users. Further even if a user with a role leaves the organization not much updating needs to be done because a replacement user can be assigned to that role. Also administrators are able to more easily add and remove resources and users and manage roles from a central management point. For instance if a role is granted access to a storage system such as a filer and a new volume is created in the storage system then permission is automatically propagated to the volume.

At block the method assigns operations and system resources to roles. Roles typically acquire capabilities the ability to perform an operation on a resource when either an administrator manually assigns the capability to the role or an inherited role acquires the capability. At block the roles are assigned to users. An administrator can assign a role to a user or a user group using a graphical user interface a command line interface or a network application programming interface. If a role is assigned to a user group users added to the user group are automatically assigned the role. Users are associated with a list of roles including roles assigned to user groups they belong to. Whenever the capabilities of the user are calculated the list of roles is used to make the determination. At block upon receiving a request from a user to perform a particular operation on a resource the method uses a three column table to determine what operations a user s role is allowed to perform on the resource. The table s first column entry may be a user the second column entry is the operation s the role is allowed to perform and the third entry is one or more resources on which that operation can be performed. For example the table may include as user operation resource entries user read volume user write storage system user backup LUN user read aggregate and so on.

At block the method provides access control based on the operations the user s role can perform. As an example say that user userA is in user group Storage Management. The user group Storage Management has been assigned the Software Developer role. The Software Developer role inherits from the Employee role which contains a capability consisting of the Read operation in the global scope resource . Therefore when userA tries to read Read the list of storage systems in say NetApp Bangalore he is granted access.

Thus method uses a resource level role based access control system based on the operations the user is allowed to perform.

Database may be used to store one or more data structures such as tables. According to an embodiment of the invention database may include an objects table to store object types that are managed by the RBAC a table to map users and user groups to roles a table to define the access rights assigned to the roles a table defining the available operations a table to describe the hierarchical relationships between roles a table listing the available roles and a table to describe the hierarchical relationships between resources. In one embodiment a knowledge of the resources is used to generate a hierarchy of resources by storage management system and stored in the database . The information stored in the database is used to determine whether a user has a particular type of access to a resource. Accordingly a user may be granted access based on any of the roles the user has or by any of the roles inherited by the roles that the user has or because the user is a member of a user group with the necessary capabilities. Also the user may be granted access because the user is granted access to perform a requested operation on a parent resource of the resource in question.

The resource hierarchy aware RBAC also includes a cache . The cache is used to store results of queries made to database . Results of other database queries may be stored in the cache since database queries are expensive. In one embodiment when a user logs on storage management system authenticates the user and determines what roles the user has and what capabilities the user has in each role. This information may then be cached in cache . The cache may be invalidated upon detecting change in environment e.g. change in the roles associated with a user.

Also included in storage management system may be interfaces such as command line interfaces CLIs and Application Program Interfaces APIs . The APIs may be used by external applications to make security checks against RBAC and to manage their own RBAC information. In this way even external applications can make avail of a single RBAC system as a uniform and consistent authorization mechanism.

At block the method assigns operations and system resources to roles. The roles are assigned to users to create a three column table that can be used to determine what operations a user s role is allowed to perform on the resource. The table may be stored in database an example of a table is shown in . The table s first column entry is a role the second column entry is the operation s the role is allowed to perform and the third entry is one or more resources on which that operation can be performed. For example the table may include as role operation resource entries role read volume role write storage system role backup LUN role read aggregate and so on.

At block upon receiving a request from a user to perform a particular operation on a resource the method searches the table to look for one or more entries using the three parameters user operation and the resource. If one or more entries are found then the one or entries are checked to determine if the user is allowed to perform the requested operation on the resource. At block the method searches for all the objects directly or indirectly associated with the operation. Objects or resources associated directly with the operation may be listed in the entries of the table as such. Thus the table includes resources on which a role has capability to perform the requested operation. The method also uses a hierarchy of resources to determine other resources on which a role has capability to perform the requested operation.

At blocks information about the result of all the objects directly or indirectly associated with the operation is saved in cache . Accordingly if the next time the user wishes to perform the same operation on the same resource time and computing power is saved. The information about access permission can be readily obtained from the cache without making too many database queries. Queries are performed against the cache. If the cache for a user operation pair does not exist or is out of date then it is generated. At block the requested operation is compared against the object list to determine if the user is allowed to perform the requested operation on the requested resource.

Thus method uses a hierarchy aware RBAC system to determine whether a user has access to perform an operation on a resource. Even if a resource is deleted or changed not much updating of the access table is required. For instance the table need not be updated to indicate that the user has access to perform a particular operation on a newly added volume as long as the table has an entry to indicate that the user has access to perform the particular operation on the aggregate to which the volume belongs.

At block the method assigns operations and system resources to roles. The roles are assigned to users to create a three column table that can be used to determine what operations a user s role is allowed to perform on the resource. The table may be stored in database an example of a table is shown in . A user may also be an individual user or a group of individual users referred to as a user group or a group of user groups. The table s first column entry is role the second column entry is the operation s the role is allowed to perform and the third entry is one or more resources on which that operation can be performed. For example the table may include as role operation resource entries role read volume role write storage system role backup LUN role read aggregate and so on.

At block upon receiving a request from a user to perform a particular operation on a resource the method searches the table to look for one or more entries using the three parameters user operation and the resource. If one or more entries are found then the one or entries are checked to determine if the user is allowed to perform the requested operation on the resource.

At block the method searches for all the objects directly or indirectly associated with the operation. Objects or resources associated directly with the operation may be listed in the entries of the table as such. Thus the table includes resources on which a role has capability to perform the requested operation. The method also uses a hierarchy of resources to determine other resources on which a role has capability to perform the requested operation. In addition a knowledge of the user groups is used to determine which user groups the user belongs to. The knowledge of a user s user group associations is then used to determine all the objects associated with the operation and the user group s and the children of those objects. A series of queries against a set of database tables which encode the parent child relationships between objects in the hierarchy is made. The result of the queries is list of all objects that a user and the user s user groups are allowed to perform a given operation on. A knowledge of the user groups that the user belongs to may be stored in the database .

At block information about the result of all the objects directly or indirectly associated with the user is saved in cache . Accordingly if the next time the user wishes to perform the same operation on the same resource time and computing power is saved as the access permission can be readily obtained from the cache without making too many database queries. At block the requested operation is compared against the object list to determine if the user is allowed to perform the requested operation on the requested resource.

Thus method uses a user hierarchy RBACsystem that uses a hierarchy knowledge of user groups. Even if a user group is deleted or changed not much updating of the access table is required. For instance the table need not be updated to indicate that a new user has access to perform a particular operation on a resource as long as the table has an entry to indicate that the user group to which the new user has been added has access to perform the particular operation on the resource.

A resource such as a storage server may be coupled locally to a separate storage subsystem which includes multiple mass storage devices. Each storage subsystem is managed by its corresponding server . A server receives and responds to various administrative requests read write back up delete restore etc. from the clients directed to a resource . The server may be a storage management console which comprises storage management software such as storage management system to perform the resource hierarchy aware RBAC and other storage management related functions. Integrated with storage management system is the resource level RBAC . Storage management system maintains a hierarchy of resources.

A resource may include appliances aggregates volumes LUNs filers file servers used in a NAS mode virtual filers virtual file servers hosts and so on. A volume is an independent file system with its own RAID groups. The network may be for example a local area network LAN a wide area network WAN or other type of network or a combination of networks. The mass storage devices in storage subsystem may be for example conventional magnetic disks optical disks such as CD ROM or DVD based storage magneto optical MO storage or any other type of non volatile storage devices suitable for storing large quantities of data. The storage devices in storage subsystem can be organized as a Redundant Array of Inexpensive Disks RAID in which case the corresponding server accesses the storage subsystem using an appropriate RAID protocol.

The server side implementation of the resource hierarchy aware RBAC system as illustrated in reduces the need for a client to make multiple client server API calls thus improving the performance of functions requiring mass access checks such as reporting . Also different clients do not have to implement and maintain multiple RBAC implementations because they share the server implementation. Further server side caching techniques e.g. group caching can be used to accelerate request handling at the server .

According to an embodiment of the invention roles are used in a workflow system to determine who can request approve and provision storage. Enterprises operate in terms of the roles assigned to their employees but administrators have become accustomed to translating requirements into specific people or email aliases in order to satisfy workflow requirements. This process is typically time consuming for administrators and results in error as configurations get out of date. According to an embodiment of the invention roles created as part of hierarchy aware RBAC are used for workflow routing. Combining RBAC with workflow adds additional levels of security by allowing enterprises to require multiple approvals for provisioning and allowing data administrators to perform their job functions.

An RBAC aware workflow system according to an embodiment of the invention consists of a set of workflows defined by an administrator. A role can contain the capability to perform an action required by the workflow. As administrators change job functions their roles are updated. This immediately changes their part in the workflow without requiring any manual changes to the workflow description. For example if a user becomes a manager they might be assigned a Manager role. When the system routes a request to a Manager the user would be able to service the request. When the workflow system needs to determine whether or not a user or user group can fulfill a requirement of a workflow or find the list of users who could the workflow system consults the RBAC system. Leveraging RBAC in this way allows administrators to reuse the security configuration they have already constructed. Further an RBAC solution is dynamic and can be easily changed to reflect changing organization hierarchy and adapt to changing workflow requirements.

The processor is the central processing units CPUs of the server and thus control the overall operation of the server . In certain embodiments the physical processor accomplishes this by executing software stored in memory . A physical processor may be or may include one or more programmable general purpose or special purpose microprocessors digital signal processors DSPs programmable controllers application specific integrated circuits ASICs programmable logic devices PLDs or the like or a combination of such devices.

The server also includes memory coupled to the bus system . The memory represents any form of random access memory RAM read only memory ROM flash memory or a combination thereof. Memory stores among other things the operating system of the server in which the techniques introduced here can be implemented.

Also connected to the processor through the bus system are a mass storage device a storage adapter and a network adapter . Mass storage device may be or include any conventional medium for storing large quantities of data in a non volatile manner such as one or more disks. The storage adapter allows the server to access the external mass storage devices and may be for example a Fibre Channel adapter or a SCSI adapter. The network adapter provides the server with the ability to communicate with remote devices such as the clients over a network and may be for example an Ethernet adapter or a Fibre Channel adapter.

Memory and mass storage device store software instructions and or data and which may include instructions and or data used to implement the techniques introduced here. These instructions and or data may be implemented as part of the operating system of the server .

Thus a method and apparatus for centralized providing hierarchy aware RBAC and RBAC workflow solutions have been described. Note that references throughout this specification to one embodiment or an embodiment means that a particular feature structure or characteristic described in connection with the embodiment is included in at least one embodiment of the present invention. Therefore it is emphasized and should be appreciated that two or more references to an embodiment or one embodiment or an alternative embodiment in various portions of this specification are not necessarily all referring to the same embodiment. Furthermore the particular features structures or characteristics being referred to may be combined as suitable in one or more embodiments of the invention as will be recognized by those of ordinary skill in the art.

In one embodiment the software used to facilitate the algorithm can be embodied onto a machine readable medium. A machine readable medium includes any mechanism that provides e.g. stores and or transmits information in a form readable by a machine e.g. a computer . For example a machine readable medium includes read only memory ROM random access memory RAM magnetic disk storage media optical storage media flash memory devices Digital VideoDisc DVD s electrical optical acoustical or other form of propagated signals e.g. carrier waves infrared signals digital signals EPROMs EEPROMs FLASH memory magnetic or optical cards or any type of media suitable for storing electronic instructions. Slower mediums could be cached to a faster more practical medium.

Although the present invention has been described with reference to specific exemplary embodiments it will be recognized that the invention is not limited to the embodiments described but can be practiced with modification and alteration within the spirit and scope of the appended claims. Accordingly the specification and drawings are to be regarded in an illustrative sense rather than a restrictive sense.

