---

title: Dynamically managing timesheet data associated with multiple billing types
abstract: Methods, systems, and computer program products manage timesheet data associated with multiple billing types. Embodiments of the present invention are unique in that each billing type is visually displayed as a separate database record when in actuality it is simply a pivoted representation of attributes on a single record. A method involves retrieving timesheet data associated with a specific timesheet. Each instance of the timesheet data associated with a date and multiple billing types are stored on a server as a single record. The method also involves pivoting the timesheet data to display as separate records the timesheet data associated with a date and multiple billing types. Each billing type associated with actual time entry is displayed and associated with one of the records as displayed. This combination of data storage and data display represents distinct improvements in levels of efficiency for both a timesheet user and a timesheet manager.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08036961&OS=08036961&RS=08036961
owner: Microsoft Corporation
number: 08036961
owner_city: Redmond
owner_country: US
publication_date: 20060531
---
A portion of the disclosure of this patent document contains material which is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or patent disclosure as it appears in the U.S. Patent and Trademark Office patent file or records but otherwise reserves all copyright rights whatsoever.

With the advent of the computer age computer and software users who work as employees professionals and or business managers have grown accustomed to software applications that help them plan enter and account for their time worked with elaborate graphical user interfaces GUIs . Consequently time entry users of modern electronic timesheets expect efficient user interface design whereas business managers expect overt display of all data. Often times a business manager s needs versus the employee timesheet user s needs are at odds when it comes to timesheet application features. Modern electronic timesheet applications allow users to report time worked back to the business. However total time worked can be accounted for and broken down into billable non billable straight time and or overtime. Thus one time worked number assigned to a user can be reported back in as many as four billing types.

This creates interface complications when attempting to provide an efficient interface for time entry users and a comprehensive interface for business managers. Conventional timesheet applications track time on a day by day basis and every task can have a separate line. Thus in a fixed time period for example a week a user could expect even a minimum number of tasks over five to seven days to either explode the user interface horizontally and or vertically beyond a computer screen or require hidden and or tagged data. Both of these display methods render the interface virtually unusable.

This summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended as an aid in determining the scope of the claimed subject matter.

Embodiments of the present invention solve the above and other problems by providing for dynamically managing timesheet data associated with multiple billing types. Embodiments of the present invention are unique in that each billing type is visually displayed as a separate database record when in actuality it is simply a pivoted representation of attributes on a single record. In one embodiment a method involves retrieving timesheet data associated with a specific timesheet. Each instance of the timesheet data associated with a date and multiple billing types are stored on a server as a single record. The method also involves pivoting the timesheet data to display as separate records the timesheet data associated with a date and multiple billing types. Each billing type associated with actual time entry is displayed and associated with one of the records as displayed. This combination of data storage and data display represents distinct improvements in levels of efficiency for both a timesheet user and a timesheet manager.

The multiple billing types are represented as subordinate records in a user interface that timesheet users can choose to display or not depending upon the need of each individual task and or assignment. This feature streamlines the user experience. In contrast a business manager is presented with each timesheet for review in a manner that can display all data entered by the user without the need to display extra columns where the data fill is not present. The billing types include straight or regular billable overtime billable straight non billable and overtime non billable.

These and other features and advantages will be apparent from a reading of the following detailed description and a review of the associated drawings. It is to be understood that both the foregoing general description and the following detailed description are explanatory only and are not restrictive of the invention as claimed.

As briefly described above embodiments of the present invention are directed to dynamically managing timesheet data associated with multiple billing types. In the following detailed description references are made to the accompanying drawings that form a part hereof and in which are shown by way of illustrations specific embodiments or examples. These embodiments may be combined other embodiments may be utilized and structural changes may be made without departing from the spirit or scope of the invention. The following detailed description is therefore not to be taken in a limiting sense and the scope of the present invention is defined by the appended claims and their equivalents.

Referring now to the drawings in which like numerals refer to like elements through the several figures aspects of the present invention and an exemplary computing operating environment will be described. and the following discussion are intended to provide a brief general description of a suitable computing environment in which the invention may be implemented. While the invention will be described in the general context of program modules that execute in conjunction with an application program that runs on an operating system on a personal computer those skilled in the art will recognize that the invention may also be implemented in combination with other program modules.

Generally program modules include routines programs components data structures and other types of structures that perform particular tasks or implement particular abstract data types. Moreover those skilled in the art will appreciate that the invention may be practiced with other computer system configurations including hand held devices multiprocessor systems microprocessor based or programmable consumer electronics minicomputers mainframe computers and the like. The invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules may be located in both local and remote memory storage devices.

Embodiments of the invention may be implemented as a computer process method a computing system or as an article of manufacture such as a computer program product or computer readable media. The computer program product may be a computer storage media readable by a computer system and encoding a computer program of instructions for executing a computer process. The computer program product may also be a propagated signal on a carrier readable by a computing system and encoding a computer program of instructions for executing a computer process.

With reference to one exemplary system for implementing the invention includes a computing device such as computing device . In a basic configuration the computing device typically includes at least one processing unit system memory and a mass storage device MSD . Depending on the exact configuration and type of computing device the system memory may be volatile such as RAM non volatile such as ROM flash memory etc. or some combination of the two. The MSD typically includes an operating system suitable for controlling the operation of a networked server computer. The MSD may also include one or more software applications such as a timesheet application and a web server application working in conjunction with a project server application and timesheet s . The project server application may include a SQL server such as from Microsoft Corporation. The project server application includes a timesheet table database including individual records 

According to embodiments of the invention the individual records may comprise a variety of field or data types associated with timesheet data reporting such as a project name PN a task name TN a regular billable billing type RB an overtime billable billing type OTB a regular non billable RNB an overtime non billable OTNB planned time PT and a date associated with the timesheet data. According to embodiments of the present invention the individual records is illustrative of multiple billing types being efficiently stored in association with a date and task within a single record.

The timesheet table database works in conjunction with the timesheet application a dataset derived from the timesheet data records and web services to store timesheet data as a single record yet render the timesheet data in the form of separate records in a timesheet grid on a client computer via a screen display .

The MSD is connected to the CPU through a mass storage controller not shown connected to the system bus . The MSD and its associated computer readable media provide non volatile storage for the computing device . Although the description of computer readable media contained herein refers to a MSD such as a hard disk or RAID array it should be appreciated by those skilled in the art that computer readable media can be any available media that can be accessed by the CPU .

The CPU may store data to and access data from the MSD . Data is transferred to and received from the MSD through the system bus . The CPU may be a general purpose computer processor. Furthermore as mentioned below the CPU in addition to being a general purpose programmable processor may be firmware hard wired logic analog circuitry other special purpose circuitry or any combination thereof.

According to various embodiments of the invention the computing device can operate in a networked environment as shown in using logical connections to remote computing devices via network communication such as an Intranet or a local area network LAN . The computing device may connect to the network via a network interface unit . It should be appreciated that the network interface unit may also be utilized to connect to other types of networks and remote computer systems. A computing device such as the computing device typically includes at least some form of computer readable media. Computer readable media can be any available media that can be accessed by the computing device . By way of example are not limitation computer readable media might comprise computer storage media and communication media.

Computer storage media includes volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to RAM disk drives a collection of disk drives flash memory other memory technology or any other medium that can be used to store the desired information and that can be accessed by the computing device .

Communication media typically embodies computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media. Combinations of any of the above should also be included within the scope of computer readable media. Computer readable media may also be referred to as computer program product.

Referring now to the logical flow begins at operation where the computing device receives timesheet data entered at a client computer for instance the computer . This data may be received into the client computer via a timesheet grid. A user may enter regular hours and overtime. Once the user saves the data the server receives the timesheet data as a dataset but in a non pivoted format. The project server creates the dataset. That dataset is passed through web services back to the server .

Next at operation the server interprets the dataset to confirm what time entries are actually present in preparation for pivoting. In some embodiments there is no need to pivot where there is no data present. For example if there is no data entered for Wednesday Wednesday is not be pivoted. Then at operation the server pivots the timesheet data that is present. Next at operation the pivoted data is passed through the project server infrastructure to sequel server database where it is stored as individual records associated with a date and one or more billing types.

At operation when a user requests to view the timesheet data for a specific timesheet the server receives the request. Then at operation in response to receiving the request the server retrieves and interprets the timesheet data for actual time entry presence. Next at operation the server pivots the dataset to prepare it for display. It should be appreciated that the client computer may gather HTML such that the dataset will not get to the client. The dataset is simply HTML tagged such as by operation where the server analyzes the dataset to detect data types for HTML tags. The data is analyzed to see what types of data exist on every task to identify what types of rows to display for the user so the user experience can be intelligently compressed.

The data from the dataset is applied to an HTML style the enables the data with those tags to be rendered. The HTML is applied via SOAP protocol as illustrated below with respect to APIs. Thus the data may remain on the middle tier the project server . Next at operation the timesheet grid is expanded to account for the data types detected during operation and displayed. The logical flow the returns control to other routines at return operation .

Thus the present invention is presently embodied as methods systems computer program products or computer readable mediums encoding computer programs for dynamically managing timesheet data associated with multiple billing types.

It will be apparent to those skilled in the art that various modifications or variations may be made in the present invention without departing from the scope or spirit of the invention. Other embodiments of the present invention will be apparent to those skilled in the art from consideration of the specification and practice of the invention disclosed herein.

