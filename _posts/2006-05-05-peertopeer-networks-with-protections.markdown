---

title: Peer-to-peer networks with protections
abstract: In a peer-to-peer environment, copyrights and users' privacies can be protected by a tracking mechanism. In described implementations, tracking mechanisms can use certificates that are produced using random numbers to protect the privacy of users and/or certificates that are produced responsive to at least one hardware identifier to enable uploader to be identified to protect copyrights.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07987368&OS=07987368&RS=07987368
owner: Microsoft Corporation
number: 07987368
owner_city: Redmond
owner_country: US
publication_date: 20060505
---
This Nonprovisional Patent Application claims the benefit of U.S. Provisional Patent Application No. 60 731 204 filed Oct. 28 2005. The Provisional Patent Application No. 60 731 204 is hereby incorporated by reference in its entirety herein.

The internet can be used to share transmit distribute or otherwise transfer information in accordance with many different communication paradigms. One example communication paradigm is the client server paradigm. With the client server paradigm a server typically stores most of the information. Multiple clients communicate with the server to transfer information to and from the server. There is relatively little direct client to client communication.

Another example communication paradigm is the peer to peer P2P paradigm. With the P2P paradigm peers typically store most of the information. Each peer is usually capable of communicating with multiple other peers to facilitate the transfer of information between and among the multiple peers. In an example approach to constructing P2P networks a P2P network can be overlaid on top of the internet or another physical network. As compared to the transfer of information between a server and the clients thereof it is often more difficult to monitor and regulate the transfer of information within a P2P network.

In a peer to peer environment copyrights and users privacies can be protected by a tracking mechanism. In described implementations tracking mechanisms can use certificates that are produced using random numbers to protect the privacy of users and or certificates that are produced responsive to at least one hardware identifier to enable an uploader to be identified to protect copyrights.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used as an aid in determining the scope of the claimed subject matter. Moreover other method system scheme apparatus device media procedure API arrangement etc. implementations are described herein.

It is possible that peer to peer P2P networks need to have built in copyright protection if P2P technologies are to advance independently of interference from courts and legislatures. An example P2P network that is described herein includes relatively strong privacy protection as well as a secure and reliable tracking mechanism for copyright protection. The tracking mechanism can track the original uploader of any materials uploaded to replicated by and or transferred in the P2P network.

Although the privacy of uploaders is generally protected when a pirated or otherwise illicit material is discovered its uploader can be tracked down. Moreover the uploader s access to the P2P network can be permanently revoked and the materials uploaded by the uploader can be removed. The whole protection system is decentralized and may be completely transparent to end users. One embodiment is referred to as a privacy and copyright protected peer to peer network PCPN . It involves a hardware bound tracking mechanism that employs widely used cryptographic primitives and technologies that are proven and robust.

Thus in a described implementation the protection system is an a posteriori system. In other words instead of blocking the uploading of protected copyrighted works a priori a described implementation of the protection system enables uploaders to be positively identified after they have uploaded a protected copyrighted work. It is believed that the tracking and or access blocking effectively deters users from illegally uploading any copyrighted materials to the P2P network and dramatically reduces the amount of copyrighted materials that are shared through the P2P network. However described implementations for PCPN can incorporate any a priori protection technologies such as global or individualized watermarking digital rights management DRM persistent access control etc. to make the system even better in fighting against piracy.

In an example described implementation for PCPN each digital asset that is uploaded to PCPN is joined to persistent metadata which contains an uploader signed certificate that is used to track the original uploader. Authenticity and validity of the certificate and the associated material are verified when a digital material is first uploaded to PCPN or subsequently replicated from one peer to another. A design principle for PCPN is the assumption that an uploader is liable for whatever he or she uploads to PCPN.

Each PCPN end user is entitled to publish anything in PCPN and to remain anonymous until a pirated malicious or otherwise illicit material is discovered. After discovery of an illicit material the tracking mechanism is invoked to track down the original uploader of the material. Once convicted of uploading illicit material all the materials uploaded by the convicted uploader are removed from PCPN. Additionally the uploader may be punished in any of several possible manners which can range from i a permanent revocation of access to PCN and or of a publishing privilege within PCPN to ii civil and or legal actions against the user uploader. A revocation list is used to ban convicted peers from access to or publishing in PCPN.

Within PCPN a copy of digital material is termed an object. The metadata that is associated with an object and that provides auxiliary information and or specifies behaviors are called the attributes of the object. For example the certificate used for tracking an uploader is a tracking attribute. In PCPN an object and its tracking attribute are treated as an atomic unit when uploaded to PCPN or transferred from one peer to another.

Specifically peer . . . peer n are shown with n being any integer. The multiple peers communicate over P2P network . P2P network may be a standalone network. It may also be overlaid on top of one or more other networks such as an internet a telephone cellular network a wired or wireless network some combination thereof and so forth. Peers are empowered to transfer atomic units between and among each other in accordance with at least one associated attribute A.

Each atomic unit includes one or more objects O. An object O is the information that a user wishes to communicate. Objects O include but are not limited to multimedia content a software module or program a file an image some combination thereof and so forth. Associated attributes A are metadata that pertain to object O. The metadata may describe object O stipulate rights for and or uses of object O provide tracking data for object O some combination thereof and so forth.

In a described implementation ACS issues individualized ACS signed certificates during individualization schemes . More generally certificates can be issued by a e.g. trusted certification authority. ACS also creates maintains and disseminates revocation list . Revocation list indicates which peers are permitted to upload atomic units to P2P network and which peers are permitted to otherwise access P2P network . Revocation list can be transmitted from ACS to peers and or between any two peers .

To participate in P2P network each peer installs a P2P application . P2P application is capable of performing standard P2P functionality. Standard P2P functionality includes but is not limited to creating directories of stored information enabling stored information to be found e.g. through indexes searches catalogs etc. facilitating transfers of the stored information and so forth.

P2P application also includes IM and SVM . IM and SVM are tamper resistant if not tamper proof security modules. They can jointly enforce copyright protection and access control. They function like a black box to users to other P2P modules of P2P application and to other applications of a peer .

Generally IM individualizes each SVM in conjunction with a trustworthy ACS . SVM checks revocation list and verifies the authenticity and integrity of an object O and its tracking attribute A before permitting the peer to upload an object to P2P network to download an object from P2P network or to replicate an object. Any objects that fail this verification may be removed from P2P network .

More specifically for peer for example IM interacts with ACS during individualization scheme to individualize P2P application for use on peer . When a user of peer wishes to upload object O to P2P network SVM creates attributes A and bundles object O and attributes A into atomic unit . When a user of peer n wishes to access object O P2P application transfers atomic unit to P2P application of peer n via P2P network . SVM verifies the authenticity and integrity of object O using attributes A before permitting the user of peer n access to object O.

In a described implementation revocation list contains a list of revoked certificates previously issued by an ACS . Revocation list is distributed to peers and or made available at a central server e.g. ACS . A peer can cache revocation list in local storage for later usage so it does not have to download revocation list every time its SVM needs to check revoked certificates.

When a peer enters P2P network it optionally checks and updates the local revocation list from another peer or from the central server. If a threshold of a maximum non updating period has been reached a peer is forced to update its locally stored revocation list . Any objects signed by a revoked certificate are removed from P2P network . Consequently a user whose ACS issued certificate is listed in revocation list cannot upload anything to P2P network .

Depending on the policy set up for a given P2P network each SVM at a peer may also check revocation list to check if the peer is allowed to access P2P network . If the peer s certificate is in revocation list the peer s SVM refuses to verify any incoming objects for the peer. Consequently the peer cannot download anything from P2P network . SVM also informs other modules of the peer s P2P application to refuse any service requests by the peer. The peer s access to P2P network is therefore effectively denied.

In a described implementation P2P network architecture utilizes two different certificates an ACS signed certificate and a peer signed certificate. The former certifies that a particular peer is permitted access to P2P network . The latter certifies that the particular peer did indeed upload a given object O to P2P network . These two certificates are described further herein below with particular reference to and the flow diagrams of .

With individualization scheme a given peer is granted an ACS signed certificate. Thereafter the given peer need not contact ACS prior to uploading downloading atomic units to from P2P network . Nevertheless the origin of an atomic unit can be traced when desired. Moreover the identity of each originating peer may be kept secret from other peers . This secrecy is enabled at least in part by the use of two random numbers in the creation of attributes A.

In a described implementation ACS signed certificate serves as an individualized root certificate. ACS signed certificate includes an individualized certification value C and an expiration time . In operation the trustworthy ACS of individualizes SVM at each peer during installation of P2P application by issuing a root certificate that binds the peer s public key K to the hardware of the peer.

Peer signed certificate includes a peer certification value C and an expiration time . In operation the SVM at a peer generates a peer signed certificate that is attached as the tracking attribute A to each object O that the peer uploads to P2P network . The production of individualized certification value C and peer certification value C as well as the formulation of ACS signed certificate and peer signed certificate are described further herein below with particular reference to .

Multiple devices are capable of communicating across one or more P2P networks . As illustrated two devices and are capable of engaging in communication exchanges via P2P network . Although two devices are specifically shown one or more than two devices may be employed depending on implementation.

In one example implementation one device e.g. device is being used to upload an object to P2P network . P2P network may be layered on top of one or more other networks such as the Internet an intranet a telephone network a cable network a wireless or wired network some combination thereof and so forth.

Generally device may represent any computer or processing cable device such as a server device a workstation or other general computer device a personal digital assistant PDA a mobile phone a gaming platform an entertainment device some combination thereof and so forth. As illustrated device includes one or more input output I O interfaces at least one processor and one or more media . Media include processor executable instructions .

Although not specifically illustrated device may also include other components in addition to I O interfaces processors and media . Each hardware component may include a component hardware ID which is used to ascertain a peer hardware ID PHID . Ascertaining a peer hardware ID PHID is described herein below with particular reference to .

In a described implementation of device I O interfaces may include i a network interface for communicating across the physical layer of P2P network ii a display device interface for displaying information on a display screen iii one or more man machine interfaces and so forth. Examples of i network interfaces include a network card a modem one or more ports and so forth. Examples of ii display device interfaces include a graphics driver a graphics card a hardware or software driver for a screen or monitor and so forth. Examples of iii man machine interfaces include those that communicate by wire or wirelessly to man machine interface devices e.g. a keyboard a mouse or other graphical pointing device etc. .

Generally processor is capable of executing performing and or otherwise effectuating processor executable instructions such as processor executable instructions . Media is comprised of one or more processor accessible media. In other words media may include processor executable instructions that are executable by processor to effectuate the performance of functions by device .

Thus realizations for P2P networks with protections may be described in the general context of processor executable instructions. Generally processor executable instructions include routines programs applications coding modules protocols objects components metadata and definitions thereof data structures application programming interfaces APIs etc. that perform and or enable particular tasks and or implement particular abstract data types. Processor executable instructions may be located in separate storage media and or executed by different processors.

Processor s may be implemented using any applicable processing capable technology. Media may be any available media that is included as part of and or accessible by device . It includes volatile and non volatile media removable and non removable media and storage media. For example media may include an array of disks for longer term mass storage of processor executable instructions random access memory RAM for shorter term storing of instructions that are currently being executed and so forth.

As specifically illustrated media comprises at least processor executable instructions . Generally processor executable instructions when executed by processor enable device to perform the various functions described herein including those actions that are illustrated in flow diagrams and of and respectively .

By way of example only processor executable instructions may include P2P application which includes individualization module IM as well as signing and verifying module SVM . SVM includes first and second secret peer keys kand k and an ACS public key K . These keys are described further herein below. As illustrated SVM is separated into a signing module SM S and a verifying module VM V.

Although shown as being part of P2P application IM and SVM may be implemented separately from other components of P2P application . Also their respective functionalities may be integrated into a single module. Likewise the respective functionalities of SM S and VM V may also be integrated into a single module.

When P2P application is first installed to a peer the peer s SVM is individualized by the individualization mechanism of flow diagram . Flow diagram may be divided into three major phases. Phase one includes blocks . Phase two includes blocks . Phase three includes blocks .

In the first individualization phase at block IM ascertains the peer hardware ID PHID of peer . The peer hardware ID PHID may be a combination of multiple unique IDs of the hardware components of the device . The combination may be a concatenation a has value a result of some other algorithm or algorithms and so forth. Example hardware components include but are not limited to the hard drive s the network card and so forth.

At block IM generates a peer private public key pair k K . The peer private key kand the corresponding peer public key Kare interrelated by DEx x x where E and D are respective asymmetric encryption and decryption operations with a key k. Symmetric encryption and decryption with a key k are denoted herein by E and D respectively. This pair of peer private and public keys k K is used to sign the objects O uploaded by peer and to verify authenticity and integrity of objects in P2P network .

At block IM sends a request to ACS to acquire an ACS signed certificate . The request is sent securely and it includes the peer hardware ID PHID and the generated peer public key K.

In the second individualization phase at block ACS receives the peer hardware ID PHID and the peer public key K as sent by the peer s IM . Alternatively the peer s public and private keys may be generated by the ACS. In this alternative implementation the ACS sends the peer s private key to the peer. At block ACS determines a modified peer hardware ID MPHID from the peer hardware ID PHID . For example it may calculate a message authentication code MAC or a keyed hash of the peer hardware ID PHID to determine a globally unique ID GUID GUID h PHID with the ACS hash key k. The ACS hash key kis known only to ACS.

At block the determined modified peer hardware ID MPHID is compared to those in revoked certificates. If the peer s modified peer hardware ID MPHID is detected in the list of revoked certificates a rejection of the request is sent to peer at block . At block as a consequence of the rejection P2P application denies access to P2P network using peer .

Otherwise if the modified peer hardware ID MPHID is not detected on the revocation list at block then at block an individualized certification value C is produced. For example as shown in block ACS may sign modified peer hardware ID MPHID and peer public key K with an ACS private key k . The signing may be effected in accordance with C EMPHID K T Others where means concatenation kis the ACS s private key used to sign certificates issued by ACS to peers and T is the current time.

The basic form of the ACS signed certificate is used when the only action against an illicit peer is to remove the objects uploaded by the peer and to revoke the peer s access to P2P network . In this basic form there is no other peer information included in the individualized certification value C . In other words the Others variable in Cis empty. If on the other hand the features of a P2P network involve having a tracking mechanism that can fully identify an illicit user for possible legal actions additional information is included in the Others variable.

To provide information for possible legal actions against an illicit user personal information e.g. the peer s IP address the user s email address the user s name or telephone number some combination thereof etc. may be obtained from the user or peer encrypted by a symmetric encryption with a key known only to ACS and inserted into the Others variable. This Others variable is then signed together with MPHIDby ACS. Once a peer is convicted and the identity of the user is needed for legal actions the personal information contained in the Others portion of the individualized certification value C is decrypted by ACS and sent to law enforcement agencies to fully identify the perpetrator.

At block an ACS signed certificate with an individualized certification value C is formulated. For example an ACS signed certificate that includes an individualized certification value C may be formulated. At block ACS sends ACS signed certificate having the individualized certification value C to IM of peer .

In the third individualization phase at block IM receives ACS signed certificate from ACS . At block IM stores ACS signed certificate having the individualized certification value C along with the peer public key K in local secure storage. At block IM also securely stores the peer private key k . These values are used by the peer s SVM . IM then sends an acknowledgment to ACS to close the individualization session. The whole individualization mechanism may be completely transparent to an end user except if a user is asked to provide some personal information e.g. an email address for the Others variable for some implementations of the described P2P network .

As illustrated in SVM includes two modules SM S and VM V. SM S is used to sign objects O uploaded by peer . VM V is used to verify the authenticity and integrity of an object O before the object is uploaded to downloaded from or replicated in P2P network . Both modules share a pair of first and second secret peer keys kand k. VM V also contains the ACS public key Kto verify the ACS signed certificates and revocation lists . Functions of SM S are described further herein below with particular reference to . Functions of VM V are described further herein below with particular reference to .

At block first and second random numbers and are generated. For example a pseudorandom number generator PNG may be employed to generate two random numbers. At block first and second tracking hash values c and are created. As shown at block the first tracking hash value c is created based on the object Obj the first random number and the first secret peer key k . As shown at block the second tracking hash value is created based on second random number and the second secret peer key k . For example SM S inside SVM may calculate the first and second tracking hash values using c h Obj and h where h is a cryptographic keyed hash or MAC function using a key k.

At block a peer certification value C is produced. As shown at block the peer certification value C may be produced by SM S signing the first tracking hash value c with the peer private key k . For example the first tracking hash value c may be signed to generate a peer signed certificate as follows C E c T where T is the current time. At block a peer signed certificate with a peer certification value C is formulated.

At block an encrypted tracking value u is produced by encrypting the peer public key K and the individualized certification value C using the second tracking hash value . For example SM S may encrypts its peer public key Kand its individualized root certificate Cwith a symmetric cipher and the key as follows u EK C.

At block a tracking information set TIS is built. The TIS includes the peer certification value the encrypted tracking value the first random number and the second random number C u . At block the TIS C u is inserted into the object s tracking attribute field A and attribute A is combined with object O to formulate an atomic unit . More generally the atomic unit is formulated by combining the object and the peer signed certificate. Atomic unit is treated as an integrated monolithic whole when transferred into or out of P2P network or from one peer to another. At block SM S sends atomic unit to VM V.

At block an atomic unit is received at VM V from SM S. At block the peer certification value C the encrypted tracking value u the first random number and the second random number of the TIS C u are extracted from the attributes field A of atomic unit .

At block the second tracking hash value is created based on the second random number and the second secret peer key k e.g. in accordance with h . At block the peer public key K and the individualized certification value C are ascertained by decrypted the encrypted tracking value u . The just created second tracking hash value is used to decrypt the encrypted tracking value u . Thus the peer public key K and the individualized certification value C may be extracted in accordance with K C Du.

At block it is detected if the individualized certification value C has been revoked with reference to revocation list . If the individualized certification value C is present on revocation list then at block the uploading of the object is blocked.

If the individualized certification value C is not detected on revocation list at block then at block it is determined if the decrypted peer public key K and the decrypted individualized certification value C both of the of the original uploader properly verify. The ACS public key K is used to verify them. If the authenticity verification fails then the method of flow diagram continues at block which is described herein below.

If on the other hand they are verified at block then at block the first tracking hash value c is ascertained by decrypting the peer certification value C using the peer public key K . For example the decryption may be accomplished in accordance with c c T DC. At block the first tracking hash value c is created. It may be created based on for example the object Obj the first random number and the first secret peer key k e.g. in accordance with h Obj .

At block the decrypted first tracking hash value c is compared to the created first tracking hash value c to determine if they match. If they fail to match then the integrity verification fails and the method of flow diagram continues at block which is described herein below. If on the other hand the two versions of the first tracking hash value c do match as determined at block then the integrity verification is successful. At block both the authenticity and the integrity of the object O are therefore verified. At bock P2P application is thus empowered to upload receive atomic unit to from P2P network .

If the authenticity as determined at block or the integrity as determined at block fail then at block the verification of object O fails. At block the verifying mechanism returns failure and uploading and or transfer of object O is rejected and blocked. The uploading process if successful can be accomplished without peer contacting any server. Moreover the process can be completely transparent to an end user.

When a peer is going to download or replicate an object from another peer the peer s VM first verifies the authenticity and integrity of the object. This verification is the same as the verification performed by VM when a peer uploads an object which is described herein above with particular reference to . If the verification is successful VM returns OK and the requested downloading or replication is executed. Otherwise VM returns failure and the request is rejected. In the latter case the peer that stores the object that fails the verification is contacted and the peer performs its own verification of authenticity and integrity for the allegedly failing object. If the failure allegation is confirmed the object is removed by the storing peer.

In a described implementation a peer also periodically verifies the authenticity and integrity of the objects that it stores for the P2P network. Any object that fails in this verifying is removed from the peer s local storage. This verification may occur when for example the local revocation list is updated and new revoked certificates are present on the new revocation list. This procedure ensures that over time the objects uploaded by revoked peers are removed from the P2P network.

Depending on the policy or policies established for a given P2P network a peer in the revocation list may be denied access to the P2P network which is a severer punishment than merely revoking its right to upload objects to the P2P network. This access denial may be implemented for example by requiring VM to check the revocation list and to compare entries on the list with the local peer s public key. If the local peer s public key is present in the list a user s request to access the P2P network is rejected. In this case the user is unable to access any of the services of the P2P network.

It is also possible that a peer may regain access to the P2P network and or to the ability to upload objects to the P2P network when certain conditions are met. Granting a peer renewed rights can be realized by removing the peer from the revocation list. When VM rejects a peer s request to upload or access the P2P network due to the peer being on the revocation list it can prior to returning failure update its revocation list to check if the peer s rights have been recovered as evidenced by the latest revocation list.

In a described implementation production of the individualized certification value C may optionally be altered to prevent users from being able to circumvent the copyright protections merely be changing a single hardware component. ACS can replace the modified peer hardware ID MPHID with an encrypted version of the peer hardware ID PHID that includes single hardware IDs for each of multiple components. If any of the single hardware IDs is present on a revocation list then the individualization request is rejected and the individualization process fails. This forces a user to replace each and every hardware component of a device in order to circumvent the copyright protections described herein.

The devices actions aspects features functions procedures modules data structures protocols models components etc. of are illustrated in diagrams that are divided into multiple blocks. However the order interconnections interrelationships layout etc. in which are described and or shown are not intended to be construed as a limitation and any number of the blocks can be modified combined rearranged augmented omitted etc. in any manner to implement one or more systems methods devices procedures media apparatuses APIs arrangements etc. for P2P networks with protections.

Although systems media devices methods procedures apparatuses mechanisms schemes approaches processes arrangements and other implementations have been described in language specific to structural logical algorithmic and functional features and or diagrams it is to be understood that the invention defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims.

