---

title: Systems and methods of partial shift swapping
abstract: Systems and methods of partial shift swapping are disclosed. An exemplary method comprises the steps of: receiving a partial shift swap request from an agent; determining a disposition of the partial shift swap request by applying a set of criteria associated with a validation rule to the partial shift swap request; and if the disposition indicates the partial shift swap request is approved, updating a schedule to reflect the partial shift swap request. An exemplary computer-readable medium has a computer program stored thereon. The computer program comprises computer-executable instructions for performing a computer-executed method of requesting a partial shift swap. The method comprises the steps of: receiving a partial shift swap request from an agent; determining a disposition of the partial shift swap request by applying a set of criteria associated with a validation rule to the partial shift swap request; and if the disposition indicates the partial shift swap request is approved, updating a schedule to reflect the partial shift swap request.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08645179&OS=08645179&RS=08645179
owner: Verint Americas Inc.
number: 08645179
owner_city: Alpharetta
owner_country: US
publication_date: 20060929
---
The present disclosure relates to customer centers and more specifically to scheduling of a workforce.

A manager in a customer center typically uses workforce scheduling software to create a schedule which assigns workers agents to shifts throughout the workday. The scheduler chooses an optimal schedule that meets constraints while optimizing goals. Inputs such as predicted workload e.g. call volume in 15 minute intervals average call duration and work rules e.g. maximum shift length possible shift start time break requirements are treated as constraints. Inputs such as expected level of service e.g. call hold time are treated as goals. The scheduler generates many possible schedules and examines the possibilities to find a schedule that optimizes goals while remaining within the constraint boundaries.

In the real world the generated schedule of agent shifts may be modified for various reasons after initial creation. For example agents may request time off or wish to move from one workday to another. It is desirable for a shift modification to affect only a portion of the shift rather than the entire shift. For example an agent assigned to work Friday 9 AM 5 PM may wish to take only the afternoon off. It is also desirable to allow an agent to plan ahead and coordinate the partial shift modification with another agent rather than requiring the partial shift modifications to be initiated through a supervisor.

Systems and methods of partial shift swapping are disclosed. An exemplary method comprises the steps of receiving a partial shift swap request from an agent determining a disposition of the partial shift swap request by applying a set of criteria associated with a validation rule to the partial shift swap request and if the disposition indicates the partial shift swap request is approved updating a schedule to reflect the partial shift swap request. An exemplary computer readable medium has a computer program stored thereon. The computer program comprises computer executable instructions for performing a computer executed method of requesting a partial shift swap. The method comprises the steps of receiving a partial shift swap request from an agent determining a disposition of the partial shift swap request by applying a set of criteria associated with a validation rule to the partial shift swap request and if the disposition indicates the partial shift swap request is approved updating a schedule to reflect the partial shift swap request.

A contact router distributes or routes contacts incoming or outgoing to an agent position. Voice over Internet Protocol VoIP calls and computer based contacts e.g. chat email are routed over one or more data networks and distributed over network to one of the agent workstations . Contact router may include an automatic call distributor ACD to route phone contacts. The embodiments described herein will refer to ACD instead of contact router but analogous contact router actions and operations are intended to be captured by this disclosure. Note that a predictive dialer not shown could be used for directing outbound calls to agents for handling.

If an agent is not available to handle a particular call ACD puts the call into a queue which effectively places the caller on hold. When an agent is available ACD connects the outside trunk line carrying the phone call to one of the agents. More specifically ACD connects the outside trunk line to the trunk line of the selected agent.

When an agent is ready to handle contacts the agent first logs into ACD . This login notifies ACD that the agent is available to take calls. An agent s ACD state changes throughout the workday as the agent performs work activities such as handling calls performing after call work and taking breaks. An example list of states includes available busy after call work and unavailable.

While handling a contact the agent interacts with one or more applications running on workstation . By way of example workstation applications could provide the agent with access to customer records product information ordering status and transaction history. The applications may access one or more business databases not shown via the network .

Customer center also includes a workforce management system WFMS . WFMS performs many functions. One such function is providing a customer center supervisor or manager with information about agents and contacts both historical and real time. Another function is supplying the supervisor with information on how well each agent complies with customer center policies. Yet another function is calculating staffing levels and creating agent schedules based on historical patterns of incoming contacts. The functionality of the entire WFMS is typically divided among several applications some of which have a user interface component and WFMS comprises the suite of applications.

In the environment described above the workers assigned to shifts are customer center agents. However the scheduling methods and systems described herein are also applicable to scheduling other kinds of workers in other types of work environments. Therefore the remaining embodiments will refer to workers rather than agents.

A customer center may include but is not limited to outsourced contact centers outsourced customer relationship management customer relationship management voice of the customer customer interaction contact center multi media contact center remote office distributed enterprise work at home agents remote agents branch office back office performance optimization workforce optimization hosted contact centers and speech analytics for example.

Additionally included in this disclosure are embodiments of integrated workforce optimization platforms as discussed in U.S. application Ser. No. 11 359 356 filed on Feb. 22 2006 entitled Systems and Methods for Workforce Optimization which is hereby incorporated by reference in its entirety. At least one embodiment of an integrated workforce optimization platform integrates 1 Quality Monitoring Call Recording voice of the customer the complete customer experience across multimedia touch points 2 Workforce Management strategic forecasting and scheduling that drives efficiency and adherence aids in planning and helps facilitate optimum staffing and service levels 3 Performance Management key performance indicators KPIs and scorecards that analyze and help identify synergies opportunities and improvement areas 4 e Learning training new information and protocol disseminated to staff leveraging best practice customer interactions and delivering learning to support development and or 5 Analytics deliver insights from customer interactions to drive business performance. By way of example the integrated workforce optimization process and system can include planning and establishing goals from both an enterprise and center perspective to ensure alignment and objectives that complement and support one another. Such planning may be complemented with forecasting and scheduling of the workforce to ensure optimum service levels. Recording and measuring performance may also be utilized leveraging quality monitoring call recording to assess service quality and the customer experience.

Shifts include a date D at least one activity A and a time range R . In one embodiment the shift time range R specifies a start time and an end time. In another embodiment the shift time range R specifies a start time and a duration. Each shift is assigned to one agent . A schedule includes shifts within a particular time period.

A partial shift swap request includes an offering shift O an accepting shift A and a swap time range R which represents a sub range within the time range R of the offering shift O. The agent to which an offering shift O is assigned to is referred to as an offeror agent and the agent to whom an accepting shift A is assigned to is referred to as an acceptor agent .

When put into effect the partial shift swap request removes a portion of the offering shift O from the associated agent and allocates the shift portion to the agent associated with the accepting shift AR . The portion is specified by swap time range R. That is a swap request specifying an offering shift O on Sep. 20 2006 from 9 AM to 5 PM and a swap time range R of 10 AM 1 PM is a request for an offeror agent to give away to an acceptor agent the 10 AM 1 PM portion of the offeror agent s 9 AM to 5 PM shift on Sep. 20 2006.

Partial shift swap request also includes a set of hard validation rules H and a set of soft validation rules S . These rules will be applied to request to determine the disposition of the request e.g. automatically approved automatically denied or held for manager review . Each of the soft validation rules S includes criteria for comparison with the swap request. Each soft validation rule S also includes a behavior which determines how the result of the criteria application affects the disposition of the request. Validation rule criteria and behaviors will be discussed later in connection with . A person of ordinary skill in the art should understand how the set of validation rules used with a particular one way or two way swap request can be selected and or entered via a user interface component of WFMS . Therefore this process will not be described in further detail.

In the example of shift which is assigned to John J has a date D of Sep. 20 2006 and a time range R of 8 AM to 7 PM. The activities in shift include work activities from 8 AM to 12 00 PM from 1 00 PM to 3 30 PM and from 4 PM to 7 PM and break activities from 12 00 PM to 1 00 PM and from 3 30 PM to 4 PM. Shift which is assigned to Fred F has a date D of Sep. 21 2006 and a time range R of 7 AM to 2 PM. The activities in shift include work activities from 7 AM to 11 00 AM and from 11 30 PM to 2 00 PM and a break activities from 11 00 AM to 11 30 AM.

Partial shift swap request represents a request for John to offer the 4 PM 7 PM portion of his shift on Sep. 20 2006 to Fred the offering shift O is set to shift Sep. 20 2006 assigned to John the accepting shift A is set to shift Sep. 20 2006 assigned to Fred and swap time range R specifies 4 PM 7 PM in the accepting shift. Thus after partial shift swap request is put into effect schedule is updated so that John has a new Time Off activity from 4 PM to 7 PM on Sep. 20 2006 and Fred has a new work activity from 4 PM to 7 PM on Sep. 20 2006. In this one way swap embodiment John did not accept a shift or a partial shift from Fred.

Shifts include a date D a time range R and at least one activity A . Each shift is assigned to one agent . A schedule includes shifts within a particular time period.

A partial shift swap request includes an offering shift O an accepting shift A and a time range R which represents a sub range within the time range R of the offering shift O. When the partial shift swap request is put into effect schedule is updated so that a portion of the offering shift O is exchanged with the corresponding portion of the accepting shift R where the portion is specified by time range R. Since both shifts are associated with agents the effect is to exchange a portion of one agent s shift with a corresponding portion of another agent s shift. Partial shift swap request also includes a set of hard validation rules H and a set of soft validation rules S . These rules will be applied to request to determine whether the request is automatically approved automatically denied or held for manager review.

In the example of shift which is assigned to John J has a date D of Sep. 20 2006 and a time range R of 8 AM to 5 PM. The activities in shift include work activities from 8 AM to 12 00 PM from 1 00 PM to 3 30 PM and from 4 PM to 5 PM and break activities from 12 00 PM to 1 00 PM and from 3 30 PM to 4 PM. Shift which is assigned to Fred F has a date D of Sep. 21 2006 and a time range R of 10 AM to 5 PM. The activities in shift are analogous to those in shift .

Partial shift swap request represents a request for John to exchange the 8 AM 1 AM portion of his shift on Sep. 20 2006 with Fred s shift on Sep. 21 2006 the accepting shift O is set to shift Sep. 20 2006 assigned to John the accepting shift A is set to shift Sep. 21 2006 assigned to Fred and time range R specifies 8 AM 10 AM in the accepting shift. Thus after partial shift swap request is put into effect schedule is updated so that Fred has a new work activity from 8 AM to 10 AM on Sep. 20 2006 and John has a new work activity from 8 AM to 10 AM on Sep. 21 2006.

If the request does not violate the hard validation rules processing continues at block where a set of soft validation rules S or S are applied. The result of applying soft validation rules is approving denying or holding the request depending on which of the validation rules are violated or not violated. In contrast the result of applying the hard validation rules is to fail the request or to continue with application of soft validation rules. Block which applies soft validation rules is discussed in further detail below in connection with .

At block the result of applying soft validation rules is examined. If the result is Suspend then processing continues at block where the request is submitted to a manager or supervisor for approval or denial. A person of ordinary skill in the art should understand how a user interface component of WFMS can be used by a manager or other customer center personnel to process a submitted request. Therefore this process will not be described in further detail. In some embodiments information about rule violations and or rule compliance as determined during the hard and or soft rule validation process is made available to manager during the swap request review process.

Next block examines the result of the manager s decision. If the manager s decision is Deny processing continues at block which will be discussed below. If the manager s decision is Approve processing continues at block which will be discussed below.

Returning to the discussion of block if the result of applying the soft validation rules at block is Deny then processing continues at block where the offeror and acceptor agents are notified that the partial shift swap request or is denied. In some embodiments the manager is also notified. Processing of the request is then complete.

If the result of applying soft validation rules at block is Approve then processing continues at block where the schedule or is updated to reflect the partial shift swap. The process of updating the schedule will be discussed in more detail in connection with . Next at block the offeror and acceptor agents are notified that the partial shift swap request or is approved. In some embodiments the manager is also notified. Processing of the request is then complete.

Block determines whether the acceptor agent the one associated with the accepting shift field A is already assigned a shift starting on the date D in the offering shift O . If the agent does not have a shift already assigned that day processing continues at block where a new shift is created and assigned to the acceptor agent. The new shift uses the date in the offering shift O the activities A in the offering shift O and the time range R of the one way swap request .

Work activities and shift related activities e.g. breaks that fall within the swap range R are copied from the offering shift O to the accepting shift A . In some embodiments work rules are taken into account filling the accepting shift A with shift related activities. Thus breaks are moved into the add or remove breaks from the newly constructed shift such that the agent complies with work rules. For example accepting a 1 hour partial shift that is adjacent to an already assigned 9 hour shift results in a 10 hour shift. If work rules require that four 15 minute breaks are scheduled in a 10 hour shift then accepting the 1 hour partial shift includes placing a new break in the 10 hour shift regardless of whether the 1 hour offering shift portion included a break activity. Similarly removing portions from an offering shift O could result in removal of a break if the shortened offering shift O falls below a work rule minimum.

Calendar based activities such as Meetings and Training are not copied but remain with the original agent. For example consider an agent assigned to a meeting from 10 00 10 30 AM. When this agent offers the 8 00 AM 11 00 AM portion of this shift then the work activities 8 00 10 00 AM and 10 30 11 00 are copied to the accepting shift but the 10 00 10 30 meeting is not. After the swap the offeror agent still has a meeting at 10 00 AM and the accepting shift A is filled with work activities from 8 00 11 00 AM which includes the 10 30 11 00 slot. Processing continues at block where the offering shift O is deleted. After work related shift related and calendar based activities are transferred to the offering shift O as described above processing for the one way swap request is then complete.

If block determines that the agent does have a shift already assigned that day processing continues at block which creates a new shift object using the date in the offering shift O and setting the shift start time contained in field R to the start time indicated in the swap request time range R . Any gap between the new shift start time and the already assigned shift is filled in with a gap activity. The new shift is associated with the accepting agent the one associated with the accepting shift field A . Processing continues at block where the offering shift O is deleted. Processing for the one way swap request is then complete.

Returning to block if the swap type is two way then the swap is accomplished by creating two new shift objects at block . One shift object is initialized with the date in the accepting shift A of the swap request and is associated with the offeror agent also through accepting shift A . The other shift object is initialized with the date in the offering shift O of the swap request and is associated with the offering agent also through offering shift O . Any gap between the start time of a new shift and the start time of an already assigned shift is filled with a gap period in a manner analogous to gap handling for one way swaps.

In creating the two new shift objects block also fills in shift activities A. Calendar based activities such as Meetings and Training are not swapped but remain with the agent. Work activities and shift related activities e.g. breaks that fall within the swap range R are copied from the accepting shift A to the offering shift O and vice versa. For example consider an agent assigned to a 9 AM to 5 PM shift with one break at 9 30 9 45 AM lunch break at 11 30 AM 12 PM and another break at 3 00 3 15 AM. When this agent offers the 8 00 AM 11 45 AM portion of this shift then the following activities are copied to the pick up shift the 9 00 9 30 work activity the 9 30 9 45 AM break the 9 45 11 30 work activity and the first half of the lunch break activity from 11 30 11 45. Note that the 11 45 PM 12 00 PM lunch break activity remains with the offeror agent since that time range is outside of the swap range R.

After block creates the two replacement shift objects the original accepting shift A and offering shift O are deleted at block . Processing of a two way swap request continues at block which handles overlap as follows. If there is an overlap between an agent s original shift and the new swapped portion the activities in the new portion overwrite or replace the activities in the original portion. Processing for the two way swap request is then complete.

Having discussed the process of shift swapping including applying validation rules and updating the schedule for an approved request exemplary hard and soft validation rules will now be described in more detail. As described above violation of a hard validation rule causes the partial shift swap request to fail. One hard validation rule is violated if one of the agents participating in the shift swap is not associated with a valid organization. Another hard violation rule is violated if an already assigned shift starts during the organization defined day of the accepting shift. Both the published and the unpublished schedule are checked. For two way swaps both the offering shift and the accepting shift are checked. For one way swaps the accepting shift is not checked if it has type time off .

Yet another hard validation rule ensures that the offering shift and the accepting shift are both valid i.e. the shifts themselves still exist in the schedule for the agent that the shift belongs to . For one way swap this includes verifying that the accepting shift has a time off activity and that the offering shift is valid. For a two way swap this includes verifying that both the offering shift and the accepting shift are valid shifts in the published and unpublished schedule .

Another hard validation rule checks that swapped shifts still exist in the schedule unpublished and have not been modified in any way e.g. shift time range . For two way swap both shifts are verified. This rule also verifies that shift locations in the unpublished schedule before the swap are still empty.

As described above soft validation rules S or S are applied to determine whether a partial shift swap request or is disposed of by approval denial or suspension for manager review. More specifically the criteria for each rule is applied to the request resulting in a violation or a pass for each rule. Criteria for several exemplary soft validation rules will be described next followed by further details about the process of applying soft validation rules.

Some soft validation rules are related to the duration of the portion of the shift being swapped. One such soft validation rule is violated when the duration of the swapped portion is less than a specified minimum. Another soft validation rule is violated when the duration of the shift portion remaining after the swap is less than a specified maximum. Either minimum can be expressed as an absolute time period or as a percentage of the duration.

A partial shift swap request or is associated directly or indirectly with one agent in the case of a one way swap or two agents in the case of a two way swap. Several soft validation rules are related to the associated agent or agents . One agent related soft validation rule which applies to a two way swap is violated if the two agents are not associated with the same organization during their respective shifts before and after the swap. Another agent related soft validation rule ensures that the two agents are associated with the same campaign. As applied to one way swaps this rule is violated if the two agents are not associated with the same campaign on the day of the shift being swapped. As applied to two way swaps this rule is violated if the two agents are not associated with the same campaign during their respective shifts before the swap and after the swap.

Yet another agent related soft validation rule is violated when the two agents do not have the same skills for the active campaign queue during the time period of the shift involved. Yet another agent related soft validation rule is violated when the two agents do not have the same skill proficiency level for the active campaign queue during the time period of the shift involved.

Each campaign is associated with a set of work rules which specify how many hours an agent can work or be paid for in a time period. Some soft validation rules check for compliance with these work rules. One validation rule is violated when a weekly maximum of hours worked is exceeded or a weekly minimum is not met for the shift portion being offered and for the shift portion being accepted. Another soft validation rule is violated when the total paid shift duration exceeds the daily maximum as a result of the swap. One variation of this rule calculates the shift duration using the organization s day boundaries e.g. 6 00 AM to 5 59 AM . Another variation calculates the shift duration using a rolling 24 hour period before and after the shift. Yet another validation rule is violated when both shifts or shift portions in a two way swap do not include the same number of paid hours. Another soft validation rule is violated if the swapped shift portions do not fall within the same organization defined week.

Shifts may contain various non work activities e.g. agent is unavailable or related to work activities e.g. training . One soft validation rule is violated when the swap includes any of a list of prohibited activities. Some soft validation rules relate to handling activities assigned to specific calendar days during a swap. One such soft validation rule is violated when the swap results in a particular calendar assigned activity falling outside of the agent s shifts as the result of the swap if that activity is required to take place during an agent s assigned shift.

Another soft validation rule is violated under either of two conditions. The first condition occurs when a swap would result in any overlap between the accepting shift and an unavailable activity. For example suppose a shift assigned from 9 AM 3 PM was offered for swap. An acceptor agent with an unavailable activity that includes any time between 9 AM 3 PM meets the first condition and the rule is violated. Note that no overlap at all is allowed unavailability from 8 30 9 15 violates the rule as does unavailability from 2 45 3 15 PM.

The second condition occurs when a swap would result in the loss of a calendar assigned activity or a time off activity which overlaps a shift. Put another way swapped shifts should overlap the exact same portion with calendar assigned and time off activities otherwise the rule is violated.

An example involving the second condition is as follows. Suppose an offeror agent has an assigned shift 9 AM 12 PM with a calendar assigned activity from 10 AM 11 AM. The first condition would be met if the accepting shift starts at 10 30 or 11 30 since the accepting shift overlaps with the calendar assigned activity. The rule would be violated and the swap request may be denied depending on the rule behavior. However an accepting shift from 9 30 AM 12 00 does not overlap the calendar assigned activity from 10 AM 11 AM but rather completely includes the calendar assigned activity. Therefore the first condition is not met and the rule is not violated.

Some partial shift swaps result in either an overlap with an already assigned shift or a gap between an already assigned shift and the newly assigned shift. One soft validation rule is violated when the duration of the resulting overlap is more than a specified maximum. Another soft validation rule is violated when the duration of the resulting gap is less than a specified minimum or is outside a specified range e.g. 1 5 hours . In one embodiment if both the gap range and minimum are specified a violation occurs only if both the conditions are violated.

Now that example criteria have been discussed application of the rules to the swap request and disposition based on the result will now be discussed. Each of the set of rules S or S is applied to a partial shift swap request or . Behavior associated with each rule and or the set of rules then determines how the request is disposed of approved denied or held for manager review. Rule behavior works as follows. Two types of rule behavior are specific to a particular rule one automatically denies the request when that rule is violated and the other automatically grants the request when that rule passes. Other types of rule behavior are global to the set of soft validation rules. One of these global behaviors automatically denies the request when any rule in the set is violated. Another global behavior automatically grants the request when any rule in the set passes. Two other global behaviors force a manager review of the request one suspends the request for manager review even when application of the rule would otherwise indicate an automatic approval the other suspends the request for manager review even when application of the rule would otherwise indicate an automatic denial.

The process of applying rules to a request and disposing of the request based on the rule behaviors will be discussed in connection with the flowchart in . The process of applying a set of soft validation rules begins at block with an iteration loop that is applied for each rule in the set of soft validation rules associated with the partial shift swap request or . Block applies the current rule to the partial shift swap request or to determine whether or not the request violates the rule. Next block records whether the request violated the rule or the request passed the rule. Processing returns to block with the next loop iteration.

After applying all rules in the set processing continues at block which determines using information maintained in block whether any of the soft validation rules have been violated. If any rule is violated then processing continues at block which will be discussed later. If no rule is violated processing continues at block where the global rule set behavior is examined. If the global behavior type is ApproveIfNoViolations then the process returns with a disposition of Approve at block . If the global behavior type is NoAutomaticApprove then the process continues at block where the process returns with a disposition of Hold. Otherwise processing continues at block which will be discussed later.

Returning now to block when at least one soft validation rule was violated block examines the global rule set behavior. If the global behavior type is DenyIfAnyViolations then the process returns with a disposition of Deny at block . If the global behavior type is NoAutomaticDeny then the process continues at block . Otherwise processing continues at block .

Block starts an iteration loop that is applied for each violated rule as determined by block . Next at block the behavior of each violated rule is examined. If the rule behavior type is DenyIfViolated then the process returns with a disposition of Deny at block . Otherwise processing returns to block for the next loop iteration until the loop ends with all violated rules processed. At that point the process returns with a disposition of Suspend at block .

Returning now to block when no soft validation rule was violated and the global behavior block is not ApproveIfNoViolations or NoAutomaticApprove block starts an iteration loop that is applied for each non violated rule as determined by block . Next at block the behavior of each non violated rule is examined. If the rule behavior type is ApproveIfNotViolated then the process returns with a disposition of Approve at block . Otherwise processing returns to block for the next loop iteration until the loop ends with all violated rules processed. At that point the process returns with a disposition of Approve at block .

In this manner the partial shift swap request or is automatically approved if either no rule violations were found and the global rule set behavior is ApproveIfNoViolations or if at least one passing rule non violation is found with a corresponding rule behavior of ApproveIfNotViolated. The partial shift swap request or is automatically denied if either at least one rule violation was found and the global rule set behavior is DenyIfAnyViolations or if at least one rule violation is found with a corresponding rule behavior of DenyIfViolated. The request partial shift swap request or is held for manager review if no rule violations were found and the global rule set behavior is NoAutomaticApproval or if at least one rule violation was found and the global rule set behavior is NoAutomaticDenial.

Some embodiments of partial shift swapping include a feature which allows agents to submit partial shift swap requests or which are then validated by the hard and soft validation rules. Two types of submission are described. In the first type of swap request submission the request specifies both the offering shift O and the accepting shift A . This type is appropriate when the offering agent has coordinated in advance with the accepting agent. That is John and Fred have already worked out the swap details by which Fred will accept John s shift one way or John will accept Fred s shift while Fred accepts John s shift two way .

In the second type of swap request submission the offering agent posts his offered shift. The posted offerings can be viewed by other agents. A second agent can pick up a posted shift offering at which point the swap request details have been determined and the swap request is created. In either case the partial shift swap request goes through hard and soft validation rule processing.

Both entry pathways converge at block where the submission information is used to create a partial shift swap request with an offering shift O an accepting shift A and the swap time range R . In block a determination is made as to whether the newly created swap request passes the hard validation rules H . Applying hard validation rules was described already in connection with . If the request failed hard validation the swap request is marked as failed or invalid block and process returns. If the request passed hard validation the request is marked valid block and processing continues at block .

At block an option in the partial shift swap request is examined. A valid partial shift swap request begins in a Negotiation state. Through an option associated with the swap request the offering agent can choose to allow the other agent involved in the swap to submit the request to the manager or to require feedback from the other agent before submission. When feedback is required the request remains in the Negotiation state until both agents agree on the swap details and one of them submits the request to the manager. In one embodiment the manager cannot view swap requests that are in the Negotiation state.

If block determines that the option is set to Submit Without Feedback then processing moves to block . Otherwise then block waits until the one of the agents has submitted the request after receiving feedback then moves to block .

At block process determines whether any soft validation rules are associated with the organization. If soft validation rules exist the submitted request is passed on in block to the soft validation rule engine. Processing of soft validation rules was described earlier in connection with . If no soft validation rules exist then block places the partial shift swap request in a Suspend state and notifies the manager that the request should be reviewed. The manager reviews the partial shift swap request and approves or denies the request.

In case of a denial the two agents involved in the swap are notified of the decision block . In the case of an approval the two agents involved in the decision are notified of the decision block and the schedule is updated block and then published. Process is then complete.

Any process descriptions or blocks in flowcharts should be understood as representing modules segments or portions of code which include one or more executable instructions for implementing specific logical functions or steps in the process. As would be understood by those of ordinary skill in the art of the software development alternate implementations are also included within the scope of the disclosure. In these alternate implementations functions may be executed out of order from that shown or discussed including substantially concurrently or in reverse order depending on the functionality involved.

The systems and methods disclosed herein can be embodied in any computer readable medium for use by or in connection with an instruction execution system apparatus or device. Such instruction execution systems include any computer based system processor containing system or other system that can fetch and execute the instructions from the instruction execution system. In the context of this disclosure a computer readable medium can be any means that can contain store communicate propagate or transport the program for use by or in connection with the instruction execution system. The computer readable medium can be for example but not limited to a system or propagation medium that is based on electronic magnetic optical electromagnetic infrared or semiconductor technology.

Specific examples of a computer readable medium using electronic technology would include but are not limited to the following an electrical connection electronic having one or more wires a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory . A specific example using magnetic technology includes but is not limited to a portable computer diskette. Specific examples using optical technology include but are not limited to an optical fiber and a portable compact disk read only memory CD ROM .

The foregoing description has been presented for purposes of illustration and description. It is not intended to be exhaustive or to limit the disclosure to the precise forms disclosed. Obvious modifications or variations are possible in light of the above teachings. The implementations discussed however were chosen and described to illustrate the principles of the disclosure and its practical application to thereby enable one of ordinary skill in the art to utilize the disclosure in various implementations and with various modifications as are suited to the particular use contemplated. All such modifications and variation are within the scope of the disclosure as determined by the appended claims when interpreted in accordance with the breadth to which they are fairly and legally entitled.

