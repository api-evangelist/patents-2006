---

title: Backup system and method
abstract: Backup of a production instance of an application in a production machine environment is performed by creating a snapshot image that captures the state of the production machine, and then backing up the application from a backup machine created using the snapshot image. The backup of the application can be effected by shutting down the backup machine and backing up its storage, or by using backup software to act on the backup version of the application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07689859&OS=07689859&RS=07689859
owner: Symantec Operating Corporation
number: 07689859
owner_city: Mountain View
owner_country: US
publication_date: 20061220
---
This invention relates to providing a backup of a computer system application in a real time environment.

Backup and archival of data from applications is a particular problem where the applications are required to run continuously without interruption 24 7 applications . In such an environment the lack of ability to quiesce and pause operations for backup is a difficult technical problem that still does not have a good universal solution. Also typical application vendor approved backup methods are associated with a performance impact on applications.

Indeed currently available backup methods all have drawbacks including one or more of requiring application vendor support requiring application specific code in the backup product performance impact sometimes to the extent of temporary application shutdown on the production or live instance of the application or lack of guaranteed consistency and recoverability of the captured data.

Examples of prior techniques for providing backup of a production instance of the application can be found in the following articles 

The techniques described in the above referenced articles include the backup of a production instance of an application and in some cases describe a requirement to quiesce that production instance to guarantee capturing a consistent application state.

There is a therefore need to provide for the universal backup of for example 24 7 applications in a consistent way.

An example embodiment provides for the backup of a production instance of an application in a production machine environment by creating a snapshot image that captures the state of the production machine and then backing up the application from a backup version of the machine created using the snapshot image.

An example embodiment provides a computer system comprising at least one processor and storage. The computer system is operable to provide a first machine instance in which an application is run to take a snapshot image of the first machine instance to initiate a second machine instance from the snapshot and to backup the application from the second machine instance.

An example embodiment of the invention provides a universal solution to the technical problem of providing backup and archival of data from applications that run 24 7 and are unable to quiesce and pause operations without impacting production performance. An example embodiment of the invention can avoid or at least mitigate the drawbacks of prior approaches that include a requirement for application vendor support a requirement for application specific code in the backup product performance impact sometimes to the extent of temporary application shutdown on a production instance of the application and a lack of guaranteed consistency and recoverability of the captured data.

In an example embodiment the production machine is a virtual machine whereby the backup version of the machine is a backup virtual machine. In one embodiment a backup of the application can then be effected by performing an orderly shutdown of the backup virtual machine. This example does not require a quiesce of the application and backs up a second instance of the application thus reducing impact on the production instance. In another embodiment a backup of the application can then be effected using backup software to act on the backup instance of the application. Application vendor approved backup methods can be applied without the impact on applications usually associated with those methods.

An embodiment of the invention differs from prior techniques described above in that it does not require a quiesce of the production instance and backs up a second instance thus reducing impact.

Although various aspects of the invention are set out in the accompanying independent claims other aspects of the invention include any combination of features from the described embodiments and or the accompanying dependent claims with the features of the independent claims and not solely the combinations explicitly set out in the accompanying claims.

While the invention is susceptible to various modifications and alternative forms specific embodiments are shown by way of example in the drawings and are herein described in detail. It should be understood however that drawings and detailed description thereto are not intended to limit the invention to the particular form disclosed but on the contrary the invention is to cover all modifications equivalents and alternatives falling within the spirit and scope of the present invention as defined by the appended claims.

Backup of an application running in a live i.e. active or production physical or virtual machine environment i.e. a first instance of the machine can be achieved by creating a snapshot image that captures the state of the machine at a given point in time initiating a second instance of the machine by using the snapshot image and backing up the application from within the second instance of the machine. Because the second instance of the machine provides an operating environment that is distinct from the first instance of the machine backing up the application from within the second instance of the machine does not impact the live operation of the application in the first instance of the machine.

In an example embodiment the live machine environment is a live virtual machine environment. By taking a snapshot of the live virtual machine environment a backup instance of the virtual machine can be created. Shutdown of the application in the backup instance of the virtual machine or shutdown of the entire backup instance of the virtual machine enables orderly shutdown of the application without impacting the live virtual machine environment. This allows the capture of a guaranteed consistent state of any application s data without requiring the application to support quiescence or hot backup. In another example embodiment a backup instance of a production application can be effected using virtual machine technology providing backup software with full access to supported application interfaces while reducing impact on the production instance of the application.

A first example embodiment of the invention can use existing virtual machine technology to create a second instance of a running application. Without impacting the production instance this second instance can be shutdown in an orderly manner thus guaranteeing that the application saves its entire state to storage. That storage can then be backed up and thereby can capture a state of the application data that is consistent and recoverable.

For example represents a networked system of at least first and computers . and . connected via a network . Each of the computers . . includes one or more processors . . memory . . and storage . . respectively plus other components for example including such components as illustrated in . In the networked system illustrated in the first computer . could be configured as a production system and the second computer system could be configured as a backup system with the storage being used for backing up the production system. Alternatively or in addition both of the first and second computer systems . and . and possibly further computer systems not shown could be configured as production systems. Separate storage possibly forming part of a further computer system could be used for backup storage.

In this embodiment a production application to be protected is run in a virtual machine environment as represented in . The virtual machine environment is configured to allow the creation of a snapshot of the virtual machine the in memory state and its associated storage. The only impact on the live or active production instance of the application is the impact of creating the virtual machine snapshot as dictated by the particular virtual machine technology used for the application.

Accordingly in step the application to be protected a production instance . of the application see is run in a live or active virtual machine environment . see .

In step a utility e.g. a snapshot application programming interface API see is operable to create a snapshot see of the live virtual machine environment . in which the production instance . of the application is running. A description of an example of a snapshot utility is to be found for example at http www.vmware.com support ws55 doc ws preserve.html.

In step after creating such a snapshot of the virtual machine environment . in which the production instance . of the application is being run the utility can be operable to use the snapshot to start a second virtual machine environment . running a backup instance . of the same application as represented in . This second virtual machine environment . forms a backup instance virtual machine that can be configured such that it does not share network connections with the production environment. For example the second virtual machine environment does not need to have network connections. The second virtual machine start up can also be configured such that the memory and storage associated therewith is distinct from that of the first virtual machine e.g. in a different address range to form a separate and writable snapshot of the production storage. Providing the separate and writable snapshot can enable an application to flush its state to disk as part of a shutdown process without affecting the first instance. The writable snapshot can be formed in any appropriate manner for example through the use of a checkpointing process a specific snapshot process a Business Continuance Volumes BCVS process a split mirror process or even storage on a separate set of disks with a copy of the data.

As the second backup instance machine does not share network connections with the first production instance machine and has memory and storage distinct from that of the first production instance machine the second backup instance machine can be said to be isolated from the first production instance machine.

In step the second virtual machine environment . in which the backup instance of the application is running as represented at . in shuts down in an orderly manner. Shutting down the backup instance in an orderly manner enables flushing of its state to storage for example the storage shown in such that it can be restarted when the machine is rebooted.

In step after the second virtual machine environment has been shut down the stored state of the application on storage can be retained as a backup image and or further backup images not shown in can be created from the storage of the second virtual machine environment. Any such backup images are consistent and recoverable as a business application can be expected to recover from an orderly shutdown.

In step recoverability of the backup image can optionally be tested by restarting this virtual machine and testing the availability of the application after the restart.

During the process represented in the production instance of the application can continue to run unaffected other than the initial impact of creating the virtual machine snapshot . The backup instance of the application can be created anywhere. For example it can be created off host from the production instance possibly on a backup media server e.g. the computer system . of if it is desired to further improve the performance of the backup. In this example embodiment application vendor support is not required and no application specific code is involved in the backup process.

It is known use of virtual machine VM technology to create alternate instances of applications for the purpose of fail over or migration see for example http eval.veritas.com downloads news Illuminata Aug05.pdf and http www.usenix.org event usenix05 tech general full papers short papers nelson nelson html index.html .

A further example embodiment is described with reference to . This example also makes use of virtual machines to minimize production impact of application backup. This second example differs from the first example in that it does not use an application shutdown to capture a quiesced state of an application s data but instead relies on application supported interfaces for the backup.

Accordingly in step the application to be protected a production instance . of the application see is run in a live or active virtual machine environment . see .

In step a utility e.g. a snapshot application programming interface API see is operable to create a snapshot see of the live virtual machine environment . in which the production instance . of the application is running.

In step after creating such a snapshot of the virtual machine environment . in which the production instance . of the application is being run the utility can be operable to use the snapshot to start a second virtual machine environment . running a backup instance . of the same application as represented in . This second virtual machine environment . forms a backup instance virtual machine that can be configured such that it does not share network connections with the production environment. For example the second virtual machine environment does not need to have network connections. The second virtual machine start up can also be configured such that the memory and storage associated therewith is distinct from that of the first virtual machine e.g. in a different address range to form a separate and writable snapshot of the production storage. Providing the separate and writable snapshot can enable an application to flush its state to disk as part of a shutdown process without affecting the first instance. The writable snapshot can be formed in any appropriate manner for example through the use of a checkpointing process a specific snapshot process a Business Continuance Volumes BCVS process a split mirror process or even storage on a separate set of disks with a copy of the data.

As the second backup instance machine does not share network connections with the first production instance machine and has memory and storage distinct from that of the first production instance machine the second backup instance machine can be said to be isolated from the first production instance machine.

This example embodiment can use snapshot technology to create the second instance of a running application and then without impacting the production instance. This second instance can be accessed by conventional backup software allowing full access to application interfaces without impacting the production instance of the application.

In step of and as also represented in in this example embodiment backup software is then instructed to use application agents for example existing vendor supplied backup agents to backup the backup instance . of the application from the backup virtual machine environment . instead of the production instance . from the production virtual machine environment. The backup software can apply all backup features using supported application interfaces without impacting on the production instance of the application. This enables the backup to be created using mechanisms supported by an application vendor.

The use of the snapshot in this example enables a backup instance of one or more production applications to created using existing virtual machine technology thereby reducing impact on the production instance while still providing the backup software with full access to supported application interfaces. This example embodiment allows application vendor approved backup methods to be applied without the application impact usually associated with those methods.

During the process represented in the production instance of the application can continue to run unaffected other than the initial impact of creating the virtual machine snapshot . The backup instance of the application can be created anywhere. For example it can be created off host from the production instance possibly on a backup media server e.g. the computer system . of if it is desired to further improve the performance of the backup.

In both examples described above the software of the application can be assumed correctly to deal with broken network connections and correctly to perform an orderly shutdown. Such characteristics must be present in a business critical application.

As discussed prior solutions to the application backup problem have always required either shutdown of the production instance or hot backup or quiesce support from the application vendor to guarantee consistency of the backup image. An example embodiment of the invention differs in that such requirements can be avoided.

It should be noted that virtual machine snapshots alone do not provide an adequate solution to the problem of providing backup because they can only be used to re instate a virtual machine running the same version of the application at the captured point in time. The storage state is not guaranteed to be consistent the application data cannot be accessed outside of this environment and this does not allow for search and granular restore of application data. Accordingly generating a virtual machine snapshot is not on its own suitable for long term backup and archiving of application data. An embodiment of the invention differs therefrom in that it enables backup and archive software features to be provided.

Some existing backup solutions that are supported by application vendors use the production instance thus having substantial performance impact on the production application. Existing solutions that use alternate instances of applications require that alternate instance to be constructed using a second installation of the application which is started on a storage snapshot taken from the production instance. This invariably has one or more of the following drawbacks It requires a quiesce of the production instance to create the storage snapshot which has production impact or it can not guarantee consistency of the application data. It also requires the second instance of the application to be installed and configured by the customer.

An embodiment of the process can be implemented by means of special purpose hardware or by means of computer software operating on conventional general purpose computer hardware.

A computer program product for implementing the invention can be in the form of a computer program on a carrier medium. The carrier medium could be a storage medium such as a solid state magnetic optical magneto optical or other storage medium. The carrier medium could be a transmission medium such as broadcast telephonic computer network wired wireless electrical electromagnetic optical or indeed any other transmission medium.

Thus there has been described a system method and computer program providing for the backup of a production instance of an application in a production machine environment by creating a snapshot image that captures the state of the machine and then backing up the application from a backup machine created using the snapshot image. The backup of the application can be effected by shutdown of the backup machine or by using backup software to act on the backup version of the application.

Although in the described examples virtual machine technology is used for creating a backup instance of a production application and then the backup instance is used to create the backup of the application other technology could be used. For example software products that restore an image of a physical machine onto another physical machine could be used instead. Accordingly it will be appreciated that the claimed invention is not limited to the specific examples described herein.

Thus although the embodiments above have been described in considerable detail numerous variations and modifications will become apparent to those skilled in the art once the above disclosure is fully appreciated. It is intended that the following claims be interpreted to embrace all such variations and modifications as well as their equivalents.

