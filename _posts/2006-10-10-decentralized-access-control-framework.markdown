---

title: Decentralized access control framework
abstract: A functional architecture is provided for decentralizing the authorization function of an access control system that incorporates user carried access devices, such as smart cards, and door controllers that interact so as to make access decisions. Access to individual rooms is guarded by parameters partially carried by the user carried access devices and partially included in the door controllers.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08166532&OS=08166532&RS=08166532
owner: Honeywell International Inc.
number: 08166532
owner_city: Morristown
owner_country: US
publication_date: 20061010
---
The present application relates to decentralizing the authorization function in the context of physical access control.

Access control is frequently implemented to control the access of users to resources and or to make decisions about denying or granting access to those resources. In the context of physical access control these resources are typically rooms or more generally restricted areas guarded by entrances or doors.

The goal of authorization in access control is usually to specify and evaluate look up a set of policies that control the access of users to resources i.e. making decisions about denying or granting access of users to resources. The goal of secure authorization is usually to communicate this decision in a secure manner. The goal of authentication is usually to verify that a user is who the user says he or she is. The focus herein is primarily on authorization.

As shown in an access control system traditionally includes card readers . . . connected to a centralized controller . The card readers . . . for example are typically stationed at doors or other access points to restricted areas. Each of the card readers . . . reads access cards carried by the users and the card readers . . . communicate information read from the access cards to the centralized controller . Locks or other entry control devices . . . at the access points to the restricted areas are subsequently instructed by the centralized controller to either permit or deny access. The card readers . . . communicate with the centralized controller for every access request. Each of the locks or other entry control devices . . . usually correspond to one of the card readers . . . and are located at the same access point.

In many access control systems such as the access control system shown in neither the card readers . . . nor the access cards have any appreciable processing power or memory themselves. Hence such card readers . . . and access cards are usually referred to as passive devices.

By contrast the centralized controller of the access control system is usually a well designed and sophisticated device with fail over capabilities and advanced hardware and algorithms to perform fast decision making.

The decision making process of the centralized controller of the access control system is fundamentally based on performing a lookup in a static Access Control List ACL . The ACL contains static policy based rules e.g. one rule in the ACL might provide that user X is not allowed entry into room R which change only when the policy changes e.g. the ACL might be changed to provide that user X can henceforth enjoy the privileges of room R .

Policies are implemented in a set of rules that governs authorization. The static ACL based policies as mentioned above can be viewed as context independent policies. In contrast context sensitive policies will require a dynamic evaluation of different states of the system including the user s past history of activities. This evaluation is referred to as dynamic authorization.

With the interconnect architecture of and with a reasonable number of users of a protected facility the access control system using static ACL based policies makes decisions quickly is reliable and is considered to be reasonably robust. It may be additionally noted that in current access control systems context sensitive policies typically constitute a small fraction of the total policies governing the operation of the system.

It is expected that buildings and facilities of the future will require increasingly more intelligent physical access control solutions. For example access control solutions are being provided with the capability to detect such conditions as intrusion and fire. In general this increased capability implies that such access control solutions should be provided with the ability to specify conditions that are dynamically evaluated e.g. disable entry to a particular room in case of a break in and or disable entry to a particular room if its occupancy reaches its capacity limit and or allow entry to a normal user only if a supervisor is already present inside the room etc. This increased capability leads to a significant emphasis on the need for dynamic authorization. That is if context sensitive policies form a significant part of the access control policies of a facility then the facility will appear to adapt its access control enforcement in keeping with the changes in the system. Thus the facility will appear to be more intelligent as compared to facilities having a lesser number of context dependent access control policies.

Such dynamic authorization can be centrally implemented with the current architecture . This centralized implementation will require the context information pertaining to every possible policy to be continuously gathered at the central controller and upon a request the controller needs to evaluate this context and needs to arrive at a dynamic authorization decision.

While this process can work for small facilities such a centralized solution will not scale up well with an increase in the number of users size of the facility or complexity of the context sensitive policies since progressively more and more information will have to be pushed from various sources to the central controller.

Due to reasons of flexibility and ease of installation and modification a general purpose network e.g. an Internet Protocol IP network of a facility is more attractive for an access control solution in comparison with the special purpose dedicated connections between the various devices and the central controller in .

As shown in an access control system using a more generic interconnect architecture may include card readers . . . connected to a network that is either a wired only network or a wireless only network or a mixed wired and wireless network. The network includes controllers . . . and servers . . . . The architecture of is not suitable for the centralized access control system shown in . This unsuitability is due to the fundamental dependency on the central controller for every decision i.e. a system architecture that necessitates a guaranteed reader to controller communication for every access decision will not be a good choice for the more generic and flexible interconnect architecture such as that shown in .

The present application focuses primarily on a decentralized policy evaluation framework for dynamic authorization. Addressed herein are issues of scalability related to dynamic authorization as raised above. The present invention as set out in the claims hereof enables an access control system to leverage a more general purpose network e.g. the IP network of a facility.

Most work in the domain of facility access control is based on a model having a door D that receives an input I including user id from an access card or some other device carried by an user that sends information i where i f I to a central controller E and that receives a response R from the central controller E. The response R indicates whether or not access is allowed.

A purely centralized implementation of access control has only one controller E whereas a slightly more scalable solution that has multiple controllers with different levels or hierarchies and data caching is shown in European Application EP1320012A2.

U.S. Pat. No. 6 570 487 describes an arrangement that is intended to improve the robustness of communications from the doors to the access controllers by providing redundancy of receivers and access controllers referred to as distributed receivers and distributed access controllers in the literature .

One fundamental problem addressed by work related to access control is that of a secure transmission of the response R from the controller E to the door D rather than of determining the response R per se. It may be recalled that determining the privilege grant content of the response R i.e. computing what should be the access permission given a certain door D and input I is the problem of authorization.

Core Street has described a technique for making the controller E to door D communication more secure by enabling the door D to figure out if the response R is valid given the input I. Only the controller E can generate the response R and this response can then be made publicly available. That is the response R cannot be generated by a non controller E given the input I and previous responses on similar transactions.

Thus as detailed in U.S. Published Application 20050055567 a barrier to access is provided that includes a controller and at least one administration entity. The controller selectively allows access and the at least one administration entity generates credentials proofs. According to the barrier no valid proofs are determinable given only the credentials and values for expired proofs. The controller receives the credentials and proofs the controller determines if access is presently authorized and if access is presently authorized the controller allows access.

Document WO2003088166A2 shows how the door D can verify the response R by making use of a one way hash function H N where Nis dependant on the input I and an elapsed time interval of which the door D keeps track. A related document WO2005010685 underlines how this strategy can be useful for disconnected doors where essentially the response R will be carried by the access card.

U.S. Published Application 20030028814 describes a generic microcontroller enabled door reader that can communicate with a smart card. However its functional architecture uses the card and reader interaction to establish the authenticity of the card and not for authorization.

In the last 10 15 years significant research efforts have been directed towards coming up with an authorization framework inclusive of a policy specification language and a well defined authorization model that supports dynamic authorization. To a large extent these frameworks focus on languages that provide flexibility in specifying role based policies and guarantees unambiguous evaluation decision with feasible bounds on the run time and implicitly assume a centralized implementation of the policy evaluation. These approaches concentrate more on access control as modeled on computer systems in general and not on physical access control in buildings. Consequently while they underline the need and importance of context dependent or dynamic evaluation of access control policies the functional architecture remains centralized and focused on languages that provide flexibility in specifying role based policies and guarantees unambiguous evaluation decision with feasible bounds on the run time.

U.S. Pat. No. 6 647 388 discloses that an access request can be used to extract a policy condition and that the policy condition is evaluated to determine if there is sufficient information available to evaluate to obtain the necessary information if there is insufficient information to reach a proper decision and then to grant or deny access on the basis of the evaluated information. However this processing was designed for access control in computer systems in general and hence its functional architecture differs from that of the present invention.

Similarly U.S. Published Application 20050068983 includes a context based access control policy but is more geared towards software systems where the requesting agent can wait for all the necessary context evaluations to be performed by a separate service module.

U.S. Published Application 20050080838 presents a flexible architecture for dynamic policy evaluation in the context of web services and is significantly different in the functional modules from the present invention. U.S. Pat. No. 6 014 666 U.S. Published Application 20050132048 A1 U.S. Published Application 20030204751 A1 and U.S. Published Application 20050138419 A1 also discuss similar access control mechanisms in the context of general computer systems and software agents.

There exist applications and standards that use smart cards where per user information is written back to the cards from specific terminals controllers that they interact with e.g. MONEO and CEP . An example is the electronic purse. However these applications concentrate more on security issues and not so much on the context dependent run time policy evaluations.

The recent draft of XACML extensible Access Control Markup Language Version 2.0 under OASIS also addresses access control of general computer systems and focuses on the policy language model. It does include the vision of a distributed access control based on a request response model of many participating entities and lays down the request response language protocols for exchanging access control decisions. Thus it streamlines the terms and their scopes in the context of access control on an internet based network of computing resources and lays down recommendations of various kinds of data exchanges and their suggested formats . However it does not identify any particular functional architecture for decentralized user access control in relation to large facilities.

According to one aspect of the present invention a decentralized access control system is provided to make decentralized access authorization decisions. The system comprises the following at least one access controlling device and at least one user carried device. The access controlling device provides a first parameter that enables a decision relating to access authorization of a user. The at least one user carried device is carried by the user and interacts with the access controlling device the user carried device stores a second parameter that enables the decision relating to the access authorization of the user at the instance of presenting the user carried device to the access controlling device and the decision is made as a function of both the first parameter and the second parameter.

According to another aspect of the present invention a smart card which is useful in a decentralized access control system whereby access authorization decision making is decentralized comprises a memory and a processor. The memory stores policy rules the policy rules enable decisions to be made at instances of presenting the smart card to an access controller controlling access to a restricted area and the decisions relate to access to the restricted area by a user of the smart card. The processor is coupled to the memory and is arranged to enable the decisions based upon the policy rules and a system context transmitted to the smart card. The system context is based on an environment relating to the restricted area.

The domain of the control of physical access to a facility involves users who are free to move making requests e.g. swiping a card pointing a device etc. to some physical device e.g. reader processor etc. for access to some resource. For example facility access control that guards a user s physical entry exit to from a room or other similar restricted area exemplifies this physical access control space. Facility access control specifies and enforces a set of policies rules that dictate access of users to spaces such as rooms. Authorization deals with the issues of determining whether to grant or deny access as per the policies rules that are conditional on dynamically changing aspects of the system.

This issue of authorization is addressed herein as distinct from issues relating to security i.e. secure communication of authorization decisions and authentication identification of an user . Existing access control systems primarily address static policies and typically involve a centralized implementation strategy where all the policies are stored as an access control list ACL in a central controller. The readers of existing access control systems are installed at various doors and communicate with the central controller for every access request. These readers receive the allow deny decisions from the controller and communicate the decisions back to the user requesting access. This solution cannot be adequately scaled up to meet the needs of future buildings where it is envisioned that i the policies rules are predominantly context sensitive ii there will be a large number of users and iii connections between readers and controllers will leverage a generic building network. A reader controller communication for every access request in such a scenario will not be scalable.

Therefore according to one embodiment of the present invention authorization is decentralized and consequently does not rely on communications between the readers and a central controller for access decisions.

According to this embodiment of the present invention users carry devices such as smart cards on which the policies dictating the access of users are stored. These access controlling policies are system context dependent. For example one policy might provide that a requesting user is allowed access only if the occupancy of the room is less than or equal to a predetermined capacity limit such as 20 occupants. In such a case an allow or deny decision is dictated by the system context involving the occupancy of the room.

Policies may be specified in a formal language and stored as an executable on the smart cards. System context information is obtained dynamically from the system. Upon an access request from a user the policies stored on his her smart card are executed along with the system context information and an allow deny decision is made by the smart card and the reader that is installed at the portal to the room to which the card holder desires access. Per user state information is then written back to the smart card.

One embodiment of an access control system for the control of access to a building with interconnects is shown in . The access control system implements de centralized access control DAC which is not to be confused with Discretionary Access Control. The de centralized access control for example may be arranged to fall within the domain of non discretionary access control.

The access control system includes user carried devices e.g. smart access cards readers e.g. device readers access agents e.g. portals such as doors resources e.g. protected areas such as rooms an interconnect policies that are context sensitive and dynamic and controllers .

The user carried devices have built in computational capabilities and memories as opposed to passive cards that are commonly used today. Users are required to carry the user carried devices . The user carried devices are more simply referred to herein as smart cards. However it should be understood that the present invention can also relate to user carried devices other than smart cards.

The readers at the doors or other portals are able to read from and write to the user carried devices .

The access agents are access control enabled. The access agents are more simply referred to herein as doors. However it should be understood that the present invention relates to access agents other than doors. Each of the doors for example may be arranged to have one or more readers . For example each of the doors may be arranged to have two readers with one of the readers on each side of the corresponding door . Also each of the doors for example may be arranged to have a corresponding one of the door controllers . The door controller is connected to the reader and has an actuator for locking and unlocking the corresponding door . The door controller will usually have a wireless locally wired communication component and some processing capabilities. Each reader can have its own controller too. Also the functionality of the door controller and the reader can be folded into one integrated unit as well and a door may have two such units on either side.

The resources for example may be enclosed spaces or other restricted areas. Access to the resources is permitted by the doors with each of the doors being provided with a corresponding one of the door controllers to control access through a corresponding one of the doors and into a corresponding one of the resources .

The interconnect interconnects the door controllers and is typically a mix of wired and wireless components and can leverage the facility IP network. It should be understood that the interconnect may instead comprise only wired components or only wireless components that the wired components may include regular network cables optical fibers electrical wires or any other type of physical structure over which the door controllers can communicate and that the wireless components may include RF links optical links magnetic links sonic links or any other type of wireless link over which the door controllers can communicate.

The policies include authorization policies that depend on a system context e.g. refuse entry if the number of people in a room is more than a threshold and that can be altered dynamically.

The smart cards carry information about all the access policies of the corresponding user. Upon an access request the access decision is made locally by virtue of the interaction between the smart card which carries the policies and the door controller which supplies the context information. In one embodiment the smart card can use the policy and both the system context and the user s history in order to make a decision regarding the request for access by the user through the door .

The interconnect is used to transfer system level information to the door controllers and to program the door controllers .

One example of system level information can be administrative actions like raising the security level of a facility to high which need to be communicated to all or to at least some of the door controllers using the interconnect .

Another example can be local information as collected from different door controllers of a particular room in order to locally compute the room occupancy using the interconnect to talk amongst themselves. The logs of the different door controllers are also periodically pushed to a central place using the interconnect .

The users are expected to re program re flash or otherwise alter the policies stored on their smart cards on an agreed upon granularity so that they can reflect any change in the policies . In specific instances all or some door controllers may be instructed to reflash the policies of certain users or a group of users by using the readers attached to the controllers to reflash the user carried devices .

Thus instead of a central controller storing all policies as is done in traditional access control systems the pertinent portions thereof i.e. of the policies are stored on the user s smart card in connection with the access control system . The door controller and the smart cards communicate with one another in order to choose the correct policy and hence control access to the room .

The policies stored on the smart card may be personal to the user possessing the smart card . For example the smart card of user A may contain a policy specifying that user A is permitted access to a room only if user B is already in the room. However the smart card of user C may contain no such policy.

To implement and enforce context sensitive policies the smart cards carry a policy rule engine instead of static policies. The door controllers by virtue of the interconnect imposes the system context. The system context in conjunction with the rule engine on the smart cards dynamically makes the access decisions.

Thus the policies are analyzed by a policy analyzer in conjunction with a facility topology are converted into user specific rule engines and are programmed into the smart cards . The door controllers are also programmed configured by the analyzer in order for them to evaluate the system context in a distributed manner. The door controllers can write user specific history into the smart cards at runtime. The policies are combined with the system context imposed by the door controllers in order to make access decisions.

As an example one of the rules that is produced by the policy analyzer from the policies might specify that entry into a particular one of the rooms identified by the facility topology is allowed only if occupancy in this particular room is less then twenty e.g. the capacity limit of this room . The context of this policy is the current occupancy of this room. The door controller which is charged with imposing the system context maintains a count of the occupants of the room. When a user with a smart card that has the rule engine corresponding to the above policy requests access to the room the policy is evaluated by the smart card after applying the system context which it receives from the door controller and makes the access decision to grant or deny access.

The policies for example may be specified using a formal logical language. The formal logical language may be built on top of certain elementary relations over events and variables using Boolean operations and quantification. The events may be atomic entities relating to the system context and the movement of users inside a facility. The variables may be place holders used to quantify over events. The relationship between an event and a variable determines how a variable represents a particular event and the order of occurrence of events.

An administrator can define the policies in a high level English like specification which follows a grammar. The grammar in this context refers to a language generation rule. The policy analyzer includes a high level policy parser that parses the policies input by the administrator in accordance with the grammar and translates the policy input into a formal logical language.

One formal logical language that can be used for this purpose is the Monadic Second Order MSO Logic. This logic is parameterized by a set of events where events are entities that represent access control requests decisions and system context e.g. a room reaching its maximum occupancy . The events may thus be atomic entities relating to the system context and the movement of users inside a facility. The formal logical language may be built on top of certain elementary relations over events and variables using Boolean operations and quantification. In summary the syntax of the formal policy language can be MSO logic tuned to the context of access control e.g. using application specific knowledge to define the relations over events.

The high level parser of the policy analyzer works by first parsing the high level policy to extract pieces of templates for which pre designated Monadic Second Order formulas can be substituted. The Monadic Second Order formulas of the pieces of templates are then put together e.g. by means of conjunctions or disjunctions by the high level parser to obtain a single Monadic Second Order formula corresponding to the policy.

The parser uses knowledge of the application domain to effectively perform the translation. Once a grammar for the high level English like specification is defined according to the needs of the access control application parsing can be carried out using well known parsing techniques available from Alfred V. Aho Ravi Sethi Jeffrey D. Ullman in Compilers Principles Techniques Tools Reading Mass. Addison Wesley 1986 and well known tools disclosed by S. C. Johnson in YACC Yet another compiler compiler Technical Report Murray Hill 1975 and by Charles Donelly and Richard Stallman in Bison The YACC Compatible Parser Generator Reference Manual Free Software Foundation Version 1.25 edition November 1995.

In order for the policies specified in Monadic Second Order Logic thus obtained to be operational in terms of enforcing access they have to be converted into computational executable machine models. These machine models can then be stored in appropriate locations for execution. Conventional finite state automata may be used as the machine models that execute these policies. A language analyzer of the policy analyzer may be used to constitute the set of algorithms that convert the policies specified in Monadic Second Order Logic into their equivalent finite state automata. A language analyzer algorithm follows well known theoretical techniques for converting formula into automata. Theorems and techniques from Thomas W. in Languages automata and logic in Handbook of Formal Languages Vol. III Springer N.Y. 1997 pp. 389 455 can be implemented as an algorithm for this language analyzer. The automata can then be stored in user carried devices to carry out the decentralized authorization. These automata act as rule engines executing the policies since as mentioned above their construction allows precisely those behaviors that satisfy the policies. All of the policies corresponding to a particular user are collected together and converted into executable automata which are then stored on the user s smart card .

The policy analyzer also use the topology of the facility in which the access control system is to be used. That way the executable automata are tailored for this topology. The door controllers may also be programmed configured by the analyzer in order for them to evaluate the system context in a distributed manner.

Accordingly when a user requests access to a room the corresponding door controller initiates execution of those of the policies stored in the user s smart card which results in an access decision allow deny that is unique to that user and to that room.

The parser and the language analyzer are together referred to in this disclosure as the high level analyzer or the policy analyzer or simply the analyzer .

Examples of dynamic policy types that can be specified using the formal logical language referred above include the following assisted access whereby one user can enter the facility only when another designated user is available to provide access anti pass back whereby re entry is denied if a user is found to have made an unrecorded exit after a valid entry system state based policies whereby access is limited for example by the number or category of users inside a room and temporal policies whereby a user has access to a facility only during specific interval of time. Different or other policies may be implemented.

The policy analyzer analyzes and converts the policies into their equivalent finite state automata. These automata act as rule engines executing the policies . They are constructed to allow precisely those behaviors that satisfy the policies. All of the policies corresponding to a particular user are collected together and converted into executable automata which are then stored on the user s smart card . When the user requests access to a room the corresponding door controller initiates execution of those of the policies stored in the user s smart card which results in a an access decision allow deny that is unique to that user.

The interconnect may be arranged to include a system administrator some of whose functions are discussed below.

A representative one of the smart cards is shown in . The smart card includes a memory a processor a transceiver and a power source . The memory for example may be a flash memory and stores the rule engine that enforces the policies targeted to the user carrying the smart card .

The smart card may be arranged to respond to a generic read signal that is transmitted continuously periodically or otherwise by the reader that is short range and that requests any of the smart cards in its vicinity to transmit its ID and or a request for system context and or other signal to the reader . In response to the read signal the smart card transmits the appropriate signal to the reader .

Accordingly when the user presents the user s smart card to the reader the transceiver receives from the reader at least the system context provided by the door controller . Based on this system context and the policies stored in the memory the processor makes the access decision to grant or deny the user access to the room associated with the reader to which the user s smart card is presented. The processor causes the grant decision to be transmitted by the transceiver to the reader . If desired the processor may be arranged to also cause the deny decision to be transmitted by the transceiver to the reader .

The memory may also be arranged to store a personal ID of the user to which the access card is assigned. When the user presents the smart card to the reader the processor may be arranged to cause the user s personal ID to be transmitted by the transceiver to the reader . In this manner particular users may be barred from specified ones of the rooms and access by specific users to specific rooms etc. may be tracked. Also the door controllers can be arranged to provide back certain system contexts that are targeted to particular users.

The processor for example may be a microcomputer a programmable gate array an application specific integrated circuit ASIC a dedicated circuit or other processing entity capable of performing the functions described herein.

The power source may be a battery or the power source may be arranged to derive its power from transmissions of the readers or the power source may be any other device suitable for providing power to the memory the processor and the transceiver .

The transceiver transmits and receives over a link . The link may be a wired link or a wireless link.

A representative one of the readers is shown in . The reader includes a transceiver a processor a transceiver and a power source . Although not shown the reader may also include a memory.

When the user presents the user s smart card to the reader the processor causes the transceiver to send a signal to the door controller that the smart card is being presented to the reader . This signal prompts the door controller to transmit appropriate system context to the reader . The system context supplied by the door controller is received by the transceiver of the reader . The processor causes the system context received from the door controller to be transmitted by the transceiver to the smart card . The access decision made and transmitted by the smart card is received by the transceiver . The processor causes this decision to be transmitted by the transceiver to the door controller .

The processor for example may be a microcomputer a programmable gate array an application specific integrated circuit ASIC a dedicated circuit or other processing entity capable of performing the functions described herein.

The power source may be a battery or the power source may be a plug connectable to a wall or other outlet or the power source may be any other device suitable for providing power to the transceiver the processor and the transceiver .

The transceiver transmits and receives over a link . The link may be a wired link or a wireless link. The transceiver transmits and receives over a link . The link may be a wired link or a wireless link.

A representative one of the door controllers is shown in . The door controller includes a transceiver a processor a transceiver a memory one or more context detectors and a power source .

When the user presents the user s smart card to the reader and the reader sends a signal requesting the appropriate system context the transceiver receives this request signal causing the processor to control the transceiver so as to transmit this system context to the reader . The system context may be stored in the memory . For example the system context stored in the memory may be user specific and may be stored in the memory by user ID. Thus when a user s smart card transmits its user ID to the door controller via the reader the door controller transmits back system context specific to the user ID that it has received.

According to one embodiment of the present invention at least a portion of the system context results from the context detector . The context detector may simply be a counter that counts the number of users permitted in the room guarded by the door controller . However the context detector may be arranged to detects additional or other system contexts to be stored in the memory and to be transmitted to the reader and then to the smart card .

The processor for example may be a microcomputer a programmable gate array an application specific integrated circuit ASIC a dedicated circuit or other processing entity capable of performing the functions described herein.

The power source may be a battery or the power source may be a plug connectable to a wall or other outlet or the power source may be any other device suitable for providing power to the transceiver the processor the transceiver the memory and the context detector .

The transceiver transmits and receives over a link . The link may be a wired link or a wireless link. The transceiver transmits and receives over a link . The link may be a wired link or a wireless link.

Accordingly context sensitive policy enforcement is de centralized. Thus there is no need for a controller to centrally maintain information about per user permissions and system context. Instead access control decisions are made locally with the door controllers dynamically maintaining pertinent environmental system context. This de centralization alleviates the problem of scalability as the number of users and the complexity of the policies grow.

Moreover the access control system is easy to configure and re configure. At a high level the readers and or the door controllers are equipped with the knowledge of what they are protecting but not how they are protecting and how should they interact and compose the system context but not with details about an user s policy or history of activities. The readers and or door controllers are stateless in this regard making reconfiguration of the facility easier.

Further effective decentralization and localization of policy decision making also enables meaningful enforcement of at least some access control policies in the event of a disconnected or partially connected reader and or door controller . For example policies depending only on a user s past behavior and not on other system context can be enforced even if a door controller is disconnected from the system through the interconnect .

While secure authorization is not the primary focus of the present invention existing mechanisms can be used for a basic secure solution. For example using symmetric key encryption where all the access agents and the administrator share a secret key k with which they will be configured at the time of installation or on a subsequent facility wide reset operation if the key is compromised the per user policy engine and states can be encrypted with k on the user carried devices and the readers and or the door controllers can decrypt them using k and further write back encrypted states using k on the user carried devices. This symmetric key encryption ensures security as long as k is not compromised. The policy on the smart card can be certified by a digital certificate and its validity can be verified by using technologies like those developed by Core street.

Certain modifications of the present invention have been discussed above. Other modifications of the present invention will occur to those practicing in the art of the present invention. For example as described above the smart cards make the access decision as to whether a user is to be permitted or denied access to a room. The smart card makes this decision based on the policies that it stores and the system context provided by the door controller . Instead the door controller could make the access decision as to whether a user is to be permitted or denied access to a room based on the policies provided by the smart card and the system context stored in the memory of the door controller .

Also the reader and the door controller are shown as separate devices. Instead their functions may be combined into a single device.

Moreover the functions of the door controller may be moved to the readers reducing the door controller to a simple lock.

In addition the connections shown in may be wired connections or wireless connections or a mixture of wired connections and wireless connections.

Furthermore the door controllers may be arranged to log access decisions in a log file so that the decisions logged in the log file can be subsequently collated by a separate process for book keeping.

The system context may be detected by individual door controllers through sensors or context detectors either built into the door controllers or otherwise attached to them. An example of this can be the presence of a certain chemical in a room. The system context may also require the collaboration of different door controllers e.g. to decide if the occupancy of a room is below a certain threshold. Such contexts along with each of the individual grants denials to users are all represented as discrete events happening at the respective controllers . The policy specification language can also define hierarchical events which are formed out of individual events at different controllers. For example if event e represents the context of high threshold of a chemical in room A and event e represents the context of occupancy in room A 1 then the event e defined as e1 AND e2 represents the system context personnel hazard in room A . Such events may be specified as part of the policies . The analyzer can then translate the event definitions to specific actions on the part of the door controllers by which they will detect system context either individually or in collaboration as required by the policies.

Moreover as discussed above the interconnect of may include the administrator . The system administrator may be used to supply special system contexts that are in addition to any system contexts detected by the context detectors . Such special system contexts for example may be used to take care of emergency situations including but not limited to revoking the access rights of a rogue user.

Also the system administrator may be arranged to formally specify policy roles as the policies relate to each user and to assign the users to appropriate ones of these roles.

Usually the policies will not differ across every individual but are likely to be different across groups of individuals. In this sense a role refers to a certain policy or groups of policies that is applicable to a certain class of user. For example a supervisor is a role that can include the policy of free access to all rooms whereas a regular employee can be a role that includes policies which allow an entry to certain protected rooms only if a supervisor is present.

However the access control system may also include user specific authorization policies. An example of this can be a special user who is not a regular employee at a site but needs better structured access control policies as compared to a visitor.

Accordingly the description of the present invention is to be construed as illustrative only and is for the purpose of teaching those skilled in the art the best mode of carrying out the invention. The details may be varied substantially without departing from the spirit of the invention and the exclusive use of all modifications which are within the scope of the appended claims is reserved.

