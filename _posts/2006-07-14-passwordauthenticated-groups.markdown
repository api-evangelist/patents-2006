---

title: Password-authenticated groups
abstract: A system, apparatus, method, and computer-readable medium are provided for authorizing a computing node to participate in a group of computing nodes utilizing a shared group password. According to one method described herein, an invitation to join a group is transmitted to a tentative group member node. The invitation is used to establish a connection with a group member node of the group. The tentative group member node generates a hash of a group password and transmits the hash to the group member node. When the group member node receives the hash, the group member node compares the received value to a previously stored hash of the group password. If the previously stored value is identical to the value received from the tentative group member node, then the tentative group member node is authorized as a new member of the group. Otherwise the tentative group member node is not permitted to become a member of the group.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07958368&OS=07958368&RS=07958368
owner: Microsoft Corporation
number: 07958368
owner_city: Redmond
owner_country: US
publication_date: 20060714
---
A peer to peer P2P system is a network that relies primarily on the computing power and bandwidth of participants in the network rather than concentrating it in a relatively low number of servers. P2P systems are commonly used to connect computing nodes via ad hoc networks. P2P systems are useful for many purposes including real time communications RTC collaboration content distribution distributed processing file sharing and others.

In P2P systems it is often necessary to create secure groups of computing nodes. For instance it may be desirable for a group of computing nodes to create a secure group for the purposes of enabling collaboration on a project or secure instant messaging among group members. It is therefore desirable to restrict the participation in a peer group to a set of nodes known as group members. Other computing nodes that are not authorized as members of the group should not be permitted to connect to the group or participate in group activities.

In standard client server systems servers typically provide authentication and authorization services. In a P2P system however there are no centralized servers with security databases that can provide these security services. In a serverless peer environment the peer computing nodes must provide their own authentication. In many cases authentication is performed in P2P systems utilizing identity certificates. These identity certificates may be issued and signed by a central authority or they may be self signed certificates that are signed by their creators.

Previous P2P authorization solutions require significant out of band communication between an administrator node and the tentative group member in order for the tentative group member to become a member of a group. In particular in previous solutions several rounds of out of band communication including the insecure transmission of self signed certificates must take place in order to add a new member to a group. Previous solutions therefore are unnecessarily complicated require excessive user intervention and require the unnecessary utilization of computing resources in order to add a new member to a group of computing nodes. The only alternative to simplify authorization in current solutions is to do away with specific node authentication and simply assume that any anonymous node that presents a shared secret has the same permissions to the group. This alternative lacks the ability to differentiate permission levels and prevents the association of actions and data in the group with the node responsible for that action or data.

It is with respect to these considerations and others that aspects of a computing system for authorizing the granting of authority to a computing node to participate in a group of computing nodes utilizing a shared group password is described below.

A system apparatus method and computer readable medium are provided for authorizing the granting of authority to a computing node to participate in a group of computing nodes utilizing a shared group password. According to one aspect of the disclosure provided herein a shared password is utilized to authorize a tentative group member node for group membership. Use of the shared password allows the process of authorizing group membership for a tentative group member to be simplified.

According to one method described herein a computing node is granted authority to participate in a group of computing nodes as a member using a shared group password. In order to grant authority to the computing node an invitation to join the group is transmitted to a tentative group member node. The invitation contains data that can be utilized by the tentative group member node to locate and establish a connection to a group member node that is authorized to grant group membership authority. The invitation may be transmitted to the tentative group member node using an out of band communications medium such as e mail. A group password is also transmitted to the tentative group member node or a user of the node out of band.

In response to receiving the invitation the tentative group member node utilizes the data contained in the invitation to establish a connection with a group member node authorized to grant group membership authority. The connection may comprise a secure encrypted communications channel. The tentative member node also transmits its identity certificate to the group member node during the establishment of the communications channel. The group member node transmits its group membership certificate GMC to the tentative member node. The group membership credential is a certificate that chains back to a certificate called the group root certificate. The GMC is utilized by the tentative group member node to determine whether the group member node is actually a member of the group capable of granting group membership authority or if the node is an imposter.

If the tentative group member node determines from the GMC that the group member node is actually a group member who can grant group membership authority the tentative group member node generates a hash of the password and transmits the hash to the group member node. In embodiments a hash of a hash of the password and session data unique to the connection with the group member node may be transmitted for increased security. When the group member node receives the hash the group member node compares the received value to a previously stored hash of the group password. If the previously stored value matches the value received from the tentative group member node then the tentative group member node is granted authority to be a member of the group. Otherwise the tentative group member node is not permitted to become a member of the group.

In order to grant authority to the tentative group member node to be a group member the group member node utilizes the identity certificate received from the tentative group member node to generate a GMC for the new member. The GMC is transmitted to the tentative member node and is thereafter utilized by the new member node to confirm that the node is a member of the group. The GMC may be encrypted using a key derived from the password prior to sending to the tentative group member node. Group properties possibly including the stored hash of the group password are also propagated to the new group member node.

According to other aspects provided herein a create group invitation application programming interface API is provided. The create group invitation API is operative to receive one or more group properties and to create an invitation using the properties for transmission to a tentative group member node. The invitation contains data for establishing a connection to a member node of the group authorized to grant group membership authority. A password group join API is also provided that is operative to receive the invitation and a group password to establish a connection to the member node using the data contained in the invitation to generate a hash of the group password and to transmit the hash to the group member node.

The above described subject matter may also be implemented as a computer controlled apparatus a computer process a computing system or as an article of manufacture such as a computer program product or computer readable medium. The computer program product may be a computer storage media readable by a computer system and encoding a computer program of instructions for executing a computer process. The computer program product may also be a propagated signal on a carrier readable by a computing system and encoding a computer program of instructions for executing a computer process. These and various other features will be apparent from a reading of the following Detailed Description and a review of the associated drawings.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

The following detailed description is directed to systems methods and computer readable media for authorizing a computing node to join a group of computing nodes through the use of a shared password. While the subject matter described herein is presented in the general context of program modules that execute in conjunction with the execution of an operating system and application programs on a computer system those skilled in the art will recognize that other implementations may be performed in combination with other types of program modules.

Generally program modules include routines programs components data structures and other types of structures that perform particular tasks or implement particular abstract data types. Moreover those skilled in the art will appreciate that the subject matter described herein may be practiced with other computer system configurations including hand held devices multiprocessor systems microprocessor based or programmable consumer electronics minicomputers mainframe computers and the like. The subject matter described herein is also described as being practiced in a distributed computing environment where tasks are performed by remote processing devices that are linked through a communications network and wherein program modules may be located in both local and remote memory storage devices. It should be appreciated however that the implementations described herein may also be utilized in conjunction with stand alone computer systems and other types of computing devices.

In the following detailed description references are made to the accompanying drawings that form a part hereof and which are shown by way of illustration specific embodiments or examples. Referring now to the drawings in which like numerals represent like elements through the several figures aspects of a computing system and methodology for authorizing a computing node as a group member using a password will be described.

As illustrated in the nodes A D are members of a group . The nodes that are members of a group are referred to herein as group member nodes or more simply member nodes. Being a member of the group means that each of the nodes A D can authenticate that other nodes are members of the group . Being a member of the group also means that secure communications can be made between only members of the group . This is useful for instance in connection with RTC collaboration content distribution file sharing and other processes that utilize a group of distributed secure communicating nodes. As will be described in detail below methods systems apparatus and computer readable media are provided herein for securely adding a new node to the group utilizing a shared password.

As also shown in the computing node E is not a member of the group . A computing node E that is not a member of a group but that desires to become a member of a group is referred to herein as a tentative group member node. The computing node E is a tentative group member node. A process for securely adding the tentative group member node E to the group is described below with reference to .

As also shown in the nodes A D of the group may be assigned different roles. The role of a node defines the functions that the node is authorized to perform. In the example group shown in each of the nodes A D are inviting members of the group . An inviting member is a node that can add update and delete its own records and also add new nodes to the group . The node A is also an owner of the group and the node B is an administrator. An administrator is a node that can add update and delete its own records or the records of other nodes and also add new nodes to the group . An administrator can also create new groups. An administrator that creates a new group is considered the owner of the group.

As will be described in greater detail below an invitation is transmitted to a tentative group member node E by a member of the group such as the member node D. A group password that is utilized by the tentative group member node E to join the group is also transmitted to the node E or a user of the node E out of band of the invitation. In order to join the group the tentative group member node E utilizes the invitation to connect to a member of the group such as the member node D. An exchange then occurs between the tentative group member node E and the member node D whereby the tentative group member node E may or may not be authorized as a new member of the group . Details regarding this process are provided below with respect to .

Referring now to FIGS. and A B additional details will be provided regarding the embodiments presented herein for authorizing a computing node as a group member utilizing a password. In particular is a software architecture diagram illustrating several software components utilized by a member node D and a tentative group member node E. are flow diagrams illustrating a routine and a routine performed by a member node D and a tentative group member node E respectively in order to authorize the tentative group member node E as a group member using a password.

It should be appreciated that the logical operations described with reference to FIGS. and A B are implemented 1 as a sequence of computer implemented acts or program modules running on a computing system and or 2 as interconnected machine logic circuits or circuit modules within the computing system. The implementation is a matter of choice dependent on the performance requirements of the computing system. Accordingly the logical operations described herein are referred to variously as operations structural devices acts or modules. These operations structural devices acts and modules may be implemented in software in firmware in special purpose digital logic and any combination.

As discussed briefly above the routine illustrates the processing operations performed by a member node D in order to assist with the addition of a tentative group member node E to a group. It should be appreciated that any member node of a group may perform the processing illustrated in the routine . The routine illustrates the processing performed by the tentative group member node E. The routines and will be described with reference to the various software components illustrated in . The routine begin at processing operation where the group member node D creates an invitation to join the group. The invitation contains data that can be utilized by the tentative group member node to locate and establish a connection to a member node of the group .

According to one implementation a create group password invitation API is utilized by the member node D to create the invitation . The create group password invitation API takes as input one or more group properties and utilizes the group properties to create the invitation. The group properties may contain for instance the name of the group the name of the creator of the group a friendly name for the group data indicating a lifetime for the group the available authorization schemes for authorizing new members in the group a group password and other information. As will be described in greater detail below the group password may be stored as a hash of the group password . Storing the group password as a hash is slightly more secure than storing the group password itself and allows the creator to change the password at a later time to effectively stop password based invitations from being used. As will also be described in greater detail below the group properties are propagated to each member of the group .

From operation the routine continues to operation where the invitation is transmitted from the member node D to the tentative group member node E. According to one implementation the invitation is transmitted to the tentative group member node E using an out of band communications method such as e mail. The method utilized for communicating the invitation need not be secure. The routine begins at operation where the tentative group member node E receives the invitation .

From operation the routine continues to operation where the group password is transmitted to the tentative group member node E. Like the invitation the group password is transmitted to the tentative group member node E or an operator of the node out of band. The tentative group member node E receives the password at operation of the routine . The group password may comprise any type of password that may be provided by the tentative group member node E to prove that it is authorized to join the group .

From operation the routine continues to operation where the tentative group member node utilizes the data contained in the invitation to establish a connection to a member of the group . In the example described herein and illustrated in the tentative group member node utilizes the data contained in the invitation to connect to the group member node D. The group member node D connects with the tentative group member node E at operation of the routine .

From operation the routine continues to operation where the member node D and the tentative group member node E establish a secure encrypted communications channel. As a part of the establishment of the communications channel a random session key is also created and exchanged between the group member node D and the tentative group member node E. The session key contains data that is unique to the communications session between the group member node D and the tentative group member node E. This also occurs at operation of the routine and at operation of the routine . As will be described in greater detail below the session key is utilized to transmit the password from the tentative group member node E to the group member node D in a more secure fashion.

From operation the routine continues to operation where the tentative group member node E transmits its public certificate to the group member node D through the encrypted communications channel. The group member node D receives the public certificate at operation of the routine . The public certificate is a signed certificate that includes the public cryptography key of the tentative group member node E. As will be discussed in greater detail below the public certificate is utilized to create a credential for the tentative group member node E that can be utilized by the node E to prove that it is a member of the group .

From operation the routine continues to operation where the member node D transmits its group membership certificate GMC to the tentative group member node E. The GMC is an X.509 certificate that chains back to a self signed certificate called the group root certificate GRC . The GMC proves that the group member node D is actually a member of the group . The tentative group member node E receives the GMC of the group member node D at operation of the routine .

At operation the tentative group member node E also utilizes the GMC to determine whether the group member node D is actually a member of the group . In order to accomplish this the tentative group member node E verifies that the GMC of the group member node D has a valid chain of certificates up to the GRC for the group . If at operation of the routine the tentative group member node E determines that the group member node D is not a member of the group then the routine branches to operation where the communications session with the group member node D is closed. No further attempt is made to join the group . However if it is determined at operation that the group member node D is a member of the group then the routine continues to operation .

At operation the tentative group member node E generates a hash of the password . In one implementation the tentative group member node E may generate a hash of the hash of the password and the session key . In order to generate the hash value the tentative group member node E may utilize a password group join API . The password group join API takes as input the invitation and the password . From this information the password group join API generates the hash and transmits the hash to the group member node D. The hash is transmitted to the group member node D at operation . The group member node D receives the hash value at operation of the routine .

From operation the routine continues to operation where the group member node D generates its own hash. In particular in one implementation the group member node D generates a hash of the hash of the password and the session key . The routine then continues to operation where the group member node D compares its hash value with the hash value received from the tentative group member node E. If the values are not the same the routine branches from operation to operation where the communications session with the tentative group member node E is discontinued. If however the values are identical then the tentative group member node E is authorized as a new member of the group . From this point in time the tentative group member node E is considered a new member of the group.

In order to authorize the tentative group member node E as a new member of the group the routine continues from operation to operation where a GMC is created for the tentative group member node E. The GMC is created utilizing the public key of the tentative group member node E contained in the public certificate that was previously transmitted to the group member node D. The GMC is transmitted to the tentative group member node E at operation and received at operation of the routine .

According to one implementation the group member node D encrypts the GMC using the password hash and sends the encrypted GMC to the tentative group member node D. When the tentative group member node E receives the encrypted GMC the tentative group member node E will then decrypt and verify it. This assures the tentative group member node E that the group member node D actually knows the password. This is desirable because in some cases a group to join may be selected based only on its friendly name from which the actual identity of the group cannot be verified. The friendly name is not secure and can be spoofed. By verifying that the authenticating node knows the same password the tentative group member node E can verify that it is connecting to the correct group.

From operation the routine continues to operation where the group properties including the hash of the group password is transmitted to the tentative group member node D. The tentative group member node E receives the properties at operation and stores the properties. The routine then continues from operation to operation where the new tentative group member node E may utilize its GMC to communicate with other nodes A D of the group and to authorize itself to perform group activities. From operations and the routine and continue to operations and respectively where the communications session between the group member node D and the tentative group member node E is ended. The routines and then continue to operations and respectively where they end.

Referring now to an illustrative computer architecture for a computer utilized in the various embodiments presented herein will be discussed. The computer architecture shown in illustrates a conventional desktop laptop computer or server computer and may be utilized to embody the nodes A E described above. The computer architecture shown in includes a central processing unit CPU a system memory including a random access memory RAM and a read only memory ROM and a system bus that couples the memory to the CPU . A basic input output system containing the basic routines that help to transfer information between elements within the computer such as during startup is stored in the ROM . The computer further includes a mass storage device for storing an operating system application programs and other program modules which will be described in greater detail below.

The mass storage device is connected to the CPU through a mass storage controller not shown connected to the bus . The mass storage device and its associated computer readable media provide non volatile storage for the computer . Although the description of computer readable media contained herein refers to a mass storage device such as a hard disk or CD ROM drive it should be appreciated by those skilled in the art that computer readable media can be any available media that can be accessed by the computer .

By way of example and not limitation computer readable media may comprise computer storage media and communication media. Computer storage media includes volatile and non volatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to RAM ROM EPROM EEPROM flash memory or other solid state memory technology CD ROM digital versatile disks DVD HD DVD BLU RAY or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by the computer .

According to various embodiments the computer may operate in a networked environment using logical connections to remote computers through a network such as the Internet. The computer may connect to the network through a network interface unit connected to the bus . It should be appreciated that the network interface unit may also be utilized to connect to other types of networks and remote computer systems. The computer may also include an input output controller for receiving and processing input from a number of other devices including a keyboard mouse or electronic stylus not shown in . Similarly an input output controller may provide output to a display screen a printer or other type of output device also not shown in .

As mentioned briefly above a number of program modules and data files may be stored in the mass storage device and RAM of the computer including an operating system suitable for controlling the operation of a networked computer such as the WINDOWS XP operating system from MICROSOFT CORPORATION of Redmond Wash. The mass storage device and RAM may also store one or more program modules. In particular the mass storage device and the RAM may store the create password invitation API and the password group join API . The functionality of these APIs is exposed to the operating system and the application programs . The other software components illustrated in and described above with reference to may also be stored on the mass storage device and the RAM .

Based on the foregoing it should be appreciated that systems methods and computer readable media for utilizing a shared password to authenticate a node for membership in a group of nodes are provided herein. Although the subject matter presented herein has been described in language specific to computer structural features methodological acts and computer readable media it is to be understood that the invention defined in the appended claims is not necessarily limited to the specific features acts or media described herein. Rather the specific features acts and mediums are disclosed as example forms of implementing the claims. The subject matter described above is provided by way of illustration only and should not be construed as limiting. Various modifications and changes may be made to the subject matter described herein without following the example embodiments and applications illustrated and described and without departing from the true spirit and scope of the present invention which is set forth in the following claims.

