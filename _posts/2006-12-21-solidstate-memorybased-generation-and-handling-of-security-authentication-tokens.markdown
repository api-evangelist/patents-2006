---

title: Solid-state memory-based generation and handling of security authentication tokens
abstract: An architecture is presented that facilitates secure token generation and transmission capabilities in a mobile device. The system comprises at least one software application that includes a secure token assigned to a specific user and a memory module that communicates with an external processor. A security processor, non-volatile memory component and volatile memory component are integrated to form the memory module that communicates with the external processor. The memory module creates a secure execution environment for the execution of application agents associated with the software application and the secure token. The security processor of the system communicates with the software application and external processor to manage generation, authentication, confidentiality, and transmission of the secure token. And, the non-volatile memory allows the introduction of new tokens and the removal of old tokens.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08261091&OS=08261091&RS=08261091
owner: Spansion LLC
number: 08261091
owner_city: Sunnyvale
owner_country: US
publication_date: 20061221
---
Robust security is imperative for network based systems particularly for applications that deal with sensitive information to prevent unauthorized agents from intercepting corrupting or publishing sensitive data. A suitable information security system must perform with minimum disruption to users to ensure that authorized users are neither erroneously denied access nor unduly restricted in their duties.

Furthermore security tokens have long been in use to provide additional security. The function of a security token is to authenticate either the token itself or the individual hardware or other entity associated with the token. Often an authentication token will contain numerous authenticating indicia some of which are used to authenticate the token and some of which are used for other authentication purposes.

However a problem common to security based systems and security authentication tokens is the vulnerability of the security functionality. Compromise of the integrity of the software or the confidentiality of the tokens results in system failures or worse abuses such as fraud. This is a major concern since attackers using sophisticated techniques have compromised a wide variety of existing systems resulting in the intercepting corrupting or publishing of sensitive data. Therefore there is a continuing need to include adequate security mechanisms to protect such systems and tokens.

The following presents a simplified summary in order to provide a basic understanding of some aspects of the disclosed innovation. This summary is not an extensive overview and it is not intended to identify key critical elements or to delineate the scope thereof. Its sole purpose is to present some concepts in a simplified form as a prelude to the more detailed description that is presented later.

The subject matter disclosed and claimed herein in one aspect thereof comprises a system that facilitates secure token generation and transmission capabilities in a mobile device. The system comprises at least one software application that includes a secure token assigned to a specific user and a memory module that communicates with an external processor. A security processor non volatile memory component and volatile memory component are integrated to form the memory module that communicates with the external processor. The memory module creates a secure execution environment for the execution of application agents associated with the software application and the secure token. The security processor of the system communicates with the software application and external processor to manage generation authentication and transmission of the secure token.

Further the non volatile memory component can be divided into multiple partitions of varying sizes and access rights. Accordingly the software application is stored in a first partition the application agents of the software application are stored in a second partition and the secure token is stored in a third partition. If the secure token utilizes a secret key such that a new authentication code is generated at specific time intervals based on a built in clock the authentication codes are stored in a fourth partition. And if the secure token is used in combination with a one time password list the one time password list is stored in a fifth partition of the non volatile memory component. Alternatively the authentication codes and or one time password list could all be stored together with the secure token in the third partition. As the security processor controls the entire non volatile memory storage and monitors all traffic to and from the non volatile memory components the security processor is able to manage authentication integrity confidentiality and non repudiation of the secure tokens stored in the non volatile memory component and executing within the secure execution environment.

In another aspect of the claimed subject matter a secure channel of communications is established between the non volatile memory component and the external processor or server. The external processor and or server are mutually authenticated with the non volatile memory component via shared key authentication or public key infrastructure PKI authentication. Once the external processor and the non volatile memory component are mutually authenticated a session key is generated allowing a secure channel of communication to be established between the non volatile memory component and the external processor. The secure token is then transmitted via the secure channel communication. And once the server and the non volatile memory component are mutually authenticated a session key is generated allowing a secure channel of communication to be established between the non volatile memory component and the server. The secure token is then transmitted via the secure channel communication.

To the accomplishment of the foregoing and related ends certain illustrative aspects of the disclosed innovation are described herein in connection with the following description and the annexed drawings. These aspects are indicative however of but a few of the various ways in which the principles disclosed herein can be employed and is intended to include all such aspects and their equivalents. Other advantages and novel features will become apparent from the following detailed description when considered in conjunction with the drawings.

The innovation is now described with reference to the drawings wherein like reference numerals are used to refer to like elements throughout. In the following description for purposes of explanation numerous specific details are set forth in order to provide a thorough understanding thereof. It may be evident however that the innovation can be practiced without these specific details. In other instances well known structures and devices are shown in block diagram form in order to facilitate a description thereof.

As used in this application the terms component handler model system and the like are intended to refer to a computer related entity either hardware a combination of hardware and software software or software in execution. For example a component can be but is not limited to being a process running on a processor a processor a hard disk drive multiple storage drives of optical and or magnetic storage medium an object an executable a thread of execution a program and or a computer. By way of illustration both an application running on a server and the server can be a component. One or more components may reside within a process and or thread of execution and a component may be localized on one computer and or distributed between two or more computers.

Additionally these components can execute from various computer readable media having various data structures stored thereon. The components may communicate via local and or remote processes such as in accordance with a signal having one or more data packets e.g. data from one component interacting with another component in a local system distributed system and or across a network such as the Internet with other systems via the signal . Computer components can be stored for example on computer readable media including but not limited to an ASIC application specific integrated circuit CD compact disc DVD digital video disk ROM read only memory floppy disk hard disk EEPROM electrically erasable programmable read only memory and memory stick in accordance with the claimed subject matter.

As used herein terms to infer and inference refer generally to the process of reasoning about or inferring states of the system environment and or user from a set of observations as captured via events and or data. Inference can be employed to identify a specific context or action or can generate a probability distribution over states for example. The inference can be probabilistic that is the computation of a probability distribution over states of interest based on a consideration of data and events. Inference can also refer to techniques employed for composing higher level events from a set of events and or data. Such inference results in the construction of new events or actions from a set of observed events and or stored event data whether or not the events are correlated in close temporal proximity and whether the events and data come from one or several event and data sources.

Security is imperative for network based systems particularly for applications that deal with sensitive information to prevent unauthorized agents in the form of hardware and or software from intercepting corrupting or publishing sensitive data. As stated supra suitable information security systems must perform with minimum disruption to users to ensure that authorized users are neither erroneously denied access nor unduly burdened or restricted in their capabilities. Accordingly the following subject matter optimizes processor utilization and creates a heightened level of security in user applications.

A memory module that facilitates integrated security capabilities in a mobile device is disclosed. The memory module arbitrates with an external processor located outside of the memory module for access to the non volatile memory. Software applications application agents and secure tokens are stored in the non volatile memory. Software applications are executed via the external processor in a less secure environment outside of the memory module and application agents and associated secure tokens are executed and handled by the security processor in a secure environment created by the memory module. By executing this capability within the secure execution environment the integrity authenticity and confidentiality of the secure token is preserved and protected while in the mobile device as well as during transmission via secure channel communication capabilities provided by the secure non volatile memory module.

Referring initially to the drawings illustrates a system that integrates secure token generation capabilities into a mobile device in accordance with an innovative aspect. The system includes a memory module that creates a secure execution environment for running application agents and secure tokens. The memory module is a package containing one or multiple chips of integrated circuits or semiconductors wherein one integrated circuit houses a security processor and another integrated circuit houses non volatile memory . The integrated circuits are then coupled together to form the memory module . Optionally the security processor and the non volatile memory could be housed on one integrated circuit or piece of silicon. The non volatile memory is typically flash memory but can be any type of non volatile memory typically used for the task of secondary storage or long term persistent storage. Furthermore one or more non volatile memory components can be included in the memory module . If more than one non volatile memory component is included the non volatile memory component is not required to be of the same type and or density.

Typically the non volatile memory of the memory module is divided into secure memory partitions of varying sizes and access rights. However the non volatile memory is not required to be divided into multiple partitions and can function without the partitions. Secure partitioning is utilized to protect essential data and code secure sensitive information and allow easy access to common public data. Secure partitioning allows separate access controls to different partitions of code and data which could be made available based on user service provider original equipment manufacturer OEM enterprise authentication or any other type of authentication available. The access controls distinguish between read and write or erase permissions and the descriptions of the owners who have the ability to change the access control. Specifically as illustrated in the non volatile memory is divided into multiple partitions with associated access rights wherein one partition stores the software applications a second partition stores the application agents associated with the software applications and a third partition stores the secure tokens associated with the software applications.

Software applications comprise secure tokens for authentication purposes. Secure tokens may be physical devices that an authorized user of computer services is given to aid in authentication or the secure token could refer to a software token associated with a particular software application. Typically the secure token is an RSA mechanism that generates a different authentication code at specific time intervals e.g. every sixty seconds . The secure token utilizes a built in clock or time stamp and a factory encoded random key to generate the different authentication codes. Or the secure token could utilize a one time password list. A one time password list is a password that changes after each login or changes after a set time interval. If the secure token utilizes a one time password list the password list would be securely stored in a partition of the non volatile memory as well.

As stated supra software applications associated application agents and secure tokens are stored in the non volatile memory of the memory module . However application agents and secure tokens of the software applications stored within the non volatile memory are executed in the secure environment created by the memory module via the security processor . In contrast software applications stored within the non volatile memory are executed by the external processor in a less secure environment outside of the memory module. By executing and handling the application agents and secure tokens within the secure execution environment the integrity authenticity and confidentiality of the secure token is preserved and protected while in the mobile device as well as during transmission via secure channel communication capabilities provided by the secure non volatile memory .

As shown in the memory module also includes volatile memory or random access memory RAM used for the temporary data and code storage needs of the external processor . Accordingly the security processor controls the entire flash memory storage and monitors all traffic to and from the non volatile memory components . Further the security processor provides for concurrent processing of security protocols creating the secure execution environment within the memory module . The memory module and external processor are integrated to form a mobile device wherein the memory module is directly embedded into the mobile device. The mobile device includes a multimedia player a Personal Digital Assistant PDA a cellular phone a hand held computing device or any other similar wireless computing device.

Further the memory module communicates with an external or host processor via one or more communication busses to facilitate the integrated security capabilities. The communication bus could be a NOR or NAND bus or both or a single bus which enables a NOR or NAND Interface. If more than one bus is utilized both can be functioning in parallel. The external processor is a typical applications processor that handles communications and runs applications. The external processor can be a baseband processor or application processor for a mobile handset personal data assistant PDA or the like.

As the secure tokens and application agents are stored in the secure non volatile memory and executed in the secure execution environment via the security processor the system creates a tight coupling between the secure non volatile memory and the secure execution environment allowing for enhanced security for the storage generation transmittal and authentication of secure tokens. As stated supra the security processor controls the entire non volatile memory storage and monitors all traffic to and from the non volatile memory components such that the security processor is able to manage authentication integrity confidentiality and non repudiation of the secure tokens stored in the non volatile memory and executing within the secure execution environment.

In more detail illustrates the components of a security processor . The security processor includes a central processing unit CPU or any other type of low power application processor. The CPU within the security processor can manage the flash memory storage not shown and provide a secure environment to implement authentication algorithms and security software. The security processor also includes a Joint Test Action Group JTAG port for debugging the system with a mechanism to prevent tampering a voltage detector that indicates the voltage level of the security processor and stops the memory module from functioning when voltage levels are outside of the acceptable range in order to prevent side channel attacks and an internal oscillator that provides a clock for the security processor . This clock may be exported in its present form or may be divided to provide the clock signal for other components such as a fingerprint sensor. However other mechanisms not shown can be provided that help prevent tampering. For example temperature detecting metal overlay to hide signals and scrambling of signals are additional methods that can be utilized in the security processor . A host memory interface I F handles all the flash memory transactions with a host processor and receives and transmits messages to the external processor or host processor not shown . Specifically the host memory l F manages signaling thus complying with the interface definitions of the flash memory. The host memory I F also manages interpretation or differentiating between a secure and non secure request and monitors requests to the flash memory to enforce access rights and permissions.

A host buffer holds data for secured transactions to and from the host processor. The buffer also serves as a mailbox between the CPU and the host processor wherein interpretation of the messages is carried out by the CPU . A cryptographic accelerator that performs all the cryptographic algorithms symmetric and a symmetric needed by the system. The CPU configures the cryptographic accelerator and can control the data flow through the security processor . The CPU interfaces a system bus and the security applications that run on the CPU arbitrating with the host processor. A flash buffer holds data as it travels to and from the non volatile memory or flash memory. The flash buffer enables processing of a page while receiving the next page. A flash memory I F that handles all transactions to and from the flash memory storage and the security processor such as signaling and interpretation.

A system bus that allows the CPU to communicate with the different components of the security processor . CPU ROM RAM and contains code and data used by the CPU . The ROM stores the CPU boot loader not shown . Further resident code and code overlays execute from the integrated CPU RAM and are used for temporary data storage needs of the CPU . In operation the host processor communicates with the security processor and accesses the flash memory directly via a bypass route . Or the host processor can communicate via the memory manager not shown running on the security processor and access the flash memory through communications with the memory manager. In either case access rights are enforced by the security processor according to the security software embedded in the flash memory and the hardware design of the security processor .

Further as shown in host software stored in the non volatile memory includes software applications that contain at least one secure token application for performing two factor authentication from a user to a network resource. As stated supra the secure token may be a physical device that an authorized user of computer services is given to aid in authentication or the secure token could refer to a software token associated with a particular software application. Typically the secure token is an RSA mechanism that generates a different authentication code at specific time intervals e.g. every sixty seconds . The secure token utilizes a built in clock or time stamp and a factory encoded random key to generate the different authentication codes. Or the secure token could utilize a one time password list. A one time password list is a password that changes after each login or changes after a set time interval.

The host software also includes a security processor software stack that provides an enriched application programming interface API to facilitate porting of third party software applications. A file system stores and files the software applications and a block device emulation acts as a hardware emulator to abstract the files to run on a platform other than the one for which they were originally written so that the software applications can be read by the file system. The host software also includes a security processor driver that hides all the details of the device implements a messaging interface supports communications between the application and its secure agent and simplifies porting of file systems and block device emulation. Finally an operating system is also included in the host software for managing the hardware and software resources of the applications.

In another embodiment as illustrated in a system for establishing a secure channel of communications is shown. A secure channel of communications can be established when a user of a mobile device attempts to download a secure token from a content provider and or service provider. A secure channel of communications can also be established if a user is attempting to connect to a virtual private network VPN or other network through the mobile device. Before a secure channel of communications can be established mutual authentication between the server and or external processor not shown and non volatile memory must be established. Mutual authentication can occur in either of two ways via public key infrastructure PKI authentication or shared key authentication. In either way a session key is generated for establishing secure channel communications between the server and the non volatile memory . A session key is a key used for encrypting one message or a group of messages in a communication session.

Data in the form of protected software and hardware and is requested by an external server . The protected software and hardware and is stored in the non volatile memory of the memory module such that the server must be authenticated and a secure channel of communications must be established before the data can be transmitted. After mutual authentication between the server and the non volatile memory a session key is generated and the security processor encrypts and authenticates the protected software and hardware and with the session key. The security processor then sends the protected software and hardware and to the server where the server decrypts the protected software and hardware and with the session key and checks for integrity.

The server then processes the information and encrypts and authenticates new data with the session key and sends the new data to the security processor . The security processor decrypts the new data with the session key and checks the integrity of the new data. Once the integrity is verified a secure channel is derived by using the session key for exchanging data between the server and the non volatile memory . The encryption with authentication provides the necessary security. Once the secure channel is established read write access is granted to the server and malicious software agents not shown are prevented from read and or write access of the protected software and hardware and .

Referring to a method of integrating secure token generation capabilities into a mobile device is illustrated. At a security processor is provided that communicates with an external processor. At a secure execution environment is created by integrating the security processor with a non volatile memory component to form a memory module. The memory module is a package containing one or multiple chips of integrated circuits or semiconductors wherein one integrated circuit houses the security processor and another integrated circuit houses the non volatile memory. The integrated circuits are then coupled together to form the memory module. Optionally the security processor and the non volatile memory could be housed on one integrated circuit or piece of silicon.

At software applications application agents and secure tokens are stored in the non volatile memory component. The software applications comprise at least one secure token assigned to a specific user. The secure token may be a physical device that an authorized user of computer services is given to aid in authentication or the secure token could refer to a software token associated with a particular software application. Typically the secure token is an RSA mechanism that generates a different authentication code at specific time intervals e.g. every sixty seconds . The secure token utilizes a built in clock or time stamp and a factory encoded random key to generate the different authentication codes. Or the secure token could utilize a one time password list. A one time password list is a password that changes after each login or changes after a set time interval.

Further the non volatile memory component can be divided into multiple secure memory partitions. Secure partitioning is utilized to protect essential data and code secure sensitive information and allow easy access to common public data. Secure partitioning allows separate access controls to different partitions of data which could be made available based on user service provider OEM enterprise authentication or any other type of authentication available. The access controls distinguish between read and write or erase permissions and the descriptions of the owners who have the ability to change the access control. Specifically the non volatile memory component is divided into multiple partitions with associated access rights wherein a first partition stores the software applications a second partition stores the application agents associated with the software applications and a third partition stores the secure tokens associated with the software applications.

And at the secure tokens and application agents associated with the software applications are executed in the secure environment created by the memory module. At the security processor manages generation authentication and transmission of the secure tokens and application agents via controlling the entire non volatile memory storage and monitoring all traffic to and from the non volatile memory components.

The method of integrating secure token generation capabilities into a mobile device significantly enhances security for the storage generation transmittal and authentication of secure tokens due to the tight coupling of the secure non volatile memory and the secure execution environment created by the memory module. By executing this capability within a secure execution environment the integrity of the secure token is preserved and protected while in the mobile device as well as during transmission via secure channel communication capabilities provided by the secure non volatile memory.

Secure channel communication capabilities can be established when a user of a mobile device attempts to download a secure token from a content provider and or service provider. Secure channel communication capabilities can also be established if a user is attempting to connect to a VPN or other network through the mobile device.

Referring to a method of establishing secure channel communication capabilities between an external processor and the non volatile memory component is illustrated. Authentication services utilized by the memory module include shared key authentication and PKI authentication. At the external processor and non volatile memory component are mutually authenticated via shared key authentication or PKI authentication. At a session key is generated via the authentication between the external processor and the non volatile memory component. At both the external processor and the non volatile memory component utilize the generated common session key if secure channel communication capabilities are needed. Specifically at the generated session key is utilized and the security processor encrypts and authenticates data with the session key. At the security processor then sends the data to the external processor.

At the external processor decrypts the data with the session key and checks for integrity. At the external processor processes the information and encrypts and authenticates new data with the session key. At the external processor then sends the new data to the security processor. And at the security processor decrypts the new data with the session key and checks the integrity of the data. Once the integrity is verified at a secure channel is derived by using the session key for exchanging data between the external processor and the non volatile memory component. The encryption with authentication provides the necessary security. Once the secure channel is established at read write access is granted to the external processor and malicious software agents are prevented from read and or write access.

Referring to a method of establishing secure channel communication capabilities between a server and the non volatile memory component is illustrated. Authentication services utilized by the memory module include shared key authentication and PKI authentication. At the server and non volatile memory component are mutually authenticated via shared key authentication or PKI authentication. At a session key is generated via the authentication between the server and the non volatile memory component. At both the server and the non volatile memory component utilize the generated common session key if secure channel communication capabilities are needed. Specifically at the generated session key is utilized and the security processor encrypts and authenticates data with the session key. At the security processor then sends the data to the server.

At the server decrypts the data with the session key and checks for integrity. At the server processes the information and encrypts and authenticates new data with the session key. At the server then sends the new data to the security processor. And at the security processor decrypts the new data with the session key and checks the integrity of the data. Once the integrity is verified at a secure channel is derived by using the session key for exchanging data between the server and the security processor. The encryption with authentication provides the necessary security. Once the secure channel is established at read write access is granted to the server and malicious software agents are prevented from read and or write access.

Referring now to there is illustrated a block diagram of a computer operable to execute the disclosed secure token generation and transmission capabilities architecture. In order to provide additional context for various aspects thereof and the following discussion are intended to provide a brief general description of a suitable computing environment in which the various aspects of the innovation can be implemented. While the description above is in the general context of computer executable instructions that may run on one or more computers those skilled in the art will recognize that the innovation also can be implemented in combination with other program modules and or as a combination of hardware and software.

Generally program modules include routines programs components data structures etc. that perform particular tasks or implement particular abstract data types. Moreover those skilled in the art will appreciate that the inventive methods can be practiced with other computer system configurations including single processor or multiprocessor computer systems minicomputers mainframe computers as well as personal computers hand held computing devices microprocessor based or programmable consumer electronics and the like each of which can be operatively coupled to one or more associated devices.

The illustrated aspects of the innovation may also be practiced in distributed computing environments where certain tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules can be located in both local and remote memory storage devices.

A computer typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by the computer and includes both volatile and non volatile media removable and non removable media. By way of example and not limitation computer readable media can comprise computer storage media and communication media. Computer storage media includes both volatile and non volatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital video disk DVD or other optical disk storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by the computer.

With reference again to the exemplary environment for implementing various aspects includes a computer the computer including a processing unit a system memory and a system bus . The system bus couples system components including but not limited to the system memory to the processing unit . The processing unit can be any of various commercially available processors. Dual microprocessors and other multi processor architectures may also be employed as the processing unit .

The system bus can be any of several types of bus structure that may further interconnect to a memory bus with or without a memory controller a peripheral bus and a local bus using any of a variety of commercially available bus architectures. The system memory includes read only memory ROM and random access memory RAM . A basic input output system BIOS is stored in a non volatile memory such as ROM EPROM EEPROM which BIOS contains the basic routines that help to transfer information between elements within the computer such as during start up. The RAM can also include a high speed RAM such as static RAM for caching data.

The computer further includes an internal hard disk drive HDD e.g. EIDE SATA which internal hard disk drive may also be configured for external use in a suitable chassis not shown a magnetic floppy disk drive FDD e.g. to read from or write to a removable diskette and an optical disk drive e.g. reading a CD ROM disk or to read from or write to other high capacity optical media such as the DVD . The hard disk drive magnetic disk drive and optical disk drive can be connected to the system bus by a hard disk drive interface a magnetic disk drive interface and an optical drive interface respectively. The interface for external drive implementations includes at least one or both of Universal Serial Bus USB and IEEE 1394 interface technologies. Other external drive connection technologies are within contemplation of the subject innovation.

The drives and their associated computer readable media provide nonvolatile storage of data data structures computer executable instructions and so forth. For the computer the drives and media accommodate the storage of any data in a suitable digital format. Although the description of computer readable media above refers to a HDD a removable magnetic diskette and a removable optical media such as a CD or DVD it should be appreciated by those skilled in the art that other types of media which are readable by a computer such as zip drives magnetic cassettes flash memory cards cartridges and the like may also be used in the exemplary operating environment and further that any such media may contain computer executable instructions for performing the methods of the disclosed innovation.

A number of program modules can be stored in the drives and RAM including an operating system one or more application programs other program modules and program data . All or portions of the operating system applications modules and or data can also be cached in the RAM . It is to be appreciated that the innovation can be implemented with various commercially available operating systems or combinations of operating systems.

A user can enter commands and information into the computer through one or more wired wireless input devices e.g. a keyboard and a pointing device such as a mouse . Other input devices not shown may include a microphone an IR remote control a joystick a game pad a stylus pen touch screen or the like. These and other input devices are often connected to the processing unit through an input device interface that is coupled to the system bus but can be connected by other interfaces such as a parallel port an IEEE 1394 serial port a game port a USB port an IR interface etc.

A monitor or other type of display device is also connected to the system bus via an interface such as a video adapter . In addition to the monitor a computer typically includes other peripheral output devices not shown such as speakers printers etc.

The computer may operate in a networked environment using logical connections via wired and or wireless communications to one or more remote computers such as a remote computer s . The remote computer s can be a workstation a server computer a router a personal computer portable computer microprocessor based entertainment appliance a peer device or other common network node and typically includes many or all of the elements described relative to the computer although for purposes of brevity only a memory storage device is illustrated. The logical connections depicted include wired wireless connectivity to a local area network LAN and or larger networks e.g. a wide area network WAN . Such LAN and WAN networking environments are commonplace in offices and companies and facilitate enterprise wide computer networks such as intranets all of which may connect to a global communications network e.g. the Internet .

When used in a LAN networking environment the computer is connected to the local network through a wired and or wireless communication network interface or adapter . The adaptor may facilitate wired or wireless communication to the LAN which may also include a wireless access point disposed thereon for communicating with the wireless adaptor .

When used in a WAN networking environment the computer can include a modem or is connected to a communications server on the WAN or has other means for establishing communications over the WAN such as by way of the Internet. The modem which can be internal or external and a wired or wireless device is connected to the system bus via the serial port interface . In a networked environment program modules depicted relative to the computer or portions thereof can be stored in the remote memory storage device . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers can be used.

The computer is operable to communicate with any wireless devices or entities operatively disposed in wireless communication e.g. a printer scanner desktop and or portable computer portable data assistant communications satellite any piece of equipment or location associated with a wirelessly detectable tag e.g. a kiosk news stand restroom and telephone. This includes at least Wi Fi and Bluetooth wireless technologies. Thus the communication can be a predefined structure as with a conventional network or simply an ad hoc communication between at least two devices.

Wi Fi or Wireless Fidelity allows connection to the Internet from a couch at home a bed in a hotel room or a conference room at work without wires. Wi Fi is a wireless technology similar to that used in a cell phone that enables such devices e.g. computers to send and receive data indoors and out anywhere within the range of a base station. Wi Fi networks use radio technologies called IEEE 802.11 a b g etc. to provide secure reliable fast wireless connectivity. A Wi Fi network can be used to connect computers to each other to the Internet and to wired networks which use IEEE 802.3 or Ethernet . Wi Fi networks operate in the unlicensed 2.4 and 5 GHz radio bands at an 11 Mbps 802.11a or 54 Mbps 802.11b data rate for example or with products that contain both bands dual band so the networks can provide real world performance similar to the basic 10BaseT wired Ethernet networks used in many offices.

Referring now to there is illustrated a schematic block diagram of an exemplary computing environment in accordance with another aspect. The system includes one or more client s . The client s can be hardware and or software e.g. threads processes computing devices . The client s can house cookie s and or associated contextual information by employing the subject innovation for example.

The system also includes one or more server s . The server s can also be hardware and or software e.g. threads processes computing devices . The servers can house threads to perform transformations by employing the invention for example. One possible communication between a client and a server can be in the form of a data packet adapted to be transmitted between two or more computer processes. The data packet may include a cookie and or associated contextual information for example. The system includes a communication framework e.g. a global communication network such as the Internet that can be employed to facilitate communications between the client s and the server s .

Communications can be facilitated via a wired including optical fiber and or wireless technology. The client s are operatively connected to one or more client data store s that can be employed to store information local to the client s e.g. cookie s and or associated contextual information . Similarly the server s are operatively connected to one or more server data store s that can be employed to store information local to the servers .

What has been described above includes examples of the claimed subject matter. It is of course not possible to describe every conceivable combination of components or methodologies for purposes of describing the claimed subject matter but one of ordinary skill in the art may recognize that many further combinations and permutations of the claimed subject matter are possible. Accordingly the claimed subject matter is intended to embrace all such alterations modifications and variations that fall within the spirit and scope of the appended claims. Furthermore to the extent that the term includes is used in either the detailed description or the claims such term is intended to be inclusive in a manner similar to the term comprising as comprising is interpreted when employed as a transitional word in a claim.

