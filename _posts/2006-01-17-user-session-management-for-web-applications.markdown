---

title: User session management for web applications
abstract: Methods, systems, and products are provided for user session management for web applications. Embodiments include identifying, by a web application, a user session directive and sending, from the web application to a proxy web security component, an instruction to implement the user session directive. Typical embodiments also include receiving, by the proxy web security component, the instruction to implement the user session directive and implementing, by the proxy web security component, the user session directive.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08955094&OS=08955094&RS=08955094
owner: International Business Machines Corporation
number: 08955094
owner_city: Armonk
owner_country: US
publication_date: 20060117
---
The field of the invention is data processing or more specifically methods systems and products for user session management for web applications.

Web applications delivered via the HTTP protocol represent the most popular application development architecture in practice today. The majority of these web applications comply with a security policy that includes authentication and authorization. Security policies are often implemented for web application by third party security vendors that are separate entities from those implementing the web applications. Such security vendors implement uniform security policies across many web applications. The third party security vendor relieves the web applications from the complexity of implementing security management functions. These third party security vendors often provide single sign on where the user authenticates to the security vendor and the security vendor asserts that identity to the supported web applications in a trusted fashion.

As web applications become more sophisticated and complex these web applications can no longer be passive consumers of pre established security policy. Examples include cases where a web application determines that a specific aspect of a user session requires additional or customized security measures not currently implemented by the third party security vendor according to its current security policy. There is therefore an ongoing need for a method system and computer program product for user session management for web applications that allows a web application to trigger security directives.

Methods systems and products are provided for user session management for web applications. Embodiments include identifying by a web application a user session directive and sending from the web application to a proxy web security component an instruction to implement the user session directive. Typical embodiments also include receiving by the proxy web security component the instruction to implement the user session directive and implementing by the proxy web security component the user session directive.

Sending from the web application to a proxy web security component an instruction to implement the user session directive may be carried out by sending an HTTP response message containing a value instructing a proxy web security component to implement the user session directive. Sending an HTTP response message containing a value instructing a proxy web security component to implement the user session directive may be carried out by inserting the value instructing the proxy web security component to implement the user session in a Pragma header field.

Identifying a user session directive may be carried out by identifying a directive to re authenticate the user. Implementing the user session directive may be carried out by re authenticating the user.

Identifying a user session directive may be carried out by identifying a directive to re authenticate the user using a different authentication method than previously implemented in the same user session. Implementing the user session directive may be carried out by re authenticating the user using a different authentication method than previously implemented in the same user session.

Identifying a required user session directive may be carried out by identifying a directive to terminate the user session. Implementing the user session directive may be carried out by terminating the user session.

The foregoing and other objects features and advantages of the invention will be apparent from the following more particular descriptions of exemplary embodiments of the invention as illustrated in the accompanying drawings wherein like reference numbers generally represent like parts of exemplary embodiments of the invention.

Exemplary methods systems and products for user session management for web applications according to embodiments of the present invention are described with reference to the accompanying drawings beginning with . sets forth a network diagram illustrating an exemplary system for user session management for web applications according to embodiments of the present invention. The system of includes wide area network WAN . In the example of several exemplary computers including a personal computer PDA a computer workstation a mobile phone a laptop a server supporting a proxy web security component and a server supporting a web application are connected to the WAN . Network enabled mobile phone connects to the WAN through a wireless link the laptop connects to the WAN through a wireless link and the PDA connects to the WAN through a wireless link . In the example of the personal computer connects to the WAN through a wireline connection the computer workstation connects to the WAN through a wireline connection the server supporting the proxy web security component connects to the WAN through a wireline connection and the server supporting the web application connects to the WAN through a wireline connection.

In the example of several exemplary client computers including the personal computer the PDA the computer workstation the mobile phone and the laptop are capable of requesting resources from the web application running on a web server. A web application is an application that delivers resources to users from a web server over a network such as the World Wide Web or an intranet. Web applications are used to implement webmail online retail sales online auctions discussion boards weblogs and many other functions as will occur to those of skill in the art.

A resource may be any computer resource whose location may be specified by a URL. That is in this specification computer resource or resource refers to any aggregation of information identified by URL. In fact the R in URL stands for resource. Network communications protocols generally for example HTTP TCP IP and so on transmit resources not just files. The most common kind of resource is a file but resources include dynamically generated query results as well such as the output of CGI Common Gateway Interface scripts Java servlets dynamic server pages documents available in several languages and so on. In effect a resource is somewhat similar to a file but more general in nature. Resources implemented as files include static web pages graphic image files video clip files audio clip files and so on. As a practical matter most resources are currently either files or server side script output. Server side script output includes output from CGI programs Java servlets Active Server Pages Java Server Pages and so on.

Resources provided by web applications are typically requested by use of web browsers and each of the client devices of and are capable of supporting a web browser. Browser as the term is used in this specification generally means a web browser a software application for locating requesting retrieving and displaying computer resources in the form of static or dynamic web pages or server side scripting output. Browsers typically comprise both a markup language interpreter web page display routines and an HTTP communications client. Typical browsers today can display text graphics audio and video. Browsers are operative in any computer capable of data communications including web enabled devices wireless web enabled devices microcomputers PDAs laptops and so on. Browsers in wireless web enabled devices often are downsized browsers called microbrowsers. Browsers typically support not only HTML the HyperText Markup Language but other markup languages as well including for example XML the eXtensible Markup Language and in the case of wireless web enabled devices WML the Wireless Markup Language and HDML the Handheld Device Markup Language .

In the example of the web application provides resources to users in accordance with a security policy implemented by the proxy web security component . The proxy web security component of is a centralized web security policy management module implementing security policies for web applications including authentication of users and authorization of users to resources. Although the example of includes only one web application proxy web security component are capable of implementing security policies for a number of web applications thereby providing centralized web security policy management.

One proxy web security component currently available is IBM Tivoli Access Manager WebSEAL . IBM Tivoli Access Manager WebSEAL is a resource manager responsible for managing and protecting Web based information and resources such as those provided by web applications. WebSEAL is a high performance multi threaded Web server that applies fine grained security policy to supported web applications. WebSEAL typically acts as a reverse Web proxy by receiving HTTP HTTPS requests from a Web browser and delivering content from its own Web server or from supported web application servers.

Requests passing through WebSEAL are evaluated by the Tivoli Access Manager. The Tivoli Access Manager includes an authentication framework that provides a wide range of built in authenticators and supports external authenticators. The Tivoli Access Manager also includes an authorization framework accessed through an application programming interface API that provides permit and deny decisions to users on requests for resources from supported web applications.

The system of operates generally to provide user session management for web applications according to embodiments of the present invention by identifying by a web application a user session directive. A user session directive is an instruction to a proxy web security component to perform a task specific to a current user session. Examples of user session directive include instructions to re authenticate the user instructions to re authenticate the user using a different authentication method than previously implemented in the same user session instructions to terminate the user session instructions to switch from one user to another user instructions to switch back to a previous user instructions to initiate a change password operation and others as will occur to those of skill in the art.

The system of also operates generally to provide user session management for web applications according to embodiments of the present invention by sending from the web application to a proxy web security component an instruction to implement the user session directive. Sending from the web application to a proxy web security component an instruction to implement the user session directive may be carried out by sending an HTTP response message containing a value instructing a proxy web security component to implement the user session directive as discussed in more detail below with reference to .

The system of also operates generally to provide user session management for web applications according to embodiments of the present invention by receiving by the proxy web security component the instruction to implement the user session directive and implementing by the proxy web security component the user session directive. Examples of implementing user session directives include re authenticating the user upon instruction of the web application re authenticating the user using a different authentication method than previously implemented in the same user session upon instruction of the web application terminating the user session upon instruction of the web application and others as will occur to those of skill in the art.

The arrangement of servers and other devices making up the exemplary system illustrated in are for explanation not for limitation. Data processing systems useful according to various embodiments of the present invention may include additional servers routers other devices and peer to peer architectures not shown in as will occur to those of skill in the art. Networks in such data processing systems may support many data communications protocols including for example TCP Transmission Control Protocol IP Internet Protocol HTTP HyperText Transfer Protocol WAP Wireless Access Protocol HDTP Handheld Device Transport Protocol and others as will occur to those of skill in the art. Various embodiments of the present invention may be implemented on a variety of hardware platforms in addition to those illustrated in .

As discussed above web applications typically provide requested resources to users in accordance with a security policy implemented by the proxy web security component. For further explanation therefore sets forth a block diagram of a system for user session management for web applications that includes a browser coupled for data communications with a proxy web security component that is in turn coupled for data communication with a web application .

The web application of includes a user session management module according to the present invention. The user session management module includes computer program instructions for identifying a user session directive and sending an instruction to implement the user session directive to a proxy web security component . Examples of user session directive include instructions to re authenticate the user instructions to re authenticate the user using a different authentication method than previously implemented in the same user session instructions to terminate the user session instructions to switch from one user to another user instructions to switch back to a previous user instructions to initiate a change password operation and others as will occur to those of skill in the art.

The proxy web security component of includes a user session management module according to the present invention. The user session management module includes computer program instructions for receiving the instruction to implement the user session directive and implementing the user session directive. Examples of implementing user session directives include re authenticating the user upon instruction of the web application re authenticating the user using a different authentication method than previously implemented in the same user session upon instruction of the web application terminating the user session upon instruction of the web application and others as will occur to those of skill in the art.

The proxy web security component of includes an authentication module that authenticates users requesting resources from the web application through use of a user browser in accordance with a security policy implemented by the proxy web security component . Authentication is the process of verifying that a user person or process is who the user claims to be. Proxy web security components often support more than one authentication method. Examples of authentication methods include methods that confirm usernames and passwords methods that confirm smartcards methods that identify biometric information from users such as for example retina scans voice recognition methods or fingerprint recognition methods and other authentication methods that will occur to those of skill in the art.

The proxy web security component of includes an authorization module that authorizes particular user requests for resources from the web application in accordance with a security policy implemented by the proxy web security component . Authorization is the process of permitting or denying an authenticated user access to a resource.

User session management for web applications in accordance with the present invention is generally implemented with computers that is with automated computing machinery. In the system of for example all the nodes servers and communications devices are implemented to some extent at least as computers. For further explanation therefore sets forth a block diagram of automated computing machinery comprising an exemplary computer useful in user session management for web applications according to embodiments of the present invention. The computer of includes at least one computer processor or CPU as well as random access memory RAM which is connected through a system bus to processor and to other components of the computer.

Stored in RAM is a web application including a user session management module computer program instructions for identifying a user session directive and sending an instruction to implement the user session directive to a proxy web security component.

Also stored in RAM is an operating system . Operating systems useful in computers according to embodiments of the present invention include UNIX Linux Microsoft XP AIX IBM s i5 OS and others as will occur to those of skill in the art. Operating system web application and user session management module in the example of are shown in RAM but many components of such software typically are stored in non volatile memory also.

Computer of includes non volatile computer memory coupled through a system bus to processor and to other components of the computer . Non volatile computer memory may be implemented as a hard disk drive optical disk drive electrically erasable programmable read only memory space so called EEPROM or Flash memory RAM drives not shown or as any other kind of computer memory as will occur to those of skill in the art.

The example computer of includes one or more input output interface adapters . Input output interface adapters in computers implement user oriented input output through for example software drivers and computer hardware for controlling output to display devices such as computer display screens as well as user input from user input devices such as keyboards and mice.

The exemplary computer of includes a communications adapter for implementing data communications with other computers . Such data communications may be carried out serially through RS 232 connections through external buses such as USB through data communications networks such as IP networks and in other ways as will occur to those of skill in the art. Communications adapters implement the hardware level of data communications through which one computer sends data communications to another computer directly or through a network. Examples of communications adapters useful for determining availability of a destination according to embodiments of the present invention include modems for wired dial up communications Ethernet IEEE 802.3 adapters for wired network communications and 802.11b adapters for wireless network communications.

For further explanation sets forth a flow chart illustrating an exemplary method for user session management for web applications according to embodiments of the present invention that includes identifying by a web application a user session directive . As discussed above a user session directive is an instruction to a proxy web security component to perform a task specific to a current user session.

Identifying a user session directive may be carried out by identifying a directive to re authenticate the user. A directive to re authenticate the user is typically implemented as an instruction to a proxy web security component to authenticate the user with the same authentication method previously used in the same user session.

As discussed above proxy web security components often support more than one authentication method. Examples of authentication methods include methods that confirm usernames and passwords methods that confirm smartcards methods that identify biometric information from users such as for example retina scans voice recognition methods or fingerprint recognition methods and other authentication methods that will occur to those of skill in the art. Identifying a user session directive therefore may be carried out by identifying a directive to re authenticate the user using a different authentication method than previously implemented in the same user session.

Identifying a required user session directive may be carried out by identifying a directive to terminate the user session. A directive to terminate the user session is typically implemented as an instruction to a proxy web security component to terminate the user session.

The method of also includes sending from the web application to a proxy web security component an instruction to implement the user session directive . Sending from the web application to a proxy web security component an instruction to implement the user session directive may be carried out by sending a Hypertext Transfer Protocol HTTP response message containing a value instructing a proxy web security component to implement the user session directive. The Hypertext Transfer Protocol HTTP is an application level protocol for distributed collaborative hypermedia information systems. HTTP is a generic stateless protocol which can be used for many tasks beyond its use for hypertext such as name servers and distributed object management systems through extension of its request methods error codes and headers. The standard HTTP 1.1 protocol supports a general header filed called the Pragma header field. The Pragma header is used to include implementation specific directives that may apply to any recipient along the HTTP request response chain. Such implementation specific directives often include information not formally defined in the HTTP specification. The most commonly used value used by a Pragma header is nocache which instructs a supporting web client to not cache the content contained in the HTTP message.

Sending an HTTP response message containing a value instructing a proxy web security component to implement the user session directive according to the method of may therefore be carried out by inserting the value instructing the proxy web security component to implement the user session directive in a Pragma header field. The value instructing the proxy web security component to implement the user session directive is typically a value uniquely identifying a particular user session directive to be implemented by a proxy web security component. For example a unique value may be assigned to the user directive to re authenticate a user to re authenticate the user using a different authentication method than previously implemented in the same user session and to terminate the user session.

The method of also includes receiving by the proxy web security component the instruction to implement the user session directive . Receiving by the proxy web security component the instruction to implement the user session directive may be carried out by receiving an HTTP response message from a web application and identifying a value in a Pragma header of the HTTP response message identifying a particular user session directive.

The method of also includes implementing by the proxy web security component the user session directive identified by the web application. Implementing the user session directive may be carried out by re authenticating the user. Re authenticating the user is typically carried out by authenticating the user using the same authentication method user previously in the same user session.

As discussed above proxy web security components often support more than one authentication method. Implementing the user session directive may be carried out by re authenticating the user using a different authentication method than previously implemented in the same user session.

Implementing the user session directive may be carried out by terminating the user session. Terminating the session may also include sending a message to the user informing the user that the session has been terminated.

For further explanation sets forth a calling sequence diagram illustrating an exemplary use case of the method of . In the example of a user requests a resource on a web application . The request is sent from the user browser to a proxy web security component implementing security policies for the web application .

In response to receiving the request for the resource from the web application the proxy web security component issues an authentication challenge to the user. In response to the authentication challenge the user provides authentication credentials to the proxy web security component .

In the example of the proxy web security component authenticates the user by determining that the authentication credentials are valid and forwards the original request for resource with the credentials to the web application .

In the example of the web application identifies a user session directive to use a stronger authentication method and sends an instruction to use a stronger authentication method to the proxy web security component . The proxy web security component receives the instruction to use a stronger authentication method and implements the user session directive by issuing a new authentication challenge .

In response to receiving the new authentication challenge a user sends to the proxy web security component new authentication credentials. The proxy web security component determines that the new authentication credentials are valid and forwards the original request for a resource with the new authentication credentials to the web application .

In response to being forwarded the request with the new authentication credentials the web application sends a response containing the requested resource to the proxy web security component . The proxy web security component forwards the response with the resource to the user web browser .

Exemplary embodiments of the present invention are described largely in the context of a fully functional computer system for user session management for web applications. Readers of skill in the art will recognize however that the present invention also may be embodied in a computer program product disposed on signal bearing media for use with any suitable data processing system. Such signal bearing media may be transmission media or recordable media for machine readable information including magnetic media optical media or other suitable media. Examples of recordable media include magnetic disks in hard drives or diskettes compact disks for optical drives magnetic tape and others as will occur to those of skill in the art. Examples of transmission media include telephone networks for voice communications and digital data communications networks such as for example Ethernets and networks that communicate with the Internet Protocol and the World Wide Web. Persons skilled in the art will immediately recognize that any computer system having suitable programming means will be capable of executing the steps of the method of the invention as embodied in a program product. Persons skilled in the art will recognize immediately that although some of the exemplary embodiments described in this specification are oriented to software installed and executing on computer hardware nevertheless alternative embodiments implemented as firmware or as hardware are well within the scope of the present invention.

It will be understood from the foregoing description that modifications and changes may be made in various embodiments of the present invention without departing from its true spirit. The descriptions in this specification are for purposes of illustration only and are not to be construed in a limiting sense. The scope of the present invention is limited only by the language of the following claims.

