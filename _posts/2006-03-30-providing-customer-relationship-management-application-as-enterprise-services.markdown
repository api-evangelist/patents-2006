---

title: Providing customer relationship management application as enterprise services
abstract: Methods and apparatus, including systems and computer program products, for a services architecture design that provides enterprise services having customer relationship management functionality at the level of an enterprise application. The design includes a set of service operations, process components, and optionally deployment units. Suitable business objects are also described.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08396749&OS=08396749&RS=08396749
owner: SAP AG
number: 08396749
owner_city: Walldorf
owner_country: DE
publication_date: 20060330
---
This specification relates to data processing systems implemented on computers and more particular to data processing systems providing services in the nature of web services.

Enterprise software systems are generally large and complex. Such systems can require many different components distributed across many different hardware platforms possibly in several different geographical locations. Thus the architecture of a large software application i.e. what its components are and how they fit together is an important aspect of its design for a successful implementation.

Web services are one technology for making the functionality of software applications available to other software including other applications. A web service is a standards based way of encapsulating the functionality of an application that other applications can locate and access. A service oriented architecture is a distributed software model within which functionality is defined as independent web services. Within a service oriented architecture web services can be used in defined sequences according to business logic to form applications that enable business processes.

This specification describes a services architecture design that provides enterprise services having accounting functionality at the level of an enterprise application. Enterprise services are web services that have an enterprise level business value.

In its various aspects the invention can be embodied in systems methods and computer program products. For example a system in one embodiment implements a services architecture design that provides enterprise services having customer relationship management functionality at the level of an enterprise application. The design includes a set of service operations process components and optionally deployment units. Suitable business objects are also described.

The subject matter described in this specification can be implemented to realize one or more of the following advantages. Effective use is made of process components as units of software reuse to provide a design that can be implemented reliably in a cost effective way. Effective use is made of deployment units each of which is deployable on a separate computer hardware platform independent of every other deployment unit to provide a scalable design. Service interfaces of the process components define a pair wise interaction between pairs of process components that are in different deployment units in a scalable way.

Details of one or more implementations of the subject matter described in this specification are set forth in the accompanying drawings and in the description below. Further features aspects and advantages of the subject matter will become apparent from the description the drawings and the claims.

The elements of the architecture include the business object the process component the service operation or simply the operation the service interface the message and the deployment unit. The elements can also include process agents and reuse service components. These will be generally described below.

In one implementation the software is implemented to be deployed on an application platform that includes a foundation layer that contains all fundamental entities that can used from multiple deployment units. These entities can be process components business objects or reuse service components. A reuse service component is a piece of software that is reused in different transactions. A reuse service component is used by its defined interfaces which can be e.g. local APIs Application Programming Interfaces or service interfaces.

The architectural design is a specification of a computer software application and elements of the architectural design can be implemented to realize a software application that implements enterprise application service interfaces. The elements of the architecture are at times described in this specification as being contained or included in other elements for example a process component is described as being contained in a deployment unit. It should be understood however that such operational inclusion can be realized in a variety of ways and is not limited to a physical inclusion of the entirety of one element in another.

The architectural elements include the business object. A business object is a representation of a type of a uniquely identifiable business entity an object instance described by a structural model. Processes operate on business objects.

A business object represents a specific view on some well defined business content. A business object represents content and instances of business objects include content which a typical business user would expect and understand with little explanation. Whether an object as a type or an instance of an object is intended by the term is generally clear from the context so the distinction will be made explicitly only when necessary. Properly implemented business objects are implemented free of redundancies.

Business objects are further categorized as business process objects master data objects mass data run objects dependent objects and transformed objects. A master data object is an object that encapsulates master data i.e. data that is valid for a period of time . A business process object which is the kind of business object generally found in a process component is an object that encapsulates transactional data i.e. data that is valid for a point in time . A mass data run object is an application object that executes an algorithm for a particular mass data run. An instance of a mass data run object contains a particular set of selections and parameters. A mass data run object implements an algorithm that modifies manages and or processes a large amount of data in multiple transactions possibly but not necessarily with parallel processing. A dependent object is a business object used as a reuse part in another business object. A dependent object represents a concept that cannot stand by itself from a business point of view. Instances of dependent objects only occur in the context of a non dependent business object. A transformed object is a transformation of multiple business objects for a well defined purpose. It transforms the structure of multiple business objects into a common structure. A transformed object does not have its own persistency.

The architectural elements also include the process component. A process component is a software package that realizes a business process and generally exposes its functionality as services. The functionality contains business transactions. A process component contains one or more semantically related business objects. Any business object belongs to no more than one process component.

Process components are modular and context independent. That they are context independent means that a process component is not specific to any specific application and is reusable. The process component is the smallest most granular element of reuse in the architecture.

The architectural elements also include the operation. An operation belongs to exactly one process component. A process component generally has multiple operations. Operations can be synchronous or asynchronous corresponding to synchronous or asynchronous process agents which will be described below. An operation is the smallest separately callable function described by a set of data types used as input output and fault parameters or some combination of them serving as a signature. For convenience in supporting use of the operations supported by a system implementing elements of the design such a system can optionally include a repository of service descriptions that includes a standards based description of each of the supported service operations.

The architectural elements also include the service interface which may be referred to simply as an interface. An interface is a named group of operations. Each operation belongs to exactly one interface. An interface belongs to exactly one process component. A process component might contain multiple interfaces. In one implementation an interface contains only inbound or outbound operations but not a mixture of both. One interface can contain both synchronous and asynchronous operations. All operations of the same type either inbound or outbound which belong to the same message choreography will preferably belong to the same interface. Thus generally all outbound operations to the same other process component are in one interface.

The architectural elements also include the message. Operations transmit and receive messages. Any convenient messaging infrastructure can be used. A message is information conveyed from one process component instance to another with the expectation that activity will ensue. An operation can use multiple message types for inbound outbound or error messages. When two process components are in different deployment units invocation of an operation of one process component by the other process component is accomplished by an operation on the other process component sending a message to the first process component.

The architectural elements also include the process agent. Process agents do business processing that involves the sending or receiving of messages. Each operation will generally have at least one associated process agent. A process agent can be associated with one or more operations. Process agents can be either inbound or outbound and either synchronous or asynchronous.

Asynchronous outbound process agents are called after a business object changes e.g. after a create update or delete of a business object instance.

An output process agent will generally perform some processing of the data of the business object instance whose change triggered the event. An outbound agent triggers subsequent business process steps by sending messages using well defined outbound services to another process component which generally will be in another deployment unit or to an external system. An outbound process agent is linked to the one business object that triggers the agent but it is sent not to another business object but rather to another process component. Thus the outbound process agent can be implemented without knowledge of the exact business object design of the recipient process component.

Inbound process agents are called after a message has been received. Inbound process agents are used for the inbound part of a message based communication. An inbound process agent starts the execution of the business process step requested in a message by creating or updating one or multiple business object instances. An inbound process agent is not the agent of a business object but of its process component. An inbound process agent can act on multiple business objects in a process component.

Synchronous agents are used when a process component requires a more or less immediate response from another process component and is waiting for that response to continue its work.

Operations and process components are described in this specification in terms of process agents. However in alternative implementations process components and operations can be implemented without use of agents using other conventional techniques to perform the functions described in this specification.

The architectural elements also include the deployment unit. A deployment unit includes one or more process components and optionally one or more business objects that are deployed together on a single computer system platform. Conversely separate deployment units can be deployed on separate physical computing systems. For this reason a deployment unit boundary defines the limits of an application defined transaction i.e. a set of actions that have the ACID properties of atomicity consistency isolation and durability. To make use of database manager facilities the architecture requires that all operations of such a transaction be performed on one physical database as a consequence the processes of such a transaction must be performed by the process components of one instance of one deployment unit.

The process components of one deployment unit interact with those of another deployment unit using messages passed through one or more data communication networks or other suitable communication channels. Thus a deployment unit deployed on a platform belonging one business can interact with a deployment unit software entity deployed on a separate platform belonging to a different and unrelated business allowing for business to business communication. More than one instance of a given deployment unit can execute at the same time on the same computing system or on separate physical computing systems. This arrangement allows the functionality offered by a deployment unit to be scaled to meet demand by creating as many instances as needed.

Since interaction between deployment units is through service operations a deployment unit can be replaced by other another deployment unit as long as the new deployment unit supports the operations depended upon by other deployment units. Thus while deployment units can depend on the external interfaces of process components in other deployment units deployment units are not dependent on process component interactions i.e. interactions between process components involving their respective business objects operations interfaces and messages within other deployment units. Similarly process components that interact with other process components or external systems only through messages e.g. as sent and received by operations can also be replaced as long as the replacement supports the operations of the original.

Interactions between process components that occur only within a deployment unit are not constrained to using service operations. These can be implemented in any convenient fashion.

In contrast to a deployment unit the foundation layer does not define a limit for application defined transactions. Deployment units communicate directly with entities in the foundation layer which communication is typically not message based. The foundation layer is active in every system instance on which the application is deployed. Business objects in the foundation layer will generally be master data objects. In addition the foundation layer will include some business process objects that are used by multiple deployment units. Master data objects and business process objects that should be specific to a deployment unit are preferably assigned to their respective deployment unit.

As shown in a Customer Invoicing deployment unit includes a Customer Invoicing process component a Customer Invoice Request business object and a Customer Invoice business object .

As shown in a Customer Relationship Management deployment unit includes an Opportunity Processing process component a Customer Quote Processing process component a Sales Order Processing process component a Customer Return Processing process component a Service Order Processing process component a Direct Mail Processing process component a Service Request Processing process component and a Service Confirmation Processing process component . The Customer Invoice deployment unit also includes a Direct Mail Template business object and a Customer Problem and Solution master data object .

The Opportunity Processing process component includes an Opportunity business object . The Customer Quote Processing process component includes a Customer Quote business object . The Sales Order Processing process component includes a Sales Order business object . The Customer Return Processing process component includes a Customer Return business object . The Service Order Processing process component includes a Service Order business object . The Direct Mail Processing process component includes a Direct Mail Template business object used to automatically generate personalized mail in order to contact customers and prospects and a Direct Mail Run business object that is a specification of a serial letter sent as personalized mail to selected customers and or prospects by means of multiple communication channels. The Service Request Processing process component includes a Support Services business object and a Service Request business object . The Service Confirmation Processing process component includes a Service Confirmation business object .

As shown in an Activity Management process component a Price Master Data management process component and a Business Document Flow Processing process component in the foundation layer may also be used. The Activity Management process component may be used to record public interactions that is activities undertaken on behalf of a particular company. The Activity Management process component includes a Phone Call Activity business object an Appointment Activity business object a Letter Activity business object a Fax Activity business object an Email Activity business object and a Task master data object .

The Phone Call Activity business object is the type of activity that records telephone interactions that are undertaken by employees on behalf of their company. The Appointment Activity business object includes different types of planned activities that are maintained in an employee s calendar including external appointments and scheduled meetings with other business parties. The Letter Activity business object is the type of activity that records messages written on paper by employees on behalf of their company. The Fax Activity business object is the type of activity that records documents or graphics transmitted over a telecommunications facility by employees on behalf of their company. The Email Activity business object is the type of activity that records communication between employees on behalf of their company via the Internet. The Task master data object is a piece of daily business work or a notification about a business event.

The Price Master Data management process component includes a Sales Price Specification business object a Sale Price List business object and a Procurement Price Specification business object . The Sales Price Specification business object is a specification of a price a discount or a surcharge that is used indirectly using pricing in sales and service documents. The specification is defined for a combination of properties and is valid for a specific period. The Sales Price List business object is a list of price specifications with respect to common identifying criteria. The Procurement Price Specification business object is the specification of a price discount or surcharge to be used in procurement documents. The specification is defined for a combination of properties and is valid for a specific period of time.

The Business Document Flow Processing process component includes a Business Document Flow transformed business object . The Business Document Flow transformed business objects is a view on the flow of business transaction documents. The Business Document Flow transformed business object may use a synchronous Request Business Document Flow outbound message agent to invoke a Query Related Business Document operation. The Query Related Business Document may update the Business Document Flow Processing process component . Additionally the Business Document Flow transformed business object may receive an update from a Find Related business Document operation.

A Maintain Customer Invoice Request operation is included in a Request Invoicing In interface . The Maintain Customer Invoice Request operation sends an update of a customer invoice request using a Maintain Customer Invoice Request asynchronous outbound process agent to update the Customer Invoice Request business object . For example the operation can create delete or cancel a customer invoice request.

As shown in a Customer Invoice business object can use a Confirm Customer Invoice asynchronous outbound process agent to invoke a Confirm Invoicing operation . The Confirm Invoicing operation is included in a Request Invoicing Out interface . The Confirm Invoicing operation may update multiple process components about an invoice confirmation. These include a Sales Order Processing process component a Customer Return Processing process component a Service Order Processing process component a Service Request Processing process component a Service Confirmation Processing process component and a Sales Contract Processing process component .

The Customer Invoice business object may also invoke several operations depicted by the letter A that will be discussed in the description for and .

As shown in the Customer Invoice business object may use a Notify of Customer Invoice to Accounting asynchronous outbound process agent to invoke a Notify of Invoice operation or a Notify of Invoice Cancellation operation . The Notify of Invoice operation and the Notify of Invoice Cancellation operation are included in an Invoice Accounting Out interface and may send an update to the Accounting process agent .

The Customer Invoice business object may also use a Notify of Customer Invoice to Due Item Processing asynchronous outbound process agent to invoke the Notify of Invoice operation or the Notify of Invoice Cancellation operation . The operations and may update the Due Item Processing process component .

In addition the Customer Invoice business object may use a Customer Invoice to Credit Management Processing asynchronous outbound process agent to invoke the Notify of Credit Commitment operation . The Notify of Credit Commitment operation is included in a Credit Usage Out interface and may update the Credit Management process component .

As shown in the Customer Invoice business object may use a Notify Customer of Customer Invoice asynchronous outbound process agent to invoke a Notify Customer of Invoice operation . The Notify Customer of Invoice operation is included in an Invoicing Out interface and may update a Supplier Invoice Processing at Customer process component . The Customer Invoice business object may also use a Notify of Cash Payment from Customer Invoice to Payment Processing asynchronous outbound process agent to invoke a Notify of Cash Payment operation or a Request Cash Payment Cancellation operation . Both operations are included in a Cash Payment Out interface and may be used to update the Payment Processing process component . The Customer Invoice business object can additionally use a Notify of Customer Invoice to Confirmation and Inventory asynchronous outbound process agent to invoke a Notify of Inventory Change operation or a Request Inventory Change and Activity Provision Cancellation operation . Both operations are included in an Inventory Change and Activity Confirmation Accounting Out interface and may be used to update the Confirmation and Inventory process agent .

As shown in the Service Confirmation business object may update several process components through various interfaces and operations. A Notify of Service Confirmation to Accounting asynchronous outbound process agent may invoke a Notify of Service Confirmation operation to update the Accounting process component . The Notify of Service Confirmation operation is included in an Order Accounting Out interface . The Accounting process component may also receive an update using a Notify of Service Provision from Service Confirmation to Accounting asynchronous outbound process agent . The process agent may invoke a Notify of Service Provision operation or a Notify of Service Provision Cancellation operation . Both operations are included in a Service Provision Accounting Out interface .

The Service Confirmation business object may use a Request Invoicing from Service Confirmation to Customer Invoice asynchronous outbound process agent to invoke a Request Invoicing operation . The Request Invoicing operation is included in a Request Invoicing Out interface and may update the Customer Invoice Processing process component .

The Service Confirmation business object may also use a Notify of Inventory Change from Service Confirmation to Confirmation and Inventory asynchronous outbound process agent to invoke a Notify of Inventory Change operation . The Notify of Inventory Change operation is included in an Inventory Change Out interface and may update the Confirmation and Inventory process component .

The Service Confirmation business object may also use an Expense Item asynchronous outbound process agent to invoke a Financial Expense Notification Out operation which may update an Expense Processing process component .

As shown in a Customer Requirement Processing process component may invoke a Change Service Order based on Spare Part Availability Update operation or a Change Service Order based on Spare Part Fulfillment Confirmation operation . Both operations are included in a Fulfillment In interface . A Change Service Order based on customer Requirement asynchronous inbound process agent may send an update to the Service Order business object .

The Customer Invoice Processing process component may invoke a Change Service Order based on Customer Invoice operation . The Change Service Order based on Customer Invoice operation is included in a Request Invoicing In interface . A Change Service Order based on Customer Invoice asynchronous inbound process agent may send an update to the Service Order business object .

The Service Order business object may use a Synchronous Request Availability Information and Reservation from Service Order to Customer Requirement process agent to invoke a Synchronous Request Spare Part Availability Information and Provisional Reservation operation or to invoke a Register Spare Part Requirement Deletion Notification operation . Bother operations are included in a Fulfillment Out interface and may update the Customer Requirement Processing process component . The Service Order business object may also use a Synchronous Request Credit Limit Check from Service Order to Credit Management process agent to invoke a Request Credit Limit Check operation . The operation may update the Credit Management process component .

As shown in the Service Order business object may use a Request Requirement Reservation and Fulfillment from Service Order to Customer Requirement asynchronous outbound process agent to invoke a Request Spare Part Requirement Reservation and Fulfillment operation . The Request Spare Part Requirement Reservation and Fulfillment operation is included in a Fulfillment Out interface and may send an update to the Customer Requirement Processing process component .

The Service Order business object may use a Notify of Service Order to Accounting asynchronous outbound process agent to invoke a Notify of Service Order operation . The Notify of Service Order operation is included in an Order Accounting Out interface and may update the Accounting process component .

The Service Order business object may use a Request Invoicing from Service Order to Customer Invoice Processing asynchronous outbound process agent to invoke a Request Invoicing operation . The Request Invoicing operation is part of a Request Invoicing Out interface and may update the Customer Invoice Processing process component .

The Service Order business object may use a Notify of Service Order Credit Commitment from Service Order to Credit Management asynchronous outbound process agent to invoke a Notify of Service Order Credit Commitment operation . The Notify of Service Order Credit Commitment operation may update the Credit Management process component .

A Service Request Processing in External Provider System external process component may invoke a Change Service Request based on Provider s Confirmation operation . The Change Service Request based on Provider s Confirmation operation is included in an External Requesting In interface and may use a Change Service Request based on External Provider s Request Confirmation asynchronous outbound process agent to update the Service Request business object .

The Customer Invoice Processing process component may invoke a Change Service Request based on Customer Invoice operation . The Change Service Request based on Customer Invoice operation is included in a Request Invoicing In interface and may use a Change Service Request based on Customer Invoice to update the Service Request business object .

As shown in the Service Request business object may use a Confirm Service Request from Service Request to External Requester asynchronous outbound process agent to invoke a Confirm Service Request operation . The Confirm Service Request operation is included in an External Providing Out interface and may update the Service Request Processing in External Requester System external process component .

The Service Request business object may use a Notify of Service Request to Accounting asynchronous outbound process agent to invoke a Notify of Service Request operation . The Notify of Service Request operation is included in an Order Accounting Out interface and may update the Accounting process component .

The Service Request business object may use a Notify of Service Provision from Service Request to Accounting asynchronous outbound process agent to invoke a Notify of Service Provision or a Notify of Service Provision Cancellation operation . The Notify of Service Provision and the Notify of Service Provision Cancellation operation are included in a Service Provision Accounting Out interface and may update the Accounting process component .

The Service Request business object may use a Request Service from Service Request to External Provider asynchronous outbound process agent to invoke a Request Service operation . The Request Service operation is included in an External Requesting Out interface and may update the Service Request Processing in External Provider System external process component .

The Service Request business object may also use a Request Invoicing from Service Request to Customer Invoice Processing asynchronous outbound process agent to invoke a Request Invoicing operation . The Request Invoicing operation is included in a Request Invoicing Out interface and may update the Customer Invoice Processing process component .

The Customer Return business object may use a Customer Return to Customer Invoice Out asynchronous outbound process agent to invoke a Request Invoicing operation . The Request Invoicing operation is included in a Request Invoicing Out interface and may update the Customer Invoice Processing process component .

The Customer Return business object may also use an Incoming Goods asynchronous outbound process agent to invoke a Delivery Execution Request Out operation . The Delivery Execution Request Out operation is included in a Delivery Execution Request Out interface and may update an Inbound Delivery Processing process component .

The Customer Return business object may also use a Notify of Customer Return to Accounting asynchronous outbound process agent to invoke a Notify of Customer Return operation . The Notify of Customer Return operation is included in an Order Accounting Out interface and may update the Accounting process component .

The Customer Return business object may also use a Communication Method at Customer asynchronous outbound process agent to invoke a Confirm Customer Return operation to update a Purchase Order Processing at Customer process component .

A Task master data object may be used in the operations for the Activity Management process component . The Task master data object is a piece of daily business work or a notification about a business event. It is created by an application and assigned to a user or a group of users. There are different categories of tasks such as business tasks alerts or notifications and each task carries a certain set of attributes and functions.

The Groupware process component may invoke a Maintain Phone Call Activity operation a Maintain Appointment Activity operation a Maintain Letter Activity operation a Maintain Fax Activity operation or a Maintain Email Activity operation . The Maintain Phone Call Activity operation the Maintain Appointment Activity operation the Maintain Letter Activity operation the Maintain Fax Activity operation and the Maintain Email Activity operation are included in an Activity Transmission Receiving In interface and may use a Maintain Activity from Groupware asynchronous inbound process agent to update several business objects. If the Phone Call Activity business object receives an update then a Notify of Phone Call Activity to Groupware asynchronous outbound process agent may invoke a Notify of Phone Call Activity operation . If the Appointment Activity business object receives an update then a Notify of Appointment Activity to Groupware asynchronous outbound process agent may invoke a Notify of Appointment Activity operation . If the Letter Activity business object receives an update then a Notify of Letter Activity to Groupware asynchronous outbound process agent may invoke a Notify of Letter Activity operation . If the Fax Activity business object then a Notify of Fax Activity to Groupware asynchronous outbound process agent may invoke a Notify of Fax Activity operation . If the Email Activity business object receives an update then a Notify of Email Activity to Groupware asynchronous outbound process agent may invoke a Notify of Email Activity operation . The Notify of Phone Call Activity the Notify of Appointment Activity the Notify of Letter Activity the Notify of Fax Activity and the Notify of Email Activity are included in an Activity Transmission Sending Out interface and may update the Groupware process component .

A Customer Requirement Processing process component may invoke a Change Sales Order based on Customer Requirement Fulfillment Confirmation operation or a Change Sales Order based on Product Available to Promise Update operation . The Change Sales Order based on Customer Requirement Fulfillment Confirmation operation and the Change Sales Order based on Product Available to Promise Update operation are included in a Fulfillment In interface and may use a Change Sales Order based on Customer Requirement asynchronous outbound process agent to update the Sales Order business object .

The Customer Invoice Processing process component may invoke a Change Sales Order based on Customer Invoice operation . The Change Sales Order based on Customer Invoice operation is included in a Request Invoicing In interface and may use a Change Sales Order based on Customer Invoice asynchronous outbound process agent to update the Sales Order business object .

As shown in the Sales Order business object may use a Synchronous Request Credit Worthiness from Sales Order to Credit Management inbound process agent to invoke a Request Credit Worthiness operation . The Request Credit Worthiness operation is included in a Credit Usage Out Interface and may update the Credit Management process component .

The Request Credit Worthiness operation may use a Synchronous Request Product Availability Information from Sales Order to Customer Requirement outbound process agent may invoke a Request Product Availability Information and Provision Reservation of Customer Requirement operation or a Register Customer Requirement Deletion Notification operation . The Request Product Availability Information and Provision Reservation of Customer Requirement operation and the Register Customer Requirement Deletion Notification operation are included in a Fulfillment Out interface and may update a Customer Requirement Processing process component .

The Request Credit Worthiness operation may use a Request Product Valuation from Sales Order to Accounting synchronous outbound process agent to invoke a Request Product Valuation operation . The Request Product Valuation operation is included in a Product and Resource Valuation Out interface and may update the Accounting process component .

As shown in the Sales Order business object may use a Notify of Credit Commitment from Sales Order to Credit Management asynchronous outbound process agent to invoke a Notify of Credit Commitment operation . The Notify of Credit Commitment operation is included in a Credit Usage Out interface and may update the Credit Management process component .

The Sales Order business object may also use a Request Invoicing from Sales Order to Customer Invoice Processing asynchronous outbound process agent to invoke a Request Invoicing operation . The Request Invoicing operation is included in a Request Invoicing Out interface and may update the Customer Invoice Processing process component .

The Sales Order business object may also use a Request Reservation and Fulfillment from Sales Order to Customer Requirement asynchronous outbound process agent to invoke a Request Customer Requirement Reservation and Fulfillment operation . The Request Customer Requirement Reservation and Fulfillment operation is included in a Fulfillment Out interface and may update the Customer Requirement Processing process component .

The Sales Order business object may also use a Notify of Sales Order to Accounting asynchronous outbound process agent to invoke a Notify of Sales Order operation . The Notify of Sales Order operation is included in an Order Accounting Out interface and may update the Accounting process component .

The Sales Order business object may also use a Confirm Sales Order to Customer asynchronous outbound process agent to invoke a Confirm Sales Order operation . The Confirm Sales Order operation is included in an Ordering Out interface and may update the Purchase Order Processing at Customer external process component .

The Customer Quote business object may use a Synchronous Request Credit Worthiness from Customer Quote to Credit Management inbound process agent to invoke a Request Credit Worthiness operation . The Request Credit Worthiness operation is included in a Credit Usage Out interface and may send an update to the Credit Management process component .

The Customer Quote business object may also use a Synchronous Request Product Availability Information from Customer Quote to Customer Requirement inbound process agent to invoke a Request Product Availability Information operation a Request Product Availability Information and Provisional Reservation of Customer Requirement operation or a Register Customer Requirement Deletion Notification operation . The operations and are included in a Fulfillment Out interface and may send an update to the Customer Requirement Processing process component .

The Customer Quote business object may also use a Notify Customer of Customer Quote asynchronous inbound process agent to invoke a Notify of Customer Quote operation and update a Request for Quote RFQ Processing at Customer process component .

The Customer Quote business object may also use a Request Requirement Reservation from Customer Quote to Customer Requirement asynchronous inbound process agent to invoke a Request Customer Requirement Reservation operation . The Request Customer Requirement Reservation operation is included in a Fulfillment Out interface and may update the Customer Requirement Processing process component .

The Customer Quote business object may also use a Notify of Credit Commitment from Customer Quote to Credit Management asynchronous inbound process agent to invoke a Notify of Credit Commitment operation . The Notify of Credit Commitment operation is included in a Credit Usage Out interface and may update the Credit Management process component .

The subject matter described in this specification and all of the functional operations described in this specification can be implemented in digital electronic circuitry or in computer software firmware or hardware including the structural means disclosed in this specification and structural equivalents thereof or in combinations of them. The subject matter described in this specification can be implemented as one or more computer program products i.e. one or more computer programs tangibly embodied in an information carrier e.g. in a machine readable storage device or in a propagated signal for execution by or to control the operation of data processing apparatus e.g. a programmable processor a computer or multiple computers. A computer program also known as a program software software application or code can be written in any form of programming language including compiled or interpreted languages and it can be deployed in any form including as a stand alone program or as a module component subroutine or other unit suitable for use in a computing environment. A computer program does not necessarily correspond to a file. A program can be stored in a portion of a file that holds other programs or data in a single file dedicated to the program in question or in multiple coordinated files e.g. files that store one or more modules sub programs or portions of code . A computer program can be deployed to be executed on one computer or on multiple computers at one site or distributed across multiple sites and interconnected by a communication network.

The processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform functions by operating on input data and generating output. The processes and logic flows can also be performed by and apparatus can also be implemented as special purpose logic circuitry e.g. an FPGA field programmable gate array or an ASIC application specific integrated circuit .

Processors suitable for the execution of a computer program include by way of example both general and special purpose microprocessors and any one or more processors of any kind of digital computer. Generally a processor will receive instructions and data from a read only memory or a random access memory or both. The essential elements of a computer are a processor for executing instructions and one or more memory devices for storing instructions and data. Generally a computer will also include or be operatively coupled to receive data from or transfer data to or both one or more mass storage devices for storing data e.g. magnetic magneto optical disks or optical disks. Information carriers suitable for embodying computer program instructions and data include all forms of non volatile memory including by way of example semiconductor memory devices e.g. EPROM EEPROM and flash memory devices magnetic disks e.g. internal hard disks or removable disks magneto optical disks and CD ROM and DVD ROM disks. The processor and the memory can be supplemented by or incorporated in special purpose logic circuitry.

To provide for interaction with a user the subject matter described in this specification can be implemented on a computer having a display device e.g. a CRT cathode ray tube or LCD liquid crystal display monitor for displaying information to the user and a keyboard and a pointing device e.g. a mouse or a trackball by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well for example feedback provided to the user can be any form of sensory feedback e.g. visual feedback auditory feedback or tactile feedback and input from the user can be received in any form including acoustic speech or tactile input.

The subject matter described in this specification can be implemented in a computing system that includes a back end component e.g. a data server a middleware component e.g. an application server or a front end component e.g. a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described herein or any combination of such back end middleware and front end components. The components of the system can be interconnected by any form or medium of digital data communication e.g. a communication network. Examples of communication networks include a local area network LAN and a wide area network WAN e.g. the Internet.

The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client server relationship to each other.

While this specification contains many specifics these should not be construed as limitations on the scope of the invention or of what may be claimed but rather as an exemplification of preferred embodiments of the invention. Certain features that are described in this specification in the context of separate embodiments may also be provided in combination in a single embodiment. Conversely various features that are described in the context of a single embodiment may also be provided in multiple embodiments separately or in any suitable subcombination. Moreover although features may be described above as acting in certain combinations and even initially claimed as such one or more features from a claimed combination can in some cases be excised from the combination and the claimed combination may be directed to a subcombination or variation of a subcombination.

The subject matter has been described in terms of particular variations but other variations can be implemented and are within the scope of the following claims. For example the actions recited in the claims can be performed in a different order and still achieve desirable results. As one example the processes depicted in the accompanying figures do not necessarily require the particular order shown or sequential order to achieve desirable results. In certain implementations multitasking and parallel processing may be advantageous. Other variations are within the scope of the following claims.

