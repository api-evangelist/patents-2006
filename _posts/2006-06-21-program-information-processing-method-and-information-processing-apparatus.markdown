---

title: Program, information processing method, and information processing apparatus
abstract: An information processing method displays information including at least one processing region subject to processing and displays a cursor on the displayed information. The method includes assigning the processing region to an operating element of an operation input device in accordance with a positional relationship between a cursor display position of the cursor on a display screen and the processing region, in the processing region on the display screen, displaying an operating element image representing the assigned operating element, and, in response to an operation input from the assigned operating element, executing processing corresponding to the processing region assigned to the operating element.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07810022&OS=07810022&RS=07810022
owner: Sony Corporation
number: 07810022
owner_city: Tokyo
owner_country: JP
publication_date: 20060621
---
The present invention contains subject matter related to Japanese Patent Application JP 2005 182007 filed in the Japanese Patent Office on Jun. 22 2005 the entire contents of which are incorporated herein by reference.

The present invention relates to a program information processing method and information processing apparatus which display information including a region subject to processing such as a link portion and which serve as for example a browser.

Today with widespread use of the Internet software browser for browsing information on the Internet is used in various environments. When a personal computer is used to browse information in many cases by using a mouse to easily perform operations page ejection and linking to other information are performed.

In addition in recent years among various types of electronic apparatuses other than personal computers such as television receivers audio visual apparatuses and cellular phones apparatuses that can browse information such as web site information on the Internet have come into wide use. However when an apparatus of the above type is used a situation often occurs in which information is browsed in an environment having no mouse as an operating device for a user. For example in the case of a television receiver having a browsing function a remote commander is used for operations performed when information on the Internet is browsed.

In an environment having no mouse it is necessary to develop an operation for opening a link which is embedded in information displayed by a browser and which is linked to other information. That is instead of clicking on a link portion by using the mouse another appropriate operation is necessary.

As a link opening operation hereinafter referred to as a link operation in an environment using no mouse what is most frequently used is an operation technique that performs positioning of a cursor at a link portion using cursor buttons of a remote commander to move the cursor to a link to be clicked on and pressing a setting key.

A state in which page information such as information on the Internet is displayed on a screen by a browsing function is shown in . The displayed page information that is displayed sentences include at a plurality of positions link portions in which links are set. The link portions that is display regions as portions in which links are set are hereinafter referred to as links . The links are indicated as the portions in which links are set by underlines and colors different from those used in the other portions.

When a remote commander is used to perform a link operation the cursor is moved to a desired link by using arrow buttons arrow keys for moving the cursor . By pressing for example a downward arrow button the cursor is moved to a link for the characters HDDs . To press a setting key in this state is an operation similar to clicking with a mouse. Accordingly processing in accordance with link setting for HDDs is performed. For example linked data is displayed.

In this case in an operation using no mouse before a desired link is clicked on it is necessary to press the cursor a plurality of times by using the arrow buttons or the like in order for the cursor to reach the desired link . In other words the operation necessary up to executing a link is very complicated compared with the case of using the mouse.

In order to easily realize the link operation there is a technique see for example Japanese Unexamined Patent Application Publication No. 2004 200866 in which a description designating a particular operation button as an access key is included in a link description in information displayed in a browser and the designated operation button is operated to perform direct link processing. However in this case an information distributor needs to designate the access key and the access key is fixed. In addition operation buttons of a remote commander or the like in an environment in which the browser is in operation differ depending on each system. Thus a problem occurs in that optimization for the system is difficult.

A case in which an operation is performed on each link which serves as a region subject to processing has been described above. However regions subject to processing in which processing is performed by positioning the cursor on the screen include icons operating element images text boxes and pull down list boxes of various types. In the case in which these regions subject to processing are operated in environments using no mouse a similar problem occurs.

Accordingly it is desirable to facilitate operations on various regions subject to processing such as a link operation even in an environment using no mouse.

According to an embodiment of the present invention there is provided an information processing method for displaying information including at least one processing region subject to processing and displaying a cursor on the displayed information. The information processing method includes the steps of assigning the processing region to an operating element of an operation input device in accordance with a positional relationship between a cursor display position of the cursor on a display screen and the processing region in the processing region on the display screen displaying an operating element image representing the assigned operating element and in response to an operation input from the assigned operating element executing processing corresponding to the processing region assigned to the operating element.

Preferably the processing region is a link portion in which a link to other information is set and when the processing is executed in response to the operation input from the operating element to which the processing region is assigned as the link portion linking corresponding to the link portion assigned to the operating element is executed.

In assignment of the processing region when the displayed cursor is positioned in one processing region in accordance with a positional relationship between a display position of the positioned cursor and a different processing region the different processing region may be assigned to the operating element of the operation input device.

The information processing method may further include the step of switching on and off displaying the operating element image in response to the operation input when the operation input is a particular operation input.

When the operating element image is displayed in accordance with the positional relationship between the cursor display position on the display screen and the processing region a display position of the operating element image in the vicinity of the processing region may be determined.

According to another embodiment of the present invention there is provided an information processing apparatus for displaying information including at least one processing region subject to processing and displaying a cursor on the displayed information. The information processing apparatus includes assigning means for assigning the processing region to an operating element of an operation input device in accordance with a positional relationship between a cursor display position of the cursor on a display screen and the processing region operating element image displaying means for displaying in the processing region on the display screen an operating element image representing the operating element to which the processing region is assigned by the assigning means and processing executing means for executing in response to an operation input from the operating element to which the processing region is assigned by the assigning means processing corresponding to the processing region assigned to the operating element.

According to an embodiment of the present invention there is provided a program for allowing an information processing apparatus to execute displaying information including at least one processing region subject to processing and displaying a cursor on the displayed information. The program includes the steps of assigning the processing region to an operating element of an operation input device in accordance with a positional relationship between a cursor display position of the cursor on a display screen and the processing region in the processing region on the display screen displaying an operating element image representing the assigned operating element and in response to an operation input from the assigned operating element executing processing corresponding to the processing region assigned to the operating element.

According to an embodiment of the present invention by operating an operating element corresponding to an operating element image displayed on a processing region for example a particular button of a remote commander a user can perform a direct operation on the processing region.

For example by operating an operating element corresponding to an operating element image displayed in a link portion the user can perform an operation of directly selecting a link. In other words an advantage is obtained in that even in an environment using no mouse a very simplified operation can realize an operation such as a link operation on a processing region.

In addition assignment of each link to each button is performed in accordance with a positional relationship between a cursor on a screen and a processing region. Thus the assignment is user friendly thus also realizing comfortable operability.

Furthermore in operating element assignment to a processing region whenever a displayed cursor is positioned in a processing region in accordance with a positional relationship between the position of the positioned cursor and a different processing region the different processing region is assigned to an operating element of an operation input device whereby even for cursor movement button assignment is performed at all times in a state suitable for operation. This is also suitable for simplified operation.

Moreover according to an embodiment of the present invention a display position of an operating element image is dynamically calculated and displayed in accordance with a cursor position. Thus the operating element image is displayed at an appropriate position in accordance with the cursor position so that an operating element corresponding to a desired processing region can be easily recognized by a user.

Also by switching off displaying the operating element image if it is unnecessary a display screen can be adapted for user s preference and idea.

According to an embodiment of the present invention since an information processing apparatus assigns an operating element to a processing region appropriate assignment adapted for system environments can be performed.

An embodiment of the present invention is described by using an example in which it is practiced in a television system having a function of browsing information obtained from a network such as the Internet. In the embodiment a link portion in which a link is set is described as an example of a processing region subject to processing on a display screen. Before describing a system configuration an example of a screen displayed by a browsing function is used to describe features of the embodiment.

When a remote commander which is described later with reference to is used to perform an operation arrow buttons are used in order to move the cursor . By using upward downward right and left arrow buttons as the arrow buttons the cursor can be selected and the links can sequentially be selected in each direction indicated by each arrow button. By pressing the SET button shown in in a state in which the cursor is position at one link a link function of the link designated by the cursor is activated to perform link processing.

As described above an operation using the arrow buttons and the SET button is a link operation similar to that in the related art. In this embodiment by way of example by using numerical buttons a more facilitated link operation can be executed.

The remote commander shown in is a remote commander for a television system a tuner apparatus which is described later and includes the numerical buttons specifically 1 to 12 as operation buttons for tuning. In this example assignment is performed so that positional relationships between the cursor and the links correspond to positional relationships around for example a 5 button among the numerical buttons . Button icons that indicate assigned operating units the numerical buttons are displayed on the screen shown in . For example in when the cursor is positioned at one link for the words views a 1 button among the numerical buttons is assigned to one link for the word VCRs . A button icon indicating 1 is displayed in the vicinity of VCRs in a superimposing manner. Similarly 3 7 9 and 8 buttons are assigned to other links for the words recording HDDs DVRS and reservation respectively and corresponding button icons are displayed so as to be superimposed on the buttons.

A user can directly perform a link operation on each displayed link . For example in the state shown in since the cursor is positioned at the link for views by operating the SET button or even the 5 button link processing concerning views is performed and the other links can be directly operated. Pressing for example a 1 button is a directly a link operation on the link for VCRs and processing based on link setting for the VCRs is performed. Similarly pressing the 8 button is directly a link operation on the link for reservation and processing based on link setting for reservation is performed. In other words a link operation can be executed as performing an operation on one numerical button at a time for one link displayed on the screen without performing the set operation after sequentially moving the cursor . Examples of a configuration and processing for realizing such a link operation are described below.

The video signal separated by the demultiplexer is displayed to a video processing circuit through a video switching unit . The supplied video signal is converted by the video processing circuit into a video signal complying with encoded data decoding or a predetermined standard such as NTSC National Television System Committee . The converted video signal is output to the monitoring apparatus . Obviously the predetermined standard may be PAL phase alternation line SECAM sequential color and memory or the like. In addition there are various output signal forms such as in each standard a composite video signal a Y C signal and RGB signals. The audio signal separated by the demultiplexer is supplied to an audio processing circuit through an audio switching unit . The audio processing circuit performs encoded data decoding and analog to digital conversion on the supplied audio signal and supplies the processed signal to the monitoring apparatus . The monitoring apparatus outputs to display the video signal supplied as described above and outputs the audio signal from a speaker.

The OSD adding circuit generates display image data on the basis of control by a CPU central processing unit . When the OSD adding circuit generates image data such as various types of characters icons a turtle cursor and a menu image the image data is superimposed on the video signal by the video processing circuit or is switched from the video signal by the video processing circuit . The processed video signal is supplied to the monitoring apparatus and the image data is displayed. The image data generated by the OSD adding circuit include for example GUI graphical user interface images such as a menu for various operations and icons a message a channel a volume representation and an image based on the browsing function.

An interface performs communication with a network such as the Internet and external apparatuses. The interface may be for example an interface complying with a standard such as the IEEE Institute of Electrical and Electronic Engineers 1394 or USB Universal Serial Bus and can also form the Ethernet or a LAN local area network . The interface has no limitations on its interface method communication form network structure etc. However in the interface is overall shown as a part for realizing an Internet communication function and a function of communication with an external apparatus such as the digital recording playback apparatus . Video data and audio data that are supplied from the network or an external apparatus such as the digital recording playback apparatus are supplied and processed in a predetermined manner in the video processing circuit and the audio processing circuit after passing the video switching unit and the audio switching unit . The processed video data and audio data can be output by the monitoring apparatus instead of the broadcast video and audio received by the tuner .

The CPU functions as a controller that controls the entirety of the tuner apparatus . In other words in response to user s operations and operating programs the CPU performs processing such as instructing the tuner to perform tuning instructing the descrambler and the demultiplexer to perform processing controlling the video switching unit and the audio switching unit to perform switching instructing the audio processing circuit to perform processing instructing the OSD adding circuit to generate an OSD image. The CPU also functions as a browser for data of Internet sites etc. In other words the CPU can perform processing such as accessing a Web site or the like by using the interface and executing display of an image obtained by the Web site or the like and performing link processing.

A memory includes collectively shows memory areas such as a ROM read only memory and a flash memory that are accessed by the CPU . The ROM in the memory stores platform software modules activating modules etc. which allows the CPU to operate. The RAM in the memory temporarily stores platform software programs such as the activating modules stored in the ROM and an OS operating system application programs or parameters that vary if necessary when each program is executed. The RAM in the memory is also used as a work area for various types of calculation. The flash memory in the memory is used to store information for example various processing coefficients and history information that should not be lost even in a power off state.

The remote commander is used as an operation input device for user s operations. By operating the remote commander by the user an operation signal is output for example as an infrared signal. This infrared operation signal is received and converted by the photo receiving unit into an electrical signal. The electrical signal is sent to the CPU . In other words the user can send various instructions and inputs by using operating elements of the remote commander . The CPU detects operation input information sent from the remote commander and performs predetermined control. Obviously the CPU controls the tuner apparatus to perform processing directed by the user. The signal from the remote commander is not limited to the infrared signal but may be a radio signal. Similar operations can be performed by using operation keys operation dials etc. in a panel operation unit not shown provided on a housing for the tuner apparatus . Operations of the user with the remote commander and the panel operation unit include for example station selection volume adjustment mode switching a cursor operation a setting operation and a browsing operation.

An operation of this tuner apparatus is described below. At first an operation of this tuner apparatus in a normal mode for viewing a broadcast is described. When a user s operation on the remote commander performs a selecting operation for selecting a broadcasting station channel the operation information is conveyed to the CPU and the CPU controls the tuner in response to the selecting operation. The tuner selects a broadcasting station in response to selecting information sent from the CPU and receives and demodulates broadcast content transmitted in a transport stream form after being modulated. If the broadcast content is a charged broadcast or the like and is encrypted scrambled under the control of the CPU the descrambler descrambles the scrambled content and the demultiplexer demultiplexes multiplexed transport streams. Separated video signal and audio signal obtained by the descrambler and the demultiplexer are encoded. Accordingly the video signal is decoded by the video processing circuit and the audio signal is decoded by the audio processing circuit .

When the tuner apparatus receives a data broadcast a data broadcast signal separated by the demultiplexer is transferred as a data broadcast screen display signal to the OSD adding circuit through the CPU . On the basis of an image command from the CPU the OSD adding circuit generates a GUI graphical user interface video signal. The image signal is added to the video signal decoded by the video processing circuit and is output to a display of the monitoring apparatus . Also the decoded audio signal is output from the monitoring apparatus .

The user can also activate an application such as a browser by operating the remote commander . For example the user uses the remote commander to perform an operation for directing browser activation and termination whereby an application is read from the memory and is activated by the CPU . When the browser is activated the CPU uses its browsing function to perform acquiring information on the Internet through the interface and displaying the acquired information for user s browsing.

When the user needs to record broadcast content the user may perform a video recording operation by using the remote commander . Under the control of the CPU on the basis of the video recording operation video and audio signals of the received broadcast content are transferred to the digital recording playback apparatus which is connected to the tuner apparatus through the interface . In response to a request of the CPU the digital recording playback apparatus records the video and audio signals of the received broadcast content. When the user uses the remote commander to perform a playback operation the CPU instructs the digital recording playback apparatus to perform playback whereby playback of recorded video and content of content is executed. Data of the played back video and audio of the content is input to the tuner apparatus . The input data is processed by the video processing circuit and the audio processing circuit and the processed data is output from the display and speaker of the monitoring apparatus .

The tuner apparatus in is an example of an information processing apparatus according to an embodiment of the present invention and is shown as an example of an apparatus that performs an operation on the browser screen particularly in an environment having no mouse.

Next shows the configuration of software for the browsing function of the CPU . As shown in the software includes a Window system graphics processor an input processor a JavaScript Engine an image decoder an HTTP hypertext transport protocol a network unit a renderer a layouter a parser . When the interface in connects the tuner apparatus to the network the HTTP performs protocol processing on data acquired by the network unit in and the parser analyzes the acquired data. On the basis of the result of the analysis a layout of the links is determined and the renderer uses the Window system graphics processor to perform display control. A user s operation is processed through the input processor . Processing described later concerning the link operation in this embodiment is realized by the input processor while it cooperates with the renderer and the layouter . In the following description in the layouter each link is stored as a polygon surrounding the link.

As described with reference to in this embodiment the numerical buttons are dynamically assigned to the links included in data displayed on the screen. When an operation is performed on an assigned numerical button link processing is performed in response to the operation. The buttons assigned to the links are not limited to the numerical buttons on the remote commander and may be determined depending on the system. However the following description is based on the assignment of the numerical buttons .

Each portion that bears a cross mark indicates that in the button layout of the remote commander in this embodiment a button to which a link is assigned does not exist in the pointer direction. In other words no pointer exists in the cross mark portion. For example for the 1 button only the right P4 and downward pointers exist and the P1 upward P2 left and P3 pointers do not exist. However when the links are assigned to buttons other than the numerical buttons for example in a case such as when a button directly above the 1 button in is used for assignment the button is instructed to serve as the upward pointer of the 1 button.

In addition for assigning the numerical buttons to the links an assignment start button pointer is set. When the 5 button is set as the assignment start button pointer the assignment of the numerical buttons is performed with the 5 button as a reference. A display on off button pointer is used to determine an operation button for switching on and off display of the button icons shown in . For example when the 5 button is set as the display on off button pointer the 5 button can function as a display on off button. The numerical buttons excluding the 5 button and other buttons other than the numerical buttons may be each designated as the display on off button pointer . Moreover an operation button independent from the numerical buttons etc. may be provided as a display on off button on the numerical buttons of the like.

Characteristic processing in this embodiment that is processing described with reference to for the direct operation on the link is described below. At first a main process of the CPU as a browsing function is described.

The main process shown in is executed after the CPU starts the browser in response to user s pressing the browser button . In step S a button icon display mode stored at previous termination of the browser is read. In other words it is confirmed in which of on and off states the button icon display mode is. If the button icon display mode is not set the button icon display mode is turned on by default. In step S data concerning a designated URL is read by communication via the network and is displayed on the monitoring apparatus . In step S the CPU awaits completion of display of the URL data. If the display of the URL data is completed the process proceeds to step S and the cursor is assigned to the uppermost left link among the links displayed on the screen of the monitoring apparatus . Data acquired by accessing a URL is not entirely displayed within the screen at all times. In many cases due to data size and screen size part of the data is displayed. In step S the CPU positions the cursor at the uppermost left link as one of the links displayed on the screen as much as possible. When no link exists in the data and when a link is not displayed outside the screen even if it exists the cursor is not displayed that time. In these cases the cursor may be displayed at positions other that the positions of the links such as an upper left position on the screen.

After that proceeding to step S the button processing described later shown in is performed. As the result of the button processing a different URL or a browser termination command is sent back. If a URL is sent back as the result of the button processing the process returns from step S to S and the CPU executes reading and displaying data of the URL. Alternatively if a browser termination command is sent back as the result of the button processing the process proceeds to step S and the button icon display mode at the time is stored before the browser is finished.

The button processing in step S is described below with reference to . shows details of the button processing in step S and is a flowchart mainly including button assigning processing and processing for button input from the user.

In step S the CPU checks whether on the displayed data there is a link to which the cursor is assigned. In other words it is checked whether the cursor is positioned at one link . In step S in the cursor is assigned to the uppermost left link within the screen. However the link may not exist and when a link is outside the screen at the time in step S the cursor is not positioned at the link . As described above when the cursor is not positioned at the link the checking in step S produces a negative result and the CPU proceeds to step S. In step S the CPU waits for the user to input an operation.

When the cursor is positioned at one link within the display screen the CPU proceeds from step S to step S. In step S a process is performed in which by using the link at which the cursor is presently positioned other links are assigned to buttons the numerical buttons in this embodiment for use in user s operations. In step S each link on the screen is assigned to one of the numerical buttons . As described with reference to for example when the cursor is positioned at the link for views it is determined that the 1 3 7 9 and 8 buttons are assigned to VCRs recording HDDs DVRS reservation respectively.

The link assigning process in step S is fully described with reference to . shows the link assigning process in step S. In step S a button pointed to by the assignment start button pointer described with reference to is used as a current button and the link at which the cursor is presently positioned is assigned to the current button. For example when the assignment start button pointer represents the 5 button and the cursor is positioned at the link for views as shown in the 5 button is assigned to the link for views . After that the CPU proceeds to step S and performs the button assigning process shown in . For example the links on the screen become assigned to buttons around the 5 button.

After the button assigning process finishes in step S processing is branched off depending on whether a button represented by the display on off button pointer shown in is identical to the button represented by the assignment start button pointer . If both buttons differ the process shown in that is step S in is finished. If both are identical in step S the assignment of the link to the button is canceled before the process in is finished. For example in each of the display on off button pointer and the assignment start button pointer represents the 5 button. In this case the link assignment to the 5 button is canceled. Accordingly the 5 button functions as a display on off button. If the display on off button pointer designates a button other than the numerical buttons it is unnecessary to cancel the link assignment to the 5 button. In addition when the display on off button pointer is not particularly used and the display on off button is provided as a dedicated button steps S and S are unnecessary.

The button assigning process in step S is shown in . In this process in in step S it is checked whether a link is assigned to the current button. When the link is not assigned the button assigning process directly finishes. If the link is assigned the process proceeds to step S and by using the link a list of preferential assignment of links intersecting the X axis box the Y axis box the first quadrant the second quadrant the third quadrant and the fourth quadrant is created.

The creating of the preferential assignment list in step S is shown in . The preferential assignment list is created in each of the downward box the right box the upward box the left box the first quadrant the second quadrant the fourth quadrant and the fourth quadrant .

In step S by using distance dd defined with reference to to arrange the links intersecting the downward box in order of proximity to the cursor a downward list is formed. In other words an arrangement of one or more links positioned in the downward box with the position of the cursor as a reference is the downward list. When there are links positioned in the downward box which have equal distances dd in step S order of priority of such links is determined in equal distance link process and they are included in the list.

In step S by using distance dr defined with reference to to arrange links intersecting the right box in order of proximity to the cursor a right is formed. When there are links which have equal distances dr in step S order of priority of such links is determined in the equal distance link process . In step S by using dl defined with reference to to arrange links intersecting the left box in order of proximity to the cursor a left list is formed. When there are links which have equal distances dl in step S order of priority of such links is determined in the equal distance link process . In step S by using distance du defined with reference to to arrange links intersecting the upward box in order of proximity to the cursor an upward list is formed. When there are links which have equal distances du in step S order of priority of such links is determined in the equal distance link process .

The equal distance link process in each of steps S S S and S is shown in . In step S it is determined whether in an object box e.g. the downward box in step S subject to present processing there are links having equal distances distance dd in the case of the downward box . If there are the links having equal distances the process proceeds to step S and areas in which the links intersect the object box are compared. As described above each link is stored in the layouter in in the form of a polygon surrounding the link portion. In this case overlapping areas in which polygons as the links overlap the object box are calculated and compared. If there are not any links having equal overlapping areas with the object box the process proceeds to step S and the links are included in the list in order of area occupying the object box. If in step S it is determined that intersecting areas of plural links are equal the process proceeds to step S and the process is branched off depending on the object box. In other words the object box in the case of processing in step S is the downward box . Thus the process proceeds to step S. In step S among a plurality of links having equal distances dd and equal occupying areas in the downward box more right links are preferentially included in the downward list. In the case of processing in step S the object box is the right box . Thus the process proceeds to step S. In step S among a plurality of links having equal distances dr and equal occupying areas in the right box more downward links are preferentially included in the right list. In the case of processing in step S the object box is the left box . Thus the process proceeds to step S. In step S among a plurality of links having equal distance dl and equal occupying areas in the left box more downward links are preferentially included in the left list. In the case of processing in step S the object box is the upward box . Thus the process proceeds to step S. In step S among a plurality of links having equal distances du and equal occupying areas in the upward box more upward links are preferentially included in the upward list.

As described above steps S to S in are performed to create the downward right left and upward lists. In each list the links in the object box are prioritized in order of proximity to the cursor . In addition links having equal distances are prioritized in order of occupying area in the object box. In a case in which links have equal distances and occupying areas for the right box and the left box more downwardly positioned links are prioritized and for the downward box and the upward box more right positioned links are prioritized.

Next the process proceeds to step S. In step S and the subsequent steps preferential arrangement lists of links are created for the first quadrant the second quadrant the third quadrant and the fourth quadrant .

In step S by using distance d defined with reference to to arrange links intersecting the fourth quadrant in order of proximity to the cursor a fourth quadrant list is formed. If there are links having equal distances d in step S the links are prioritized in equal distance link process . Next in step S by using distance d defined with reference to to arrange links intersecting the third quadrant in order of proximity to the cursor a third quadrant list is formed. If there are links having equal distances d in step S the links are prioritized in the equal distance link process . In step S by using distance d defined with reference to to arrange links intersecting the second quadrant in order of proximity to the cursor a second quadrant list is formed. If there are links having equal distances d in step S the links are prioritized in the equal distance link process . In step S by using distance d defined with reference to to arrange links intersecting the first quadrant in order of proximity to the cursor a first quadrant list is formed. If there are links having equal distances D in step S the links are prioritized in the equal distance link process .

The equal distance link process in each of steps S S S and S is shown in . In step S it is determined whether in an object box e.g. the fourth quadrant in step S subject to present processing there are links having equal distances distance d in the case of the fourth quadrant . If there are the links having equal distances the process proceeds to step S and the process is branched off depending on the object box. In other words in the case of processing in step S the object box is the fourth quadrant . Thus the process proceeds to step S and among a plurality of links having equal distances d more upwardly positioned links are preferentially included in the fourth quadrant list. In the case of processing in step S the object box is the third quadrant . Thus the process proceeds to step S and among a plurality of links having equal distances d more upwardly positioned links are preferentially included in the third quadrant list. In the case of processing in step S the object box is the second quadrant . Thus the process proceeds to step S and among a plurality of links having equal distances d more downwardly positioned links are preferentially included in the second quadrant list. In the case of processing in step S the object box is the first quadrant . Thus the process proceeds to step S and among a links having equal distances d more downwardly positioned links are preferentially included in the first quadrant list.

The above described steps S to S in create the first quadrant the second quadrant the third quadrant and the fourth quadrant . In each list the links in the object box quadrant are prioritized in order of proximity to the cursor . In a case in which links have equal distances for the third quadrant and the fourth quadrant more upwardly positioned links are prioritized and for the first quadrant and the second quadrant more downwardly positioned links are prioritized.

As step S in the above described processes in and are performed to create eight preferential arrangement lists that is. the downward right left upward first quadrant second quadrant third quadrant and fourth quadrant lists. After that the process in proceeds to step S. In step S it is determined whether a recurring call has been made. Since an initial call is not the recurring call the process proceeds to step S and link assignment to the arrow buttons in is performed.

A process in step S of assigning each link to each of the arrow buttons is shown in . In step S a first link is assigned to the downward arrow button. If no link is assigned that is when no link exists in the downward list from the third and fourth quadrant lists each link is assigned to the downward arrow button in order of proximity to the downward box and to the cursor . If there are links having equal distances those in the third quadrant are preferentially assigned. In step S a first link of the right list is assigned to the right arrow button. If no link is assigned from the fourth and first quadrant lists each link is assigned to the right arrow button in order of proximity to the right box and to the cursor . If there are links having equal distances each link in the fourth quadrant is preferentially assigned. In step S a first link of the upward list is assigned to the upward arrow button. If no link is assigned from the second and first quadrant lists each link is assigned to the upward arrow button in order of proximity to the upward box and to the cursor . If there are links having equal distances each link in the first quadrant is preferentially assigned. In step S a first link of the left list is assigned to the left arrow button. If no link is assigned from the third and second quadrant lists each link is assigned to the left arrow button in order of proximity to the left box and to the cursor . If there are links having equal distances each link in the third quadrant is preferentially assigned.

After the link assignment to the arrow buttons in the process in finishes as step S in the process proceeds to step S. the preferential assignment lists calculated in step S are used to perform link assignment to buttons pointed to by the upward downward right and left pointers around the current button.

The processing in step S is shown in . In step S it is checked whether or not the current button has a downward pointer. If the current button has the downward pointer the process proceeds to step S the process proceeds to step S and each link is assigned to the downward pointer from a first link of the downward list. In this case links to which buttons other than the arrow buttons have already been assigned are excluded. After that the process proceeds to step S. Initially in step S in as the button represented by the assignment start button pointer for example the 5 button is used as the current button. Thus it is checked whether the 5 button has a downward pointer. As can be understood from the downward pointer of the 5 button points to the 8 button. Thus a first link of the downward list is assigned to the 8 button.

In step S it is checked whether the current button has a right pointer. If the current button has the right pointer the process proceeds to step S and links are assigned to the button pointed to by the right pointer from a first link of the right list. After that the process proceeds to step S. In this case links to which buttons other than the arrow buttons have already been assigned are excluded. When the current button is the 5 button the right pointer exists as shown in and the right pointer of the 5 button points to the 6 button. Thus a first link of the right list is assigned to the 6 button.

In step S it is checked whether the current button has a left pointer. If the current button has the left pointer the process proceeds to step S and links are assigned to the button pointed to by the left pointer from a first link of the left list. In this case links to which buttons other than the arrow buttons have already been assigned are excluded. After that the process proceeds to step S. When the current button is the 5 button the left pointer exists as shown in and the left pointer of the 5 button points to the 4 button. Thus a first link of the left list is assigned to the 4 button.

In step S it is checked whether the current button has an upward pointer. If the current button has the upward pointer the process proceeds to step S and links are assigned to the button pointed to by the upward pointer from a first link of the upward list. In this case links to which buttons other than the arrow buttons have already been assigned are excluded. When the current button is the 5 button the upward pointer exists as shown in and the upward pointer of the 5 button points to the 2 button. Thus a first link of the upward list is assigned to the 2 button.

In the processing in for the 5 button as the current button links are assigned to the 8 6 4 and 2 buttons. After step S in finishes as the processing in the process proceeds to step S and the preferential assignment lists are used to assign links to buttons pointed to by the P1 P2 P3 and P4 pointers of the current button.

The processing in step S is shown in . In step S it is checked whether the current button has a P4 pointer. If the current button has the P4 pointer the process proceeds to step S and links are assigned to the button pointed to by the P4 pointer from a first link of the fourth quadrant list. In this case links to which buttons other than arrow buttons have already been assigned are excluded. After that the process proceeds to step S. Also in this case initially for example the 5 button is the current button. Accordingly it is checked whether the 5 button has the P4 pointer. As can be understood from the P4 pointer of the 5 button points to the 19 button. Thus a first link of the fourth quadrant list is assigned to the 9 button.

In step S it is checked whether the current button has the P3 pointer. If the current button has the P3 pointer the process proceeds to step S and links are assigned to the button pointed to by the P3 pointer from a first link of the third quadrant list. In this case links to which buttons other than the arrow buttons have already been assigned are excluded. After that the process proceeds to step S. When the current button is the 5 button the P3 pointer exists as shown in and the P3 pointer of the 5 button points to the 7 button. Thus a link of the third quadrant list is assigned to the 7 button.

In step S it is checked whether the current button has the P1 pointer. If the current button has the P1 pointer the process proceeds to step S and links are assigned to the button pointed by the P1 pointer from a first link of the first quadrant list. In this case links to which buttons other than the arrow buttons have already been assigned are excluded. After that the process proceeds to step S. When the current button is the 5 button the P1 pointer exists as shown in and the P1 pointer of the 5 button points to the 3 button. Thus a first link of the first quadrant list is assigned to the button.

In step S it is checked whether the current button has the P2 pointer. If the current button has the P2 pointer the process proceeds to step S and links are assigned to the button pointed to by the P2 pointer from a first link of the second quadrant list. In this case links to which buttons other than arrow buttons have already been assigned are excluded. When the current button is the 5 button the P2 pointer exists as shown in and the P2 pointer of the 5 button points to the 1 button. Thus a first link of the second quadrant list is assigned to the 1 button.

In the above described process in for the 5 button as the current button links are assigned to the 9 7 3 and 1 buttons.

In other words in steps S and S in link assignment to buttons pointed to by eight pointers for the current button finishes. As described above when the current button is the 5 button all the eight pointers exist and assignment of links to the surrounding 8 6 14 2 9 7 3 and 1 buttons is completed. Obviously if no links exist in each list no assignment is performed. For example when no link exists in the upward list assignment of a link to the 2 button is not performed.

Next the process proceeds to step S in . In step S and the subsequent steps processing that assigns links to buttons around a current button is sequentially performed while switching current buttons. In step S the button pointed to by the downward pointer of an initial current button is used as a current button. The initial current button is the current button determined in step S in and is a button pointed to by the assignment start button pointer that is the button in the above case. In step S the 8 button pointed to by the downward pointer of the 5 button is used as the current button. In step S in a state in which the current button is the 8 button the button assigning process is executed as a recurring call. In this case as processing in step S for a new current button the 8 button steps S S S S and S are performed step S is not performed at the recurring call . In other words the preferential assignment list is created in step S with the 8 button used as the current button. By using the preferential assignment list in steps S and S links are assigned to buttons pointed to by the upward right left P1 P2 P3 and P4 pointers that is buttons around the 8 button. However since assignment to buttons around the 5 button is performed links are substantially assigned to the 10 11 and 12 buttons. In addition when no link is assigned to the 8 button in initial processing with the 5 button used as the current button that is when no link exists in the downward list obviously at the recurring call a negative result is obtained in step S so that step S finishes. Thus in this case link assignment with the 8 button used as the current button is not performed.

In step S the 6 button that is pointed to by the right pointer of the 5 button as the initial current button is used as the current button. In step S the button assigning process is called in a recurring manner and steps S S S S and S are performed with the 6 button used as the current button. In the case of the button layout in it is determined that the 6 button has the P1 right and P4 pointers. In other words at the recurring call in step S negative results are obtained in step S in and steps S and S in .

After that each of steps S to S in is similarly performed while switching current buttons. The reason that while switching current buttons link assignment to buttons around each current button is performed is that button layouts vary depending on the system. For example the button layout shown in and A and B shows an example of layout for the remote commander in this embodiment. However this does not indicate that in all systems the numerical buttons are arranged in the form of four rows by three columns. Also buttons other than the numerical buttons may be assigned to links . In other words the button assigning process is performed while switching current buttons for various operation button layouts.

As the above described processes described with reference to step S in is executed. After the link assigning process in step S finishes in step S it is checked in which of on and off states the button icon display mode is. If the button icon display mode is off the processing directly proceeds to step S. In this case the button icons are not displayed and the display state on the screen is as shown in for example . Alternatively if the button icon display mode is on in step S the button icons are displayed and the processing proceeds to step S. The display state on the screen in this case is as shown in and the button icons are displayed adjacently to the links . Obviously the button icons come to indicate operation buttons to which the links are assigned in step S. For example for the link for VCRs a button that indicates the assigned 1 button is displayed. For the link for recording a button that indicates the assigned 3 button is displayed.

In step S among intersecting points between one link and vertices of the upward box the downward box the right box the left box the first quadrant the second quadrant the third quadrant and the fourth quadrant or the upward downward right and left boxes at least one point closest to the cursor is used as a base point candidate.

In step S it is determined whether the number of base point candidates is plural. If the number of base point candidates is singular the process proceeds to step S and the base point candidate is used as a base point without being changed. A button is displayed with the base point as a reference.

If in step S it is determined that the number of base point candidates is plural the process proceeds to step S and from among the base point candidates a base point is determined.

In this case depending on which box a link is positioned in the following determination is performed.

In the case of the right box and the left box among the base point candidates an uppermost base point candidate is determined as a base point.

In the case of the upward box the downward box the first quadrant and the fourth quadrant among the base point candidates a most left base point candidate is determined as a base point.

In the case of the second quadrant and the third quadrant among the base point candidates a most right base point candidate is determined as a base point.

After base point determination is performed in the above manner the process proceeds to step S and the button is displayed with the base point as a reference.

Base point determination and examples of display positions of button icons are described with reference to . shows the position of the cursor and links to around the cursor . Each link is represented by a polygon as a link setting region in which a link is set.

The link has four intersecting points with the upward box . An intersecting point indicated by a black triangle marker closest to the cursor is used as a base point and on the basis of the base point a button icon is displayed.

The link has four vertices in the upward box . Two vertices indicated by markers closer to the cursor are used as base point candidates. Since the vertices are in the upward box a left base point candidate is used as a base point and on the basis of the base point a button icon is displayed.

The link has four vertices in the first quadrant . Two vertices indicated by markers closer to the cursor are used as base point candidates. In a dotted line circle is additionally shown to indicate that the two vertices indicated by the markers have equal distances from the cursor . Since the two vertices are in the first quadrant a left base point candidate is used as a base point and on the basis of the base point the button icon is displayed.

The link has four vertices in the first quadrant . A vertex indicated by a marker closest to the cursor is used as a base point. On the basis of the base point a button icon is displayed.

The link has two intersecting points with the right box . An intersecting point indicated by a marker closest to the cursor is used as a base point and on the basis of the base point a button icon is displayed.

The link has four vertices in the right box . Two vertices indicated by markers closer to the cursor are used as base point candidates. Since the two vertices are in the right box an upper base point candidate is used as a base point and on the basis of the button processing a button icon is displayed.

The link has four vertices in the fourth quadrant . A vertex indicated by a marker closer to the cursor is used as a base point and on the basis of the base point a button icon is displayed.

The link has four vertices in the downward box . Two vertices indicated by markers closer to the cursor are used as base point candidates. Since the two vertices are in the downward box a left base point candidate is used as a base point and on the basis of the base point a button icon is displayed.

The link has four intersecting points with the downward box . Two vertices indicated by markers closer to the cursor are used as base point candidates. Since the two vertices are in the downward box a left base point candidate is used as a base point and on the basis of the base point a button icon is displayed.

The link has four intersecting points with the downward box . Two intersecting points indicated by markers closer to the cursor are used as base point candidates. Since the two intersecting points are in the downward box a left base point candidate is used as a base point and on the basis of the base point a button icon is displayed.

As described in the above examples the process in determines the display positions of each button icon and the button icon is displayed for each link .

After proceeding to step S in the CPU awaits a user s button operation. In step S the CPU monitors operations on the SET button the arrow buttons the browser button a display on off button and an assignment button. The display on off button is a button designated by the display on off button pointer in . For example the 5 button is designated. In addition the assignment button is each button subject to the link assigning process in step S. For example this button is each of the numerical buttons . As described above in step S all or part of the numerical buttons are assigned In accordance with the number of links and their positions.

When the operation on the SET button is detected the CPU proceeds from step S to step S and confirms whether a link being selected by the cursor is displayed on the screen.

For example it is assumed that data subject to display be as shown in . In the data links are set for three character portions VCRs recording and views .

In addition all the data is not displayed within the screen and the range indicated by the dotted line in is a display range displayed on the screen. That is the image on the screen is as shown in . The cursor indicates the link for views and in this state the 1 button is assigned to a link for VCRs and the 3 button is assigned to a link for recording .

In this case as shown in the link for the views being selected by the cursor is indicated on the screen. For example as described above when the link being selected by the cursor is indicated on the screen and the SET button is operated in step S it is determined that the link being selected by the cursor is indicated and the CPU proceeds to step S. In addition processing is performed depending on the type of link and the process finishes.

For example when the link for views is an URL the URL is sent back and step S in finishes. In this case the CPU proceeds from step S to step S and data of the URL is acquired via the network and is displayed. Alternatively when the link is a link to video data processing is performed such as activating a corresponding application and displaying video.

In addition it is assumed that for the data subject to display the range shown in is displayed and the image on the screen is as shown in . The image is in a state obtained by downwardly scrolling the data from the state shown in . In this case the link for views being selected by the cursor is not displayed since it is hidden in an upper part of the screen. By operating the SET button at this time in step S it is determined that the link for views being selected by the cursor is not displayed so that the CPU returns to step S without performing any processing.

If in step S the operation on one of the arrow buttons is detected the CPU proceeds to step S and confirms whether a link is assigned to the allow button . As described above in step S in assignment of the link to the allow button is performed.

If the operated allow button has not assigned link the CPU proceeds to step S. In step S it is determined whether the data on the screen is scrollable in the direction of the operated allow button among the upward downward left and right arrow buttons . If the data is scrollable in step S the data is scrolled by a predetermined amount in the direction of the operated allow button .

When scrolling of the data in the direction of the operation is difficult for example when the upward allow button among the arrow buttons is pressed in a state in which a first part of the data is displayed as shown in the CPU returns to step S without performing any processing.

If in step S it is determined that a link is assigned to the operated allow button the CPU proceeds to step S and determines whether the link is displayed on the screen. For example it is assumed that the link for recording is assigned to the upward allow button. If the upward arrow button is operated when the screen is in the state shown in the link for recording is not displayed on the screen. In this case the CPU proceeds from step S to step S and processing is performed regarding the present operation on the allow button as a scroll operation. If the data on the screen is scrollable in step S the data on the screen is scrolled before the CPU returns to step S. If scrolling of the data on the screen is difficult the CPU returns to step S without performing any processing.

In addition for example it is assumed that in the display state shown in the upward arrow button to which the link for recording is assigned is operated. As described above when the link assigned to the operated allow button is displayed the CPU proceeds from step S to step S and the cursor is moved to the assigned link . In this case the cursor is moved to the portion recording .

After in step S the cursor is moved in step S displaying of the button icons is temporarily finished. The CPU returns to step S and executes the above described link assigning process.

In other words in this case in response to movement of the cursor re assignment of links to buttons the numerical buttons is performed.

In this case in step S in a button e.g. the 5 button represented by the assignment start button pointer for the link recording at which the cursor is positioned is used as the current button and the above described assigning process is subsequently performed.

In other words re assignment is performed on the basis of the link for recording and the 5 button. After that when the button icons are displayed in step S the screen is as shown in . Specifically the cursor is positioned at the link for recording and the 4 button is assigned to the link for VCRs . Then a button icon indicating the 4 button is displayed. In addition when the 7 button is assigned to the link for views a button icon indicating the 7 button is displayed.

If in step S in the operation on the display on off button is detected the CPU proceeds to step S and switches on and off the button icon display mode. When the button icon display mode is switched from on to off in step S the display of the button icons is switched off on the display screen. For example if the display screen has been in the state shown in it comes to be in the state shown in . When the button icon display mode is switched from off to on in step S the display of the button icons is switched on the display screen. For example the display screen has been in the state shown in it comes to be in the state shown in . After finishing step S the CPU returns to step S.

If in step S an operation on an assigned button for example an operation on one the numerical button is detected the CPU proceeds to step S and confirms whether a link is assigned to the operated button. The CPU returns to step S without performing any processing if no link is assigned to the button. If the operated button has a link assigned thereto the CPU proceeds to step S and determines whether the link is displayed on the screen. If the link corresponding to the operated button is displayed the CPU proceeds to step S. If no link is displayed the CPU returns to step S.

For example it is assumed that in the display state shown in the 1 button is operated. In this case the link for VCRs is assigned to the 1 button. Thus the CPU proceeds to steps S and S and further proceeds to step S since the link for the VCRs is displayed. Processing is performed in response to the link type before the process in finishes.

For example if the link fro the VCRs is an URL the URL is sent back and step S in finishes. In this case the CPU proceeds from step S to step S and data of the URL is acquired via the network and is displayed.

In addition it is assumed that in the display state shown in the 1 button is operated. In this case the CPU proceeds to steps S and S since the link for the VCRs is assigned to the 1 button. However the link VCRs is not displayed at this time. Accordingly no processing is performed regarding the present operation on the 1 button as invalid and the process returns to step S.

If in step S the operation of the browser button is detected the CPU proceeds to step S. In step S the CPU sends back a termination command for termination the browser and finishes the process in that is step S in . In this case the CPU stores the button icon display mode in step S in before terminating the browser.

In this embodiment the above described browsing is performed. In particular in browsing display in which the cursor can be moved on links the numerical buttons etc. are automatically and dynamically assigned to other links around the cursor . Also button icons indicating assigned buttons are displayed. When a button to which a link is assigned is operated the operation is handled as a determining operation on the assigned link to perform linking.

In other words by operating a button corresponding to a button indicated by a link the user can perform a direct link selecting operation and in an environment using no mouse a very simplified operation realizes a link operation.

In addition assignment of each link to each button is performed in accordance with a positional relationship between the cursor and the link . Thus the assignment is user friendly thus also realizing comfortable operability.

Whenever the cursor is positioned at a link assignment of a button to a link is performed in step S in in accordance with a positional relationship between the display position of the cursor and a different link . Therefore even for cursor movement button assignment is performed at all times in a state suitable for operation. This is also suitable for simplified operation.

As described with reference to the display position of the button icon is dynamically calculated and displayed in accordance with the cursor position. Thus the button icon is displayed at an appropriate position in accordance with the position of the cursor so that a button corresponding to a desired link can be easily recognized for the user.

In addition by switching on and off the button icon display mode the display of the button icon can be switched off when the user feels that the button icon is unnecessary whereby the display screen can be adapted for user s preference and idea. Furthermore the assigning process in is performed whereby appropriate assignment adapted for system environments can be performed.

In this embodiment if in step S in the link at which the cursor is positioned is not displayed the operation on the SET button is regarded as invalid. When an operation is performed on the assigned button is operated if it is determined in step S that a link to which the assignment button is assigned is not displayed the operation on the button is regarded as invalid.

When the link denoted by the cursor is not displayed on the screen in many cases the user does not operate the SET button by recognizing the link. Considering this point indicates that the operation on the SET button is frequently a false operation. Moreover the user strongly feels a discomfort in linking performed based on a link that is not displayed on the screen. Accordingly the determinations in steps S and S are performed to regard an operation on the link that is not displayed on the screen whereby user friendly operation feeling and appropriate browsing can be realized.

If in step S it is determined that a link assigned to one arrow button is not displayed by preventing the cursor from being moved to the link user friendly browsing is established. This is because sudden movement of the cursor to the invisible link at the time is not displayed.

The tuner apparatus television system having the above described browsing function is an information processing apparatus according to an embodiment of the present invention. In addition the processes shown in represent an information processing method and program according to embodiments of the present invention.

A program in the tuner apparatus according to the embodiment can be stored beforehand in for example the memory . Alternatively as a form it is possible that after the program is stored in an external recording medium the program be loaded into the memory .

The embodiment of the present invention has been described above. However the present invention may have various modifications. In the above described embodiment an example with the tuner apparatus and the monitoring apparatus has been described. Embodiments of the present invention are applicable to different type audio visual apparatuses such as television receivers and recording playback apparatuses and apparatuses such as personal computers PDAs personal digital assistants and cellular phones.

In addition the link portion link has been described as a processing region subject to processing. However the processing region is not limited to the link portion. A region in which some type of processing is performed by positioning the cursor is used as the processing region in the embodiment of the present invention and the above described processes in the above embodiment may be applied to such a region.

Embodiments of the present invention may be applied to various regions on the screen in which by positioning the cursor to the regions some type of operation is executed with each region as the processing region. The regions include various icons set so as to be clicked on an operating element image a text box a pull down list box and a check input box. When the icon the operating element image and the pull down list box are used as processing regions operating element images are displayed with them assigned to the icon the operating element image and the pull down list box. In addition when the operating element corresponding to the operating element image is operated processing may be performed regarding a corresponding icon or the like as having been clicked on.

The program according to an embodiment of the present invention can be recorded beforehand in an HDD as a built in recording medium of a personal computer an AV audio visual device a PDA a cellular phone or the like and in a ROM or the like in a microcomputer including a CPU.

Alternatively the program can be temporarily or eternally stored recorded in removable recording media such as a flexible disk a CD ROM compact disc read only memory a MO magneto optical disc a DVD digital versatile disc a Blu ray Disc a magnetic disk a semiconductor memory and a memory card. The removable recording media can be provided as so called package software .

Moreover the program according to the embodiment of the present invention can be installed into a device that uses the program and can be downloaded from a download site networks such as a LAN local area network and the Internet.

It should be understood by those skilled in the art that various modifications combinations sub combinations and alterations may occur depending on design requirements and other factors insofar as they are within the scope of the appended claims or the equivalents thereof.

