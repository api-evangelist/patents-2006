---

title: Storage subsystem with multiple non-volatile memory arrays to protect against data losses
abstract: A storage subsystem contains multiple non-volatile memory arrays that are accessible to a host system when the storage subsystem is connected thereto. The storage subsystem implements commands and/or modes for enabling the host system to create and use backup copies of files, such that the host system can recover when files become corrupted or otherwise lost. In one embodiment, the storage subsystem presents the non-volatile memory arrays to the host's operating system as distinct storage devices (e.g., ATA device  and ), and implements special commands for copying data between these storage devices. The subsystem may alternatively present the memory arrays to the host operating system as a single storage device. The storage subsystem may have a standard form factor, such as a form factor commonly used for memory cards.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08549236&OS=08549236&RS=08549236
owner: SiliconSystems, Inc.
number: 08549236
owner_city: Aliso Viejo
owner_country: US
publication_date: 20061215
---
The present invention relates to solid state storage subsystems. More specifically the present invention relates to providing data redundancy within a solid state storage subsystem.

Companies are increasingly relying on portable solid state storage subsystems to persistently store executable code and data. Typically these subsystems are in the form of a memory card or drive that connects to an external port or connector of a host computer system. Because solid state storage subsystems tend to be lighter smaller and more shock resistant than magnetic disk drives they are especially useful for applications involving portability. In many cases the solid state storage subsystem is used by the host system as a boot device i.e. it stores the operating system code executed by the host computer and or is used to persistently store data generated or captured by the host computer.

One problem with existing solid state storage subsystems is that they typically do not provide a sufficient degree of protection against data losses. Such data losses are typically caused by memory wear memory array controller malfunctions or rampant host software that overwrites important data. When such data losses occur they can result in significant down time and lost revenue especially if the storage subsystem is used to store operating system files or critical data.

The present invention comprises a storage subsystem which contains multiple non volatile memory arrays that are accessible to a host system when the storage subsystem is connected thereto. The storage subsystem implements commands and or modes for enabling the host system to create and use backup copies of files such that the host system can recover when files become corrupted or otherwise lost. In one embodiment the storage subsystem presents the non volatile memory arrays to the host s operating system as distinct storage devices e.g. ATA device and and implements special commands for copying data between these disk drives. The subsystem may alternatively present the memory arrays to the host operating system as a single storage device. The storage subsystem may have a standard form factor such as a form factor commonly used for memory cards.

Specific embodiments of the invention will now be described with reference to the drawings. This description is intended to illustrate example implementations of and applications for the present invention and is not intended to be limiting. Nothing in this description is intended to imply that any particular feature characteristic or mode of operation is a requirement of the invention. The invention is defined by the claims.

The host system executes a special driver or other software component that communicates with the subsystem using the subsystem s command set. As discussed below this command set preferably includes both standard ATA commands and non standard or vendor specific commands for performing various types of data backup and restore operations. The subsystem may also be used with hosts that do not execute special driver software i.e. a standard operating system driver may be used although the subsystem s non standard backup and restore operations will not be available to the host in such configurations.

In the illustrated embodiment the first NVM array is controlled primarily by a first controller and the second NVM array is controlled primarily by a second controller . However in other embodiments both NVM arrays may be controlled exclusively by a single controller. Where two controllers and are provided as shown each controller memory array pair preferably appears to the host system as a separate ATA disk drive with one configured as device the master and the other as device the slave . Thus the host system can selectively write data to and read data from each of the NVM arrays and using standard ATA disk drive commands. More specifically each controller and is configured to write data to and read data from its respective the NVM array and in response to commands from the host system .

The design shown in may alternatively be implemented such that one of the two devices device or device or memory arrays is hidden from the host s operating system. With this approach the hidden device or array can be accessed by the host via special vendor specific commands or in some embodiments by placing the storage subsystem in a switch device mode discussed below in which device and are effectively swapped. The ability to make one of the devices or arrays hidden may be a configuration option that can be set via a vendor specific command. which is discussed below illustrates one example of a subsystem architecture that is capable of using a hidden non volatile memory array to maintain a backup copy of data written to an exposed non volatile memory array.

Although two NVM arrays are used in the embodiment of a greater number of NVM memory arrays may be provided. For example in embodiments based on the SCSI or standard which allow more than two disk drives to share a common cable three or more controller memory array pairs may be provided each of which appears to the host as a respective SCSI or SATA disk drive. As another example in an ATA implementation three or more memory arrays may be provided with only two of these arrays being exposed to the host as ATA drives. The storage subsystem may use the other memory array s to perform backup and restore operations transparently to the host or to otherwise provide redundancy. For instance the storage subsystem could implement an internal RAID array using e.g. a RAID 0 1 2 3 4 or 5 configuration as discussed below but could present the array to the host as a single virtual disk drive.

Referring again to each controller accesses its respective NVM array via a corresponding address data and control busses. These busses are preferably cross coupled such that the device controller can directly access NVM array and such that the device controller can directly access NVM array . This arrangement enables each controller to execute various types of backup and restore operations as described below and also allows the data stored in both NVM arrays to be accessed in the event of a single controller failure. During ordinary ATA operation isolation circuitry not shown isolates device s address data and control busses from those of device such that the two controllers can access their respective NVM arrays in parallel. In other embodiments rather than using cross coupled busses as shown each controller may be capable of accessing the other s NVM array only indirectly via controller to controller communications.

As further illustrated in each NVM array is preferably subdivided into a user space and a restricted non user space. The user space is the memory area that is exposed to the host s operating system i.e. the host can write data to and read data from this area via standard ATA commands. In contrast the restricted space can only be accessed by the host via one or more vendor specific commands and thus is not exposed to the host s operating system. The restricted spaces are used by the storage subsystem to store various control parameters including redundancy control parameters used to implement backup and restore functions. The redundancy control parameters are preferably maintained in each NVM array in a predefined location within a 512 byte block that is read write accessible via a particular vendor specific command. The restricted spaces may also store firmware executed by the respective controllers .

The storage subsystem comprises a physical connector for detachably connecting to the host . The connector and associated signal interface preferably comply with an industry standard such as a USB SATA Serial ATA PC Card PCMCIA PCI Express Firewire IEEE 1394 Parallel ATA PATA CompactFlash CF Secure Digital SD or Memory Stick among others . The subsystem may alternatively be designed to communicate with the host via a wireless interface such as a Bluetooth interface or via a non standard interface.

Although not separately illustrated in the storage subsystem comprises a housing that houses the subsystem s electrical components. The housing and connector may but need not have a standard form factor such as a CF PC Card PCMCIA MultiMediaCard SmartMedia Memory Stick SecureDigital or hard disk drive e.g. 2.5 drive form factor.

As will be apparent the storage subsystem provides data redundancy features that are typically available only in relatively large systems such as disk array systems containing multiple magnetic disk drives. Unlike conventional disk array systems however the storage subsystem can advantageously be implemented as a highly compact device that does not require any cabling and that is powered by the host via the same standard connection used for data. For example the storage subsystem can be implemented as a PCMCIA CF or SD card or as a USB flash drive.

The two controllers and may be identical to each other. Each may be provided as separate integrated circuit or both may be integrated within a common integrated circuit. As illustrated each includes a respective buffer implemented in volatile RAM for buffering data being written to or read from non volatile memory and includes interface circuitry for implementing the appropriate signal interface for communicating with the host. The controllers and are preferably capable of executing firmware although the functions embodied firmware may alternatively be implemented in state machine logic. In addition to implementing the ATA specification the controllers may be capable of executing USB commands PC Card commands or CF commands or commands associated with another specification.

The NVM arrays may be implemented using NAND memory devices NOR memory devices and or any other type of solid state non volatile memory device. The solid state memory devices may be physically divided into blocks pages and sectors as is known in the art.

To facilitate use of the dual NVM arrays to protect against losses the storage subsystem preferably implements two special modes referred to as mirror mode and switch device mode. The subsystem may be placed in one of these modes via a vendor specific mode set command the general format of which is shown in . When such a mode set command is sent to the subsystem each controller updates its respective mode register not shown to indicate the currently selected mode and also updates the redundancy control parameters stored in its respective NVM array. When the storage subsystem is powered up each controller loads some or all of the redundancy control parameters into its respective mode register to select the appropriate mode of operation.

As discussed in the following section the storage subsystem also preferably implements a set of special vendor specific commands for mirroring backing up and restoring blocks of data. It should be understood that the particular modes and commands described herein are merely illustrative and are not required to practice the invention. For example in embodiments in which three of more separate NVM arrays are provided a very different set of special modes and or commands will typically be used.

When in mirror mode the storage subsystem writes to both NVM arrays when a standard write command is issued by the host. This mode may advantageously be used to efficiently mirror important files across the two NVM arrays ATA devices. For example a host system could initially place the subsystem in mirror mode then write a set of OS operating system files or other important files to either device or device via standard ATA write commands. This would cause these files to be written to both devices arrays such that a backup copy is available if for example one copy becomes corrupted. As discussed below mirrored copies of files can also be created using the mirror command.

The mirror mode is preferably implemented by having each controller perform a write to its respective NVM array whenever a standard write command is received regardless of whether this command is directed to device or device . Alternatively the controller to which the write command is directed could write the data to both NVM arrays.

In some embodiments the storage subsystem may also implement an address constrained mirror mode in which only those writes falling within a particular address range or zone are mirrored. For example a particular zone may be created in one of the NVM arrays for storing mission critical data and all writes to this zone may automatically be mirrored to a corresponding zone of the other NVM array. The storage subsystem may create such zones in response to host command as disclosed in U.S. patent application Ser. No. 11 480 303 filed on Jun. 30 2006 the disclosure of which is hereby incorporated by reference.

When in switch device mode the storage subsystem switches the designations of device and device as recognized by the host system for purposes of all read and write commands. Thus if the host issues a read or write command to device the command will actually be handled by device and vice versa . This mode may be used to facilitate recovery after a failure or data loss. For example if the host ordinarily boots from device but is failing to do so e.g. because the OS files on device have become corrupted and the OS files are also stored on device the host driver may place the subsystem in the switch device mode prior to the next boot attempt. This advantageously causes the host to boot from device without the need to modify the host s BIOS.

The switch device mode may also be used in other contexts. For instance the host may place the storage subsystem in switch device mode to cause the host to subsequently boot or otherwise execute from device upon detecting that NVM array is close to the end of its useful life. This determination may be made by reading out usage wear level statistics maintained by the storage subsystem as disclosed in U.S. patent application Ser. No. 11 429 936 filed on May 8 2006 the disclosure of which is hereby incorporated by reference. As another example each controller may be capable of detecting and reporting to the host when an unusually high number of ECC or parity errors are occurring on reads from its respective NVM array and the host may respond by placing the subsystem in switch device mode during a subsequent boot up.

In some embodiments the storage subsystem may include a device selector such as a physical switch that allows a user to manually place the subsystem into and take the subsystem out of the switch device mode. The device selector may be provided in addition to or in lieu of a command that enables the host to do the same. If both are provided the device selector may be given priority.

The device selector advantageously allows the subsystem to be placed in the switch device mode regardless of whether the subsystem is being used with a host capable of issuing vendor specific commands. For instance a user may experience a boot error while using the subsystem with a host system that does not have the subsystem s driver or other special software installed thereon and which is therefore incapable of sending a switch device command to the subsystem. In response to encountering the boot error the user could use the device selector to activate the switch device mode and then restart the host system .

In the embodiment shown in the storage subsystem implements the following five vendor specific commands for facilitating backup and restore operations Backup All Restore All Mirror Backup Restore. Each of these commands is discussed below. An example of a command format that may be used for Backup All and Restore All commands is shown in . A command format that may be used for Mirror Backup and Restore commands is shown in .

The Backup All command directs the subsystem to internally back up the entire contents of NVM array or a particular zone thereof as discussed below to NVM array . Any data that is stored in NVM array or the target zone thereof is erased or overwritten during this process. This command may be used to efficiently set a recovery point in case of a failure. For example a host system that has been updating critical files in the storage subsystem may issue a Backup All command to cause the device controller to copy some or all of the files in NVM array to NVM array .

In some embodiments the Backup All command may specify a particular zone to be backed up. In these scenarios only the files stored in the specified zone of device are copied to device . The zones may be created using vendor specific commands as described in application Ser. No. 11 480 303 referenced above. For example NVM array can be divided into two zones zone and zone with only zone being used to store critical data. Rather than backing up all contents of NVM array the backup operation can then be limited to zone .

The Restore All command directs the storage subsystem to internally copy the entire contents of NVM array or a designated zone thereof to NVM array . Any data that is stored in NVM array or the target zone thereof is erased or overwritten during this process. This command may be used to restore files on device that have become corrupted. For example if the host system has crashed due to possible corruption of OS files on device and has previously created a backup copy on device the host may issue a Restore All command to the storage subsystem and then attempt to re boot from device .

The Mirror command is the same as a standard write command except that the storage subsystem writes the data via the respective controllers to both NVM arrays . This command may be used in place of the mirror mode to create a backup copy of data being written to device particularly when the quantity of data being backed up is small.

The backup command causes the subsystem to internally read a designated set of sectors of device and to write back up the read out data to device . This command may be used in place of a Backup All command when the quantity of data being backed up is relatively small.

The Restore Command causes the subsystem to read a designated set of sectors in device and to write the data read from these sectors to a corresponding set of sectors in device . This command may be used when for example the host detects that data stored in a particular sector or set of sectors of device has likely become corrupted.

Each of the N flash disk controllers communicates with a master controller . For example as the master controller receives read and write commands from the host which may be ATA commands PC Card commands USB commands etc. the master controller translates these commands into drive specific ATA commands that are sent to the corresponding flash disk controllers . Data read by the flash disk controllers is transferred to the master controller s buffer before being transferred to the host . The master controller includes interface circuitry for communicating with the host in accordance with one or more interface standards as described above .

The master controller also includes a mode register for enabling the host to specify a particular mode and configuration. The following are examples of modes that may be implemented.

As with the embodiment of the storage subsystem may include vendor specific commands that enable the host to back up data to and restore data from the hidden NVM array or arrays.

RAID array. When in this mode the storage subsystem effectively treats each NVM array as a respective disk drive of a disk array and operates the disk array in an appropriate RAID Redundant Array of Inexpensive Disks configuration. Depending on the value of N one of the following RAID configurations as well as others may be used RAID 0 1 2 3 4 5 6 7 0 1 or 10. The RAID array may be presented to the host as a single virtualized disk drive.

The flash disk controllers and the master controller collectively form the main components of a flash disk array controller . The flash disk array controller may be implemented as a single IC device or as multiple IC devices.

The storage subsystem shown in may otherwise be configured and may operate as described above for the embodiment of . The various features described in connection with the embodiments of may be incorporated into the embodiment of and vice versa.

While certain embodiments have been described these embodiments have been presented by way of example only and are not intended to be limiting. Indeed the novel methods and systems described herein may be embodied in a variety of other forms including forms that do not provide all of the features and benefits described herein. Furthermore various omissions substitutions and changes in the form of the disclosed methods and systems may be made without departing from the invention. The invention is defined by the accompanying claims.

