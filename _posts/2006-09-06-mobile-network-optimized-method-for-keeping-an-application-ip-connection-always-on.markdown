---

title: Mobile network optimized method for keeping an application IP connection always on
abstract: A system and method of maintaining an always-on application client communication is provided. An application programming interface implemented on a device hosting an always-on application client determines if network-based keep-alive functionality exists in a network where the device operates. If network-based keep-alive functionality exists, a network element is instructed to transmit keep-alive messages to the application server on behalf of the device. The network element can be implemented in or as a variety of existing network elements, e.g., as a GPRS gateway serving node or a standalone keep-alive network element. Alternatively, an application server communicatively connected to the always-on application client may query whether network-based keep-alive functionality exists. If network-based keep-alive functionality exists, the application server negotiates with the always-on application client to determine an application-specific mechanism for implementing the network-based keep-alive functionality. When an application server queries for network-based keep-alive functionality, an application programming interface need not be utilized.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08849961&OS=08849961&RS=08849961
owner: Nokia Corporation
number: 08849961
owner_city: Espoo
owner_country: FI
publication_date: 20060906
---
The present invention relates generally to keep alive messaging in IP networks. In particular the present invention relates to a system and method of allowing an IP network entity to transmit keep alive messages on behalf of a communications terminal.

This section is intended to provide a background or context to the invention that is recited in the claims. The description herein may include concepts that could be pursued but are not necessarily ones that have been previously conceived or pursued. Therefore unless otherwise indicated herein what is described in this section is not prior art to the description and claims in this application and is not admitted to be prior art by inclusion in this section.

Data networks have become commonplace in today s world allowing for various types of communications including e mail instant messaging web browsing voice interactive and multimedia communications etc. In the various types of data communications it is important to maintain connections between an application server or service provider entity located on a data network and a communication device such as a personal computer PC or a networked workstation as communications may occur at any time. This is in contrast more traditional telecommunications scenarios where an incoming call is detected on a dedicated line connected and released upon completion of the communication.

To maintain always on connections communication devices generally employ or have integrated therein applications that send static or random data to application servers just to keep the connection open. Usually this static or random data comprises a small static package sent every 30 seconds for example. In a wired or fixed power environment this transmission of random data is generally not a concern. However in mobile environments the constant transmission of such data poses a major problem in that the battery life of a mobile device is constantly being depleted during each random data transmission. This promotes bad battery performance as the mobile device has to maintain a constant or at least a periodic connection to a mobile station or application server. The problem is exacerbated when a single mobile device has multiple connections to multiple application servers where connection maintenance is performed separately for each application server because different applications may have different timing mechanisms for keep alive messaging. Therefore less battery life is available for actual communications in this situation. In conventional systems always on applications are implemented on mobile devices as a basic requirement for maintaining the constant connection between the mobile device and an application server in the network. In addition there are generally several network components between the mobile device and the application server.

Low level Internet Protocol IP connections are generally short lived. A mobile service provider can control the timeout in the service provider s core network but typically cannot control the network timeouts in connections to application servers of 3party service providers. It should be further noted that connection timeouts in a mobile core network are not different for different communication protocols. In fixed network connections to application servers there are significant timeout differences when utilizing Universal Datagram Protocol UDP and Transmission Control Protocol TCP . UDP is a protocol that does not guarantee delivery and duplicate packet protection while TCP provides a more reliable connection oriented protocol that generally operates in a layered protocol hierarchy. Mobile applications can use either UDP or TCP connections.

Different types of always on IP applications are becoming an increasingly important part of not only mobile devices but of communication terminals in general. An application cannot necessarily trust that a connection will remain open as it may get closed by the network due to inactivity or some other network problem. Therefore the connection must always be kept on. As discussed above one example is e mail. Quite often obtaining an e mail connection to corporate servers is not allowed without some kind of security. Security is offered via IPsec tunneling. In addition connections generally involve traversing a Network Address Translation NAT device. The process of network address translation also known as network masquerading or IP masquerading involves re writing the source and or destination addresses of IP packets as they pass through a router or firewall.

Most systems using NAT do so in order to enable multiple hosts on a private network to access the Internet using a single public IP address. For example a local network may use IP addresses from one of the private IP address ranges for example 192.168.x.x and 10.x.x.x and use a NAT router to connect to the Internet. As terminals send traffic from the local network the NAT router translates the local IP address to one of its own public addresses. In order to get through NAT devices an IPsec tunnel is created using UDP encapsulation. However as NAT mappings used in UDP traffic are relative short i.e. 20 60 seconds a mobile device needs to send keep alive message quite often to keep NAT mappings active. Otherwise responses sent to the mobile device may not be able to be routed thereto.

This frequent keep alive message sending has various drawbacks. First a mobile device needs to wakeup for example every 20 seconds to send single keep alive message. This changes the state of the radio bearer from IDLE to ACTIVE and the mobile device will stay in the ACTIVE state for several seconds before moving back to IDLE just to be activated again due to the next keep alive message. This frequent state change and usage of ACTIVE state causes significant battery consumption. In fact the mobile device is in a type of high level standby mode where it is active almost continuously resulting in high power consumption. Another problem is seen on network side. Because mobile devices are more frequently in an ACTIVE state they will consume more network resources and a single base station is not able to serve as many mobile devices as it could if the mobile devices were not jumping between IDLE and ACTIVE due to keep alive messages.

Previous solutions for this problem entail sending keep alive messages from the mobile device itself to another mobile device or application server it wishes to remain connected to. Alternatively an application server may send keep alive messages to the mobile device. This method of keep alive signaling has been specified for IPsec RFC3948 incorporated by reference herein in its entirety and MIP RFC3519 incorporated by reference herein in its entirety. In addition it is the responsibility of the terminal to send such a message if a NAT device is detected in the path. Other conventional systems involve a network entity such as a network operations center sending keep alive messages to a gateway. However this is again done for the purpose of the network operations center and not on the behalf of another entity such as a mobile device.

Various embodiments of the present invention provide a system and method of maintaining an always on application client communication between an always on application client and an application hosted on an application server. In one embodiment of the present invention an application programming interface implemented on a device hosting the always on application client determines if network based keep alive functionality exists in a network where the device operates. If network based keep alive functionality exists a network element is instructed to transmit keep alive messages to the application server on behalf of the device. Additionally replies to the keep alive messages can be dropped to prevent the device from receiving the replies. In another embodiment of the present invention the network element determines that the device is transmitting keep alive messages to the application server. Upon this determination the network element instructs the device to stop sending the keep alive messages and resumes the sending of the keep alive messages on behalf of the device. The network element can be implemented in or as a variety of existing network elements e.g. as a GPRS gateway serving node or a standalone keep alive network element.

Battery performance of a device hosting the always on application client can be improved with the present invention because the device is no longer required to continuously transmit keep alive messages to the application server. Also the hosting device need no longer reply to keep alive messages from an application server or at least can transmit automated replies. Control signaling and traffic is reduced as well for both the device and supporting network elements such as base stations allowing the supporting network elements to serve more mobile devices. In addition implementing the various embodiments of the present invention allows service providers the freedom to focus on optimizing actual call performance instead of on keep alive transmissions as well as easing the burden on application developers by removing the responsibility to consider future networks and different country configurations.

These and other advantages and features of the invention together with the organization and manner of operation thereof will become apparent from the following detailed description when taken in conjunction with the accompanying drawings wherein like elements have like numerals throughout the several drawings described below.

For exemplification the system shown in includes a mobile telephone network and the Internet . Connectivity to the Internet may include but is not limited to long range wireless connections short range wireless connections and various wired connections including but not limited to telephone lines cable lines power lines and the like.

The exemplary communication devices of the system may include but are not limited to a mobile device a combination PDA and mobile telephone a PDA an integrated messaging device IMD a desktop computer and a notebook computer . The communication devices may be stationary or mobile as when carried by an individual who is moving. The communication devices may also be located in a mode of transportation including but not limited to an automobile a truck a taxi a bus a boat an airplane a bicycle a motorcycle etc. Some or all of the communication devices may send and receive calls and messages and communicate with service providers through a wireless connection to a base station . The base station may be connected to a network server that allows communication between the mobile telephone network and the Internet . The system may include additional communication devices and communication devices of different types.

The communication devices may communicate using various transmission technologies including but not limited to Code Division Multiple Access CDMA Global System for Mobile Communications GSM Universal Mobile Telecommunications System UMTS Time Division Multiple Access TDMA Frequency Division Multiple Access FDMA Transmission Control Protocol Internet Protocol TCP IP Short Messaging Service SMS Multimedia Messaging Service MMS e mail Instant Messaging Service IMS Bluetooth IEEE 802.11 etc. A communication device may communicate using various media including but not limited to radio infrared laser cable connection and the like.

Various embodiments of the present invention comprise a software application programming interface API implemented on a mobile device. An API is an interface that a computer system library or application provides in order to allow requests for services to be made of it by other computer programs and or to allow data to be exchanged therebetween. In particular the API implemented in the various embodiments of the present invention allows for keep alive messaging between an application client of a mobile device and an associated application server.

The operation of a second embodiment of the present invention is described by the flow chart in . The API can optionally include a filter description which defines application server messages that should not be forwarded to the application client of the mobile device. These not to be forwarded application server messages are determined at . As before keep alive message sending parameters are sent to the network element at and the network element sends keep alive messages on behalf of the mobile device at . At it is determined whether the application server is in fact sending replies to the keep alive messages to the mobile device where the replies are defined in the filter description. If so at transmission of these replies is prevented. It should be noted that the filter determination shown at need not occur after the processes described at and but can be performed at any time prior to receiving at least a first keep alive message reply. This further conserves the mobile device s battery life and resources of the mobile network. Alternatively the application server can be configured to send the keep alive messages for example after an initial negotiation with the application client. The filter feature described above can also cover application server originated keep alive messages by defining an automated reply message for server messages matching the filter description.

In a third embodiment of the present invention a mobile device a network element and an application server are shown in . It should be noted that the application server can comprises but is not limited to a standalone server an existing network element and another mobile device. When the network element recognizes that the mobile device is sending keep alive messages to the application server the network element can negotiate with a filter not shown of the mobile device as described above to filter out the keep alive messages. Specifically a negotiation occurs between the network element and the mobile device where the network element provides information regarding which messages and or message types comprise keep alive messages. The network element then transmits instructions to the mobile device to stop sending such messages to the network element . The filter of the mobile device can be used to determine if any messages to be sent from the mobile device are keep alive messages. If so the filter filters out those messages from the outgoing traffic of the mobile device . After a successful negotiation the network element will assume the task of sending keep alive messages to the application server .

In a fourth embodiment of the present invention keep alive messaging is approached utilizing a server centric approach as shown in which depicts a conventional communications network in which the various embodiments of the present invention can be implemented. A mobile device is shown to communicate with a GPRS Gateway Serving Node GGSN via a radio network. A GGSN is network node that acts as a gateway between a General Packet Radio Service GPRS wireless data network and other networks such as the Internet or private networks. The GGSN acts as an anchor point that enables the mobility of a mobile device in GPRS Universal Mobile Telecommunication System UMTS networks. In essence the GGSN in a GPRS network is similar to of a Home Agent in Mobile IP by maintaining any routing necessary to tunnel Protocol Data Units PDUs to the Serving GPRS SGSN that service a particular MS Mobile Subscriber .

In order for an Internet based application client of the mobile device to function the mobile device must further communicate with an application server via a network address translation NAT device and the Internet. As shown in the operator core network encompasses at least the GGSN and the NAT device . The application server attempts to negotiate a keep alive messaging function with a network element such as the GGSN . If the negotiation is successful the application client of the mobile device and the application server negotiate an application specific mechanism relieving the mobile device of the duty to send keep alive messages.

Specifically at the application server requests a keep alive function from the GGSN with message sending period and message content as parameters. To penetrate firewalls and NAT devices it is better that the keep alive message comes from mobile device direction as at . In this case it is not necessary for the application server to send a reply to keep alive messages but there is an optional parameter for application server originated keep alive messages that a network element such as the GGSN should drop i.e. not deliver to the mobile device . The parameters include also a message that the GGSN should send in case the mobile device connection is terminated such as at . Using this functionality instructs the GGSN to not timeout this PDP context or alternatively implements setting a timeout period different than the default GGSN configuration. It should be noted that in the fourth embodiment of the present invention a software API need not be utilized.

For certain embodiments of the present invention to avoid Denial Of Service attacks a network element such as the GGSN can only accept requests from application servers it knows. In addition there is a lightweight agreement process between the operator and the application service provider as a GGSN is typically not accessible from the public internet. In a service operator s network Demilitarized Zone DMZ there can be a server from where the application server asks for a desired service. The operator in turn sets up a Domain Name Service DNS service record for this server in the same domain from where the original application server connection comes from. The request from the application server would contain the origin IP address and port number of the application connection from mobile device as parameters.

As described above a network element such as a GGSN can be used to provide keep alive messaging to an application server in lieu of a mobile device. shows that a new keep alive network element can also be used to provide keep alive messaging instead of utilizing a GGSN. In this embodiment of the present invention a network service operator can provide a service that sends NAT keep alive messages on behalf of the mobile device . This new keep alive network element can be located before the first NAT device and the mobile device can request NAT keep alive services from it. In addition the new keep alive network element can learn of the keep alive functionality by performing its own network analysis. It should be noted as well that a software API need not be utilized in this example. Another network element that can be used for the keep alive assistance functionality is the Home Agent not shown . As 3GPP is standardizing Mobile IP MIP usage for inter access mobility between 3GPP and non 3GPP systems a network element placed before the Home Agent does not solve NAT keep alive problem that occur after traversing the Home Agent. Therefore MIP signaling can be used to inform a proper Home Agent to start its own keep alive assistance functionality.

Specifically the mobile device can get the IP address of the new keep alive network element during the dynamic host configuration protocol DHCP procedure. The DHCP is a protocol used by network entities to obtain unique IP addresses and other parameters like default router subnet mask and IP addresses for DNS servers. This protocol is used when network entities are added to a network because these settings are necessary for the host to participiate in the network. When the mobile device detects a NAT device in the communication path for example Internet Key Exchange IKE specifies a mechanism to detect NAT devices the mobile device can request a NAT keep alive service from the new keep alive network element by sending a special message to the new keep alive network element . That message can contain source and destination IP port information. The new keep alive network element then sends keep alive messages on behalf of the mobile device using the parameters received from mobile device .

In implementing the keep alive features discussed above a software API can be created on the device side where device application developers can use the API or alternatively application servers are made aware of mobile networks. Also wireless network providers can implement the keep alive features in some network components. In the case of network support being available battery performance of a mobile device can be improved as result of reduction in traffic over the air interface which in turn lessens the need to keep a radio element of the mobile device on. A mobile device s battery performance no longer needs to depend upon a network air interface configuration. Service operators can also keep optimizing network parameters for the best speech call performance instead of being burdened with the transmission and receipt of keep alive messages. In addition keep alive functionality that resides outside of the mobile device also simplifies the task of application developers and makes applications more future proof and independent upon multiple access methods. Furthermore managing future networks and configurations in different countries need not be the responsibility of application developers any longer but rather the responsibility of network operators and platform providers.

It should further be noted that client originated keep alive messages are desirable when connecting to existing application servers requiring no changes to the servers. However if the application server is aware of mobile networks and the keep alive functionality using server originated keep alive messages where the server can comprise but is not limited to an application server a GGSN or a Home Agent as described above would enable changing the keep alive behavior without updating the clients.

The present invention is described in the general context of method steps which may be implemented in one embodiment by a program product including computer executable instructions such as program code executed by computers in networked environments. Generally program modules include routines programs objects components data structures etc. that perform particular tasks or implement particular abstract data types. Computer executable instructions associated data structures and program modules represent examples of program code for executing steps of the methods disclosed herein. The particular sequence of such executable instructions or associated data structures represents examples of corresponding acts for implementing the functions described in such steps.

Software and web implementations of the present invention could be accomplished with standard programming techniques with rule based logic and other logic to accomplish the various database searching steps correlation steps comparison steps and decision steps. It should also be noted that the words component and module as used herein and in the claims is intended to encompass implementations using one or more lines of software code and or hardware implementations and or equipment for receiving manual inputs.

The foregoing description of embodiments of the present invention have been presented for purposes of illustration and description. It is not intended to be exhaustive or to limit the present invention to the precise form disclosed and modifications and variations are possible in light of the above teachings or may be acquired from practice of the present invention. The embodiments were chosen and described in order to explain the principles of the present invention and its practical application to enable one skilled in the art to utilize the present invention in various embodiments and with various modifications as are suited to the particular use contemplated.

