---

title: Interactive data fault localization system and method
abstract: An interactive system is provided to help an operator locate the source of a data fault in an Asynchronous Transfer Mode (ATM) network. A database stores information related to data types and subsystems used by the ATM network. A processor coupled to the database uses the information stored therein to formulate a series of queries related to a selected one of the subsystems using the data type experiencing a data fault. The series of queries have a hierarchal order that sequentially inquire about operational status of the various subsystems having a relationship with the data type experiencing the data fault. A graphical user interface (GUI) coupled to the processor displays each query in accordance with the hierarchal order thereof. The GUI simultaneously displays identification of the various subsystems having a relationship with the data type experiencing the data fault.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07734755&OS=07734755&RS=07734755
owner: The United States of America as represented by the Secretary of the Navy
number: 07734755
owner_city: Washington
owner_country: US
publication_date: 20060105
---
The invention described herein may be manufactured and used by or for the Government of the United States of America for governmental purposes without the payment of any royalties thereon or therefor.

The present invention relates generally to fault localization in Asynchronous Transfer Mode ATM networks and more particularly to a stand alone interactive data fault localization system and method that guides an ATM system operator through the fault localization process without having to be integrated into the ATM network.

The localization of data faults in Asynchronous Transfer Mode ATM networks has previously required users to either i manually assemble information related to the connectivity or functionality of every data type and subsystem along an ATM network and then verify same or ii use a tool that is integrated into the network itself. The manual approach can only be undertaken by an experienced network operator with extensive knowledge of the ATM network. Further this operator must track all subsystem users and producers of a failed data type as the operator manually brings up shuts down various points along the network in order to verify network connectivity. The information tracking and manual verification requires a lot of time and effort and has a great potential for the introduction of human error.

Fault location tools that are integrated into the ATM network provide the means to systematically verify data point connectivity and functionality. However because these tools are integrated into the network they may be subject to malfunction when there is a network malfunction. Furthermore the network integrated tool is not portable.

Accordingly it is an object of the present invention to provide a tool that helps an operator locate the source of data faults in an ATM network.

Another object of the present invention is to provide a portable and independent tool that can be coupled to an ATM network for localizing data faults in the network.

Other objects and advantages of the present invention will become more obvious hereinafter in the specification and drawings.

In accordance with the present invention an interactive system is provided to help an operator locate the source of a data fault in an Asynchronous Transfer Mode ATM network having a plurality of subsystems and an ATM network server coupled to an ATM backbone. A database stores information related to a plurality of data types used by the ATM network. For each of the subsystems the information includes a list of i ones of the data types used thereby ii ones of the subsystems acting as a data server for the data types and iii ones of the subsystems that produce the data types. A processor is coupled to the database and is adapted to be coupled to the ATM backbone. The processor uses the information in the database to formulate a series of queries related to a selected one of the subsystems using the data type experiencing a data fault. The series of queries have a hierarchal order that sequentially inquires about operational status of i the subsystem experiencing the data fault ii other subsystems using the data type experiencing the data fault iii the subsystems acting as a data server for the data type experiencing the data fault and iv the subsystems that produce the data type experiencing the data fault. A graphical user interface GUI to include a display is coupled to the processor. The GUI presents on the display each query from the series of queries in accordance with the hierarchal order thereof. The GUI simultaneously presents on the display identification of i the subsystem experiencing the data fault ii the data type experiencing the data fault iii other subsystems using the data type experiencing the data fault iv the subsystems acting as a data server for the data type experiencing the data fault and v the subsystems that produce the data type experiencing the data fault.

Referring now to the drawings and more particularly to a portion of an Asynchronous Transfer Mode ATM network is illustrated along with an interactive system for helping a network operator locate the source of a data fault on the ATM network in accordance with the present invention. In general interactive system is a stand alone system that presents an ordered set of questions or queries to the network operator. Each query directs the network operator to check verify some aspect of the ATM network in an effort to find the source of a data failure while simultaneously tracking the fault location progress. Thus interactive system is a maintenance tool that can guide even an inexperienced network operator through a fault location process in an orderly and logical fashion. Further since interactive system is a stand alone system the fault location guidance provided thereby cannot be corrupted by idiosyncrasies of the ATM network or problems within the ATM network.

In general an ATM network includes an ATM backbone an ATM network server an ATM switch and a plurality of subsystems . As is well known in the art ATM backbone e.g. a fiber optic backbone provides the physical interconnection for each of network server switch and subsystems . Subsystems are connected together logically through switch to emulate different local area networks or LANs. The interface definitions or logical connections associated with a data type can define certain ones of subsystems as data consuming subsystems data serving subsystems or data producing subsystems. That is for a given data type data consuming subsystems associated with the data type are those subsystems that have the data type provided thereto for use thereby. Data serving subsystems associated with the data type are those subsystems that will receive the data produced by the data producing subsystems in total or will receive data from multiple data producer subsystems and combine the data into the complete data type for distribution service to the data consumers on the network. Data producing subsystems associated with the data type are the subsystems that generate the complete data set or a partial data set that defines a data type. In some cases the data producing subsystems can produce the entire data type and serve this data type to the data consumers. That is in this situation the subsystem acts as both a data server and a data producer.

Interactive system is a stand alone system that may be coupled to ATM backbone when the source of a data fault must be localized. When system is coupled to ATM backbone some of the queries generated by system can be automatically answered. However if system is not coupled to ATM backbone the operator of system must perform all operations specified on the displays presented by system to answer the questions presented.

In terms of hardware interactive system includes a database a fault location processor and a graphical user interface GUI having a display coupled thereto for generating an image viewable by an operator. The stand alone nature of interactive system can be achieved by realizing the hardware elements thereof using a portable computer such as a conventional laptop computer that can be coupled to ATM backbone .

Database stores the logical connections and subsystem definitions associated with each data type of the ATM network. The logical connections and subsystem definitions serve as the basis of information used by interactive system . The information for each of subsystems is essentially a list of the data types used by a particular subsystem and a list of the ones of subsystems that produce the particular subsystem s data types. The information stored in database can be arranged in a variety of ways well known in the art without departing from the scope of the present invention. For example the information can be formatted to be queried using commercially available Standard Query Language SQL software.

The information stored in database is accessed by fault location processor that in general is programmed to formulate a series of queries that guide the network operator through a fault localization process after there is a failure of a data type used by the ATM network. Such failure can be defined by for example no data data outside of acceptable ranges etc. More specifically fault location processor is programmed with a generic series of questions arranged in a hierarchal order such that the first question in the series is presented before the second question in the series etc. In the present invention questions at the top of the hierarchal order are related to the operational status of the one of subsystems experiencing the effect of the data failure of a data type thereof. On the next rung of the hierarchal order are questions related to the operational status of those of subsystems that also use the data type experiencing the data fault. Next are questions relating to the operational status of those of subsystems acting as data servers for the data type experiencing the data fault. Finally on the lower end of the hierarchal order are questions relating to the operational status of those of subsystems that produce the data type experiencing the data fault. The logic of the hierarchal order of questions will be explained further below.

If the source of the data fault has not been located by the time the above described hierarchal ordered questions have been answered it can be assumed that subsystems i.e. data consumers data servers and data producers are operationally sound. At this point the operator can move on to an investigation of the operation of network server and ATM switch . Typical problems of these systems include for example excessive network server CPU loading network throughput bottlenecks and previously recognized network anomalies.

GUI is essentially the user interface between the network operator and fault location processor . Typically GUI is implemented by a keyboard and or mouse as would be well understood in the art. GUI is used by the network operator to i initiate the fault location logic for a particular data type and ii step through the series of operational status queries described above. Each such query is displayed on a region of display as represented by fault location queries region A. At the same time another region of display shows what will be referred to herein as a fault location logic FLL roadmap B.

FLL roadmap B presents the network operator with a snapshot of the fault location logic associated with locating the source of the failure of a particular data type. That is FLL roadmap B displays the logical connections associated with the data type experiencing the data fault. An example of what a typical FLL roadmap B might look like is illustrated in where the data type experiencing a failure is indicated as XXXX . It has been found that positioning roadmap B on the rightmost side of display provides a user with an easily viewed logical snapshot of the fault location logic. Further the columnar form of roadmap B presents the fault location logic in a top down format in accordance with the hierarchal order of the questions that will be presented in region A. This allows an experienced network operator that understands the design of the ATM network but may not be familiar with this particular data fault to shorten the fault location process by jumping ahead to a suspected fault location and continue the investigation from that point.

With the network operator specifying to processor that data type XXXX is failed fault location processor makes calls to database where the list of subsystems etc. associated with data type XXXX are stored. The listed information for data type XXXX is presented on display in a columnar form as roadmap B. The various subsystems are identified sequentially in the column in essentially the same order as the hierarchal order of the operational status queries described above. Accordingly the top of roadmap B identifies the faulted subsystem i.e. the subsystem where the failure of data type XXXX was detected as AAAA . Next roadmap B identifies the AAAA subsystem s host as BBBB in the illustrated example. Below this any one or more subsystems that also use failed data type XXXX e.g. CCCC and DDDD in the illustrated example are listed. Next the data server subsystem s e.g. EEEE for data type XXXX is identified followed by if applicable the server s host e.g. FFFF . Finally producer subsystems e.g. GGGG and producer host subsystems e.g. HHHH associated with failed data type XXXX are listed on roadmap B. In this way the network operator is presented with an immediate snapshot of the direction that the fault location logic will take via the series of queries that will appear at region A.

Roadmap B is presented on display throughout the fault location process. In addition the location of a particular query i.e. noted in region A can be highlighted on roadmap B so that the network operator can quickly tell which stage they are in the above described hierarchal order of operational status queries. For example if the operational status query in A was as follows Is subsystem DDDD getting data type XXXX then the listing of DDDD would be highlighted as indicated by dashed line box C.

When the network operator is able to answer the current query appearing at region A the network operator can continue to the next query by clicking on NEXT button D. If the network operator s observations in response to the current query provide the data fault source e.g. subsystem DDDD the network operator can quit interactive system by clicking on CANCEL button E.

As mentioned above the logic of the hierarchal order of operational status queries follows a general format illustrated in flowchart form in where the left side of the flow chart depicts the general nature of the queries and the right side of the flow chart depicts possible specific queries. The network operator s answers and or observations in response to the queries will direct him to the source of the data fault. Note that the top to bottom flow illustrated in follows the above described hierarchal order.

The advantages of the present invention are numerous. Both inexperienced and experienced network operators can use the interactive system method to locate the source of a data fault in an ATM network. The system is stand alone and is therefore insulated from ATM network problems or malfunctions.

It will be understood that many additional changes in the details materials steps and arrangement of parts which have been herein described and illustrated in order to explain the nature of the invention may be made by those skilled in the art within the principle and scope of the invention as expressed in the appended claims.

