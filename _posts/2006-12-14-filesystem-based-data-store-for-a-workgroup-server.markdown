---

title: File-system based data store for a workgroup server
abstract: A system and method for storing workgroup objects on a file-system based data store in a workgroup server is disclosed. The present invention implements a file-system based workgroup system in which a workgroup object is stored in one or more files. The present invention further includes a workgroup object list comprising object identifiers, each object identifier uniquely mapping to a workgroup object and each object identifier including a property of the workgroup object based on which the workgroup object list is sorted.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08171061&OS=08171061&RS=08171061
owner: Cisco Technology, Inc.
number: 08171061
owner_city: San Jose
owner_country: US
publication_date: 20061214
---
The present invention relates generally to storage of electronic data. More specifically the present invention relates to a system and method for storing workgroup objects on a file system based data store in a workgroup server.

In recent years workgroup systems have rapidly emerged as indispensable tools for providing integrated information exchange facilities to individuals in business enterprises. Workgroup systems provide such facilities as e mail messaging individual and group calendaring files and folder sharing scheduling tasks and so forth.

Workgroup systems are generally implemented in client server architecture. A workgroup server stores multiple workgroup objects in a storage device. The workgroup object may be defined as an entity representing one of an e mail message an individual calendar a group calendar a shared file a shared folder a user scheduled task an address book an electronic form and the like. A workgroup client runs a workgroup client software application and accesses the workgroup server to retrieve one or more workgroup objects. The workgroup servers known in the prior art use a variety of underlying storage mechanisms such as relational databases proprietary object databases data type specific storage structures file system based storage and so forth. The end users are always dependent on the provider of such proprietary databases for any utilities that are associated with workgroup server.

The file system based storage scheme offer several advantages over other storage mechanisms. It facilitates the administration of the workgroup server by providing such features as live back up of data clustering journaling caching and so forth.

However the file system based storage scheme does not provide a built in facility for sorting and searching the workgroup objects. In addition the file system based storage scheme necessitates creation of a large number of files. Moreover there is a dependence on the file system implementation for managing the large number of files.

More importantly in a workgroup server subjected to concurrent access by multiple users efficient memory management is a key requirement. Another challenge involved in implementing the file system based storage scheme is to ensure the integrity of the workgroup objects. Moreover there is a need to provide the end users flexibility with respect to the tools and utilities that are available to be used in conjunction with a workgroup server.

In light of the foregoing discussion there is a need to address the challenges involved in implementing a file system based data store for a workgroup server.

Another object of the present invention is to optimize the memory management in the file system based workgroup system.

Yet another object of the present invention is to minimize the disk access activities in the file system based workgroup system.

The present invention implements a file system based workgroup system in which a workgroup object is stored in a primary file and one or more secondary files. A first set of properties of the workgroup object are stored in the primary file and each of a second set of properties of the workgroup object are stored in a corresponding secondary file. The present invention further includes a workgroup object list comprising object identifiers each object identifier uniquely mapping to a corresponding workgroup object and each object identifier including a property of the object based on which the workgroup object list is sorted.

The file system based storage on a workgroup server as described herein thus offers several advantages. The present invention helps in reducing the disk access activities for various operations associated with the workgroup server for example listing of folders listing of contents of a folder displaying an object and so forth thereby improving the performance of the workgroup server. The present invention provides the facility to optimize the disk access activities and thus improves the performance based on the information of the specific details of the problem domain and common usage patterns.

Further the present invention provides the end users the facility to exploit a variety of tools and utilities for performing various activities associated with the workgroup server. The end users have the option of selecting from a variety of tools available from the third party vendors.

The present invention reduces memory required to store workgroup object lists in active memory. The workgroup object lists include simple data structures which are sorted based on data stored in the data structure. The binary search used to locate a position in the list helps to reduce the system overheads and thereby improves the efficiency. Further the present invention facilitates the administration of the workgroup server by providing such features as live back up of data clustering journaling caching and so forth.

The present invention thus offers a simpler more efficient and more flexible workgroup system that is easier to implement and maintain.

Various embodiments of the present invention provide a system and method for managing one or more workgroup objects on a workgroup server.

Workgroup server stores one or more workgroup objects. Workgroup clients access workgroup server to retrieve one or more workgroup objects.

Workgroup server is a server computer supporting multiple accesses to a workgroup server software application. The workgroup server software application is an application running on workgroup server and performing server side operations in workgroup system . In various embodiments of the present invention workgroup server may be a server computer for example a blade server computer a rack mounted server computer an entry level server computer and so forth.

In workgroup server SMTP server POP server and IMAP server in conjunction with messaging services API manage the transfer of one or more workgroup objects in accordance with a corresponding protocol. Data store stores one or more workgroup objects. Directory services module accesses a directory not shown in the figure to retrieve addressing and routing information thereby facilitating routing the one or more workgroup objects. Examples of the directory that stores the addressing and routing information include Lightweight Directory Access Protocol LDAP and the like.

Each of workgroup clients is a general purpose computational device for example a personal computer a laptop a palmtop a personal digital. assistant PDA a mobile cellular device and the like. Further each of workgroup clients runs a workgroup client software application. The workgroup client software application accesses workgroup server to retrieve the one or more workgroup objects.

In various embodiments of the present invention workgroup system may be implemented in any of a variety of architectures including a 2 tier architecture client server architecture a 3 tier architecture an N tier architecture a peer to peer architecture a tightly coupled architecture a service oriented architecture a mobile code based architecture and a replicated repository based architecture. Those skilled in the art will recognize that the present invention as will be described below with reference to the 2 tier client server architecture can be implemented in any of the variety of architectures mentioned above.

The workgroup client software application in workgroup client displays a list of workgroup objects included in an active folder. For example when folder 2.1 is active in a client user interface provided by the workgroup client software application a list of workgroup objects is displayed. The workgroup client software application presents an abbreviated display of each object to display the list. As described herein a property of workgroup object used for abbreviated display of workgroup object for displaying the contents of a folder is referred to as an abbreviated display property of workgroup object . The workgroup client software application further provides a full display of object after receiving a request for full display.

Simple data types include Boolean date integer strings and so forth. Complex data types include but not limited to multi value lists of simple data type data in binary format and a table. The table includes a set of rows each containing one or more properties.

For example an e mail message includes a plurality of header fields and a body. The header fields may include one or more of a From field a Sender field a Reply To field a To field a CC field a BCC field a Message Id field an In Reply To field a References field a Subject field a Comments field a Keywords field an Optional field and the like. The e mail message may also include one or more attachments. In addition the e mail may include one or more embedded e mail messages. Each of the header fields body and the one or more attachments constitutes a property for an e mail message. Likewise other workgroup objects representing one of an individual calendar a group calendar a shared file a shared folder a user scheduled task an address book an electronic form and the like include one or more properties.

In an embodiment of the present invention a property of the workgroup object is classified as at least one of a first set of properties and a second set of properties. The classification is based on at least one of the size of the property and the nature of the property. The nature of the property as referred to herein signifies the need of the property for an abbreviated display of workgroup object in a list display of the contents of the active folder in a client interface. In case a property is included in the first set of properties and the second set of properties the value of the property is truncated based on a predefined truncation algorithm to generate a corresponding truncated value. The property containing the corresponding truncated value hereinafter referred to as a truncated property is included in the first set of properties and the property containing a complete value of the property hereinafter referred to as a complete property is included in the second set of properties. As used herein the properties included in the first set of properties are also referred to as abbreviated display properties. Similarly the properties included in the second set of properties are also referred to as full display properties.

In an embodiment of the present invention primary file includes such properties that may be required for an abbreviated display of workgroup object hereinafter referred to as abbreviated display properties in the client user interface to display a list of workgroup objects in an active folder such as folder 2.1 explained in conjunction with on workgroup client . In an embodiment of the present invention the abbreviated display properties are stored in logically sequential memory blocks on a storage device to ensure retrieval in a single disk access.

In an embodiment of the present invention if the size of an abbreviated display property exceeds a predefined threshold the abbreviated display property is suitably truncated to generate a corresponding truncated property. The corresponding truncated property is included in primary file . The corresponding complete property is included in one of secondary files . In an embodiment of the present invention the truncated property includes an identifier for secondary file storing the complete property.

In an embodiment of the present invention each of the properties included in the second set of properties hereinafter referred to as full display properties is stored individually in one of secondary files .

In an embodiment of the present invention the information related to the total size of the abbreviated display properties is encoded in one of the file properties of primary file the file properties of primary file being maintained by the file system. The file system maintains one or more properties for each of the files stored in the file system. Examples of file properties of the files include file name file size file type date modified extended properties of a file and so forth. In an embodiment of the present invention the information is encoded in one of the extended properties of primary file . In another embodiment of the present invention the information related to the total size of the abbreviated display properties is encoded in primary file through altering the size of primary file such that the size of primary file deviates from an integral number of memory blocks. For example assuming that the size of a memory page is 256 bytes and four memory pages constitutes one memory block. In this example if primary file requires 2048 bytes of memory primary file will require two memory blocks. Further assuming that the abbreviated display properties require one memory block primary file is allocated a total of 2049 bytes such that the additional memory block indicates that the abbreviated display properties are stored in one memory block in the beginning of primary file .

In an embodiment of the present invention workgroup client software application may be required to display a summary of status of workgroup objects stored in folder 2.1 . For example in case of e mail messages workgroup client software application may display a summary of one of the total number of e mail messages the total number of read e mail messages and the total number of unread e mail messages. In an embodiment of the present invention information related to the status of workgroup object is encoded in primary file . For example in case of workgroup object representing an e mail message the information related to the read unread status of the e mail message is encoded in one of the file name the file size and any such property maintained by the file system.

In an embodiment of the present invention if there is one full display property in addition to the abbreviated display properties of workgroup object the full display property is included in primary file in order to optimize memory management. Therefore in this embodiment workgroup object is stored in primary file and there are no secondary files associated with workgroup object .

In an embodiment of the present invention workgroup system manages workgroup objects through a workgroup object list as described in detail in conjunction with .

In an embodiment of the present invention when workgroup object is stored on workgroup server object identifier is generated and inserted in workgroup object list at an appropriate location based on a binary search to maintain the sort order of workgroup object list . Similarly when workgroup object is deleted from workgroup server object identifier is located in workgroup object list and removed.

In an embodiment of the present invention if the size of the property exceeds a predefined threshold the property is suitably truncated to generate a truncated property. Thereafter the truncated property is stored in second data slot .

At a first set of properties of workgroup object is stored in a primary file such as primary file . At each property in a second set of properties of workgroup object is stored in a secondary file such as secondary file . For example as depicted in secondary file stores full display property 2 . The first set of properties and the second set of properties have been explained in conjunction with 

At a workgroup object such as workgroup object is received on the workgroup server . At each property of the workgroup object is examined. The subsequent steps are performed for each property. At the property is identified as one of the abbreviated display properties and the full display properties the abbreviated display properties and the full display properties have been explained in conjunction with . At if the property is one of the abbreviated display properties the size of the property is checked at . At if the size of the property exceeds a predefined threshold value then at the property is truncated to generate a truncated property based on a predefined truncation algorithm. At the truncated property is stored in a primary file such as primary file . At the complete property is stored in a corresponding secondary file such as secondary file . At an identifier for the secondary file is included in the truncated property of the workgroup object stored in the primary file.

At if the property is a full display property then at the property is stored in a corresponding secondary file. At the information related to the secondary files is included in the primary file. At if the abbreviated display property does not exceed the predefined threshold value then at the property is stored in the primary file.

Therefore each property is scrutinized and saved in one of the primary file and the secondary files. Finally at the information related to the total size of the abbreviated display properties required for the display of list of workgroup objects in the client user interface at a workgroup client such as workgroup client is encoded in the primary file described in detail in conjunction with .

In an embodiment of the present invention primary file is first stored in a temporary memory. Secondary files are directly stored in a permanent memory. Primary file is moved from the temporary memory to the permanent memory when secondary files have been successfully stored in the permanent memory and corresponding references have been included in primary file . It will be appreciated that storing primary file first in the temporary memory and then moving primary file to the permanent memory when secondary files have been successfully stored in the permanent memory and the corresponding references have been included in primary file helps in avoiding any bad references in primary file in case of a system error while storing workgroup object . Therefore storing a file as described herein includes storing the file in one of the temporary memory and the permanent memory.

At a workgroup object such as workgroup object is received on a workgroup server such as workgroup server . At the workgroup object is stored in a data store such as data store in accordance with the method described in conjunction with and . At an object identifier such as object identifier is generated the object identifier has been explained in detail in conjunction with . At a binary search is performed on the workgroup object list to locate a position to insert the object identifier for the workgroup object. At the object identifier is inserted at the position located at .

At a request to delete a workgroup object such as workgroup object is received on a workgroup server such as workgroup server . At a binary search is performed to locate the object identifier for the workgroup object. At the object identifier for the workgroup object is deleted. At the workgroup object is deleted.

The file system based storage on a workgroup server as described herein thus offers several advantages. The present invention helps in reducing the disk access activities for various operations associated with the workgroup server for example listing of folders listing of contents of a folder displaying an object and so forth. The present invention provides the facility to optimize the disk access activities and thereby to improve the performance based on the information of the specific details of the problem domain and common usage patterns.

Further the present invention provides the end users the facility to exploit a variety of tools and utilities for performing various activities associated with the workgroup server. This is possible due to the implementation of a file system based data store in place of a proprietary data store. Therefore the end users have the option of choosing from a variety of tools available from the third party vendors.

Moreover the present invention reduces memory required to store workgroup object lists in active memory. The workgroup object lists include simple data structures which are sorted based on data stored in the data structure. The binary search used to locate a position in the list helps to reduce the system overheads and thereby improves the efficiency. Further the present invention facilitates the administration of the workgroup server by providing such features as live back up of data clustering journaling caching and so forth.

The present invention thus offers a simpler more efficient and more flexible workgroup system that is easier to implement and maintain.

The workgroup server as described in the present invention or any of its components may be embodied in the form of a computer system. Typical examples of a computer system includes a general purpose computer a programmed microprocessor a micro controller a peripheral integrated circuit element and other devices or arrangements of devices that are capable of implementing the steps that constitute the method of the present invention.

The computer system comprises a computer an input device a display unit and the Internet. The computer further comprises a microprocessor. The microprocessor is connected to a communication bus. The computer also includes a memory. The memory may include Random Access Memory RAM and Read Only Memory ROM . The computer system further comprises a storage device. The storage device can be a hard disk drive or a removable storage drive such as a floppy disk drive optical disk drive etc. The storage device can also be other similar means for loading computer programs or other instructions into the computer system. The computer system also includes a communication unit. The communication unit allows the computer to connect to other databases and the Internet through an I O interface. The communication unit allows the transfer as well as reception of data from other databases. The communication unit may include a modem an Ethernet card or any similar device which enables the computer system to connect to databases and networks such as LAN MAN WAN and the Internet. The computer system facilitates inputs from a user through input device accessible to the system through I O interface.

The computer system executes a set of instructions that are stored in one or more storage elements in order to process input data. The storage elements may also hold data or other information as desired. The storage element may be in the form of an information source or a physical memory element present in the processing machine.

The set of instructions may include various commands that instruct the processing machine to perform specific tasks such as the steps that constitute the method of the present invention. The set of instructions may be in the form of a software program. Further the software may be in the form of a collection of separate programs a program module with a larger program or a portion of a program module as in the present invention. The software may also include modular programming in the form of object oriented programming. The processing of input data by the processing machine may be in response to user commands results of previous processing or a request made by another processing machine.

While various embodiments of the present invention have been illustrated and described it will be clear that the present invention is not limited to these embodiments only. Numerous modifications changes variations substitutions and equivalents will be apparent to those skilled in the art without departing from the spirit and scope of the present invention as described in the claims.

