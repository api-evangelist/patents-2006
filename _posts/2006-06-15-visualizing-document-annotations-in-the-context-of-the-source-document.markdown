---

title: Visualizing document annotations in the context of the source document
abstract: In a document annotator (), a document converter () is configured to convert a source document () with a layout to a deterministic format () including content and layout metadata. At least one annotation pipeline () is configured to generate document annotations respective to received content. A merger () is configured to associate the generated document annotations with positional tags based on the layout metadata, which locate the document annotations in the layout. A document visualizer () is configured to render at least some content of the deterministic format and one or more selected annotations () in substantial conformance with the layout based on the layout metadata and the positional tags associated with the selected one or more annotations ().
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07958444&OS=07958444&RS=07958444
owner: Xerox Corporation
number: 07958444
owner_city: Norwalk
owner_country: US
publication_date: 20060615
---
The following relates to the information processing arts. It particularly relates to annotation analysis cataloging and retrieval of documents based on semantic content and is described with particular reference thereto. However the following relates more generally to annotation analysis cataloging and retrieval of documents on other bases.

There is substantial interest in cataloging documents based on semantic content such as author name document title subject matter or so forth. The source document may be in any of various formats such as portable document format PDF hypertext markup language HTML a native application format such as a word processor format or a spreadsheet format or so forth. The semantic analysis is typically performed by a semantic analysis pipeline which may include for example tokenizer parser and semantic content analysis components typically operating in conjunction with a grammar lexicon ontology or other external references or resources.

To perform semantic analysis the original document is imported into the semantic analysis pipeline. Typically this entails extracting the text content of the document and inputting the extracted text content into the semantic analysis pipeline. The pipeline processes the textual content to generate document annotations that are then used in cataloging indexing labeling or otherwise organizing the document or a collection of documents. Later a user identifies and retrieves the document on the basis of one or more semantic annotations which attract the user s interest.

A problem arises however when the user wishes to visualize the document. There is typically no connection or linkage between an annotation and the position in the source document layout to which the annotation applies. Creation of such a linkage is difficult since the native layout of the source document is typically distinct from and more complex than the text based input that is processed by the semantic annotator. Accordingly it is difficult or impossible to associate semantic annotations with appropriate positions in the visualized layout of the original source document.

One approach is to construct links during the retrieval phase based on occurrences in the document of a keyword associated with the semantic annotation. For example if the semantic annotation identifies the author of the document this annotation can be associated with occurrences of the author s name in the document. However such keyword based approaches are unsatisfactory in certain respects. A given keyword may occur multiple times in the document while the semantic annotation may be associated with only one or a sub set of those keyword occurrences. For example the author annotation may be properly associated with the occurrence of the author s name at the top of the document but the keyword based association may also improperly associate the author annotation with other occurrences of the author s name such as in the text body or in the references if the author cites his or her own prior work for example . In such a case the annotation is not unambiguously associated with the correct portion of or location in the source document.

On the other hand the semantic annotation itself may have multiple keywords again creating ambiguity as to which keyword occurrences in the document should be associated with the semantic annotation. Still further a particular semantic annotation may not have a readily associated keyword. For example an article on global oil reserves may have the semantic annotation Subject Energy Conservation but the terms energy and conservation may not occur anywhere in the article.

Other types of annotation may be used with similar difficulties typically arising during visualization. An example of another type of annotation is image classification. One or more images are extracted from the source document and the extracted images are analyzed by an image classifier which outputs image classification annotations. The user then retrieves a document based on its containing an image classification of interest. Again there is typically no connection or linkage between the annotation and the position in the source document layout to which the annotation applies. Moreover construction of keyword based annotation linkages for image classification annotations during visualization is typically not feasible.

The following related U.S. patent applications that commonly owned with the present application are each incorporated herein by reference 

Salgado et al. U.S. application Ser. No. 11 296 396 filed Dec. 8 2005 entitled Method and System For Color Highlighting Of Text is incorporated herein by reference in its entirety. This application relates at least to converting PostScript files to text while retaining layout information performing natural language processing to identify selected sub strings and identifying positions of the selected sub strings as bounded highlighting boxes that are re injected into the source PostScript before printing.

Chidlovskii et al. U.S. application Ser. No. 11 316 771 filed Dec. 23 2005 entitled Interactive Learning Based Document Annotation is incorporated herein by reference in its entirety. This application relates at least to interactive machine learning based document annotation.

According to aspects illustrated herein a document annotator is disclosed. A document converter is configured to convert a source document with a layout to a deterministic format including content and layout metadata. At least one annotation pipeline is configured to generate document annotations respective to received content. A merger is configured to associate the generated document annotations with positional tags based on the layout metadata. The positional tags locate the document annotations in the layout. A document visualizer is configured to render at least some content of the deterministic format and one or more selected annotations in substantial conformance with the layout based on the layout metadata and the positional tags associated with the selected one or more annotations.

According to aspects illustrated herein a document visualization method is disclosed. A selection is received of a document annotation having an associated source document and an associated positional tag. Content of the associated source document and the document annotation are rendered in accordance with content and layout metadata representative of the associated source document and the positional tag associated with the document annotation.

According to aspects illustrated herein a document annotation method is disclosed. An initial representation of a source document is generated. The initial representation includes initial content of the source document and initial layout metadata indicative of layout of said content in the source document. At least some of the initial content of the source document is processed to generate document annotations. Positional tags of the initial layout metadata are assigned to the generated document annotations to locate the document annotations respective to the initial layout metadata. At least the document annotations and their assigned positional tags are stored.

With reference to an annotation system receives a source document for annotation. The source document has a layout that is typically embedded or integral with the source document . For example the source document may be a hypertext markup language HTML document including layout tags specifying layout features such as image sizes or positions textual font types sizes and attributes such as bold underscore or so forth paragraph alignment e.g. left aligned right aligned centered justified or so forth line spacing hyperlinks tables frames and so forth. As another example the source document may be in a portable document format PDF . The PDF document may include embedded or integral layout features such as font size type or attributes line spacing hyperlinks page specific features such as page identification column identification and so forth. As another example the source document may be in a native word processing application format such as a Microsoft Word document format. The word processing application format may specify layout features such as font size type or attributes line spacing hyperlinks page specific features such as columns or hard page breaks logical or semantic organizational features such as a table of contents index or so forth. As another example the source document may be an extensible markup language XML document and may include layout features such as font size type or attributes hyperlinks a logical or semantic organizational schema or so forth. The content of the source document may include textual content graphical content such as images audio content audiovisual content or so forth.

The source document is processed by a converter such as an illustrated XML converter that outputs a representation of the source document that separates content and layout information the latter being stored or represented by layout metadata including positional tags indicating positions of paragraphs sections headings or other components in the document. The representation of the source document includes the content and layout metadata that is sufficient for a rendering program to render the content in a layout that substantially conforms with the layout of the source document . The converter is selected or constructed to process a range of formats that are intended to be annotated such as HTML PDF and word processing application formats. In the following examples the XML converter is used which outputs the entry level tagged document in an XML format. However other types of structured or tagged formats that separate or distinguish content and layout information may also be used such as standard generalized markup language SGML or HTML.

The conversion of the original source document to the content plus layout metadata representation optionally includes various processing steps depending on the format of the source document e.g. PDF or HTML or so forth a priori assumed regularities or features in the source documents being annotated e.g. in some applications it may be known a priori that all source documents are newspaper articles having certain layout commonalities . The converter may employ suitable format conversion tools such as existing PDF to HTML converters ad hoc collection xslt stylesheets machine learning conversion tools or so forth. Additional processing optionally performed by the converter includes operations which exploit image extraction capabilities for example by aligning PDF to HTML bounding boxes for images with URL attributes in charge of extracting the actual image content or clean up operations such as removing empty nodes. In the illustrated embodiment in which the representation is in XML each layout element is suitably delineated as a node of the XML representation. Some examples of suitable layout elements include the entire source document a chapter of the source document a paragraph of the source document a section of the source document a page of the source document a title of the source document a column of the source document an image of the source document or so forth.

The layout metadata generated by the converter includes positional tags. Each positional tag is a unique identifier of a layout element. For example each heading each section each paragraph and so forth is assigned a positional tag. In the illustrated embodiment the XML converter enriches each layout element delineating node with a unique at document level and persistent positional tag that identifies the position of the node in the layout of the source document . Such positional tags can be created for example by using the generate id method of existing xslt processors. In the illustrated embodiment which uses an XML output the content plus layout metadata representation has a decorated structure tree format that is a sequence of pages embedding any number of text or image elements having the following general structure 

The content plus layout metadata representation contains sufficient layout metadata such that it can be rendered with a layout substantially comporting with the layout of the original source document . By substantially comporting it is to be understood that the rendering is a substantially accurate representation of the original layout but that there may be some deviation from of the rendering from the original layout of the source document . Such deviations may be due for example to the source document including a layout characteristic that is not supported or are inexactly supported by the converter . For example the converter may not support certain fonts used in the original layout or may have a more coarse spatial resolution compared with the original layout or so forth. The positional tags of the layout metadata are used to link annotations with corresponding positions in the rendering. Thus once an annotation is created it is assigned or associated with the positional tag or tags of the portion or portions of the layout to which the annotation relates. During subsequent rendering the annotation can therefore be properly placed in the rendering based on the assigned or associated positional tag or tags.

The rendering will typically be performed responsive to a user locating an annotation of interest and requesting that the source document be displayed. Rather than displaying the source document the representation is rendered. The rendering substantially comports with the layout of the original source document and the positional tags assigned to the annotations enable the annotations to be properly positioned in the rendering. Accordingly the representation should be stored between the annotating and rendering phases for example in a document cache as diagrammatically shown in or alternatively be efficiently regenerated at the time of rendering for example by invoking the converter to create a new instance the representation. Storing the representation in the document cache may be difficult or impossible or improper for some applications due for example to storage space limitations copyright infringement concerns or so forth. If the regeneration approach is used then the converter should be a deterministic converter that produces the same layout metadata including the same set of positional tags each time the converter is invoked respective to the source document .

With continuing reference to the content plus layout metadata representation is used for annotation. In two example annotation pipelines are illustrated however the number of annotation pipelines can be one two three four five or more. In the annotation pipeline is a semantic annotation pipeline while the annotation pipeline is an image classification pipeline. However other annotation pipelines or combinations of annotation pipelines can be used such as one two three or more semantic annotation pipelines one two three or more image classification pipelines or so forth. Moreover other types of annotation pipelines besides semantic and image classification pipelines can be used. For example it is contemplated to include an audio classifier that classifies audio content for example by type e.g. musical content narrative or talking content nature sounds and so forth or an audiovisual content classifier or so forth.

Referencing the example semantic annotation pipeline an optional pre processor optionally pre processes the content plus layout metadata representation to comport with the input format of the pipeline . For example to facilitate semantic processing of textual content the pre processor may segment textual elements into paragraphs or reconstruct a sequence of textual elements according to their reading order. In order to preserve the capacity to track layout context of the content through the annotation pipeline the pre processor optionally decorates the resulting second level structure with additional or updated temporary Pos Tag ids. For instance if several text nodes of the entry level representation are grouped by the pre processor into a new paragraph node then an additional Pos Tag ids attribute is associated by the pre processor with the new paragraph node. The pre processor suitably assigned as the value of this new Pos Tag ids attribute a list or other grouping of the Pos Tag ids values of the constituent text nodes.

The output of the pre processor is typically the same format as the representation. In the illustrated example the representation and the output of the pre processor are both in XML format. The output of the pre processor is input to the annotation pipeline . The optional pre processor is specific to the annotation pipeline and conditions or prepares the data for the annotation pipeline. There can be as many different second level harmonization processes as they are different annotation pipelines. If the content plus layout metadata representation is already in a suitable format for input to a particular annotation pipeline as is the case for the example image classification pipeline then the pre processor is suitably omitted.

With continuing reference to the semantic annotation pipeline the representation after pre processing by the optional pre processor is processed by a text extractor that extracts text portions such as sentences paragraphs sections or so forth for input to a semantic annotator . The semantic annotator can employ substantially any type of semantic processing to determine or construct semantic annotations for labeling cataloging or otherwise annotating the received textual content. The semantic annotator may for example include or directly or indirectly operatively access a tokenizer a parser one or more general or topic specific semantic content analysis components one or more grammars or lexicons an annotation ontology or so forth. If for example the semantic annotator is intended to classify medical papers and publications then the annotator may utilize an ontology identifying classes of semantic annotations of potential interest such as author title medical keywords medical device names and so forth. The semantic annotator may be fully autonomous or may be interactive involving for example the input of a human annotator domain expert or so forth.

The extractor keeps track of the positional tags associated with the content such as sentences paragraphs sections or so forth that it sends to the annotator . An annotations merger receives the annotations and assigns or associates the appropriate positional tag of the layout metadata with each annotation. In some cases the content may be a pre processed grouping such as the aforementioned paragraph generated by the pre processor in this case the annotation is associated by the annotations merger with a positional tag comprising the list or other grouping of Pos Tag ids values of the constituent text nodes so that the paragraph annotation is properly associated with the text nodes that make up the annotated paragraph. The annotations merger optionally performs other processing. For example if the annotation employs a schema for the extracted annotations labeled as an example herein as the ExtractedData XML schema then the annotations merger adapts the annotation into or modifies the annotation to comport with the ExtractedData annotations schema.

The image classification pipeline operates in similar fashion. In the illustrated example the image classification pipeline operates directly on the entry level representation without pre processing. An images extractor extracts images for classification while keeping track of the positional tags of the images sent for classification. An image classifier determines an image classification for each input image. The image classification serves as the annotation of the image. The image classifier can use substantially any suitable image classification approach such as analyzing edge features machine learning based on clustering of feature vectors techniques employing principal components analysis PCA or so forth. An annotations merger operates similarly to the annotations merger to receive each image classification annotation and the positional tag of the corresponding image and to assign or associate the positional tag of the image with the image classification annotation.

Annotations collected within instances of the ExtractedData schema are optionally further transformed and enriched by an annotations content compiler which may for example combine the positionally tagged annotations from the pipelines and the resulting annotations are stored as a set of annotations in accordance with a suitable format ontology schema or other representation. For example the expression of such annotations in resource description framework RDF format would call for a rdf about attribute pointing to annotated resource Entry Level URL and Pos Tag Ids values. Such an architecture can be extended to any transformation or enrichment processing of the annotations provided the stored set of annotations preserves the Pos Tag ids and hence the ability to retrieve the document layout context of the annotation.

With continuing reference to in a typical cataloging application the annotation system is applied to a large number of different source documents to be cataloged. Each source document is processed by the annotation system to generate a corresponding set of annotations with positional tags and linked to the source document by a uniform resource locator URL or other pointer. Alternatively the content plus layout metadata representation is stored in the optional document cache and the corresponding set of annotations includes a URL pointing to the stored representation. In cataloging applications such processing is typically applied to a large number of source documents such that a substantial catalog is generated. The source documents themselves may be stored on a website of the Internet in different websites of the Internet for example in the case of an Internet search engine application in data storage facilities of a corporate network or so forth.

With reference to an example document visualizer is invoked for viewing a document that has been annotated by the annotation system of . The catalog of annotated documents is suitably accessed by a user to identify a document of interest based on the document annotations. In it is assumed that the representation of each source document is not stored that is the cache of is omitted . The user selects a document annotation of interest . Selection of the annotation of interest may be made for example using a catalog search interface program operated in conjunction with a networked personal computer handheld personal data assistant PDA cellular telephone or other user interfacing device not shown . A URL or other pointer to the document containing the annotation of interest is also retrieved from the set of annotations . Since the initial representation was not stored the document visualizer invokes the XML converter to generate a retrieval representation of the source document . Because the converter is a deterministic converter that produces the same results for the same input each time it is invoked it follows that the retrieval representation includes retrieval content that is identical with the content of the initial representation and similarly the retrieval representation includes retrieval layout metadata that is identical with the layout metadata of the initial representation . Advantageously since the annotations of the set of annotations are linked to the layout via the positional tags or groups of positional tags that are generated by the converter the remainder of the processing shown in is suitably not re run. Although not shown in it will be appreciated that if the cache of is available then rather than regenerating the retrieval representation using the converter it can instead be retrieved from the cache . 

A document visualization application programming interface API or other visualization component generates a rendering of the retrieval representation that is suitably displayed on a monitor laptop computer screen or other display device not shown or printed by a printer not shown or so forth. The retrieval layout metadata is sufficient for the visualization API to render the content in a layout that substantially conforms with the layout of the original source document . In some embodiments the visualization API translates the layout metadata into a scalable vector graphics SVG description or using a PDF oriented API however other visualization algorithms can be used.

An annotations overlayer overlays at least the annotation of interest on the generated rendering. Optionally the annotations overlayer also overlays other annotations such as annotations that are positionally nearby in the document layout or all annotations in the document or so forth. Before overlaying an annotation an optional annotation offset calculator may perform pre processing to refine the position of the annotation in the rendering. The refinement can be computed for example based on geometrical properties encoded in the retrieval representation in order to display the annotation on the right page and or the right context zone. If no annotation offset calculator is employed then the annotation is rendered in conjunction with the sentence paragraph section or other layout element identified by the positional tag as being associated with the annotation.

The annotations overlayer renders the annotation or annotations in conjunction with the rendering of the retrieval content of the retrieval representation with a layout based on the retrieval layout metadata of the retrieval representation and the assigned positional tag of the annotation along with any positional refinement computed by the optional annotation offset calculator . The annotation can be rendered for example by highlighting underscoring enclosing in a box or otherwise marking the associated layout element and displaying the annotation in a suitable manner such as in the margin of the page containing the associated layout element or as a bubble that appears when a mouse pointer is hovered over the associated layout element or so forth. In other annotation rendering approaches a character string or a set of characters strings associated with the annotation are highlighted underscored or otherwise marked. The marked text can be localized by the annotations offset calculator by matching string content of the annotation with corresponding string content in the associated layout element identified by the positional tag. In the case of image classification annotations the classification of the image can be displayed in the margin of the image or can pop up as a small read only dialog window when a mouse pointer is hovered over the corresponding image.

It will be appreciated that various of the above disclosed and other features and functions or alternatives thereof may be desirably combined into many other different systems or applications. Also that various presently unforeseen or unanticipated alternatives modifications variations or improvements therein may be subsequently made by those skilled in the art which are also intended to be encompassed by the following claims.

