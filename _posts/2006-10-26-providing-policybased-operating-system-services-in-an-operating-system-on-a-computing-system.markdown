---

title: Providing policy-based operating system services in an operating system on a computing system
abstract: Methods, apparatus, and products are disclosed for providing policy-based operating system services in an operating system on a computing system. The computing system includes at least one compute node. The compute node includes an operating system that includes a kernel and a plurality of operating system services of a service type. Providing policy-based operating system services in an operating system on a computing system includes establishing, on the compute node, a kernel policy specifying one of the operating system services of the service type for use in the operating system, and accessing, by the kernel, the specified operating system service. The computing system may also be implemented as a distributed computing system that includes one or more operating system service nodes. One or more of the operating system services may be distributed among the operating system service nodes.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08713582&OS=08713582&RS=08713582
owner: International Business Machines Corporation
number: 08713582
owner_city: Armonk
owner_country: US
publication_date: 20061026
---
This application is related to U.S. patent application Ser. No. 11 553 077 entitled PROVIDING POLICY BASED OPERATING SYSTEM SERVICES IN A HYPERVISOR ON A COMPUTING SYSTEM filed on Oct. 26 2006 U.S. patent application Ser. No. 11 553 095 entitled PROVIDING POLICY BASED OPERATING SYSTEM SERVICES IN AN OPERATING SYSTEM ON A COMPUTING SYSTEM filed on Oct. 26 2006 and U.S. patent application Ser. No. 11 553 101 entitled PROVIDING POLICY BASED APPLICATION SERVICES TO AN APPLICATION RUNNING ON A COMPUTING SYSTEM filed on Oct. 26 2006 all of which are incorporated by reference herein.

The field of the invention is data processing or more specifically methods apparatus and products for providing policy based operating system services in an operating system on a computing system.

The development of the EDVAC computer system of is often cited as the beginning of the computer era. Since that time computer systems have evolved into extremely complicated devices. Today s computers are much more sophisticated than early systems such as the EDVAC. Computer systems typically include a combination of hardware and software components application programs operating systems processors buses memory input output devices and so on. As advances in semiconductor processing and computer architecture push the performance of the computer higher and higher more sophisticated computer software has evolved to take advantage of the higher performance of the hardware resulting in computer systems today that are much more powerful than just a few years ago.

One area in which computer software has evolved to take advantage of high performance hardware is the operating system. Early computers lacked any form of operating system. A system administrator loaded an application that had sole use of the machine. To operate the computer an application had to directly access and control the computer hardware. Later computers came with libraries of support code which were linked into an application to assist in operations such as input and output. These libraries were the genesis of the modern day operating system. The computers however still ran only a single application at a time. Modern operating systems are capable of running multiple applications simultaneously. These modern operating systems also provide applications with abstractions of the computer hardware to simplify application development and aid the ability to port applications from one hardware platform to another.

The kernel is the central part in most computer operating systems which manages the system s resources and the communication between hardware and software components. As a basic component of an operating system a kernel provides abstraction layers for hardware especially for memory processors and I O that allows hardware and software to communicate. The kernel also makes these facilities available to applications and other operating system services through inter process communication mechanisms and system calls.

These kernel tasks are performed differently for different kernels depending on their design and implementation. In a monolithic kernel all operating system services reside in and are executed using the same memory area. Because a monolithic kernel attempts to execute all the code in the same address space monolithic kernel architectures are easier to design and implement than other solutions and are extremely efficient if well written. The main disadvantages of monolithic kernels are the dependencies between system components. Large kernels become very difficult to maintain and a bug in one portion of the kernel may crash the entire system.

In a microkernel architecture the kernel provides simple abstractions over the hardware with a set of primitives or system calls to implement minimal operating system services such as for example memory management multitasking and inter process communication. Other services including those normally provided by the kernel such as for example networking are implemented in user space programs that typically have their own address space. Microkernels are easier to maintain than monolithic kernels but the large number of system calls and context switches may slow down the system.

Regardless of the kernel architecture used to implement an operating system the set of operating system services provided in current operating systems are generally fixed when the operating system is installed. That is the operating system utilizes the same memory management algorithm the same I O scheduling algorithm the same networking algorithm and so on without regard to the applications that run on the hardware managed by the operating system. Often however one application may efficiently utilize computer resources when using one operating system service while another application inefficiently utilizes computer resources when using the same operating system service. For example an operating system service that provides I O scheduling in the operating system may result in efficient use of computer resources for an application that are I O intensive and result in an inefficient use of computer resources for an application that is not I O intensive. Because current operating systems provide the same operating system services without regard to applications current operating systems often do not efficiently manage the interaction between applications and the computer hardware. Readers will therefore appreciate that room for improvement exists in the manner in which operating system service are provided in an operating system.

Methods apparatus and products are disclosed for providing policy based operating system services in an operating system on a computing system. The computing system includes at least one compute node. The compute node includes an operating system that includes a kernel and a plurality of operating system services of a service type. Providing policy based operating system services in an operating system on a computing system includes establishing on the compute node a kernel policy specifying one of the operating system services of the service type for use in the operating system and accessing by the kernel the specified operating system service.

The computing system may also be implemented as a distributed computing system that includes one or more operating system service nodes. One or more of the operating system services may be distributed among the operating system service nodes. The kernel policy may also specify an operating system service node that is to provide the specified operating system service and accessing by the kernel the specified operating system service may include accessing by the kernel the specified operating system service of the operating system service node.

The foregoing and other objects features and advantages of the invention will be apparent from the following more particular descriptions of exemplary embodiments of the invention as illustrated in the accompanying drawings wherein like reference numbers generally represent like parts of exemplary embodiments of the invention.

Exemplary methods apparatus and products for providing policy based operating system services in an operating system on a computing system according to embodiments of the present invention are described with reference to the accompanying drawings beginning with . sets forth a network diagram illustrating an exemplary computing system for providing policy based operating system services in an operating system according to embodiments of the present invention. The exemplary computing system of includes a compute node . The compute node includes an operating system . The operating system includes a kernel and a plurality of operating system services of a service type. The exemplary computing system of operates generally to provide policy based operating system services in an operating system according to embodiments of the present invention by establishing on the compute node a kernel policy specifying one of the operating system services of the service type for use in the operating system and accessing by the kernel the specified operating system service.

In the example of the exemplary computing system is implemented as a distributed computing system. A distributed computing system is a computing system that uses two or more network connected computing devices to accomplish a common task. The distributed computer system of includes the compute node operating system service nodes and an administration node connected together for data communications through network . The compute node connects to network through wireline connection . The operating system service node connects to network through wireline connection . The operating system service node connects to network through wireline connection . The operating system service node connects to network through wireline connection . The administration node connects to network through wireline connection . The common task in the distributed computing system of includes providing a policy based operating system services in an operating system according to embodiments of the present invention.

In the example of the compute node is implemented using one of the nodes installed in a computer rack . Each node of is a processing device that executes computer program instructions. Each node includes one or more computer processors and computer memory operatively coupled to the computer processors. The nodes of are implemented as blade servers installed in server chassis that are in turn mounted on the computer rack . Readers will note however that implementing the nodes as blade servers is for explanation and not for limitation. In fact the nodes of may be implemented as network connected workstations computers connected together to form a computer cluster computing devices in a parallel computer or any other implementation as will occur to those of skill in the art.

In the example of the compute node is a node configured with a kernel and a kernel policy useful in providing policy based operating system services in an operating system on a computing system according to embodiments of the present invention. Typically the kernel policy is established on the compute node to optimize the utilization of node resources by an application configured for execution on the node. The application is a set of computer program instructions implementing user level data processing. The application may be a stand alone application in which all the computer program instructions of the application are executed on a single compute node or the application may be a distributed application in which portions of the computer program instructions are executed serially or in parallel with other portions of the computer program instructions being executed on other compute nodes.

In the exemplary system of the operating system controls the execution of the application on the compute node . The operating system of is system software that manages the hardware and software resources of a processing device such as the compute node . The operating system performs basic tasks such as for example controlling and allocating memory prioritizing the processing of instructions controlling input and output devices facilitating networking and managing files.

The application of accesses resources provided by the operating system through the kernel . The kernel is the core component of the operating system that manages the system s resources and the communication between hardware and software components. The kernel provides software applications with abstraction layers for hardware that allow hardware and software to communicate. The kernel makes these abstraction layers available to user level applications and other operating system components through inter process communication mechanisms and a kernel application programming interface API .

In the exemplary system of the operating system is implemented using a microkernel architecture. That is the kernel includes implementations of basic types of operating system services such as memory management process management and inter process communication. Other operating system services such as for example networking interrupt handling I O scheduling device drivers file system services and so on however are implemented using separate operating system components each component having a thread of execution distinct from the kernel . The kernel accesses these operating system services using inter process communication or a system call to the service s API . In the exemplary system of each operating system service is system software that either implements a service type not implemented in the kernel itself or implements a specialized version of a service type already provided by the kernel . For explanation consider for example that the kernel of does not implement any services of the file system service type. In such an example one of the operating system services may implement a file system service for the Unix File System while a second operating system service may implement a file system service for the Reiser File System. Depending on the kernel policy configured in the operating system the kernel would provide file system services using either the Unix File System or the Reiser File System. Consider further for example that the kernel of implements a generic memory management service. In such an example one of the operating system services may implement a memory management service tailored for intensive I O operations that the kernel may use instead of the generic memory management algorithm implemented in the kernel depending on the configuration of the kernel policy .

Each operating system service of provides an operating system service of a particular service type. The types of service provided by the operating system services may include for example task schedulers file systems memory management device drivers I O schedulers interrupt signal handling security job submission tty handling and so on. The operating system services for services of the same service type have a same application programming interface. That is the service API for each service of a particular service type have the same set of member methods and parameters that the kernel may use to access the operating system services . Because the services of each service type have the same service API the kernel may access the operating system service specified in the kernel policy using the same application programming interface regardless of which operating system service is specified in the kernel policy for the particular service type.

In the exemplary system of one or more of the operating system services are distributed among the operating system service nodes . That is the computer program instructions for implementing one or more of the operating system services reside on the operating system service nodes . The corresponding operating system services for each of the services may be implemented as copies of the computer program instructions implementing each of the services . The corresponding operating system services for each of the services may also be implemented using a data communications subsystem that accesses the operating system services on the operating system service nodes . Examples of such a data communication subsystem may include a web services engine a CORBA object on the compute node that accesses the operating system services on the operating system service nodes using remote procedure calls use of an MPI library or any other implementation as will occur to those of skill in the art.

 CORBA refers to the Common Object Request Broker Architecture a computer industry specifications for interoperable enterprise applications produced by the Object Management Group OMG . CORBA is a standard for remote procedure invocation first published by the OMG in 1991. CORBA can be considered a kind of object oriented way of making remote procedure calls although CORBA supports features that do not exist in conventional remote procedure calls. CORBA uses a declarative language the Interface Definition Language IDL to describe an object s interface. Interface descriptions in IDL are compiled to generate stubs for the client side and skeletons on the server side. Using this generated code remote method invocations effected in object oriented programming languages such as C or Java look like invocations of local member methods in local objects.

 MPI refers to Message Passing Interface a prior art parallel communications library a module of computer program instructions for data communications on parallel computers. Examples of prior art parallel communications libraries that may be useful for providing policy based operating system services in an operating system on a computing system according to embodiments of the present invention include MPI and the Parallel Virtual Machine PVM library. PVM was developed by the University of Tennessee The Oak Ridge National Laboratory and Emory University. MPI is promulgated by the MPI Forum an open group with representatives from many organizations that define and maintain the MPI standard. MPI at the time of this writing is a de facto standard for communication among nodes running a parallel program on a distributed memory parallel computer. This specification sometimes uses MPI terminology for ease of explanation although the use of MPI as such is not a requirement or limitation of the present invention.

In the example of the operating system service nodes are implemented using the nodes installed in the computer rack . Each operating system service node is a node that provides operating system services to a kernel installed on a compute node. Each operating system service node may provide one or more operating system services to one or more kernels running on one or more compute nodes. In distributed computing systems with many nodes however each operating system service node typically provides only one operating system service due to the abundance of nodes in the system. In the example of the operating system service node provides operating system service to kernel the operating system service node provides operating system service to kernel and the operating system service node provides operating system service to kernel .

To provide operating system services to the kernel each operating system service node of has installed upon it an operating system service server. The operating system service node includes service server the operating system service node includes service server and the operating system service node includes service server . Each service server is a software component that provides an operating system service to a kernel in response to a request sent by a kernel of an operating system or in response to receiving an instruction from a system administrator. Each operating system service server may provide an operating system service to a kernel by transmitting the computer program instructions implementing the requested operating system service to the kernel and allowing the compute node on which the kernel is installed to execute the computer program instructions. Each operating system service server may also provide an operating system service by instructing the operating system service node of the server to execute the computer program instructions implementing the requested operating system service. The kernel may communicate with the operating system service servers using web services calling member methods of a CORBA object use of an MPI library or any other data communications implementation as will occur to those of skill in the art.

As mentioned above the operating system includes two or more operating system services for a particular service type. For example the operating system may include two different implementations of file system services for use by the kernel depending on the configuration of the exemplary system . In another example the operating system may include two different implementations of memory management services depending on the needs of the application . Having more than one operating system service for a particular service type advantageously provides the flexibility to optimize the operating system s service algorithms according to the hardware and software environment that the operating system manages.

The kernel policy of is a table that maps one of the operating system services to a type of operating system service used by the kernel . The kernel uses the kernel policy to identify which operating system service to use in the operating system for a particular service type. Regardless of whether the operating system services reside locally on the compute node or are distributed on other nodes such as operating system service nodes the kernel policy specifies one of the operating system services of a particular service type for use in the operating system . When the operating system service specified in the kernel policy is distributed on one of the operating system service nodes the kernel policy also specifies an operating system service node that is to provide the specified operating system service. Using the kernel policy the kernel provides policy based operating system services in an operating system on a computing system according to embodiments of the present invention by accessing the operating system service specified in the policy .

Often the kernel policy will not specify an operating system service for one of the service types used in the operating system or the kernel will be unable to access the operating system service specified in the policy . In the example of the operating system therefore includes a default operating system service . The default operating system service is an operating system service of a particular service type that the kernel may use when the kernel policy does not specify an operating system service for the particular service type or the kernel is unable to access the operating system service specified in the policy . Consider for example that the kernel policy does not specify a file system service for use by the operating system that the kernel does not implement a file system service itself and that the default operating system service implements the Unix File System. Because the kernel does not implement a file system service and no file system service is specified in the kernel policy the kernel in such an example will use the default operating system service implementing the Unix File System. The kernel may access the default operating system service using inter process communication or the default operating system service API .

In the example of the distributed computing system is configured by a system administrator through an administration node . The administration node of is a computing device that administers the configuration of the computing system of . The administration node may be implemented as one of the nodes installed in the rack a workstation network connected to the nodes or any other computer as will occur to those of skill in the art.

In the exemplary system of the administration module has installed upon it an administration module . The administration module is a software component through which a system administrator configures the exemplary computer system . The administration module allows a system administrator to configure the exemplary computer system by providing a user interface for the system administrator to interact with the administration module and by configuring operating system and the application provided by the system administrator on one or more compute nodes such as for example the compute node . The administration module includes a set of computer program instructions for providing policy based operating system services in an operating system on a computing system by establishing on the compute node a kernel policy specifying one of the operating system services of a service type for use in the operating system according to embodiments of the present invention.

The arrangement of servers and other devices making up the exemplary system illustrated in are for explanation not for limitation. Data processing systems useful according to various embodiments of the present invention may include additional servers routers other devices and peer to peer architectures not shown in as will occur to those of skill in the art. Networks in such data processing systems may support many data communications protocols including for example Transmission Control Protocol TCP Internet Protocol IP HyperText Transfer Protocol HTTP Wireless Access Protocol WAP Handheld Device Transport Protocol HDTP the MPI protocol and others as will occur to those of skill in the art. Various embodiments of the present invention may be implemented on a variety of hardware platforms in addition to those illustrated in . For example the computing system useful for providing policy based operating system services in an operating system according to embodiments of the present invention may also be implemented as a parallel computer such as for example IBM s BlueGene L.

Providing policy based operating system services in an operating system on a computing system in accordance with the present invention is generally implemented with computers that is with automated computing machinery. In the system of for example all the nodes are implemented to some extent at least as computers. For further explanation therefore sets forth a block diagram of automated computing machinery comprising an exemplary compute node useful in providing policy based operating system services in an operating system on a computing system according to embodiments of the present invention. The compute node of includes at least one computer processor or CPU as well as random access memory RAM which is connected through a high speed memory bus and bus adapter to processor and to other components of the compute node.

Stored in RAM is an application and an operating system that includes a kernel a kernel policy operating system services and default operating system service . As mentioned above the application is a set of computer program instructions implementing user level data processing. The kernel policy of is a table that maps one of the operating system services to a type of operating system service used by the kernel . The kernel the operating system services and the default operating system service illustrated in are software components that is computer program instructions that operate as described above with reference to regarding the compute node. Operating systems that may be improved for providing policy based operating system services in an operating system on a computing system in accordance with the present invention may include UNIX LINUX MICROSOFT NT IBM s AIX IBM s i OS and others as will occur to those of skill in the art. The application and the operating system including the kernel the kernel policy the operating system services and the default operating system service in the example of are shown in RAM but many components of such software typically are stored in non volatile memory also for example on a disk drive .

The exemplary compute node of includes bus adapter a computer hardware component that contains drive electronics for high speed buses the front side bus and the memory bus as well as drive electronics for the slower expansion bus . Examples of bus adapters useful in compute nodes useful according to embodiments of the present invention include the Intel Northbridge the Intel Memory Controller Hub the Intel Southbridge and the Intel I O Controller Hub. Examples of expansion buses useful in compute nodes useful according to embodiments of the present invention may include Peripheral Component Interconnect PCI buses and PCI Express PCIe buses.

Although not depicted in the exemplary compute node of the bus adapter may also include drive electronics for a video bus that supports data communication between a video adapter and the other components of the compute node . does not depict such video components because a compute node is typically implemented as a blade server installed in a server chassis or a node in a parallel computer with no dedicated video support. Readers will note however that a compute node useful in embodiments of the present invention may include such video components.

The exemplary compute node of also includes disk drive adapter coupled through expansion bus and bus adapter to processor and other components of the exemplary compute node . Disk drive adapter connects non volatile data storage to the exemplary compute node in the form of disk drive . Disk drive adapters useful in compute nodes include Integrated Drive Electronics IDE adapters Small Computer System Interface SCSI adapters and others as will occur to those of skill in the art. In addition non volatile computer memory may be implemented for a compute node as an optical disk drive electrically erasable programmable read only memory so called EEPROM or Flash memory RAM drives and so on as will occur to those of skill in the art.

The exemplary compute node of includes one or more input output I O adapters . I O adapters in compute node implement user oriented input output through for example software drivers and computer hardware for controlling output to display devices such as computer display screens as well as user input from user input devices such as keyboards and mice. Although not depicted in the example of compute nodes in other embodiments of the present invention may include a video adapter which is an example of an I O adapter specially designed for graphic output to a display device such as a display screen or computer monitor. A video adapter is typically connected to processor through a high speed video bus bus adapter and the front side bus which is also a high speed bus.

The exemplary compute node of includes a communications adapter for data communications with other computers and for data communications with a data communications network . Such data communications may be carried out serially through RS 232 connections through external buses such as a Universal Serial Bus USB through data communications networks such as IP data communications networks and in other ways as will occur to those of skill in the art. Communications adapters implement the hardware level of data communications through which one computer sends data communications to another computer directly or through a data communications network. Examples of communications adapters useful for providing policy based operating system services in an operating system on a computing system according to embodiments of the present invention include modems for wired dial up communications IEEE 802.3 Ethernet adapters for wired data communications network communications and IEEE 802.11b adapters for wireless data communications network communications.

Although is discussed with reference to an exemplary compute node readers will note that automated computing machinery comprising exemplary operating system service nodes and exemplary administration nodes useful in providing policy based operating system services in an operating system on a computing system according to embodiments of the present invention are similar to the exemplary compute node of . That is such exemplary operating system service nodes and exemplary administration nodes include one or more processors bus adapters buses RAM communications adapters I O adapters disk drive adapters and other components similar to the exemplary compute node of as will occur to those of skill in the art.

For further explanation sets forth a flow chart illustrating an exemplary method for providing policy based operating system services in an operating system on a computing system according to embodiments of the present invention. The computing system includes at least one compute node. The compute node includes an operating system. The operating system includes a kernel and a plurality of operating system services of a service type.

The method of includes establishing on the compute node a kernel policy specifying one of the operating system services of a service type for use in the operating system. The kernel policy of is a table that maps an operating system service to a type of operating system service used by the kernel. In the example of each record of the kernel policy identifies which operating system service to use in the operating system for a particular service type. To identify which operating system service to use in the operating system for a particular service type each record of the kernel policy includes an operating system service identifier and a service type . Examples types of operating system services that may be specified in the kernel policy may include task schedulers file systems memory management device drivers I O schedulers interrupt signal handling security job submission tty handling and so on. For an example of a kernel policy useful in providing policy based operating system services in an operating system on a computing system according to embodiments of the present invention consider the following table 

In the exemplary kernel policy of Table associating the value UFS Service for the operating system service identifier with the value File System for the service type specifies that the kernel use the operating system service that implements the Unix File System when the kernel needs to access a file system service type. Associating the value Round Robin MM Algorithm for the operating system service identifier with the value Memory Management for the service type specifies that the kernel use the operating system service that implements a round robin algorithm when the kernel need to access a memory management service type. Associating the value Limited I O Access for the operating system service identifier with the value I O Scheduler for the service type specifies that the kernel use the operating system service that implements limited I O access when the kernel uses a I O scheduler service type. Readers will note that exemplary kernel policy above is for explanation and not for limitation. Other kernel policies as will occur to those of skill in the art may also be useful in providing policy based operating system services in an operating system on a computing system according to embodiments of the present invention.

In the method of establishing on the compute node a kernel policy specifying one of the operating system services of a service type for use in the operating system may be carried out by receiving in an administration module from a system administrator a mapping between the operating system services and the service types and creating by the administration module the kernel policy on the compute node according to the mappings. The administration module is a software component that the system administration may use to configure the computing system that includes the compute node. The particular compute node on which the administration module creates the kernel policy is typically specified by the system administrator through a user interface provided by the administration module. The administration module may be installed directly on the compute node or any other computer network connected to the compute node. The administration module may create the kernel policy on the compute node through a data communication connection implemented using shared memory space a CORBA framework a JTAG network web services a MPI library or any other data communication implementation as will occur to those of skill in the art.

 JTAG is the usual name used for the IEEE 1149.1 standard entitled Standard Test Access Port and Boundary Scan Architecture for test access ports used for testing printed circuit boards using boundary scan. JTAG is so widely adapted that at this time boundary scan is more or less synonymous with JTAG. JTAG is used not only for printed circuit boards but also for conducting boundary scans of integrated circuits and is also useful as a mechanism for debugging embedded systems providing a convenient back door into the system. Using a JTAG network the administration module may efficiently configure processor registers and memory in the compute node for use in providing policy based operating system services in an operating system on a computing system according to embodiments of the present invention.

The method of includes specifying by the kernel a service type for use in the operating system. The kernel may specify a service type for use in the operating system according to the method of by including an instruction that contains the service type in the computer program instructions implementing the kernel at a particular point along the flow of execution. For example at a particular point along the flow of execution for the kernel the computer program instructions implementing the kernel may contain machine code representing the following instruction 

In the exemplary instruction above the function Execute Service is a function that instructs the kernel to execute the operating system service specified in the kernel policy for the service type having a value of File System. Including such an exemplary instruction in the computer program instructions implementing the kernel specifies that the operating system use a service of the file system service type. Readers will note that the exemplary instruction above is for explanation and not for limitation. Other instructions as will occur to those of skill in the art may also be useful in providing policy based operating system services in an operating system on a computing system according to embodiments of the present invention.

The method of includes retrieving by the kernel the specified operating system service from the kernel policy in dependence upon the specified service type . Retrieving by the kernel the specified operating system service from the kernel policy in dependence upon the specified service type according to the method of may be carried out by looking up in the kernel policy the operating system service identifier associated with the service type having the same value as the specified service type .

The method of also includes determining by the kernel whether the kernel is able to access the specified operating system service . Determining by the kernel whether the kernel is able to access the specified operating system service according the method of may be carried out by calling a function of the API for the specified operating system service . If the function call returns an error to the kernel then the kernel is unable to access the specified operating system service. If the function call does not return an error to the kernel then the kernel is able to access the specified operating system service. As mentioned above the operating system services for the same service type may have a same application programming interface. The APIs for each service type may be coded into the computer program instructions implementing the kernel.

The method of includes executing by the compute node computer program instructions implementing a default operating system service of the service type when the kernel is unable to access the specified operating system service . Executing by the compute node computer program instructions implementing a default operating system service of the service type according to the method of may be carried out by looking up in a default service table the default operating system service identifier associated with the service type and calling a function of the API for the default operating system service represented by the default operating system service identifier . The default service table is similar to the kernel policy . Each record of the default service table identifies which default operating system service to use in the operating system for a particular service type. Each record of the default service table includes a default operating system service identifier and a service type . Although the default operating system service of is specified in the default service table readers will note that such an embodiment is for explanation and not for limitation. In other embodiments the kernel policy may contain a field that specifies the default operating system service for use in the operating system for a particular service type or the default service for each service type may be coded into the kernel itself.

The method of also includes accessing by the kernel the specified operating system service . Accessing by the kernel the specified operating system service according to the method of may be carried out by calling a function of the API for the specified operating system service . Calling a function of the API for the specified operating system service is for explanation only. In another embodiment an administration module may modify according to the kernel policy entry and exit hooks in the kernel s code so that processor control is transferred from the kernel to the operating system services at the proper points in the kernel s code during the flow of execution. In such an example accessing the specified operating system service for a service type may be carried out simply by executing the computer program instructions implementing the kernel.

As mentioned above operating system services may be distributed among one or more operating system service nodes in a distributed computing system. When the operating system services are distributed among one or more operating system service nodes accessing by the kernel the specified operating system service may be carried out by retrieving from the operating system service node computer program instructions implementing the specified operating system service and executing by the compute node the computer program instructions implementing the specified operating system service as discussed below with reference to . Accessing by the kernel the specified operating system service may also be carried out by requesting by the kernel that the operating system service node perform the specified operating system service and executing by the operating system service node computer program instructions implementing the specified operating system service as discussed below with reference to .

As mentioned above the kernel policy is a table that maps a particular operating system service to a type of operating system service used by the kernel. The kernel policy however may not map an operating system service to each type of service used by the kernel. As such the kernel often identifies whether the kernel policy specifies an operating system service for a particular service type and executes computer program instructions implementing a default operating system service of the specified service type if the kernel policy does not specify an operating system service of the specified service type. For further explanation therefore sets forth a flow chart illustrating a further exemplary method for providing policy based operating system services in an operating system on a computing system according to embodiments of the present invention that includes identifying by the kernel whether the kernel policy specifies an operating system service of the specified service type . In the example of the computing system includes at least one compute node. The compute node includes an operating system. The operating system includes a kernel and a plurality of operating system services of a service type.

The method of is similar to the method of in that the method of includes establishing on the compute node a kernel policy specifying one of the operating system services of the service type for use in the operating system specifying by the kernel a service type for use in the operating system retrieving by the kernel the specified operating system service from the kernel policy in dependence upon the specified service type and accessing by the kernel the specified operating system service . The example of is also similar to the example of in that each record of the kernel policy includes an operating system service identifier and a service type . In addition the example of is similar to the example of in that the example of includes a default service table and each record of the table includes a default operating system service identifier and a service type .

The method of includes identifying by the kernel whether the kernel policy specifies an operating system service of the specified service type . Identifying by the kernel whether the kernel policy specifies an operating system service of the specified service type according to the method of may be carried out by searching the kernel policy for a record having a value for the service type that matches the value for the specified service type . If no record is found then the kernel policy does not specify an operating system service of the specified service type . If a record is found then the kernel policy does specify an operating system service of the specified service type . Readers will note that identifying whether the kernel policy specifies an operating system service of the specified service type by searching the kernel policy for a record having a value for the service type that matches the value for the specified service type is for explanation and not for limitation. In other embodiments of the present invention the kernel policy may contain a record for each service type for use in the operating system. In such embodiments identifying whether the kernel policy specifies an operating system service of the specified service type may be carried out by identifying whether the operating system service identifier for a particular record in the kernel policy contains a NULL value.

The method of also includes executing by the compute node computer program instructions implementing a default operating system service of the specified service type when the kernel policy does not specify an operating system service of the specified service type . Executing by the compute node computer program instructions implementing a default operating system service of the specified service type according to the method of may be carried out by looking up in a default service table the default operating system service identifier associated with the service type and calling a function of the API for the default operating system service represented by the default operating system service identifier . Although the default operating system service of is specified in the default service table readers will note that such an embodiment is for explanation and not for limitation. In other embodiments the kernel policy may contain a field that specifies the default operating system service for use in the operating system for a particular service type or the default service for each service type may be coded into the kernel itself.

As mentioned above operating system services may be distributed among one or more operating system service nodes in a distributed computing system. When the operating system services are distributed among one or more operating system service nodes accessing by the kernel the specified operating system service may be carried out by accessing the specified operating system service of the operating system service node. For further explanation therefore sets forth a flow chart illustrating a further exemplary method for providing policy based operating system services in an operating system on a computing system according to embodiments of the present invention that includes accessing the specified operating system service of the operating system service node. In the example of the computing system includes at least one compute node and one or more operating system service nodes. The compute node includes an operating system. The operating system includes a kernel and a plurality of operating system services of one service type. In the example of one or more of the operating system services are distributed among the operating system service nodes.

The method of is similar to the method of in that the method of includes establishing on the compute node a kernel policy specifying one of the operating system services of the service type for use in the operating system specifying by the kernel a service type for use in the operating system retrieving by the kernel the specified operating system service from the kernel policy in dependence upon the specified service type and accessing by the kernel the specified operating system service . The example of is also similar to the example of in that each record of the kernel policy includes an operating system service identifier and a service type . In the example of however the kernel policy also specifies an operating system service node that is to provide the specified operating system service by including an operating system service node identifier in each record. In the example of the specified operating system service is distributed on one of the operating system service nodes.

In the method of accessing by the kernel the specified operating system service includes accessing the specified operating system service of the operating system service node. Accessing the specified operating system service of the operating system service node according to the method of is carried out by retrieving by the kernel from the operating system service node computer program instructions implementing the specified operating system service . The computer program instructions represent machine code implementing the specified operating system service . Although the computer program instructions of represent machine code such a representation is for explanation and not for limitation. In fact the computer program instructions of may also represent computer program instructions implemented in an assembly language or a high level language such as for example Java.

Retrieving by the kernel from the operating system service node computer program instructions implementing the specified operating system service according to the method of may be carried out by transmitting an operating system service request to a service server on the operating system service node on which the specified operating system service is distributed and receiving from the service server the computer program instructions implementing the specified operating system service. The operating system service request is a request for an operating system service node to provide an operating system service to the kernel. The operating system service request may include the operating system service identifier for the specified operating system service . The kernel may transmit the operating system service request to a service server on an operating system service node and retrieve the computer program instructions using web services by calling a member method of a CORBA object using an MPI library or any other data communications implementation as will occur to those of skill in the art.

Accessing the specified operating system service of the operating system service node according to the method of is also carried out by executing by the compute node the computer program instructions implementing the specified operating system service . Executing by the compute node the computer program instructions implementing the specified operating system service according to the method of may be carried out by scheduling the computer program instructions implementing the specified operating system service for execution on the compute node. As mentioned above the computer program instructions of may represent computer program instructions implemented in an assembly language or a high level language such as for example Java. In such an embodiment executing the computer program instructions implementing the specified operating system service may be carried out by interpreting the computer program instructions into machine code and scheduling the machine code for execution on the compute node.

In the method of accessing the specified operating system service of the operating system service node is carried out by executing the computer program instructions implementing the specified operating system service on the compute node. Accessing the specified operating system service of the operating system service node however may also be carried out by executing the computer program instructions implementing the specified operating system service on the operating system service node. For further explanation therefore sets forth a flow chart illustrating a further exemplary method for providing policy based operating system services in an operating system on a computing system according to embodiments of the present invention that includes executing by the operating system service node computer program instructions implementing the specified operating system service . In the example of the computing system includes at least one compute node and one or more operating system service nodes. The compute node includes an operating system. The operating system includes a kernel and a plurality of operating system services of one service type. In the example of one or more of the operating system services are distributed among the operating system service nodes.

The method of is similar to the method of in that the method of includes establishing on the compute node a kernel policy specifying one of the operating system services of the service type for use in the operating system specifying by the kernel a service type for use in the operating system retrieving by the kernel the specified operating system service from the kernel policy in dependence upon the specified service type and accessing by the kernel the specified operating system service . The example of is also similar to the example of in that each record of the kernel policy includes an operating system service identifier and a service type . In the example of however the kernel policy also specifies an operating system service node that is to provide the specified operating system service by including an operating system service node identifier in each record. In the example of the specified operating system service is distributed on one of the operating system service nodes.

In the method of accessing by the kernel the specified operating system service includes accessing the specified operating system service of the operating system service node. Accessing the specified operating system service of the operating system service node according to the method of is carried out by requesting by the kernel that the operating system service node perform the specified operating system service and receiving by the operating system service node the service performance request . Requesting by the kernel that the operating system service node perform the specified operating system service may be carried out by transmitting a service performance request to a service server on the operating system service node on which the specified operating system service is distributed. The service performance request is a request for an operating system service node to perform an operating system service for the kernel. The service performance request may include the operating system service identifier for the specified operating system service . The kernel may transmit the service performance request to a service server on an operating system service node using web services by calling a member method of a CORBA object using an MPI library or any other data communications implementation as will occur to those of skill in the art.

Accessing the specified operating system service of the operating system service node according to the method of is also carried out by executing by the operating system service node computer program instructions implementing the specified operating system service . The computer program instructions represent machine code implementing the specified operating system service . Executing by the operating system service node computer program instructions implementing the specified operating system service according to the method of may be carried out by scheduling the computer program instructions implementing the specified operating system service for execution on the operating system service node. After executing the computer program instructions the service server on the operating system service node may transmit a message to the kernel indicating whether the execution was successful.

In view of the explanations set forth above in this document readers will recognize that providing policy based operating system services in an operating system on a computing system according to embodiments of the present invention provides the following benefits 

Exemplary embodiments of the present invention are described largely in the context of a fully functional computing system for providing policy based operating system services in an operating system. Readers of skill in the art will recognize however that the present invention also may be embodied in a computer program product disposed on signal bearing media for use with any suitable data processing system. Such signal bearing media may be transmission media or recordable media for machine readable information including magnetic media optical media or other suitable media. Examples of recordable media include magnetic disks in hard drives or diskettes compact disks for optical drives magnetic tape and others as will occur to those of skill in the art. Examples of transmission media include telephone networks for voice communications and digital data communications networks such as for example Ethernets and networks that communicate with the Internet Protocol and the World Wide Web as well as wireless transmission media such as for example networks implemented according to the IEEE 802.11 family of specifications. Persons skilled in the art will immediately recognize that any computer system having suitable programming means will be capable of executing the steps of the method of the invention as embodied in a program product. Persons skilled in the art will recognize immediately that although some of the exemplary embodiments described in this specification are oriented to software installed and executing on computer hardware nevertheless alternative embodiments implemented as firmware or as hardware are well within the scope of the present invention.

It will be understood from the foregoing description that modifications and changes may be made in various embodiments of the present invention without departing from its true spirit. The descriptions in this specification are for purposes of illustration only and are not to be construed in a limiting sense. The scope of the present invention is limited only by the language of the following claims.

