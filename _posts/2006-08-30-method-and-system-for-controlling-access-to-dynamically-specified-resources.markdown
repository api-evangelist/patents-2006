---

title: Method and system for controlling access to dynamically specified resources
abstract: In an RBAC system, a capability is defined as including an operation and an object on which the operation is to be performed. The capability is assigned to a role, which is in turn assigned to a user. Then the user will have the authorization to perform the operation on the object. Rather than specifying the object by predetermining the identity of the object, an expression (e.g., a regular expression, a query, etc.) may be specified in place of the predetermined object. In response to a request initiated by a user, the expression is then evaluated to determine the identity of the object(s) on which the operation may be performed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07685123&OS=07685123&RS=07685123
owner: Network Appliance, Inc.
number: 07685123
owner_city: Sunnyvale
owner_country: US
publication_date: 20060830
---
At least one embodiment of the present invention pertains to access control systems and more particularly to a Role Based Access Control RBAC system.

Various forms of network storage systems are known today. These forms include network attached storage NAS storage area networks SANs and others. Network storage systems are commonly used for a variety of purposes such as providing multiple users with access to shared data backing up critical data e.g. by data mirroring etc.

A network storage system typically includes at least one storage server which is a processing system configured to store and retrieve data on behalf of one or more client processing systems clients . In the context of NAS a storage server may be a file server which is sometimes called a filer . A filer operates on behalf of one or more clients to store and manage shared files in a set of mass storage devices such as magnetic or optical disks or tapes. The mass storage devices may be organized into one or more volumes of a Redundant Array of Inexpensive Disks RAID . Filers are made by Network Appliance Inc. of Sunnyvale Calif.

In a SAN context the storage server provides clients with block level access to stored data rather than file level access. Some storage servers are capable of providing clients with both file level access and block level access such as Filers made by Network Appliance Inc.

A business enterprise or other organization that manages large volumes of data may operate one or more storage servers. These storage servers may be connected to each other through one or more networks. The storage servers and other network components may be managed by one or more network administrators also called administrative users or simply administrators who are responsible for configuring provisioning and monitoring the storage servers scheduling backups troubleshooting problems with the storage servers performing software upgrades etc. These management tasks can be accomplished by the administrator using a separate management console on the network which is a computer system that runs storage management application software specifically designed to manage a distributed storage infrastructure. An example of such a storage management application is DataFabric Manager DFM made by Network Appliance Inc. of Sunnyvale Calif.

To prevent unauthorized users from accessing and controlling functions of the storage servers there is a need for some form of access control. One form of access control is Role Based Access Control RBAC . Within an organization roles are created for various job functions. The permission to perform certain functions is assigned to specific roles. Members of staff or other system users are assigned particular roles and through those role assignments acquire the permissions to perform particular system functions.

Since users are not assigned permissions directly but only acquire them through their role or roles management of individual user rights becomes a matter of simply assigning the appropriate roles to the user which simplifies common operations such as adding a user or changing a user s department.

In an RBAC system a role may be assigned the permission to perform an operation on an object. An object is an entity within a system. An object may be a composite object containing one or more other objects or a simple object containing no other objects. Here the phrase perform an operation on an object has the meaning of both performing the operation on the object and performing the operation within the object. The object may be a logical object or a physical object. Examples of logical object include a bank account in a banking system a volume in a network storage system or a role in an RBAC system. Examples of physical object include a harddrive a network interface card etc. When a permission to perform an operation on an object is assigned to a role the object is statically specified. That is the identity of the object is already determined at the time the permission is assigned to the role. The static mechanism however limits the flexibility of the RBAC system especially when the system such as a network storage system that the RBAC system is controlling changes frequently.

The present invention includes a method and system for controlling access to dynamically specified resources. The method may be implemented in a role based access control system. The method includes the step of receiving input specifying an expression for use in identifying a first object on which a role has authorization to perform an operation. The method further includes the step of evaluating the expression in the role based access control system to identify the first object in response to a request initiated by the role to perform the operation.

Other aspects of the invention will be apparent from the accompanying figures and from the detailed description which follows.

A method and system for controlling access to dynamically specified resources are described. References in this specification to an embodiment one embodiment or the like mean that the particular feature structure or characteristic being described is included in at least one embodiment of the present invention. Occurrences of such phrases in this specification do not necessarily all refer to the same embodiment.

The object defines the target on which the operation is to be performed. The object may be any kind of physical or logical entity. For example in a network storage environment the object may be a file system a volume a directory a file etc. Yet in the banking system mentioned above the whole banking system would be the object within which a checking account for the customer may be created.

More than one capability may be assigned to a single role simultaneously so that the role is authorized to perform multiple operations on multiple objects. A role may be assigned to a user a system administrator for example or a software process so that the user process may assume the capability or capabilities assigned to the role .

One aspect of the solution being introduced here is a method for dynamically specifying the object of a capability . Here the phrase dynamically specifying the object means specifying the object by using an expression and evaluating the expression to determine the identity of the object upon a request rather than predetermining the identity of the object. One example is to use a regular expression to specify the object s . A regular expression is a string that describes or matches a set of strings according to certain syntax rules. Another example is to use a query to specify the object s . When the object s needs to be identified the query is executed for example in a database.

Each of the clients may be for example a conventional personal computer PC server class computer workstation or the like. Each storage server may be for example a file server used in a NAS environment a filer a block based storage server such as used in a storage area network SAN or other type of storage server. In a NAS implementation the interconnect may be essentially any type of computer network such as a local area network LAN a wide area network WAN metropolitan area network MAN or the Internet and may implement the Internet Protocol IP . In a SAN implementation the interconnect may be for example a Fibre Channel switching fabric which implements the Fibre Channel Protocol FCP .

The mass storage devices in each storage subsystem may be for example conventional magnetic disks optical disks such as CD ROM or DVD based storage magneto optical MO storage or any other type of non volatile storage devices suitable for storing large quantities of data. The storage devices in each storage subsystem can be organized as a Redundant Array of Inexpensive Disks RAID in which case the corresponding storage server accesses the storage subsystem using an appropriate RAID protocol.

Also connected to the interconnect are one or more management consoles each of which includes a storage management application such as a network storage manager discussed in detail below.

Recently some storage servers have been designed to have distributed architectures to facilitate clustering of storage nodes. Clustering facilitates scaling of performance and storage capacity. For example rather than being implemented in a single box a storage server may include a separate N network module and D disk module which are contained within separate housings and communicate with each other via some type of switching fabric or other communication medium. An N module is an element that acts as a front end of a storage server exporting a file service abstraction to clients. A D module manages the underlying storage. Each D module typically manages a separate set of disks. Storage servers which implement the Data ONTAP GX operating system from NetApp can have this type of distributed architecture.

In an exemplary embodiment of the present invention the object associated with the identified capability is specified with a regular expression when for example the capability is created by a system administrator or any user who is authorized to manage the RBAC system . As introduced above a regular expression is a string that describes or matches a set of strings according to certain syntax rules. An example of regular expression syntax is the UNIX regular expression syntax which is widely used for the purposes of compatibility. In the UNIX regular expression syntax most characters are treated as literals characters that match only themselves a matches a bc matches bc etc . The exceptions are called metacharacters. One example of the metacharacters is which matches any single character.

The RBAC Authorization Manager further includes an Expression Evaluation Module . The Expression Evaluation Module evaluates the regular expression to determine the object s associated with the capability. In an embodiment in order to identify the object s the regular expression is matched against the names or IDs of all objects of the storage system . These names or IDs may be stored in a database the database s for example or they may be obtained by calling a command or API of the storage server . The RBAC Authorization Manager has an Authorization Module which determines whether the object identified from the request matches one of the object s identified by the Expression Evaluation Module . Here a first object is considered to match a second object if the first object is the second object or a part of the second object.

Thus for example suppose a request is initiated by a user whose role is a system administrator . The request is to create a file in volume engineering a . Assume a capability is defined as create a file in volume engineering  and the capability is assigned to the role system administrator . Create a file specifies the operation associated with the capability and the regular expression volume engineering  specifies the object s on which the operation create a file may be performed by the role to which the capability is assigned. Upon receiving the request the Expression Evaluation Module evaluates the regular expression volume engineering  to identify all of the volumes with a name starting with engineering  plus an extra character. For example assume there are two volumes matching the regular expression where one is engineering a and the other is engineering b . Thus the request should be authorized because the request is to create a file in volume engineering a which matches one of the objects identified by the Expression Evaluation Module .

In another exemplary embodiment of the present invention the object associated with the identified capability is specified with a query. To identify the object s the query is executed by the Expression Evaluation Module against a database storing data related to all objects of the storage server . As noted data related to all objects of the storage server may be stored in the database s or may be obtained by calling a command or API of the storage server . For example suppose a query is all volumes with name starting with engineering  . Assume the storage server has two volumes with name starting with engineering  the volume engineering a and the volume engineering b. Then the results of the query are volumes engineering a and engineering b. The syntax of the query may follow a standard syntax e.g. SQL or may be customarily defined.

Alternatively the object associated with the identified capability is specified with a function or API call. In response to a user request the function or API call is evaluated for example against a library to identify the object s . For example a function may be specified as get all volumes with prefix engineering  . Upon evaluation of the function volumes engineering a and engineering b will be returned if they are the only ones match.

Note that the each of the modules introduced above the Interface the Request Analysis Module the Expression Evaluation Module and the Authorization Module can be software special purpose circuitry or combination thereof.

The processing system includes one or more processors coupled to a bus system . The bus system is an abstraction that represents any one or more separate physical buses and or point to point connections connected by appropriate bridges adapters and or controllers. The bus system therefore may include for example a system bus a Peripheral Component Interconnect PCI bus a HyperTransport or industry standard architecture ISA bus a small computer system interface SCSI bus a universal serial bus USB or an Institute of Electrical and Electronics Engineers IEEE standard 1394 bus sometimes referred to as Firewire . The processors are the central processing units CPUs of the processing system and thus control the overall operation of the processing system. In certain embodiments the processors accomplish this by executing software stored in memory . A processor may be or may include one or more programmable general purpose or special purpose microprocessors digital signal processors DSPs programmable controllers application specific integrated circuits ASICs field programmable gate arrays FPGAs programmable logic devices PLDs or the like or a combination of such devices.

The processing system also includes memory coupled to the bus system . The memory represents any form of random access memory RAM read only memory ROM flash memory or a combination thereof. Memory stores among other things the operating system of processing system or the storage management application .

Also connected to the processors through the bus system are a mass storage device a storage adapter and a network adapter . Mass storage device may be or include any conventional medium for storing large quantities of data in a non volatile manner such as one or more disks. The storage adapter allows the processing system to access a storage subsystem and may be for example a Fibre Channel adapter or a SCSI adapter. The network adapter provides the processing system with the ability to communicate with remote devices over a network and may be for example an Ethernet adapter or a Fibre Channel adapter. Memory and mass storage device store software instructions and or data which may include instructions and or data used to implement the techniques introduced here.

Thus a method and system for controlling access to dynamically specified resources have been described.

Software to implement the technique introduced here may be stored on a machine readable medium. A machine accessible medium as the term is used herein includes any mechanism that provides i.e. stores and or transmits information in a form accessible by a machine e.g. a computer network device personal digital assistant PDA manufacturing tool any device with a set of one or more processors etc. . For example a machine accessible medium includes recordable non recordable media e.g. read only memory ROM random access memory RAM magnetic disk storage media optical storage media flash memory devices etc. etc.

 Logic as is used herein may include for example software hardware and or combinations of hardware and software.

Although the present invention has been described with reference to specific exemplary embodiments it will be recognized that the invention is not limited to the embodiments described but can be practiced with modification and alteration within the spirit and scope of the appended claims. Accordingly the specification and drawings are to be regarded in an illustrative sense rather than a restrictive sense.

