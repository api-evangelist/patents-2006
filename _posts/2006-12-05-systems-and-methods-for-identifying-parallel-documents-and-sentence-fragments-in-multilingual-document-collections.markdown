---

title: Systems and methods for identifying parallel documents and sentence fragments in multilingual document collections
abstract: Systems, computer programs, and methods for identifying parallel documents and/or fragments in a bilingual collection are provided. The method for identifying parallel sub-sentential fragments in a bilingual collection comprises translating a source document from a bilingual collection. The method further includes querying a target library associated with the bilingual collection using the translated source document, and identifying one or more target documents based on the query. Subsequently, a source sentence associated with the source document is aligned to one or more target sentences associated with the one or more target documents. Finally, the method includes determining whether a source fragment associated with the source sentence comprises a parallel translation of a target fragment associated with the one or more target sentences.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08943080&OS=08943080&RS=08943080
owner: University of Southern California
number: 08943080
owner_city: Los Angeles
owner_country: US
publication_date: 20061205
---
This United States nonprovisional patent application claims the benefit of U.S. provisional application No. 60 790 131 filed Apr. 7 2006 and entitled Systems and Methods for Identifying Parallel Documents and Sentence Fragments in Multilingual Document Collections which is incorporated by reference herein.

The research and development described in this application were supported by the GALE program of the Defense Advanced Research Projects Agency DARPA Contract No. HR0011 06 C 0022. The U.S. government may have certain rights in the claimed inventions.

The present invention relates generally to statistical machine translation of multilingual documents and more specifically to systems and methods for identifying parallel segments in multilingual document collections.

In the field of statistical machine translation large collections of training data are required to develop and implement systems and methods for translating documents. Training data comprises parallel segments which are documents or fragments that are literal or parallel translations of each other in two languages. Currently there is a lack of sufficiently large parallel corpora for most language pairs. A language pair refers to the two languages used within the parallel corpora. Examples of language pairs include English Romanian or English Arabic.

Large volumes of material in many languages are produced daily and in some instances this material may comprise translational equivalents. For example a news story posted on the World Wide Web WWW on an English language website may be a translation of the same story posted on a Romanian language website. The ability to identify these translations is important for generating large collections of parallel training data.

However because news web pages published on a news website typically have the same structure. As such structural properties such as HTML structures can not be used to identify parallel documents. Further because web sites in different languages are often organized differently and a connection is not always maintained between translated versions of the same story URLs of articles may be unreliable. Further a news website may contain comparable segments of text that relate to the same news story but the comparable segments or articles should not necessarily be identified as parallel documents. Comparable segments may be referred to as noisy translations of the sentences.

However these comparable segments may include one or more parallel fragments that can be added to the training data even though the entire segment is not a parallel translation of a comparable segment. For example a quote within a news article may be translated literally even though the rest of the document is merely related to a comparable segment in another language.

Current methods perform computations at a word level and do not distinguish parallel translations of documents from comparable documents. As such these methods result in many false positives where a comparable document may be erroneously classified as a parallel translation.

Systems computer programs and methods for identifying parallel documents and or fragments in a bilingual collection are provided. The method for identifying parallel sub sentential fragments in a bilingual collection comprises translating a source document from a bilingual collection. The method further includes querying a target library associated with the bilingual collection using the translated source document and identifying one or more target documents based on the query. Subsequently a source sentence associated with the source document is aligned to one or more target sentences associated with the one or more target documents. Finally the method includes determining whether a source fragment associated with the source sentence comprises a parallel translation of a target fragment associated with the one or more target sentences.

A system and method for identifying parallel documents and or fragments in a bilingual document collection is provided. The present method and system can be used with documents posted on the Internet without relying on properties such as page structure or URL. Further the system and method is able to distinguish between parallel documents and comparable documents. The method and system may alternatively or additionally be used to extract parallel fragments from comparable corpora at the sub sentential level to increase the amount of parallel data for statistical machine translation SMT .

The client may comprise a computational device such as a personal computer. The client may include a training set generator . The training set generator may comprise hardware software or firmware and may be configured to identify parallel documents and or fragments in bilingual collections. The training set generator may be configured to access bilingual collections stored in the document collection server . Further the training set generator may transmit data indicating parallel documents or fragments to the document collection server .

The word translator engine is configured to translate each word within a source document to generate a translated source document. A source document is a document in the bilingual document collection of which a parallel translation is sought. The source document for example may comprise a news article written in English. For example the training set generator may be configured to determine whether any documents written in Romanian associated with a target library are parallel translations of or contain parallel translations of fragments of the source document.

A target library comprises one or more target documents. Target documents may include documents or segments that possibly comprise a parallel translation of the source document. Target documents may be obtained from sources such as the Internet or other known libraries and may be classified according to a classifier such as date URL or the like. The word translator engine translates the source document word by word or literally into the language of the target library. To further the example the news article written in English is translated word by word into Romanian which may be utilized as the language of the target library.

The query engine is configured to query the target library using the translated source document. The query engine selects a subset comprising the documents that are most similar to the translated source document. The subset may be limited to the top N documents. In some embodiments N may be a constant such as the number twenty .

The document selector engine aligns one or more target sentences in each of the target documents in the subset to one or more sentences in the source document. By aligning the sentences the training set generator avoids falsely classifying documents as parallel based only on word level comparisons. Based on the sentence alignments the document selector engine may discard one or more of the top N documents that while comprising word level translations do not comprise sentence level translations. For example the document selector engine may discard documents that do not have a specified number of sentences that can be aligned. In other embodiments the document selector engine may discard sentence pairs within the aligned documents that do not contain a specified number or percentage of words that are translations of each other. By aligning sentences within the source documents and the target documents the training set generator can distinguish parallel documents from comparable documents.

The parallel document engine is configured to determine whether a document pair comprising the source document and the target document is a parallel translation. The parallel document engine is discussed further with respect to and .

The parallel fragment engine is configured to identify parallel sentence fragments in non parallel document pairs such as document pairs from news sources on the Internet. The parallel fragment engine is discussed further in and . Although shows various engines comprising the training set generator fewer or more engines may comprise the training set generator and still fall within the scope of the various embodiments.

The sentence analysis module determines whether aligned sentences based on the sentence alignments generated by the document selector engine are translations of each other independently of the context within the document or segment. The sentence analysis module inspects the sentence pairs between the sentences in the source document and the sentences in each of the documents in the subset comprising the documents that are most similar to the translated source document to compute sentence level links. The sentence analysis module distinguishes between parallel and non parallel sentence pairs based on sentence features that can be extracted from a word level alignment of the two aligned sentences. The sentence features are identified by linking each word in the sentences with its best translation candidate in the paired sentence. This linking process may be referred to as greedily linking. 

Features that can be extracted by greedily linking include for example the percentage of words that are aligned contiguous phrases that are aligned and contiguous phrases that are not aligned. After the features have been extracted a Maximum Entropy based parallel sentence classifier not shown may be trained to obtain positive and negative classifiers for the sentences. In exemplary embodiments the following Maximum Entropy probability equation may be used 

The document classification module is configured to select the document within the subset that shares the most sentence level links with the source document. The document within the subset that shares the most sentence level links with the source document is referred to as the target document. The document classification module then determines whether the target document is a parallel translation of the source document by comparing the length of the target document to the length of the source document and determining whether a noisy sentence threshold and a monotone sentence threshold are met. This process is described in greater detail in association with . The output of the document classification module may comprise an annotation indicating that the target document is a parallel translation of the source document.

The candidate selection filter discards sentence pairs in the subset comprising the segments or documents selected by the document selection engine . The candidate selection filter discards sentence pairs that have very few words that are translations of each other based on the coarse lexicon . For example sentence pairs that comprise three or fewer words that appear in both the source sentence and the target sentence may be discarded. In other embodiments sentence pairs may be discarded according to a percentage of words appearing in both the source sentence and the target sentence.

The coarse lexicon comprises a probabilistic lexicon derived from an initial parallel corpus such as a training data set. The coarse lexicon may be obtained by running a GIZA implementation of the IBM word alignment models on the initial parallel corpus. In the coarse lexicon each source word may be associated with many possible translations. For example in some embodiments each source word is associated with on average twelve possible translations. Each of these possible translations may be further associated with a probability. The coarse lexicon is used to retain most of the existing comparable sentences occurring between the source document and the target document.

The probability module is configured to greedily link each word in the source sentence to the best translation occurring in the target sentence. Using the fine lexicon the probability module then assigns values to each word alignment indicating the probability that the source word is properly aligned with or a translation of the target word. The probability module may filter these values further. The fine lexicon may be generated in exemplary embodiments according to the process discussed in connection with .

The fragment detection module may be configured to detect a parallel sentence fragment based on the values assigned to each word alignment based on the fine lexicon . In some embodiments the fragment detection module may further filter the fragment matches. This process is discussed in greater detail in connection with . The output of the parallel fragment engine comprises at least one parallel fragment that may be added to the training set.

At step each word in the source document is independently translated into the language of the target document to generate a translated source document. The words may be translated according to a dictionary for example.

At step the translated source document is run as a query against a large library comprising documents written in the target language. In step the source document is paired with a subset comprising the most similar documents written in the target language according to the results of the query. In some embodiments the subset may be limited to a constant number N of the most similar documents. N may be any number up to and including the number of documents in the target library. N may be limited by a computational capacity of a computer such as client .

At step parallel sentence pairs between the source document and the documents in the subset are identified. The sentence pairs may be identified by the sentence analysis module .

After the sentence pairs are computed in step step is performed to determine whether the source document and at least one of the documents in the subset are parallel translations. In some embodiments the parallel document engine may perform this determination. The process used in step is discussed in greater detail in connection with . If the documents are parallel the parallel documents are added to the training set in step . In other embodiments step may not be performed and the process proceeds to step without determining whether any documents are parallel translations of each other.

If the documents are not parallel step is performed to determine whether there are parallel fragments in the paired documents. In some embodiments the parallel fragment engine may perform this determination. The process used in step is discussed in greater detail in connection with and . If there are parallel fragments in the sentences the parallel fragments are added to the training set in step . In other embodiments the process may not perform step and may instead terminate after performing steps and .

In step a noisy sentence pair threshold is determined. A noisy sentence pair is a sentence pair comprising a first sentence that is at least a rough translation of one or more second sentences. For example the first sentence may include the words in a first language Mary went to the park with her dog while the second sentence may include the words in a second language Mary went to the park. In some embodiments the noisy sentence threshold may be a percentage of the sentences in the source document. The noisy sentence threshold for example may be thirty percent 30 of the sentences in the document.

At step a monotone sentence pair threshold is determined. A monotone sentence pair is a sentence pair comprising words that have a high probability of being a parallel translation of one another. In exemplary embodiments the monotone sentence pair may be a percentage of the noisy sentences. For example the monotone sentence pair threshold may be ninety percent 90 of the noisy sentence pairs. The noisy sentence pair threshold and the monotone sentence pair may be determined initially and or later adjusted according to the accuracy of the identification of the parallel documents.

At step the target document in the subset selected in step having the most sentence pairs aligned with the source document according to step is selected. After step a series of determinations is made to determine whether the source document is a parallel translation of the target document. If the outcome of any of these determinations is negative the source document is not determined to be parallel to the target document.

At step comprises determining whether the length of the source document is approximately equal to the length of the target document is determined. Step may be performed by the document classification module . This determination may be made according to the number of sentences present in the target document and in the source document. In some embodiments the lengths of the documents are approximately equal if the length difference is no more than twenty five percent 25 of each of their lengths.

At step if the target document and the source document are approximately the same length the document classification module may in exemplary embodiments determine whether the number of sentence pairs identified between the target document and the source documents satisfies the noisy sentence threshold.

If the noisy sentence threshold is satisfied the monotone sentence pairs between the target document and the source document are identified in step . The monotone sentence pairs may be identified from the noisy sentence pairs previously identified. At step whether the number of identified monotone sentence pairs satisfies the monotone sentence threshold determined in step is determined. This determination may be performed by the document classification module in accordance with exemplary embodiments.

If the monotone sentence threshold is satisfied the source document and the target document are identified as parallel and added to the training set in step . The steps performed in process may be reordered or performed substantially simultaneously and still fall within the scope of exemplary embodiments. Additional determinations known by those skilled in the art may be added to process and still be within the scope of various embodiments.

To extract parallel sentence fragments a coarse lexicon and a fine lexicon are generated from an existing parallel training corpus in step . In exemplary embodiments the coarse lexicon may comprise the coarse lexicon and the fine lexicon may comprise the fine lexicon discussed in . The coarse lexicon may be generated by running the GIZA implementation of the IBM word alignment models. The coarse lexicon is configured to identify most of the existing parallel data. The fine lexicon may be generated according to the process described in connection with according to exemplary embodiments.

At step sentence pairs which have few words that are translations of each other using the coarse lexicon are discarded. A lack of parallel words in a sentence pair according to the coarse lexicon indicates that it is unlikely that there are parallel fragments within the sentence pair.

At step each word in the source sentence is greedily linked to the best translation in the target sentence. The word linkages are a way to quantify the differences between source sentences that are mostly translated and mostly not translated in the target sentences. By representing the target sentence as a numeric signal where translated words correspond to a positive value and not translated words correspond to a negative value the process is able to retain fragments within the sentence that are mostly positive. The word linkages may then be assigned a specific numerical value in steps and .

At step a positive value is assigned to the word linkages that indicate translated words in the sentence pair. The positive value corresponds to a positive dependency of the linked words. The numerical value is retrieved or otherwise accessed from the fine lexicon generated in step based on the linked words.

At step not translated words in the sentence pair are assigned a negative value to indicate that there is little or no probability that the words can or should be linked. In some embodiments the value assigned to the not translated words is negative one 1 .

At step a smoothing filter is applied to the numerical signal generated according to the sentence pair to obtain a filtered signal. In some embodiments the smoothing filter may comprise an averaging filter which sets the value at each point to be the average of several values surrounding the value. For example the surrounding five 5 values may be averaged.

At step fragment matches within the sentence pair are determined. If there is a parallel fragment in the sentence pair the positive fragments having a corresponding positive filtered signal are retained. If there is no fragment match or the filtered signal is negative the sentence pair is discarded.

At step unlikely matching fragments are discarded. The application of the smoothing filter may for example distort the signal to produce a short fragment that is a false positive. For example in some embodiments fragments comprising less than three words may be discarded to avoid false positives. If the fragments that are likely to be a false positive are discarded the process returns to step comprising adding the parallel fragments to the training set.

At step a parallel training corpus is word aligned. Word aligning the parallel training corpus generates annotations in the parallel training corpus indicating that a word in the target language is a possible translation of a word in the source language.

At step a Log Likelihood Ratio LLR score is calculated to measure the likelihood that a source word and a target word are not independent. The LLR score is used to estimate the independence of pairs of words which cooccur in a parallel corpus. According to exemplary embodiments the source word and the target word will cooccur in the source document and the target document if the two words are also linked together in the word aligned parallel training corpus. According to some embodiments the LLR score may be computed using the equation 

At step both a positive probability and a negative probability are determined based on classifying the LLR score as indicating a positive association or a negative association. The positive probability estimates the probability that the target word translates into the source word. The negative probability estimates the probability that the target word does not translate into the source word.

At step normalizing factors for each word in the source document are computed. One normalizing factor is based on the summation of the positive LLR scores while a second normalizing factor is based on a summation of the negative LLR scores.

At step each term or value associated with each word alignment is divided by the corresponding normalizing factor calculated in step . In further embodiments of the fine lexicon the probability distributions may be recalculated by reversing the source language and the target language. The reversed probability distributions may be calculated using process .

The above described functions and components can be comprised of instructions that are stored on a storage medium. The instructions can be retrieved and executed by a processor. Some examples of instructions are software program code and firmware. Some examples of storage medium are memory devices tape disks integrated circuits and servers. The instructions are operational when executed by the processor to direct the processor to operate in accord with various embodiments. Those skilled in the art are familiar with instructions processor s and storage medium.

While various embodiments have been described above it should be understood that they have been presented by way of example only and not limitation. For example any of the elements associated with the training set generator may employ any of the desired functionality set forth hereinabove. Thus the breadth and scope of a preferred embodiment should not be limited by any of the above described exemplary embodiments.

