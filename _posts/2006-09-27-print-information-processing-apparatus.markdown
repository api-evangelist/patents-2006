---

title: Print information processing apparatus
abstract: A print information processing apparatus for performing a printing process is disclosed. The print information processing apparatus is connected to a printer via a network and includes an interface configured to connect a removable recording medium; a data storage unit configured to store encrypted data; a decryption unit configured to read decryption information used to decrypt the encrypted data from the removable recording medium connected to the interface and to decrypt the encrypted data by using the decryption information. In the print information processing apparatus, the decryption unit permits the printing process of the encrypted data only when the removable recording medium is connected to the interface.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07835024&OS=07835024&RS=07835024
owner: Ricoh Company, Ltd.
number: 07835024
owner_city: Tokyo
owner_country: JP
publication_date: 20060927
---
The present invention generally relates to a print information processing system using a computer for processing print data such as text data image data or graphic data sending the print data to a printer and thereby causing the printer to print the print data a print information processing program executed on the print information processing system and a recording medium on which the print information processing program is stored.

Generally an operating system OS is running on a computer. An OS is basic software that enables efficient operation of a computer. An OS provides an application programming interface API that enables programs running on the OS to use functions of the OS and to operate hardware devices. When printing data from a computer where an OS is running to a printer a special program called printer driver software or a printer driver program hereafter called printer driver is used. A printer driver is a kind of software program called by an OS.

When a normal program prints data the program uses a function of the OS via the API and the OS calls a printer driver. A printer driver generates print data for a printer. For example a printer driver receives input data such as text images or graphics from the OS and translates the input data into a print data description language understandable to a printer. Thus a program hereafter called application that performs a printing process sends print data such as text data image data or graphic data to an OS using an API and the OS sends the print data to a printer driver. A printer is generally configured to understand one or more print data description languages hereafter called page description language PDL that are defined by printer manufacturers.

For example PDLs such as the Print Control Language PCL and the PostScript language are well known. A printer driver translates print data into a PDL that a target printer can understand. Print data translated into a PDL PDL data can be printed only on a printer that can understand the PDL. For example print data in the PCL language cannot be printed on a printer that can understand only the PostScript language.

Also even printers that can understand the same PDL may have different printing properties such as output resolution and the number of colors color or monochrome . Therefore PDL data translated from the same print data may differ depending on the printing properties of a printer. In other words PDL data for printer A may not be able to be printed on printer B. In a general PDL translation process print data are translated into PDL data understandable to a printer and also converted to suit the printing properties of the printer. As a result the portability of the print data becomes very low.

Meanwhile user needs for printing have become diverse and complicated. A conventional printing method in which an application sends print data to a printer driver and printing is performed immediately does not satisfy such needs.

For the above reason there has been a demand for a highly portable format for print data output by a printer driver. To improve the portability of print data sent from an application to a printer driver it is necessary to develop a print data format that is independent of PDLs and printers. If a printer driver can translate print data from an application into portable print data hereafter called metadata and save the metadata for example as a permanent file the portability of print data can be greatly improved.

When printing metadata an application sends the metadata to a printer driver and the printer driver translates the metadata into printer specific PDL data according to printer properties. Such a method makes it possible to meet various printing needs.

However improved portability of metadata files that are independent of PDLs and printers may result in reduced security of print data. In other words high portability may cause security problems such as alteration of metadata files and stealing of information in metadata files by data analysis. Such security problems do not generally occur in a printing process where an application sends print data to a printer driver the printer driver translates the print data into PDL data and immediately sends the PDL data to a printer and the printer prints the PDL data.

Even in the above case when a computer and a printer are connected via a network it is possible to steal information by for example sniffing packet data. However information stealing can be prevented by encrypting PDL data during PDL translation.

The present invention provides a print information processing apparatus that substantially obviates one or more problems caused by the limitations and disadvantages of the related art.

Embodiments of the present invention provide a print information processing apparatus that prevents unauthorized disclosure of information.

According to an embodiment of the present invention a print information processing apparatus for performing a printing process which print information processing apparatus is connected to a printer via a network includes an interface configured to connect a removable recording medium a data storage unit configured to store encrypted data a decryption unit configured to read decryption information used to decrypt the encrypted data from the removable recording medium connected to the interface and to decrypt the encrypted data by using the decryption information. In the print information processing apparatus the decryption unit permits the printing process of the encrypted data only when the removable recording medium is connected to the interface.

Preferred embodiments of the present invention are described below with reference to the accompanying drawings.

A printing system according to embodiments of the present invention includes programs that run on a computer and a printer driver that is a program for generating print data that a printer can print. In an exemplary computer multiple programs are running on an OS that is basic software for controlling computer hardware. Also a printer driver that is a program for generating print data for a printer is running on the OS. In embodiments of the present invention it is assumed that each of the programs running on the exemplary computer has a function to edit or process text or an image displayed on a monitor and a function to display or print the edited text or image on a monitor or a printer. Examples of such programs include a text editor a spreadsheet and a graphics program. Each of such programs is called a first application in embodiments of the present invention hereafter called application .

The application itself does not translate print data for a printer. Instead the application sends print data to a printer driver and the printer driver translates the print data into print instructions understandable to the printer and sends the print instructions to the printer. Therefore the application calls a printer driver at the start of a printing process. A printer driver according to embodiments of the present invention includes two functions. A first function is to process print data from the application and thereby to translate the print data into print instructions. A second function is to display print setting windows in response to a print request from the application which print setting windows prompt a user to make print settings for a printer. In embodiments of the present invention the first function is called a rendering function and the second function is called an UI display function. Also each of programs other than a printer driver is called an application .

In embodiments of the present invention an exemplary printing system includes the exemplary computer on which the application that performs printing processes and the printer driver are running and a printer connected via a network to the exemplary computer. The exemplary computer and the printer can communicate with each other. In the exemplary printing system the exemplary computer and a printer may be connected via a wired connection such as USB IEEE 1394 or IEEE 1284 or via a wireless connection.

In the exemplary printing system includes the application the OS the printer driver and a printer . PDL data generated by the PDL translation unit of the printer driver can be encrypted by an encryptor of the printer driver . The encryptor receives and encrypts PDL data from the PDL translation unit and sends the encrypted PDL data to the printer . When encryption is not necessary the PDL data are sent directly to the printer without being sent to the encryptor .

Another exemplary printing process in the above exemplary printing system is described below with reference to . In this exemplary printing process print data from the application are not directly printed on a printer but instead saved as a metadata file. shows exemplary printer driver setting windows. Printer driver setting windows can be configured by the GUI of a printer driver. A Print Method tab shown in allows a user to select whether to print directly on the printer or to translate and save print data as a metadata file as shown in .

When Print directly on printer is selected on the Print Method tab print data are printed directly on the printer . When Save print data as metadata is selected print data are translated and saved as a metadata file. In the latter case a user is requested to enter in an entry field a metadata file name and a location where the metadata file is to be saved. As shown in when instructed to save print data as a metadata file a printer driver receives print data from an application via an OS and a metadata translation unit of the printer driver translates the print data into metadata. Then an encryptor encrypts the metadata and outputs the encrypted metadata as a metadata file according to the metadata file name and location entered.

The metadata file generated as described above contains the print data from the application in a data format that is independent of printer hardware and a PDL or independent of an apparatus and a language. Therefore the metadata file can be translated into any PDL and printed on any printer without using the application . In other words the metadata file is highly portable and can be shared among users.

A printing system using a metadata file according to the first embodiment is described below with reference to .

On a computer shown in the application and a printer driver are running. Also it is assumed that Save print data as metadata is selected on the Print Method tab shown in . A metadata file generated by the computer is stored in a storage device such as a hard disk connected to the computer . Also a password file generated at the same time when the metadata file is generated is also stored in the storage device. The password file is described later. The metadata file can be decrypted by referring to the password file . The decrypted metadata file is translated into print data suitable for a target printer and the print data are translated into PDL data that can be printed on the target printer.

An exemplary printing process where a metadata file generated by the computer is copied into a computer and printed by the computer is described below. In the descriptions below it is assumed that a printer driver that is substantially the same as that on the computer is running on each of the computer and a computer . Also a second application hereafter called application for specifying and printing a metadata file is installed in each of the computers and .

For example when printing a metadata file from the computer to a PCL printer an application shown in sends the metadata file to a printer driver and the printer driver tries to decrypt the metadata file. In this printing process if the printer driver is not able to refer to the password file the printer driver cannot decrypt and print the metadata file . To give a computer access to the password file for example the password file is stored in a portable recording medium for example a USB memory that is attachable detachable to from a computer. When printing a metadata file from a computer the USB memory is attached to the computer. With the USB memory the computer is able to decrypt the metadata file by referring to the password file in the USB memory .

An operation method as described above makes it possible to allow only authorized users to print a metadata file and thereby to prevent unauthorized use of the metadata file.

Also since a metadata file is encrypted unauthorized viewing of information created by the application and contained in the metadata file can be prevented.

Further even when an application such as a metadata file viewer is used to handle a metadata file using a portable removable recording medium for example the USB memory containing the password file makes it possible to prevent unauthorized viewing of information in the metadata file.

For example when printing a metadata file from the computer to a printer the USB memory is connected to the computer . With the USB memory the printer driver in the computer is able to decrypt the metadata file by referring to the password file and to print the metadata file . Even in this case if the USB memory is removed from the computer the printer driver cannot print the metadata file.

Details of a password file described above a process where the application sends print data to a printer driver and the printer driver generates a metadata file and a process where the application sends an encrypted metadata file to a printer driver to print the encrypted metadata file are described below with reference to .

To generate a metadata file a user specifies a method of generating a password on a MetaData Generation Settings tab in a printer driver setting window shown in . On the MetaData Generation Settings tab the following three password generation methods are provided entering characters to be used as a password in a password entry field Specify password characters generating a password based on a specified file Generate password based on specified file and automatically generating a password based on print data sent from the application to the printer driver Automatically generate password based on print data . When the third password generation method is selected since the generated password is saved as a file it is necessary to specify a location where the password file is to be saved . When the second password generation method or the third password generation method is specified instead of using entered characters as a password as in the case of the first password generation method a password is generated based on the information contained in a specified file or print data from the application .

In this embodiment when the second or third password generation method or is specified a hash value generated by a message digest function is used as a password.

As the encryption algorithm the Rijndael algorithm of the Advanced Encryption Standard is used. Any message digest function for generating a hash value and any encryption algorithm other than those mentioned in this embodiment may be used for the present invention. The present invention is independent of a particular encryption method decryption method and password generation method. When Generate password based on specified file is selected the user is requested to enter the name of an existing file in a file name entry field . Based on the information in the specified file a hash value used as a password for encryption is calculated. When Automatically generate password based on print data is selected a hash value used as a password is calculated based on a part of print data from the application . Also the part of the print data is saved as a file by the file name specified in a password file name entry field .

An exemplary process of printing an encrypted metadata file using the application is described below with reference to .

On a Metadata Print Settings tab in the metadata print application window of the application a user enters the file name of a metadata file to be printed in a metadata file name entry field . Next the user selects a decryption method. When the password has been specified by entering characters the user enters the password characters in a password character entry field . When the password has been generated based on a specified file or when the password has been automatically generated based on print data the user enters a corresponding file name in a file name entry field .

After the above settings the user executes printing and thereby causes the application to send an encrypted metadata file via an OS to the printer driver . The printer driver receives the encrypted metadata file and a decryptor of the printer driver decrypts the encrypted metadata file using the specified password. When a file name has been specified instead of password characters the application sends information in the specified file to the printer driver before sending the metadata file. Based on the information in the specified file the printer driver calculates a hash value using the same message digest function as that used in encryption and decrypts the metadata file using the hash value as the password.

Then a PDL translation unit translates the decrypted metadata file into PDL data taking into account the characteristics of a target printer . The PDL data are either sent to the printer after being encrypted again by an encryptor or sent to the printer without encryption .

By the way an automatically generated password is saved in a password generation file for generating a password which password generation file has a certain data length. The password generation file may be made of fixed length binary data extracted randomly from print data sent from the application to a printer driver or variable length binary data extracted randomly from print data sent from the application to a printer driver. A password saved as character data may be characters generated based on data randomly extracted from the binary data in the password generation file or may be a hash value calculated from the binary data in the password generation file. Also when password data to be given to a printer driver from the application are saved in the password file as automatically generated character data the decryptor may use the character data in the password file as password data.

Still another exemplary printing process in the above exemplary printing system is described below with reference to . Also in this exemplary printing process print data from the application are not directly printed on a printer but instead saved as a metadata file. is a drawing illustrating exemplary setting windows of a printer driver. As described with reference to the Print Method tab allows a user to select whether to print directly on a printer or to save print data as a metadata file. Similarly when Print directly on printer is selected on the Print Method tab print data are printed directly on a printer. When Save print data as metadata is selected print data are translated and saved as a metadata file. In this case a user is requested to enter in an entry field a metadata file name and a location where the metadata file is to be saved.

When instructed to save print data as a metadata file the printer driver receives print data from the first application via the OS and the metadata translation unit of the printer driver translates the print data into metadata. Then the encryptor encrypts the metadata and outputs the encrypted metadata as the metadata file according to the metadata file name and location entered.

The metadata file generated as described above contains the print data from the application in a data format that is independent of printer hardware and a PDL or independent of an apparatus and a language. Therefore the metadata file can be translated into any PDL and printed on any printer without using the application . In other words the metadata file is highly portable and can be shared among users.

An exemplary printing process where the metadata file generated by the application is sent again to a printer driver and is printed on a printer is described below with reference to .

An application for sending the metadata file to the printer driver is called the second application or the application . The application loads the metadata file and sends the metadata file via the OS to the printer driver . In the printer driver when the metadata file has been encrypted the decryptor decrypts the metadata file and the PDL translation unit translates the decrypted metadata file into PDL data. When encryption is requested the encryptor encrypts again the PDL data translated by the PDL translation unit and sends the encrypted PDL data to the printer . When encryption is not requested the PDL data are sent directly to the printer . When printing from the application or the application a user is able to select whether to encrypt a metadata file and whether to encrypt PDL data on a setting window shown in .

An Encryption Settings tab in the printer driver setting window is used to make settings for the encryption of a metadata file and PDL data. To encrypt a metadata file a user selects Encrypt metadata file . To encrypt PDL data a user selects Encrypt when sending PDL data to printer .

In this embodiment the above settings can be selected independently and the following four combinations are possible 

A detailed printing process is described below with reference to based on the operations of the application and the application described above.

 1 Print data from the application are not translated into a metadata file but are translated directly into PDL data and printed on a printer

The application sends print data such as text images or graphics to a printer driver step S . In this case a user selects Print directly on printer on a printer driver setting window. The printer driver receives the print data from the application and determines whether to generate a metadata file or generate and print PDL data step S . When it has been specified to generate PDL data the printer driver translates the print data into PDL data step S . The printer driver then refers to the setting on the Encryption Settings tab in the printer driver setting window. When it has been specified to encrypt the PDL data the printer driver reads an ID card in a card reader connected to a computer where the printer driver is running step S .

After encrypting the PDL data the printer driver sends the encrypted PDL data to a printer step S . After receiving the PDL data the printer determines whether the PDL data are encrypted step S . When the PDL data are encrypted the printer displays a window on its display to request the user to insert an ID card for decryption and waits until an ID card is inserted into a card reader connected to the printer step S . When an ID card is inserted into the card reader the printer reads the data in the ID card calculates a hash value as in the encryption step and compares the calculated hash value with the hash value obtained in the encryption step step S . When the hash values do not match the printer displays a window reporting the mismatch between the hash values IDs and cancels the printing process step S . When the hash values IDs match the printer prints the PDL data step S . When the PDL data are not encrypted the reading of the ID card step S and the comparison of IDs step S are not performed and the PDL data are printed.

An exemplary process where print data from the application are translated into a metadata file is described below.

In this case a user selects Save print data as metadata on the Print Method tab and enters a metadata file name. As in the case where print data from the application are not translated into a metadata file but are translated directly into PDL data the application sends print data such as text images or graphics to a printer driver. When the print data are received from the application the printer driver translates the print data into a metadata file according to the above setting step S . Next the printer driver determines whether to encrypt the metadata file according to the setting of Encrypt metadata file on the Encryption Settings tab in the printer driver setting window step S .

When it has been specified to encrypt the metadata file the printer driver displays a Metadata Encryption window requesting a user to insert an ID card for encryption. When an ID card is inserted the printer driver reads data in the ID card calculates a hash value as in the PDL data encryption step encrypts the metadata file using the hash value as an encryption key step S and outputs the encrypted metadata file. When Encrypt metadata file has not been selected on the Encryption Settings tab in the printer driver setting window the printer driver outputs the metadata file without encryption step S .

 3 A generated metadata file is sent from the application to a printer driver and printed on a printer

The application loads a metadata file and sends the metadata file to a printer driver step S . The printer driver determines whether the received metadata file is encrypted step S . When the metadata file is encrypted the printer driver decrypts the metadata file. The printer driver displays a Metadata decryption window requesting a user to insert an ID card used for encryption step S . The printer driver reads data in the ID card and compares the ID in the ID card with the ID used for encryption step S . When the IDs match the printer driver decrypts the metadata file step S . When the IDs do not match the printer driver cancels the printing process step S . When the IDs match or the metadata file is not encrypted the printer driver passes the metadata file to the PDL translation unit step S and the PDL translation unit translates the metadata file into PDL data step S .

Exemplary operational methods of a printing system using metadata files according to the second embodiment are described below with reference to . First an exemplary method of encrypting a metadata file using a personal ID card is described below. In this exemplary method it is assumed that a user has generated a metadata file on a computer using a personal ID card. The metadata file is accessible from computers connected to a network . To print the metadata file using the application on the computer a user tries to decrypt the metadata file using a personal ID card. However since the ID of the ID card used for encryption and the ID of the ID card used for decryption are different the user cannot print the print data in the metadata file . For the same reason a user and a user cannot print the metadata file . In other words the metadata file can be decrypted only with the ID card of the user and therefore only the user can print the metadata file .

Next an exemplary method of encrypting a metadata file using an ID card containing a group ID is described below. In this exemplary method it is assumed that the user has generated a metadata file using an ID card containing a group ID. When the user belongs to the same group as that of the user and has an ID card containing the same group ID the user can decrypt and print the metadata file . However users belonging to different groups cannot use or print the metadata file .

Operational methods as described above make it possible to improve portability and security of print data at the same time.

1 Read data recorded in a card using a card reader connected to a computer and encrypt or decrypt print data by a PDL encryption unit using the data read from the card.

2 Read data recorded in a card using a contact or contactless card reader and encrypt or decrypt print data based on the data read from the card.

3 Read data recorded in a card using a card reader before first PDL data are generated by a first printing unit or second PDL data are generated by a second printing unit and encrypt the first PDL data or the second PDL data by a PDL encryption unit using the data read from the card.

4 When second PDL data generated beforehand are received by a printer driver read data recorded in a card using a card reader and decrypt the second PDL data by a PDL decryption unit using the data read from the card.

6 When first PDL data have been encrypted according to an encryption setting read data from a card used for the encryption with a card reader connected to a printer decrypt the first PDL data using the data read from the card and print the first PDL data.

7 When first PDL data sent to a printer have not been encrypted according to an encryption setting print the first PDL data even if a card reader is not connected to the printer.

The present application is based on Japanese Priority Application No. 2006 075260 filed on Mar. 17 2006 the entire contents of which are hereby incorporated herein by reference.

