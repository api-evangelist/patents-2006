---

title: System and method for instruction-based cache allocation policies
abstract: A cache is configured to have a first cache line allocation policy for a memory address. An instruction associated with the memory address is received and a second cache line allocation policy is determined based on the instruction. The cache is reconfigured to have the second cache line allocation policy in response to receiving the instruction. A data processor includes processor core to receive and execute an instruction associated with a memory address, a cache including a plurality of cache lines, and a cache allocation module to determine a cache line allocation policy based on the instruction and to reconfigure the cache to have the cache line allocation policy for execution of the instruction at the processor core.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08606998&OS=08606998&RS=08606998
owner: Advanced Micro Devices, Inc.
number: 08606998
owner_city: Sunnyvale
owner_country: US
publication_date: 20060824
---
The present application is related to U.S. patent application Ser. No. 11 052 432 entitled SYSTEM FOR RESTRICTED CACHE ACCESS DURING DATA TRANSFERS AND METHOD THEREOF and filed on Feb. 7 2005 the entirety of which is incorporated by reference herein.

The present disclosure is related generally to caching in processing systems and more specifically to configuring cache line allocations.

Cache memories often are utilized in processing systems to store information such as operand data or instruction data to be utilized by a processor or to be subsequently stored in more permanent memory such as system memory or a hard disk. In the event of a read operation or a write operation resulting from the execution of an instruction a copy of the data read from memory or the data to be written to memory is provided to the cache for potential storage. The cache in turn determines whether to allocate a cache line for storage of the supplied data based on the cache line allocation policy for the memory address or memory region that is associated with the read operation or write operation. Typically a cache implements a default cache line allocation policy for a particular memory address or memory region without regard to the particular characteristics or circumstances of the instruction being executed. However the default cache line allocation policy may not be the most appropriate policy for a given application or instruction sequence. Accordingly an improved technique for configuring cache allocations in a cache would be advantageous.

In accordance with one aspect of the present disclosure a method includes configuring a cache to have a first cache line allocation policy for a memory address receiving an instruction associated with the memory address and determining a second cache line allocation policy based on the instruction. The method further includes reconfiguring the cache to have the second cache line allocation policy in response to receiving the instruction.

In accordance with another aspect of the present disclosure a method includes receiving at data processor a first sequence of instructions the first sequence of instructions including a first instruction a second instruction to be executed subsequent to the first instruction and a third instruction to be executed subsequent to the second instruction. The second instruction includes an instruction to configure a cache associated with the data processor to have a first cache line allocation policy. The method further includes configuring the cache to have a second cache line allocation policy and executing the first instruction subsequent to configuring the cache to have the second cache line allocation policy. The method also includes executing the second instruction to configure the cache to have the first cache line allocation policy subsequent to executing the first instruction and executing the third instruction subsequent to executing the second instruction.

In accordance with yet another aspect of the present disclosure a data processor includes a processor core to receive and execute an instruction associated with a memory address a cache including a plurality of cache lines and a cache allocation module to determine a first cache line allocation policy based on the instruction and to reconfigure the cache to have the first cache line allocation policy for execution of the instruction at the processor core.

The term cache line allocation policy as used herein refers to the caching actions permitted for a particular read write event. Examples of caching actions can include for example no caching e.g. the memory region is uncacheable read allocation e.g. allocate a cache line only for a read event but not a write event write allocation e.g. allocate a cache line only for a write event but not a read event read write allocation e.g. allocate a cache line for both write events and read events . A cache line allocation policy also can indicate the timing or other constraints on caching actions. To illustrate one cache line allocation policy can designate a certain write action as a write through action whereby any write to the cache associated with the write action also is immediately propagated to memory whereas another cache line allocation policy may designate the write action as a write back action whereby the memory is updated with the cached data upon eviction of the cached data from the cache.

The processing core includes an instruction execution pipeline comprising for example an instruction fetch stage for fetching instruction data from a cache such as the cache an instruction decode stage for decoding fetched instruction data to generate one or more instructions a dispatch stage for ordering and dispatching instructions an execution stage having an integer unit and a floating point unit for executing dispatched instructions and a write back stage for storing the results of the executed instructions back to the cache or the memory . The memory controller interfaces with the memory to perform memory transactions initiated by the processing core or the cache controller .

The cache can include a data cache an instruction cache or a data and instruction cache i.e. a unified cache and may be implemented as a fully associative cache or a set associative cache. As illustrated the cache includes a tag array and a cache line array whereby each entry of the tag array is associated with a corresponding row of one or more cache lines of the cache array and stores a memory address portion associated with the data stored in the cache lines of the corresponding row.

The cache controller manages cache transactions initiated by the processing core . Further in the illustrated example the cache controller includes a cache line allocation controller to determine the cache line allocation polices for the cache and to configure the cache controller to comply with the selected cache line allocation policies. The cache line allocation controller may be implemented as hardware firmware software or a combination thereof. To illustrate illustrates the cache line allocation controller as a hardware component of the cache controller . Alternately the cache line allocation controller may be implemented as for example a set of microcode executed by the processing core so as to direct the processing core to configure the cache controller to implement a certain cache line allocation policy or the cache line allocation controller may be implemented as for example a hardware component of the processing core or otherwise separate from the cache controller .

In operation the cache line allocation controller initially configures the cache controller to implement default or instruction independent cache line allocation polices for corresponding memory addresses or memory regions or to implement a default global cache line allocation policy . As the execution of instructions commences the cache allocation controller is notified of an instruction to be executed and based on the instruction and other information the cache allocation controller configures the cache controller to implement an alternate cache line allocation policy other than the default cache line allocation policy for the instruction if so warranted by the instruction and by a policy arbitration process.

In the event that the cache line allocation controller is implemented at the cache controller as illustrated in the cache line allocation controller may be notified of an instruction by the processing core in any of a variety of manners. To illustrate the instruction fetch stage may notify the cache line allocation controller that a particular instruction has been prefetched and in response the cache line allocation controller can initiate the process of identifying an alternate cache line allocation policy if any for the instruction concurrent with the pre execution processing of the instruction by the decode stage and the dispatch stage . Alternately the instruction decode stage can notify the cache line allocation controller once it has decoded instruction data to generate the instruction or the dispatch stage can notify the cache line allocation controller once it has dispatched the instruction to the execution stage . Further the execution stage may notify the cache line allocation controller of the instruction as execution is initiated as well as providing post execution information regarding the instruction to the cache line allocation controller such as whether the execution of the instruction resulted in a memory access. The notification of the instruction can include for example a prefix for the instruction an opcode for the instruction a memory address associated with the instruction and the like.

In one implementation the cache line allocation controller can determine an alternate cache line allocation policy based on the instruction itself such as by performing a table lookup based on the instruction type as indicated by a prefix opcode or other identifier associated with the instruction. In another implementation the cache allocation controller can determine an alternate cache line allocation policy based on accesses to the same memory address by other instructions or the same instruction over a given execution period. To illustrate for a particular instruction associated with a particular memory address the cache allocation controller can increment a count associated with the instruction each time an instruction accesses the particular memory address over a given execution period and once the count exceeds a predetermined threshold an alternate cache line allocation policy can be implemented for the instruction or instruction type as to allow cache line allocation for the next instance of the instruction or instruction type. Conversely in the event that the count of accesses to the particular memory address fails to exceed a certain threshold the cache line allocation controller may elect to implement an alternate cache line allocation policy whereby cache line allocations for the instruction are denied.

In addition to or rather than implementing an alternate cache line allocation policy for an instruction based on the instruction itself the cache line allocation policy for a given memory region can be reconfigured by the execution of an instruction having an express purpose of reconfiguring a cache line allocation policy of the cache . To illustrate it may be advantageous to permit cache line allocation for an identified instruction in a tight loop that is executed numerous times while denying cache line allocation for all other instructions operating on the same memory region. Accordingly a cache allocation instruction can be executed prior to the execution of the identified instruction so as to change the cache line allocation policy for the benefit of the identified instruction. In such instances the execution of the cache allocation instruction manipulates the execution stage or the writeback stage to directly reconfigure the cache line allocation policy of the corresponding memory region for the cache . For example the instruction sequence can be arranged so that a first cache allocation instruction can be dispatched to the execution stage prior to the dispatch of the identified instruction so as to change a default cache line allocation policy that denies all cache line allocation to one that permits cache line allocation. Accordingly when the identified instruction is executed its associated data can be cached in the cache due to the change in the cache line allocation policy. The instruction sequence then can include a second cache line allocation instruction dispatched to the execution stage subsequent to the identified instruction so as to revert the cache back to the default cache line allocation policy. The implementation of cache allocation instructions is described in greater detail herein with reference to .

Further in one embodiment the reconfiguration of the cache controller to implement the alternate cache line allocation policy can be conditioned on an authorization to override the default or instruction independent cache line allocation policy. To illustrate the default cache line allocation policy for a memory region may indicate that a memory address or memory region is uncacheable. In this instance it may prove problematic to change the cache line allocation policy for this memory address or memory region so that it is cacheable and thus replacement of this default cache line allocation policy with an alternate may be identified as unauthorized or otherwise prohibited. As another example the default cache line allocation policy for a memory region may be write back no write allocate. In this instance it may be unlikely that changing this default cache line allocation policy would be problematic and thus replacement of this default cache line allocation policy with an alternate may be identified as authorized or otherwise permitted. Accordingly the cache line allocation controller may be configured to permit or deny the replacement of default cache line allocation policies with instruction based cache line allocation policies for certain memory addresses or memory regions based on authorization information associated with the default cache line policies.

The alternate cache line allocation policy for a given instruction or instruction type may be determined in any of a variety of ways. In one manner the alternate cache line allocation policy may be determined by an anticipated usage of the instruction. For example instructions associated with a program stack often may benefit from a cache line allocation policy that permits cache line allocation because the write operations associated with a PUSH instruction implies a near term read operation of the data location by a corresponding POP instruction. Thus permitting cache line allocations for a PUSH instruction to a certain memory region while otherwise denying cache line allocations for the memory region can result in increased efficiency due to the avoidance of a memory access operation for the cache miss of a subsequent POP operation that otherwise would have resulted had no cache line been allocated for the data stored by the PUSH instruction.

In another manner the alternate cache line allocation policy may be determined based on an analysis of the instruction in the context of the program to which it belongs or determined based on an empirical analysis of the execution of the program. To illustrate a certain instruction may occur in a tight loop that is expected to be executed numerous times. Accordingly it likely would be advantageous to permit cache line allocation for this instruction so as to reduce the likelihood of cache misses even while denying cache line allocation to other instructions operating on the same memory address or memory region. In contrast it may be determined that instructions of a certain type rarely result in a memory access even if caching is permitted for these instructions by default. Accordingly it may prove beneficial to disable cache line allocation for these instructions so as to free up the cache for other data even while permitting cache line allocation for other instructions operating on the same memory region.

The instruction based policy table provides one or more alternate cache line allocation policies available for listed instructions or instruction types. To illustrate the instruction based policy table can include a plurality of entries each entry having an instruction field that identifies the instruction or instruction type such as by prefix or opcode and a corresponding cache line allocation policy field that stores one or more values representative of alternate cache line allocation policies for the identified instruction or instruction type.

The default policy table provides the default cache line allocation policy for each corresponding memory address or memory region. To illustrate the default policy table can include a plurality of entries each entry having a memory address field that identifies a respective memory address or memory region a default cache line allocation policy field that stores a value representative of the corresponding default cache line allocation policy and a override field that stores a value indicating whether overriding or otherwise replacing the default cache line allocation policy is authorized. For ease of illustration it is assumed for the following discussion that the override field stores a one bit value that indicates whether overriding the default cache line allocation policy is authorized for any and all alternate cache line polices. However it will be appreciated that in other implementations the override field can store a multibit value so as to further refine which types of alternate cache line allocation polices are authorized and which types are not authorized for a given default cache line allocation policy.

The alternate policy selection module has access to the instruction dependent policy table and includes an input to receive a notification of an instruction to be executed and outputs to provide a proposed alternate cache line allocation policy based on the instruction and the instruction dependent policy table . In operation the alternate policy selection module performs a table lookup in the instruction dependent policy table in response to receiving the notification using for example the prefix or opcode of the instruction as the index for the instruction type field . Based on the table lookup the alternate policy selection module selects an alternate cache line allocation policy for the instruction if any from the corresponding cache line allocation policy field and provides a representation of the selected cache line allocation policy as the proposed alternate cache line allocation policy .

The policy arbitration module has access to the default policy table and includes an input to receive the proposed alternate cache line allocation policy and an output to provide an indication of the cache line allocation policy to be implemented by the cache controller hereinafter the implemented cache line allocation policy . In one embodiment the implemented cache line allocation policy is represented by a value written to a register or a set of signals which controls the caching actions taken by the cache controller with respect to the corresponding memory address or memory region.

In operation the policy arbitration module performs a table lookup in the default policy table to determine whether overriding the default cache line allocation policy for the memory address or memory region is authorized based on the override field . In the event that no alternate cache line allocation policy exists for the instruction or in the event that overriding the default cache line allocation policy is not authorized provides an indication of the default cache line allocation policy as the implemented cache line allocation policy thereby configuring the cache controller so that the default cache line allocation policy is remains in place for the cache . Otherwise if there is an alternate cache line allocation policy and overriding the default cache line allocation policy is authorized the policy arbitration module provides an indicator of the alternate cache line allocation policy as the implemented cache line allocation policy thereby configuring the cache controller so that the alternate cache line allocation policy is implemented for the cache .

The instruction history table provides a history of memory access to identified memory addresses or memory regions over an execution period. To illustrate the instruction history table can include a plurality of entries each entry having a memory address field that identifies the corresponding memory address or memory region an instruction field that identifies an instruction or instruction type such as by prefix or opcode and a corresponding count field that stores a value representative of the number of times a memory access has accessed the corresponding memory address or memory region over a given execution period.

The history table manager module has access to the instruction history table and includes inputs to receive a notification of an executed instruction a memory address signal representative of the memory address of a respective memory transaction and a reset signal . The notification is provided by the processing core in response to the execution of an instruction where the notification indicates the instruction or instruction type and the memory address signal is provided by the processing core or other component for example as part of a memory transaction snooped by the cache controller .

In operation the history table manager module generates an entry in the instruction history table for the first occurrence of a given instruction during an execution period that results in a write event whereby the entry includes an identifier of the instruction e.g. the instruction pointer or counter for a specific instruction or an instruction type identifier if processed based on type the memory address or memory region associated with the instruction and initializes the corresponding count field to zero or some other initial value. For each subsequent instruction during the execution period that results in an access to the indicated memory address or memory region as indicated by for example the memory address snooped from a memory transaction the history table manager module increments the count in the count field of the corresponding entry of the instruction history table . When the reset signal is asserted thereby indicating the end of an execution period as determined by a number of clock cycles or a number of instructions executed the history table manager module clears the count fields of information history table and begins counting memory accesses afresh.

The alternate policy configuration module has access to the instruction history table and the threshold table and includes outputs to provide an instruction signal indicating an instruction or instruction type and a policy signal indicating an alternate cache line allocation policy for storage as an entry or for replacing an entry in the instruction dependent policy table . In one implementation the alternate policy configuration module sequentially accesses each entry in the instruction history table in response to a predetermined event such as the expiration of a counter. For each entry the alternate policy configuration module determines the number of memory accesses as indicated by the corresponding count field . Further the alternate policy configuration module determines one or both of an upper count threshold and a lower count threshold from the threshold table .

The alternate policy configuration module then compares the count obtained from the instruction history table with the upper count threshold if any. In the event that the obtained count exceeds the upper count threshold thereby indicating that caching the instruction likely would provide a performance gain the alternate policy configuration module selects an alternate cache line allocation policy that allows cache line allocation for the associated memory address or memory region. Alternately in the event that the obtained count falls below the lower count threshold thereby indicating that caching for the instruction likely is not providing a performance gain the alternate policy configuration module selects an alternate cache line allocation policy that denies cache line allocation for the associated memory address or memory region. After determining the appropriate alternate cache line allocation policy the alternate policy configuration module provides an indicator of the instruction or instruction type and an indicator of the selected alternate cache line allocation policy as signals and respectively for storage in the instruction dependent policy table . In another implementation the alternate policy configuration module is implemented as part of the alternate policy selection module and performs the threshold based policy selection process so as to provide the proposed alternate cache line allocation policy . Thus as illustrated by the controller of the alternate cache line allocation policies for instructions can be dynamically modified in response to prior access history to the corresponding memory address or memory region.

In the event that an alternate cache line allocation policy is not available for the instruction to be executed the method includes executing the instruction and caching data for the instruction in accordance with the default cache line allocation policy in place at block . Otherwise if an alternate cache line allocation policy is available the method includes determining an authorization to override the default cache line allocation policy for the memory address or memory region at decision block . As discussed above authorization to override can be indicated as for example an override bit or bits associated with the default cache line allocation policy.

In the event that overriding the default cache line allocation policy is not authorized the method flows to block whereby the instruction is executed and associated data is cached according to the default cache line allocation policy already in place. Alternately the lack of authorization could result in the generation of an exception thereby indicating a possible error condition. In the event that overriding the default cache line allocation policy is authorized at block the method includes arbitrating between the alternate cache line allocation policy and the default cache line allocation policy based on any of a variety of criteria so as to select an cache line allocation policy to be implemented from the alternate cache line allocation policy and the default cache line allocation policy. In the event that the arbitration results in keeping the default cache line allocation policy the method includes maintaining the default cache line allocation policy. Otherwise if the arbitration results in the selection of the alternate cache line allocation policy block further includes reconfiguring the cache to implement the alternate cache line allocation policy. In one embodiment the cache can be configured accordingly by storing a value representative of the alternate cache line allocation policy in one or more registers associated with cache controller that are used to control caching actions of the cache controller.

After reconfiguring the cache the method includes executing the instruction and caching data associated with the instruction in accordance with the implemented alternate cache line allocation policy at block . In certain instances it may be advantageous to return the cache to the original default cache line allocation policy after the instruction has been executed. In this instance the method includes reconfiguring the cache to implement the default cache line allocation policy after executing the instruction at block and awaiting the next instruction to be executed at event . Alternately the default cache line allocation policy can remain in place until reconfigured in response to another instruction with a different alternate cache line allocation policy at event until the expiry of a timer and the like.

As discussed above in addition to or instead of reconfiguring a cache to have an alternate cache line allocation policy for an instruction to be executed in one embodiment the cache is configured to have an alternate cache line allocation policy through the execution of a cache allocation instruction that manipulates a processing core to directly configure the cache to implement an alternate cache line allocation policy or to return the cache to the default cache line allocation policy. In the example of a cache allocation instruction is fetched pre processed and then provided to the execution stage of the processing core of the data processor . The cache allocation instruction includes as an operand a value representative of the alternate cache line allocation policy or a value that serves as a pointer or index to a stored value representative of the alternate cache line allocation policy. In one embodiment the execution stage is configured so as store data representative of the alternate cache line allocation policy in one or more registers associated with the controller so as to control the caching actions of the cache controller thereby configuring the cache controller to implement the alternate cache line allocation policy. Alternately the execution stage may implement a lightweight MSR associated with its arithmetic logical unit ALU through which cache line allocation policies can be configured. The storing of the data can be implemented as for example a microcode instruction.

At cycle the cache controller is configured to implement a cache line allocation policy A that configures the cache to deny cache line allocation for the identified memory address or memory region. Accordingly when the instruction is submitted for execution no cache line is allocated for a read operation or a write operation resulting from the execution of the instruction in accordance with the default cache line allocation policy A.

At cycle n the cache allocation instruction is submitted for execution by the execution state . In this example the cache allocation instruction includes as an operand a value representative of an alternate cache line allocation policy B for which cache line allocation for the identified memory address or memory region is permitted. Accordingly upon execution of the cache allocation instruction the execution stage configures the cache controller to implement the cache line allocation policy B thereby configuring the cache controller to permit cache line allocation for the identified memory address.

At cycle n x the instruction is submitted for execution by the execution stage . However unlike the situation for instruction at cycle the cache is at this point configured to implement the alternate cache line allocation policy B so a read operation or a write operation resulting from the execution of the instruction can result in a cache line allocation for the instruction .

In the event that the instruction is not a cache allocation instruction the method includes executing the instruction and caching data for the instruction in accordance with the cache line allocation policy in place at block . Otherwise if the instruction is a cache allocation instruction the method includes determining an authorization to override the default cache line allocation policy for the memory address or memory region at decision block . As discussed above authorization to override can be indicated as for example an override bit or bits associated with the default cache line allocation policy.

In the event that overriding the default cache line allocation policy is not authorized the method includes terminating execution of the cache allocation instruction at block and moving on to the next instruction at event . Alternately an exception can be generated at block to indicate a potential error condition. In the event that overriding the default cache line allocation policy is authorized the method includes reconfiguring the cache to implement the alternate cache line allocation policy indicated by the cache allocation instruction at block . In one embodiment the cache can be configured accordingly by storing a value representative of the alternate cache line allocation policy in one or more registers of a cache controller that are used to control cache line allocation by the cache controller or by providing one or more signals indicating desired caching actions to be implemented by the cache . The flow of method then returns to event for the next instruction to be executed.

The above disclosed subject matter is to be considered illustrative and not restrictive and the appended claims are intended to cover all such modifications enhancements and other embodiments which fall within the scope of the present disclosure. Thus to the maximum extent allowed by law the scope of the present disclosure is to be determined by the broadest permissible interpretation of the following claims and their equivalents and shall not be restricted or limited by the foregoing detailed description.

