---

title: Apparatus and method for mirroring and restoring data
abstract: An apparatus and method for mirroring data is provided wherein integrity of data on a mirror device is maintained during and after a restore process of data to a standard volume. Because integrity of the mirror is maintained, data from the mirror may be used to perform a later restore to the standard volume if data becomes corrupted, or data is unavailable for any other reason. As a result, the mirror may be used for backup or other operations.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07444420&OS=07444420&RS=07444420
owner: EMC Corporation
number: 07444420
owner_city: Hopkinton
owner_country: US
publication_date: 20060421
---
This application is a continuation of U.S. application Ser. No. 09 876 492 filed Jun. 7 2001 now U.S. Pat. No. 7 149 787 which are hereby incorporated by reference in their entirety.

The invention relates to data storage for computers and more particularly to a method and apparatus for mirroring and restoring data.

Storage is widely used for storing data associated with computer systems. Storage may be primary storage used for routinely accessing information or may be secondary storage providing redundant or archival storage to permit data recovery in the case of loss of data in the primary storage system. Examples of primary storage include systems referred to as production or working data storage systems. Examples of secondary storage include systems referred to as backup systems. Storage may be used for example for storing executable program code commonly referred to as computer programs or applications and or data input to and generated by such program code.

Storage of data is conventionally performed by storage systems including one or more storage devices arranged into one or more storage volumes. Storage devices may be for example disk devices that store data on one or more types of media including magnetic optical or other type of media used for storing data. More particularly disk devices may be arranged into one or more data storage areas referred to in the art as volumes that are capable of being accessed by one or more computer systems referred to as hosts. A volume is commonly defined as a virtual storage area into which a file system database management system or other system or process places data. A volume may include a single partition of a disk device or multiple partitions located on one or more physical storage devices. Generally volumes are managed by the storage systems which are computer systems that provide storage related services to hosts. The hosts communicate with a storage system through a communication medium such as a network. Typical networks used to transfer data between hosts and storage systems include Fibre Channel SCSI Ethernet Gigabit Ethernet and other types of communication networks. Data is transferred between systems using one or more communication protocols as is well known in the art.

Many storage systems enable data to be copied from one or more of these storage devices to another device to allow data to be restored in case of failure of a disk device deletion of data or other reason. Some storage systems provide the ability to copy data to secondary storage for archival purposes such as backups while other storage systems maintain copies of data in real time.

This copying of data in real time from one storage area to another is referred to in the art as mirroring data. Generally a standard volume or disk device is defined as the primary storage area for data and a mirror volume or mirror device is defined as the secondary storage area. The term mirror is used generally hereinafter to refer to a mirror volume or mirror device. A mirror may be a logical construct such as a logical volume comprising an array of one or more disks or the mirror may be a physical device such as a disk. A mirror is typically used for redundancy in that a controller of a storage system having a standard volume and a mirror accesses media of either the standard volume or the mirror when a read failure occurs. More particularly in the case of a read failure caused by a defect on the surface of one of either the standard volume or mirror disk drives a crash of one of these drives or other problem the controller simply reads the intact version of the file from the intact drive. If the read failure is caused by a media defect the controller can automatically read the data from the copy of the file on the other drive and write it to a new undamaged area on the drive on which the defect occurred.

For example a mirror associated with a standard volume is synchronized by the storage system to the standard volume. That is data residing on the standard volume is copied to the mirror and updates to data residing on the standard volume are also performed on the mirror. A mirror that is synchronized to a standard volume is said to be in a mirrored state. A mirror which is no longer being synchronized with the standard volume is said to be in a split state.

Mirrors may also be used to perform backups reports and other operations requiring availability of the standard volume. More particularly because certain operations require locking of data affect read write performance or otherwise affect normal access to the data by hosts a mirror volume may be used to provide data for these certain operations without affecting performance to the standard volume. Typically a mirror is first synchronized to the standard volume so that data may be copied to the mirror and then the mirror is placed in a split state. Thereafter the mirror functions as a snapshot of the standard volume at the time the mirror was split. The snapshot may be then used to perform a backup such as to another secondary storage area reports may be generated based on the data stored in the snapshot or the snapshot may serve as an operational storage area to offload read requests from standard volumes data mining operations and other tasks.

The snapshot may also be used to restore data to the standard volume. For instance the snapshot may be used to perform a full or an incremental restore of data to the standard volume in the case of data deletion failure of one or more disk devices of the standard volume read failure or other reason.

In any case data from the snapshot is restored to the standard volume and the snapshot is resynchronized with the standard volume. Resynchronization of the snapshot to the standard volume involves copying of updated data from the standard volume to the snapshot.

In accordance with one embodiment of the invention a method is provided for mirroring data of a first storage area. The method comprises placing a second storage area in a first state wherein updates to the first storage area are made to the second storage area mirroring data from the first storage area to the second storage area changing a state of the second storage area from the first state to a second state in which updates to the first storage area are not made to the second storage area and restoring data to the first storage area from the second storage area while maintaining the second storage area in the second state. According to another embodiment of the invention the method further comprises writing only to the first storage area any data received during the act of restoring. According to another embodiment of the invention the method further comprises maintaining after the act of restoring is complete the second storage area in the second state. According to another embodiment of the invention the method further comprises receiving a read request issued by a host and reading during the act of restoring data from the second storage area in response to the read request if the data has not been restored to the first storage area.

In accordance with one embodiment of the invention a method is provided wherein the act of changing further comprises allowing the second storage area to be accessed independently from the first storage area. According to another embodiment of the invention the method further comprises performing an incremental restore of data from the second storage area to the first storage area. According to another embodiment of the invention the act of restoring includes performing a full restore of data from the second storage area to the first storage area. According to another embodiment of the invention the method further comprises assigning an address to the second storage area the second storage area being capable of being accessed through the address independently from an address of the first storage area. According to another embodiment of the invention the first storage area and second storage area are respectively located on first and second logical volumes of a storage system.

In accordance with another embodiment of the invention the method further comprises indicating whether data has been restored to the first storage area to the second storage area. In accordance with another embodiment of the invention the method further comprises restoring data read from the second storage area to the first storage area. In accordance with another embodiment of the invention at least one of the placing mirroring changing and restoring acts is initiated by a command issued at a host computer. In accordance with another embodiment of the invention the second storage area contains a snapshot of data of the first storage area and wherein the method further comprises updating after the restoring act is complete data within the first storage area such that the updated data within the first storage area is different from the snapshot of data and restoring from the second storage area the snapshot data to replace the updated data within the first storage area.

In accordance with another embodiment of the invention a storage system is provided comprising a first storage area a second storage area and at least one controller that places the second storage area mirrors data from the first storage area to the second storage area changes a state of the second storage area from the first state to a second state in which updates to the first storage area are not made to the second storage area and restores data to the first storage area from the second storage area while maintaining the second storage area in the second state. According to another embodiment of the invention the controller writes only to the first storage area any data received during restoring of data to the first storage area. According to another embodiment of the invention the controller maintains after restoring of data to the first storage area is complete the second storage area in the second state. According to another embodiment of the invention the controller receives at the storage system a read request issued by a host and reads during restoring of data to the first storage area data from one of the first and second storage areas in response to the read request. According to another embodiment of the invention the controller allows the second storage area to be accessed independently from the first storage area.

According to another embodiment of the invention the controller performs an incremental restore of data from the second storage area to the first storage area. According to another embodiment of the invention the controller performs a full restore of data from the second storage area to the first storage area. According to another embodiment of the invention the controller assigns an address to a disk device associated with the second storage area the second storage area being capable of being accessed through the address independently from an address of the first storage area.

According to another embodiment of the invention the controller includes means for placing the second storage area in the first state means for mirroring data from the first storage area to the second storage area means for changing the state of the second storage area from the first state to the second state and means for restoring data to the first storage area from the second storage area while maintaining the second storage area in the second state.

In accordance with a further embodiment of the invention a computer readable medium is provided which is encoded with a computer program that when executed on a computer system causes the computer system to perform a method comprising acts of placing a second storage area in a first state wherein updates to the first storage area are made to the second storage area mirroring data from the first storage area to the second storage area changing a state of the second storage area from the first state to a second state in which updates to the first storage area are not made to the second storage area and restoring data to the first storage area from the second storage area while maintaining the second storage area in the second state. According to another embodiment of the invention the computer program is further adapted to cause the computer to perform writing only to the first storage area any data received during the act of restoring.

According to another embodiment of the invention the computer program is further adapted to cause the computer to perform maintaining after the act of restoring is complete the second storage area in the second state. According to another embodiment of the invention the computer program is further adapted to cause the computer to perform receiving at the storage system a read request issued by a host and reading during the act of restoring data from the second storage area in response to the read request if the data has not been restored to the first storage area. According to another embodiment of the invention the act of changing further comprises allowing the second storage area to be accessed independently from the first storage area. According to another embodiment of the invention the act of restoring includes performing an incremental restore of data from the second storage area to the first storage area.

According to another embodiment of the invention the act of restoring includes performing a full restore of data from the second storage area to the first storage area. According to another embodiment of the invention the computer program is further adapted to cause the computer to perform assigning an address to the second storage area the second storage area being capable of being accessed through the address independently from an address of the first storage area. According to another embodiment of the invention the first storage area and second storage area are respectively located on first and second logical volumes of a storage system. According to another embodiment of the invention the computer program is further adapted to cause the computer to perform indicating whether data has been restored to the first storage area from the second storage area.

According to another embodiment of the invention the computer program is further adapted to cause the computer to perform restoring data read from the second storage area to the first storage area. According to another embodiment of the invention at least one of the placing mirroring changing and restoring acts is initiated by a command issued at a host computer. According to another embodiment of the invention the computer program is further adapted to cause the computer to perform updating after the restoring act is complete data within the first storage area restoring from the second storage area data to replace the updated data within the first storage area.

Further features and advantages of the present invention as well as the structure and operation of various embodiments of the present invention are described in detail below with reference to the accompanying drawings. In the drawings like reference numerals indicate like or functionally similar elements. Additionally the left most one or two digits of a reference numeral identifies the drawing in which the reference numeral first appears.

When a storage device is placed in a mirrored state with a storage device of a standard volume the state of data on the storage device of the mirror is synchronized with that of the standard volume. If the standard volume becomes corrupted or data on a storage device of the standard volume is not available for any other reason data may be restored from the split volume. A restore operation typically involves not only copying information from the mirror to the standard volume but also a resynchronization whereby any updates of the standard volume are passed to the mirror such that any writes received while the restore is in progress are generally performed to both the mirror and the standard volume. If a corrupting write is made the corrupting write is performed to both the mirror and standard volume and therefore the capability of recovering uncorrupted data is lost.

According to one embodiment of the invention while the restore of data from the mirror to the standard volume is ongoing updates to the standard volume are not passed to the mirror so that integrity of the mirror is retained. In a further embodiment after the restore of data is complete the mirror assumes a split state rather than a synchronized or established state as in a conventional mirror operation. Because writes are performed to the standard volume and not the mirror the integrity of data stored on the mirror is maintained. Thus the mirror may be used again to perform another restore or be put into operation for reading data. Also the mirror is not susceptible to a corrupting write performed during or after the restore operation.

An apparatus and method for mirroring data is provided wherein integrity of data on a mirror device is maintained during a restore process of data to a standard volume. Because integrity of the mirror is maintained data from the mirror may be used to perform a later restore to the standard volume if data becomes corrupted data is unavailable for any other reason for backup or any other purpose.

The method may be implemented in any storage system capable of controlling read and write operations to standard and mirror volumes. The storage system may be a general purpose computer system or may include specialized software and or hardware to perform storage and management of data. The aspects of the present invention are not limited to use with any particular storage system.

For example a user may create a mirror of standard volume . The mirror is then split from the standard volume such that no updates to the mirror occur. The mirror may later be used to perform a restore operation to standard volume . More particularly storage system may perform a restore of data from mirror A to standard volume upon a request initiated by host A. Storage system may also perform other operations such as splitting one or more mirrors A B from standard volume resynchronizing mirror A to the standard volume or any other type of operation involving data located on any of volumes .

It should be appreciated that mirror and standard volumes may be located in and controlled by separate systems or may be located within and controlled by the same storage system . Data may be located in same or different systems systems may be physically within the same physical enclosure or may be located in different physical enclosures connected by one or more communication links. It should also be appreciated that one or more physical storage devices e.g. disk drives may be used to create a volume and that mirror operations may involve copying between sets of storage devices. Other configurations of a storage system are possible that are within the spirit and scope of the invention. For example although shows volumes including one or more disks it should be appreciated that any storage device may be used.

An example of a storage system on which aspects of the present invention may be implemented is the Symmetrix line of storage systems available from the EMC Corporation Hopkinton Mass. Storage system of corresponds to the general architecture of a Symmetrix storage system. Again this architecture is shown by way of example only as it should be appreciated that embodiments of the invention described below can be implemented on numerous other architectures.

A general purpose computer system may include a processor connected to one or more storage devices. Devices of a general purpose computer system may be coupled by a communication device such as bus. A general purpose computer system also generally includes one or more output devices such as a monitor or graphic display or printing device. Further the general purpose computer system typically includes a memory for storing programs and data during operation of the computer system. In addition the general purpose computer system may contain one or more communication devices that connect the computer system to communication network . This communication device may be for example an adapter that converts timing and protocol of one communication network to another. For example communication device may be a host bus adapter HBA that is installed in a host and permits the host to communicate with storage system .

As is known in the art a general purpose computer system is programmable using a high level computer programming language. A general purpose computer system may also be implemented using specially programmed special purpose hardware. In such a computer system a processor is provided which is typically a commercially available processor such as an Intel PENTIUM type processor AMD Athlon AMD Duron Motorola PowerPC Sun Ultra SPARC Hewlett Packard PA RISC processors or any other type of processor. Many other processors are available from a variety of manufacturers. Such a processor usually executes an operating system which may be for example the Windows 95 Windows 98 Windows NT or Windows 2000 Windows ME operating systems available from the Microsoft Corporation MAC OS System X available from Apple Computer the Solaris Operating System available from Sun Microsystems or UNIX available from various sources. Many other operating systems may be used and the invention is not limited to any particular implementation.

Various aspects of the invention may be implemented in storage system hosts or a combination thereof. For example various aspects of the invention may be programmed in a programming language e.g. C C or other language and executed by one or more processors of any host A C storage system or combination thereof. Backup and restore operations may be initiated by one or more hosts A C or any other system and a processor of storage system may initiate commands to perform these operations. For example various aspects of the invention may be implemented in hardware and or software of storage system . As discussed storage system may be a general purpose computer system or specialized software and or hardware used to perform storage of data. Various aspects of the invention may be programmed in a software programming language to be executed on the general purpose or specialized computer system.

Various embodiments of the present invention may be programmed using an object oriented programming language such as SmallTalk JAVA or C as is known in the art. Other programming languages also can be used. Alternatively functional programming may be used. Also the invention is not limited to being implemented in software microcode or dedicated hardware may be used. It should also be appreciated that various aspects of the invention may be performed in a distributed manner. For example various aspects of the invention may be performed by one or more computers coupled to communications network in conjunction with storage system .

It should be understood that the invention is not limited to a particular computer system platform processor operating system or network. Also it should be apparent to those skilled in the art that the present invention is not limited to a specific programming language or computer system and that any appropriate programming languages and computer systems could also be used.

Network may be any communication channel used to communicate information between systems. For example network may be a Small Computer System Interface SCSI Enterprise System Connection Architecture ESCON SCSI 2 Fibre Channel Gigabit Ethernet or any other type of communication channel. It should be appreciated that network may be any type of network used to transfer control information and data between a host A C and storage system and that storage system may be coupled to more than one network .

Within storage system is a controller such as host adapter which manages and translates read and write requests from one or more host computers A C into one or more requests that determine how data is stored or retrieved from disk devices A D. These read and write requests are transmitted and received over network using a communication protocol as known in the art. For example the communication protocol may be the SCSI SCSI 2 TCP IP Fibre Channel or other communication protocol. Host adapter may be implemented in any number of ways including using a general purpose processor custom hardware or combination. Also it should be appreciated that system can have more than one host adapter to provide additional I O channels for storage system .

Host adapter communicates with other components of storage system using network . Network may be for example a bus or any other communication channel including SCSI SCSI 2 ESCON Gigabit Ethernet or any other type of network. Also there may be more than one network within storage system . For example multiple networks connecting one or more components of system in parallel may be provided. Network may also include passive or active communication equipment media or a combination thereof. Other configurations may also be used.

Access to disk devices A D is controlled through the use of controllers known as disk adapters A D. Disk adapters A D can also be implemented using a general purpose processor or a custom hardware design. In the embodiment illustrated in a disk adapter is provided for each disk device. A disk adapter can of course have more than one storage device attached to it. In addition disk adapters may include secondary connections to physical storage devices of another disk adapter. Secondary connections permit recovery from failure of one disk adapter by shifting its functions to the second disk adapter.

In the embodiment shown in reading and writing to disk device A D through disk adapters A D is facilitated through use of a cache . Cache may be for example a random access memory having greater speed than disk devices A D. When reading data if the data is temporarily stored in the cache the read request can be fulfilled more quickly by taking data from cache . Similarly when writing data the data to be written can be stored in cache .

Storage system also includes a service processor coupled to network . Service processor may have an associated display keyboard and other I O devices to permit an operator to use service processor for configuring components of storage system and for running or initiating diagnostic and maintenance facilities.

One or more of disk devices A D may be configured as one or more standard volumes and one or more mirrors A B. For example disk device A may be configured as standard volume and disk devices B D may be configured as mirrors of disk device A. Other configurations may be used. Volumes do not need to have a one to one correspondence with disks. For example a disk may be configured with two volumes one being a standard volume and the other being a mirror of the standard volume.

In the shown configuration data is synchronized between disk device A and devices B D. More particularly when host adapter receives a write request from a host to the standard volume supported by disk device A host adapter issues a write command to disk devices A D to perform writes on each of the individual disk devices A D respectively. Similarly when a host issues a request to read data from the standard volume host adapter may issue read requests to one or more disk devices A D to read the requested data. To increase read response host adapter may issue multiple read requests to read different portions of the requested data from different disk devices. In this manner parallel access to multiple mirrored disk devices increases read performance as is well known in the art.

As discussed above a mirror may be split from the standard volume for performing backups reports and other operations requiring availability of the data within the standard volume. One technique for performing such mirroring is referred to in the art as a Business Continuation Volume BCV available from the EMC Corporation Hopkinton Mass. A BCV is a mirror image of a standard volume that can be split from the standard volume without impacting performance of the standard volume. In particular a BCV can be used to run tasks that otherwise cannot be performed without impacting availability of the standard volume. Because information may be accessed from a BCV and its corresponding standard volume in parallel multiple operations involving the stored data may be performed at the same time. Once a BCV device is established as a mirror of a standard device the two devices are referred to collectively as a BCV pair. The pair includes two types of devices the standard volume and the BCV mirror. Once operations involving data stored on the BCV are complete the mirror may be resynchronized with the standard volume reassigned to another standard volume or maintained in its split state to be used for another task.

A BCV device when mirrored to a standard volume is typically not independently addressable. However when the BCV is split from the standard volume it is assigned an independent address allowing the BCV to be accessed by one or more systems or processes. These systems or processes may be for example a reporting process executed on a host which analyzes data stored on the BCV.

When the storage system is the Symmetrix storage system and one or more of disk devices B D are configured as BCVs the storage system may also include an application programming interface API which allows application developers to access Symmetrix storage system configuration status performance control data and other Symmetrix storage system features. This API is referred to in the art as the SymmAPI Control application programming interface which is a C programming interface between a Symmetrix storage system and a host. This interface is well known in the art of storage programming. In an IBM MVS host environment for example the SymmAPI Control API is a set of MVS compatible software routines provided on the host that may be accessed and executed by a user or programmer to configure and manage Symmetrix storage systems.

A product referred to in the art as the EMC TimeFinder software system available from the EMC Corporation is a combination of host software and Symmetrix storage system microcode which allows users operating a host to alter an operation state of a BCV and to control the sequence in which these state alterations occur. The host software and microcode components also provide the ability to invoke user written processes to control the usage of BCVs. The EMC TimeFinder system is integrated with the SymmAPI control API to control operations associated with BCVs.

More particularly the TimeFinder system provides host management utilities to control the creation of a BCV pair e.g. a BCV device and a device of a standard volume and the synchronization of data between devices of the BCV pair. The TimeFinder system provides command line utilities available on a number of systems including MVS UNIX and Windows NT host operating systems. Standard management utilities included with the TimeFinder software system include a command utilities line interface CLI for the UNIX and NT operating systems and an MVS batch utility for monitoring and executing TimeFinder operations as part of a batch job on an MVS host. The host may also include a graphical user interface GUI to define BCV pairs. It should be appreciated that any system for configuring and managing mirrors may be used and the invention is not limited to this particular implementation.

The EMC TimeFinder system allows a user to create BCVs and to control BCV operations using host commands. More particularly the EMC TimeFinder software system allows a user to establish a BCV and split it from a standard volume to make the BCV available to a host or other system. After data operations using BCV data are complete the BCV device may be resynchronized also referred to as re established with the standard volume. Typical BCV operations include establish split re establish restore incrementally restore and query.

Host commands provided by the EMC TimeFinder system that allow a user to create and control BCV operations include the well known ESTABLISH RE ESTABLISH SPLIT RESTORE CONFIG QUERY VERIFY and SETUP commands.

The ESTABLISH command assigns the BCV as the next available mirror of a standard Symmetrix volume and copies the entire contents of the standard volume to the BCV. The BCV device address remains unavailable to any host while the device remains in an established state.

The RE ESTABLISH command synchronizes a previously suspended standard BCV pair and makes the BCV not ready to the host. Only the data changed on the standard device is copied to the BCV.

The SPLIT command splits a previously specified BCV pair and returns the standard volume to normal operation. The BCV then becomes available to any host through an independent address assigned to the BCV. To ensure that the split pair contains an updated and consistent copy at the time of termination the storage system confirms that synchronization is completed between the standard and BCV mirror prior to completing the split. The host can resume operation with the standard Symmetrix volume after completing the split operation.

The RESTORE command assigns the BCV as the next available mirror of a standard Symmetrix volume and copies the entire contents of the BCV to the standard volume. The BCV address remains unavailable to any host while the device remains in a restored state. While in the restored state the BCV is an active mirror of the standard volume and updates to the standard volume are copied to the mirror.

The CONFIG command specifies a number of conditions that determine an operating state of the BCV including HOLD RELEASE NR and READY conditions for a BCV device. The HOLD parameter enables a BCV to be reserved at split time to prevent the BCV from being used for other commands the state in which a BCV is placed using the HOLD command is referred to as a hold state. There are two ways for placing a BCV in hold state perform a SPLIT command or issue a HOLD command to any dataset or BCV. The RELEASE parameter puts a BCV back into an available state. The available state is a state in which commands may be performed on the BCV such as commands executed at a host. The NR parameter sets a specified BCV to a not ready state indicating that the BCV is not available for performing commands. The READY parameter sets the specified BCV to a ready state which indicates that the BCV is available for performing commands.

The QUERY command reports the status of all BCV devices including the device availability status and the corresponding standard device. This command returns device records for each BCV device defined in the Symmetrix storage system including BCV device number standard device number for established BCV pairs BCV availability status and other state information related to the standard volume and BCV.

The VERIFY command confirms the completion of the BCV synchronization process. A display such as the graphical user interface discussed above shows the BCV device number standard volume number invalid track count for BCV and standard mirrors and synchronization percentage.

The SETUP command reports device types and sizes and matches a serial number of a Symmetrix device with its host device number. The SETUP command is typically executed on initial setup of the BCV or when a user makes configuration changes to the host or Symmetrix storage system units. This command is generally executed prior to executing the ESTABLISH or RESTORE commands.

To establish a BCV pair e.g. a BCV device and a device of a standard volume also referred to as the standard device a user executing an ESTABLISH command on a host assigns the BCV as a next available mirror of a standard Symmetrix device and copies the contents of the standard device to the BCV device. Initially the BCV device contains no data.

By splitting a BCV pair using the SPLIT command a nost may execute data operations with the BCV device in an independent manner separate from operation of the standard device. The process of splitting includes reassigning the BCV mirror to its original host address and therefore allows the BCV device to be accessed by a host independently of the standard volume. More particularly by splitting the BCV from a standard Symmetrix volume the BCV gains a separate address and becomes available to a host system. The standard device mirrors remain unaffected by the split and continue to operate without interruption. The BCV device contains a copy of the data from the standard device as of the point in time when the split command was issued.

To re establish or resynchronize a BCV pair using the RE ESTABLISH command the storage system refreshes the BCV with updates performed on the standard device and discards updates on the BCV that occurred while the two devices were separated. A user may wish to resynchronize a BCV pair to create a snapshot later in time.

To restore a BCV the BCV is assigned as a next available mirror of a standard Symmetrix volume and the contents of the BCV are copied to the standard volume. If there are any mirrors of the standard device these mirrors will be updated with copies of the data from the BCV as well. To perform an incremental restore of data of a BCV using the RESTORE command the storage system copies updates performed on the BCV device to the standard device. Updates performed on the standard device that occurred while the two were separated are discarded. If no updates were performed on the BCV device this process may be used to roll back a standard device to a known state.

When BCVs are split to capture a snapshot image of a disk a stable copy is left on the BCV and the standard volume continues as the production or live copy. Sometimes there is a need to restore the data from the BCV because the live copy is corrupted or for some other reason. In this situation an incremental or full restore operation is performed. In a restore operation the data from the BCV is used to overwrite the data from the standard volume either for all tracks full restore or for just the tracks known to be different between the two volumes incremental restore .

In either case as soon as the restore operation is initiated the restored data becomes available because even while tracks are being copied in the background any yet to be copied unrecovered tracks can be fetched directly from the BCV rather than the standard volume to satisfy read requests. While the restore is in progress and even after it completes write requests are written to both the standard volume and the BCV.

Applicants have appreciated that writing to both the standard volume and the BCV can create problems in certain situations. For example if after performing a restore a corrupting write is made the corrupting write affects both the standard volume as well as the BCV. Thus there would no longer be a stable snapshot to rely upon to restore the standard volume to a valid state.

According to one embodiment of the invention a method for performing a safe restore is provided that keeps a mirror such as a BCV secure by performing write operations to only the standard volume and not to the BCV. As a result if a corrupting write is performed during or after the restore data may be recovered from the BCV. In one embodiment of the invention safe restores can be performed from the mirror to the standard volume in full and or incremental manners similar to conventional restores.

In another embodiment the restored data may be made available immediately as soon as the restore operation is initiated. Thus read operations may be satisfied from the mirror if the track has not yet been copied. Write operations are different. More particularly write operations are performed only to the standard volume and not the mirror. In one embodiment write operations to tracks not restored from the mirror cause the write to be written to the standard volume and then the track is marked as not to be copied from the mirror even if it were a full safe restore. That is writes performed to the standard volume are not performed to the mirror and according to one embodiment of the invention an indication is provided that prohibits restore of information to the standard volume from the mirror to not overwrite any data written to the standard volume during the restore operation.

In one embodiment after the safe restore is completed such as by completing a background copy of tracks from the mirror to the standard device the mirror assumes a split state rather than the established state unlike the conventional restore operation. As a result updates received after the restore operation are not made to the BCV. This allows the BCV to remain available for further restores or other operations.

An advantage of the safe restore according to various embodiments of the invention is that data can be restored while still preserving the snapshot located on the mirror to be used later to perform another normal or safe restore or if desired any other desired operation.

For example for track number of a BCV device table may store an associated state value which indicates whether or not the track has been restored to the standard volume. The state information may be any state indication used to relate a restore state of the track including a single bit a Y N character or other state indication. Further table may be combined with any other table or database associated with storage system . It should be appreciated that any granularity of data can be used and that the invention is not limited to identifying restored data on a track level.

In some storage systems in which various aspects of the invention may be practiced there may be read locks and or write locks used to protect a storage area from simultaneous updates by more than one entity such as a host or process. A read lock is a lock which allows multiple systems or processes to read information in the storage area with which the lock is associated but the lock does not allow the information to be updated. A write lock is an exclusive lock which allows only one system or process access to the information to perform actions on the information such as performing write operations.

If the track has not been restored the track is read from the mirror instead of the standard volume at block . Information is read from the mirror because there is updated information on the mirror which is not available on the standard volume. At block the read lock set for the read track is converted to a write lock to allow information to be written to the track of the standard volume. As discussed above a write lock is an exclusive lock that when set allows data to be written. At block the process writes track information read from the mirror to the standard volume. At block state information associated with the read track is marked in the table as having been restored. At block the process returns with read track data. At block process ends.

It should be appreciated that other methods for reading data may be used and the invention is not limited to the above implementation. For example information may be stored by data storage parameters other than tracks. Also data may be restored to the standard volume in a different sequence or may be performed by a separate process.

It should be appreciated that other methods for writing data to a standard volume but not its mirror may be used and the invention is not limited to the above implementation.

If the track has not been restored to the standard volume the track is read from the mirror at block and the read lock is converted to a write lock at block . After the lock is converted the track is written to the standard volume at block . At block the track is marked as restored e.g. changing a state stored in a table as discussed above with reference to . At block the process releases the write lock associated with the track. At block the process returns the read track data. At block process ends.

It should be appreciated that other ways of reading data from a mirror and restoring the read information to a standard volume and the invention is not limited to the above implementation. Other variations may be implemented. For example reads may be satisfied from the mirror and data may be destaged to the standard volume at a later time.

At block of process begins. At block the process receives a write request to write information to the mirror. At block the process sets a read lock for the track to be written to the mirror. At block the process determines whether or not the track has been restored to the standard volume. As discussed above this determination may be performed by inspecting a table such as that shown in . If the track has been restored the track is written to the mirror at block . After the track has been written to the mirror the read lock is released at block and the process returns at block . At block process ends.

If the track has not been processed old data is first written to the standard volume. More particularly at block the process converts the read lock to a write lock. At block the track is read from the mirror into a temporary storage. This temporary storage may be for example located in cache in storage system a memory of adapter or other storage location associated with storage system . At block track data stored in temporary storage is written to the standard volume. At block state information associated with the written track is marked in the table as having been restored. At block track information received from the host is written to the mirror. At block the process releases the write lock and at block process returns. In summary process ensures that a restore is performed before writing to the mirror.

At block of process begins. At block the process determines if there are any more tracks to be restored. This determination may be made for example by inspecting a table such as that discussed above with reference to . If there are additional tracks to be processed process proceeds to the next track to be copied in the table. At block the process sets a write lock for the track to be copied. At block the process reads the track to be copied from the mirror device. At block the process writes the read track data to a device associated with the standard volume. At block a table entry corresponding to the written track is marked indicating the track was processed. At block the write lock associated with the track is released. Process continues until there are no more tracks to be processed. When there are no more tracks to be processed process ends at block .

The invention is not limited to the above implementations but may be implemented in many ways. For example various aspects of the invention may be implemented in microcode of a controller of the storage system such as a hardware bus adapter HBA . Alternatively various aspects of the invention may be implemented in other locations of storage system within one or more hosts accessing storage system or any computer having access to storage system . Further it should be appreciated that although various aspects of the invention may be implemented in storage systems and their related components from EMC Corporation any storage system may be used and the invention is not limited thereto.

Having described several embodiments of the invention in detail various modifications and improvements will readily occur to those skilled in the art. Such modifications and improvements are intended to be within the spirit and scope of the invention. Accordingly the foregoing description is by way of example only and is not intended as limiting. The invention is limited only as defined by the following claims and the equivalents thereto.

