---

title: Methods, systems, and computer program products for financial analysis and data gathering
abstract: Systems, methods and computer readable media are provided for controlling operations of an enterprise. In one exemplary embodiment, a method is provided that includes creating an alert model that may be parameterized by a user to monitor the behavior of one or more operational drivers. The method may also include monitoring the behavior of the one or more operational drivers based on the alert model and sending an alert message when the behavior of the one or more operational driver causes a deviation from a preset standard. The method may further include analyzing the alert message to determine one or more behaviors contributing to the alert and communicating the alert message to others in order to collaborate on correcting the deviation from the preset standard. Moreover, the method may include generating a report summary regarding the alert.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07974896&OS=07974896&RS=07974896
owner: SAP AG
number: 07974896
owner_city: Walldorf
owner_country: DE
publication_date: 20060714
---
The present invention generally relates to the fields of data processing and analysis. More specifically the invention relates to methods systems and computer program products for identifying emerging variances between projected results and plan results and providing tools to support the steering of an operation towards the plan results.

An enterprise typically utilizes a controller to manage the financial affairs of the enterprise. Duties of the controller may comprise monitoring data such as employee timecards account receivables A R inventory levels sales order production reports and the like. A controller may use this data to generate forecasts or trends create reports for budget or production analysis and or general strategy analysis.

Currently the controlling process at an enterprise is done either manually or is semi automated. For example in a monthly controlling process the controller may collect actual data for the purpose of comparison to plan data. Actual data refers to data that has been recorded and based upon an already executed transactions. For example actual data may include monthly sales data or production data that have been recorded for an already completed month. Plan data refers to preset goals forecasts or targets such as the amount of sales or level of production that should be achieved for a particular period of time. Actual data may be gathered from diverse sources such as spreadsheets created by individual departments e.g. sales and production e mails collaborative meetings handwritten notes and so forth. Specific examples of data collected include open sales orders revenue information order cancellations inventory levels pipeline information trend information and last minute information updates. The actual data may then be consolidated in order that it may be analyzed by the controller for any deviations from the plan data.

To correct a deviation between the actual data and the plan data the root cause of the deviation must be understood. However this process may be very difficult and time consuming. For instance because the data was consolidated there is often no link to the transactional or even reporting details contributing to the result. Therefore additional meetings and communications between representatives from the various departments in an enterprise are needed to determine the root cause of the deviation. When the root cause of the deviation is discovered it may be added to the report for later review at for example a sales and operations meeting.

The sales and operations meeting which may occur once a month allows the responsible department representatives and the controller to discuss deviations from the plan data and possible corrective actions. In most cases there is no immediate decisions made during the sales and operations meeting. Instead options are discussed and tasks are distributed for clarification and subsequent reporting to the controller who makes the final call on corrective actions. This final call is based on all the feedback information that the controller collects. After the corrective action is chosen the controller may further designate follow up tasks.

As a result of the large amount of data and constant communications that are necessary for a controller to perform his or her job a controller may not have enough time to perform their job effectively. In particular the most time consuming exercises performed by a controller are data consolidation and data gathering analysis of data system maintenance collaboration and providing management summaries.

Further current controlling processes are incapable of understanding the analytical models of operational drivers e.g. occurring sales transactions and their impact on overall revenue. For example the current controlling processes lack the ability to utilize projected data to project a loss of revenue compared to plan revenue for a predetermined time period. Projected data refers to data that is arrived at by extrapolating actual data and historical performances to generate a trend of where the actual data will be at a specified instance in future time. With these current processes the controller can only be alerted of this loss at the end of the period when all the actual data necessary to show the loss is available.

Accordingly there is a need for a solution that utilizes an enterprise application capable of automating and centralizing the financial operation steering process through interaction with for example an enterprise resource planning ERP system. Such a solution should enable a controller to take a proactive approach to emerging variances. In particular a solution is needed to support a controller to gather data identify deviations resolve deviations and perform follow ups. Further it would be beneficial to provide an alert mechanism to alert the controller of a resulting deviation. The alert mechanism may be based on analytics that are conceptualized in a projection plan and presented relative to the actual plan.

In accordance with the principles of the present invention as embodied and broadly described herein methods systems and computer program products are provided for identifying emerging variances between projected results and plan results and providing tools to support the steering of an operation towards the plan results.

Such solutions as described above may be embodied in an enterprise application referred to herein as a financial operations steering system FOSS . FOSS may enable the monitoring of data to identify emerging variances between projected data and plan data and provide functions to steer the operation back towards the plan data.

According to one embodiment a method is provided for controlling operations of an enterprise. The method may comprise creating an alert model that may be parameterized by a user to monitor the behavior of one or more operational drivers monitoring the behavior of the one or more operational drivers based on the alert model sending an alert message when the behavior of the one or more operational drivers causes a deviation from a preset standard analyzing the alert message to determine one or more behaviors contributing to the alert communicating the alert message to others in order to collaborate on correcting the deviation from the preset standard and generating a report summary regarding the alert.

According to another embodiment a computer readable medium including program instructions for performing when executed by a processor a method for controlling operations of an enterprise. The method may comprise creating an alert model that may be parameterized by a user to monitor the behavior of one or more operational drivers monitoring the behavior of the one or more operational drivers based on the alert model sending an alert message when the behavior of the one or more operational drivers causes a deviation from a preset standard analyzing the alert message to determine one or more behaviors contributing to the alert communicating the alert message to others in order to collaborate on correcting the deviation from the preset standard and generating a report summary regarding the alert.

According to another embodiment a system is provided for controlling operations of an enterprise. The system may comprise a data warehouse that stores enterprise wide data including operational drivers that pertain to the operations of the enterprise and a financial operations steering system that utilizes alert models to monitor the data stored within the data warehouse to identify emerging variances between projected data and plan data of an operation and provides functions to steer the operation back towards the plan data.

It is to be understood that both the foregoing general description and the following detailed description are exemplary and explanatory only and are not restrictive of the invention as described. Further features and or variations may be provided in addition to those set forth herein. For example the present invention may be directed to various combinations and subcombinations of the disclosed features and or combinations and subcombinations of several further features disclosed below in the detailed description.

Reference will now be made in detail to the invention examples of which are illustrated in the accompanying drawings. The implementations set forth in the following description do not represent all implementations consistent with the claimed invention. Instead they are merely some examples consistent with certain aspects related to the invention. Wherever possible the same reference numbers will be used throughout the drawings to refer to the same or like parts.

As disclosed herein FOSS represents a user centric method and system for the performance of a financial operation steering process. That is FOSS is capable of performing the entire end to end process for operational dynamic steering within a financial controller s environment which includes alert modeling detection collaborative resolution and follow up as well as additional reporting on alerts. FOSS accomplishes this by utilizing some of the existing functionality present in an enterprise s information technology infrastructure. In particular FOSS utilizes some of the functionality present in an Enterprise Resource Planning ERP system of an enterprise as well as the integration and application platform that the ERP system is built upon.

In general ERP systems are integrated information systems that help enterprises better control their assets and business processes by creating adaptive systems that improve internal and external operations and enhance collaboration with constituents customers and suppliers. One example of an ERP system is the mySAP ERP solution provided by SAP AG of Walldorf Germany. An ERP system may comprise individual modules or software applications that provide support of enterprise key areas such as financial management human capital management product development and manufacturing and sales and service. One example of an integration and application platform is NetWeaver also developed by SAP AG.

Computing infrastructure may include one or more servers and storage devices. The servers and storage devices may be collocated with each other or may be distributed across multiple locations.

Integration and application platform resides on computing infrastructure and provides the foundation upon which business applications are developed integrated and run. Examples of integration and application platform include NetWeaver developed by SAP AG Walldorf Germany .NET developed by Microsoft and WebSphere developed by IBM.

A component of integration and application platform is data warehouse . Data warehouse enables an enterprise to exploit the large amount of data amassed i.e. business intelligence BI in day to day operations by providing a centralized source for collecting interpreting consolidating and redistributing data that arrives from a variety of systems and business applications within the enterprise. An example of a commercially available data warehouse is SAP NetWeaver BI developed by SAP AG.

Business applications may comprise software packages that are dedicated to operational tasks of an enterprise. For example business applications may include software packages dedicated to such tasks as customer relationship management CRM product life cycle management PLCM supply chain management SCM and the like. Business applications may also comprise FOSS .

User interface may provide an interface to allow a user to interact with the business applications . For example user interface may be a software application such as a browser. In some implementations SAP Web Dynpro commercially available from SAP AG may be used as a model based development environment for generating user interface although other development environments may also be used.

In accordance with one embodiment data warehouse may include the capability to handle different data sources dependent on the ETL tools provided with data warehouse . For example data warehouse may have the capability to incorporate data from different databases business applications files XML documents and relational and multidimensional sources . It should be noted that although certain data sources are illustrated in the invention is not limited to only these types of data sources and may incorporate more or less data sources.

The ETL tools of data warehouse allows data of varying formats and from different departments within an enterprise to be copied into data warehouse and organized into one standard format. For example DB connect tool may allow data warehouse to connect to databases such as Oracle and SQL servers at the database level for efficient data extraction. It may also expose the table structures of the database and allow a user to select fields for extraction. BAPI tool is an open interface that may support the exchange of data and meta data with business applications . File tool may allow the extraction of CSV or ASCII files from any location defined within the enterprise and schedule cleanse transform and load the data to the data warehouse . XML tool may allow the extraction of XML files into data warehouse . UD connect tool may access any data source which has an open interface via On Line Analytical Processing OLAP or Java Database Connectivity JDBC by exposing the data tables available to allow the user to select the fields for each extraction.

Data extracted by the ETL tools are first stored unchanged in PSA . PSA may minimize the impact on busy operational systems during migration of data to the data warehouse and provide short term storage of the data in a format unchanged from its data source. From PSA the data is subsequently transformed and loaded into one or more relational databases such as ODS and master data store . For example ODS is a relational database for current detailed transactional data. The data within ODS is stored within ODS objects which contain key fields e.g. document number item and data fields that can also contain character fields e.g. order status customer as key figures. Master data store is a database for storing data that describes characteristics of information in an enterprise such as cost collectors customers or vendors. The relational databases may be further used to build multidimensional models which are referred to herein as information cubes . Information cubes construct an extended star schema whose dimensions contain links to master data and other detail records in data warehouse .

Open hub service provides tools for defining scheduling and managing the extraction of data from data warehouse to applications and systems such as FOSS . FOSS leverages the capabilities of the data warehouse in order to provide a controller with all necessary data required to detect emerging variances. With the open hub service FOSS may retrieve data and corresponding meta data from information cubes and ODS .

FOSS is capable of understanding the analytical model of operational drivers and their impact on revenue. As used herein the term operational drivers refers to the data variables that have an impact on an enterprises financial results. For example FOSS is capable of utilizing an operational driver such as a trend in order cancellations to project a potential loss of revenue as compared with the plan revenue within a specified timeframe e.g. a financial period . FOSS may accomplish this by creating and utilizing alert models that monitor operational drivers.

An alert model defines the relationships between the data objects stored within data warehouse . The flexible parameters within this defined relationship constitute the alert definition. That is an alert definition is the parameterized and personalized alert model to be executed. The alert models may generate a trend that may be calculated based on historical behavior of the operational drivers and other data elements in order to project the behavior of the operational drivers as well as the financial result on the enterprise. Information regarding the historical behavior of operational drivers and other data elements may be mined from data warehouse . For example in the instance of an operational driver being current sales transactions FOSS may mine data warehouse to determine past sales transactions from a prior period. Other operational drivers such as orders pending pre orders and the like may also be mined from data warehouse and used to calculate the trend for sales transactions.

Exemplary embodiments of the alert model creation alert configuration alert detection and alert investigation processes are illustrated in . As illustrated in FOSS may provide alert models that may be used as templates and adjusted based on the end users needs. The alert models may be stored and represented within the data warehouse as queries which may be parameterized. For example the queries that comprise alert model may include query alert Q Alert query details Q Details and query operational drivers Q Drivers .

In another embodiment alert models may be created and defined using a graphical tool such as Visual Composer developed by SAP AG. The graphic tool may be implemented as a design tool that facilitates the creation of business packages using a visual user interface rather than manually writing code. The graphic tool may have access to the data stored with data warehouse and presents that data along with different functionalities to a user in a graphical format. By selecting different data and functions and placing them together in a visual composer workspace a user is able to create an alert model .

Returning to an exemplary alert model has been parameterized for the purpose of monitoring the volume drop of particular invoice within the enterprise. In particular illustrates that this alert model is entitled Invoiced Volume Drop. The query alert parameter source represents the actual alert configuration that is used to trigger the alert. The parameterization of the query alert parameter is discussed in detail with respect to . The query details parameter details represents the operational driver that will be analyzed and compared for deviation. In this example query details parameter has been parameterized to specify that this alert model will be analyzing and comparing projected invoiced data versus plan data. For example the projected invoiced data may be calculated by extrapolating actual invoiced data and historical performances of invoiced data e.g. the level of invoiced data at this point last year to generate a trend of where the actual invoiced data may be at a specified instance in future time.

The query operational drivers drivers represent the operational drivers that may have an affect on the operational driver of invoiced data and thus will also be monitored by this alert model. In this example query operational drivers have been parameterized to include orders that have been placed and filled orders orders that have been cancelled cancellations and orders that are backlogged backlog . That is the queries contain the flexible parameters that allow a user to parameterize and personalize alert model and in effect convert alert model into an alert definition.

The data field Context defines the information that is pulled together after an alert is triggered. This information may be partly predefined within FOSS and extendable by a user. For example predefined information may include drill down information regarding the deviation that occurred between the projected data and the plan data. A user could further add specific documents for example a financial outlook report to the context. The data field Actions defines what a user might need to do when acting on an alert. For example this information may include the enterprise s best practices and procedures to be followed such as informing key stakeholders following preset approval flows etc.

The alerts may be organized into specific alert categories to differentiate one alert from another. For example alert categories may follow a hierarchical approach. illustrates an example of such an approach. The alerts within the alert framework of the integration and application platform that pertain to FOSS may be organized within FOSS category . The FOSS category may include subcategories that contain alerts relating to revenue and costs . The revenue subcategory may further include other subcategories such as volume and average selling price ASP . Moreover the ASP subcategory may include subcategories for alerts relating to price and discounts . The above example of alert categorization is not meant to be exhaustive. The organization may include more or less categories and subcategories.

Returning to an exemplary process of alert investigation is illustrated. As discussed above alert investigation is one of the most time consuming tasks for controllers after an alert is detected. FOSS allows data elements used within the models for alert detection querying to be presented to the end user. Thus these alert models BW queries may be used by the user interface to present the right information to the user. Information returned to the user may include the data used to create the alert model and the alert definition. The information may also include the operational drivers that contributed to the alert. In one embodiment the contributory operational drivers returned to the user are those predefined by a user as likely to contribute to a particular alert type. In another embodiment the controlling operational drivers returned to the user are determined by a specified rule system which is based on a causal chain of operational drivers that can drive an alert.

Another function of FOSS is alert resolution which acts upon alerts and allows the end user to collaborate with others. Collaboration may range from sending e mails to colleagues to the creation of virtual work rooms. The storage of an alert and the steps to resolve the alert is referred to as a case herein. A case may be created after a user views an alert. Further the case may be visited for re use and or used as an audit trail to determine what actions were taken on the alert.

Subsequently a projected trend will be calculated based on the history and other data elements of the operational drivers in order to determine the behavior of the operational driver at a specified time such as the end of a financial period Step . The projected trend of the operational drivers may be further used to calculate the projected financial results e.g. loss of revenue of the enterprise or business unit within the enterprise. The projected trends may be calculated by utilizing the algorithms and functionality of a data mining software such as Analysis Process Designer APD developed by SAP AG or Analysis Services developed by Microsoft. Queries may be used to model an alert based on information cubes and ODS objects within which the trending results may be stored Step . These queries may be parameterized to include specific data pertaining to the behavior of the operational driver. The monitoring of the behavior of the operational driver is continued using the entered parameters to determine whether the behavior of the operational driver has caused an exception such as a deviation based upon a preset percentage from the plan data within the query Step . If an exception to the query has not occurred the monitoring of the behavior of the operational driver is continued. However if a determination is made that an exception within the query has occurred an alert generated by FOSS is triggered Step .

A triggered alert may be selected opened and analyzed by a user to determine the one or more causes that may have contributed to the triggering of the alert Step . Opening of an alert will generate a case. A case as illustrated for example in may include data used to create the alert model the alert and the operational drivers that contributed to the alert. During the analysis of the alert the user may use drill down or slice and dice functionality. As used herein the terms drill down and slice and dice refer to moving within a hierarchical structure of data from a broader level to a more detailed level. For example if an alert occurs in a particular business unit of the enterprise the user may want to see the performance of individual product lines within that business unit. FOSS enables drill down by providing the correct subset of data i.e. data that will be drilled down based upon the triggered alert . The subset of data that is provided may be predefined by a user per the alert type.

FOSS is further capable of allowing a user to collaborate with others regarding the analyzing and resolution of the triggered alert Step . The collaboration functionality provided by FOSS may include sending e mails to colleagues in the operational areas to the creation of virtual work rooms that allows the sharing of project related tools services and information from a single point of access. FOSS may utilize the collaboration functionality of other applications to create virtual work rooms such as the collaboration room functionality of NetWeaver or Microsoft Exchange. Moreover FOSS may allow reports to be generated for the triggered alerts and cases Step . The reports may include the consolidation of the collaborative actions resolutions agreed upon annotations and the like.

Finally both analysis including reporting and issue management including its collaboration needs require a way for the controller to manage the data pieces they are working with. The underlying assumption is that analytic end users do not only work with their original data but rather use the original data as a starting point to do several passes over the data exploring different hypotheses narrowing their focus and testing out different foci as they go along. This usually creates a bulk of interim results. FOSS supports this activity by viewing it as an essential part of analytics and integrating its support fully into the analytics user experience as illustrated in for example .

The tools section may give a user access to functionality such as contacts tasks commenting contributing factors and slice and dice . As illustrated in the current tool that is selected is the slice and dice tool . The slice and dice tool may allow a user to gain more detailed information about a particular case. For example if the case involved production the slice and dice tool may allow a user to select a particular machine or region of operation.

The case header section contains case meta data that may include status and task information. The center stage section is an extension of the tools provided in tool section as it provides a work space for the user to add and manipulate information in the form of graphs tables spreadsheets and the like during the processing of case. For example the center stage section may include a case impact visualization a time horizon slider and a fisheye lens . The case impact visualization tool may show the projected revenue impact of the issue at hand as well as projected and plan data. The time horizon slider allows a user to dynamically modify the time dimension and thereby adjust for example the historical data in the graph and tables displayed by the case impact visualization tool . The fisheye lens tool allows users to view detailed data displayed by the case impact visualization tool within a wider time horizon context. Case board allows users to store content e.g. individual graphs tables documents snapshots and the like as part of their case for use in documenting or reporting the case. Information placed within case board may also be used for reference during the drill down slice and dice process.

The contributing factors tool may allow a user to search for and add more factors such as tables graphs and data sources to their case center stage section . The tasks tool may allow users to assign tasks to relevant contacts and view a current task and its status. The task tool may also provide an access point to the extended task management center stage. The contacts tool may allow a user to store and access contact information for other others within the enterprise such as department representatives. The reporting tool may help a user to document their case by providing for the addition of text as well as content from case board that may be dragged and dropped into the report.

The foregoing description has been presented for purposes of illustration. It is not exhaustive and does not limit the invention to the precise forms or embodiments disclosed. Modifications and adaptations of the invention will be apparent to those skilled in the art from consideration of the specification and practice of the disclosed embodiments of the invention.

Further the described implementations include software but systems and methods consistent with the present invention may be implemented as a combination of hardware and software or in hardware alone. Examples of hardware include computing or processing systems including personal computers servers laptops mainframes micro processors and the like. Additionally although aspects of the invention are described for being stored in memory one skilled in the art will appreciate that these aspects may also be stored on other types of computer readable media such as secondary storage devices for example hard disks floppy disks or CD ROM the Internet or other propagation medium or other forms of RAM or ROM.

Computer programs based on the written description and methods of this invention are within the skill of an experienced developer. The various programs or program modules may be created using any of the techniques known to one skilled in the art or can be designed in connection with existing software. For example program sections or program modules can be designed in or by means of Java C HTML XML or HTML with included Java applets or in SAP R 3 or ABAP. One or more of such software sections or modules may be integrated into a computer system or existing e mail or browser software.

Moreover while illustrative embodiments of the invention have been described herein the scope of the invention includes any and all embodiments having equivalent elements modifications omissions combinations e.g. of aspects across various embodiments adaptations and or alterations as would be appreciated by those in the art based on the present disclosure. The limitations in the claims are to be interpreted broadly based on the language employed in the claims and not limited to examples described in the present specification or during the prosecution of the application which examples are to be construed as non exclusive. Further the steps of the disclosed methods may be modified in any manner including by reordering steps and or inserting or deleting steps without departing from the principles of the invention. It is intended therefore that the specification and examples be considered as exemplary only with a true scope and spirit of the invention being indicated by the following claims and their full scope of equivalents.

