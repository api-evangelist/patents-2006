---

title: Querying nested documents embedded in compound XML documents
abstract: Querying a compound XML document having a primary XML document and multiple nested documents may be performed in a single query. The single query comprises an expression of at least one attribute and the encoding type of the nested documents. Execution of the query involves decoding each nested document according to its encoding type and searching for the attribute specified in the query. The results returned from each of the nested documents may be combined with the results returned from the primary document before returning the results to the user.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07805424&OS=07805424&RS=07805424
owner: Microsoft Corporation
number: 07805424
owner_city: Redmond
owner_country: US
publication_date: 20060412
---
The extensible Markup Language XML is a World Wide Web Consortium W3C endorsed standard for document and data representation that provides a generic syntax to mark up data with human readable tags. XML does not have a fixed set of tags and thus allows users to define such tags as long as they conform to the XML standard. Data may be stored in XML documents as strings of text that are surrounded by text markup.

As XML s usage has grown it has become generally accepted that XML is not only useful for describing new document formats for the Web but is also suitable for describing structured data. Examples of structured data include information which is typically contained in spreadsheets program configuration files and network protocols. XML is preferable to previous data formats because XML can easily represent both tabular data such as relational data from a database or spreadsheet and semi structured data such as a web page or business document. Therefore the XML language may be used to format any kind of data not just textual data. Also XML documents may have other XML documents embedded in them forming compound XML documents. Compound XML documents may have the embedded documents expressed as encoded documents which may contain many different types of data. The data in each of these embedded documents may be encoded differently. Examples of this include embedded documents that are encoded as HTML or Base64 encoded documents. Other encoding mechanisms are possible.

There are many languages that allow queries on XML documents such as XPath XSLT and XQuery. A navigation model of these languages allows reaching XML elements such as tags and their values within a target XML document by specifying a path consisting of XML names of tags or nodes in the target document. While this method proved to be very powerful on simple XML documents there is a category of compound XML documents where the standard navigation model does not allow retrieving values from the nested encoded documents that are embedded into the primary XML document. Such compound XML documents usually occur when pieces of XML are stored as attribute values in the primary document or when the primary document represents a dataset retrieved from a database where some of the table columns contain XML documents that may be encoded.

Using standard XML query languages allows getting nested documents as a single large text string but it does not allow querying their contents as a part of the same query. Querying the nested documents require generation of a second third or more queries depending on the level of nesting. It is desirable to query compound XML documents using fewer queries.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

In one aspect of the invention a single query may be used to explore the contents of a compound XML document. The single query against the compound XML document comprises at least one attribute and the encoding used in the respective XML documents. An execution engine uses the encoding information to decode the respective nested documents and search for the attributes specified in the query. All results from the primary XML document and the encoded nested documents are combined. The total results may be presented to a user. In one aspect of the invention an unlimited number of levels of nesting may be accommodated in a single query. Thus the invention eliminates the need for multiple queries or data manipulation steps against a compound XML document.

Some XML query engines are supported by languages that only allow a query to search the primary document. When querying compound XML documents this leads to the necessity that multiple queries are required if all nested documents within the compound XML document are to be searched for attributes or values of interest.

Initially a compound XML document is received at step . The user generates and executes a first query on the primary XML document at step . An execution engine returns a rowset with the query data values. In a compound document the nested documents are represented as chunks of data at step . The user determines the encoding information corresponding to the text chunk of data that represents a nested document. The user then decodes the corresponding chunk of text into an XML tree at step .

The user then generates a second query against the nested document and executes the second query at step . The returned rowset on the nested document is then received at step . Note that the returned rowset may indicate that another level of nested documents exists. If another nesting is present the user must once again determine the encoding used on the lower tier nested document and decode the corresponding lower tier nested document into an XML tree. Another query for the lower tier nested document is then generated and executed at step . In the end all received rowsets from the primary document the first level nested document and the lower tier nested documents may be combined in order to produce a final rowset containing the returned query results. The final rowset containing data from the primary and nested documents may be received at step .

As can be noticed the technique of requires multiple iterations of query generation determinations of encoding of nested documents decoding of nested documents and re querying of nested documents. The present invention improves on this process via generation of a single query against the entire compound XML document including the nested documents.

An example primary XML document is provided below to help illustrate the process. The sample compound document has a main node called Dataset and two branch nodes called Row. Each Row has an attribute id and a nested document in each row element. Each NestedDoc 1 has a nested document .

If the compound XML document is queried for the row and row contents using a standard query the return results will include a text string indicative of a nested and encoded document. For example an ElementPath statement may be used in the standard query. ElementPath is an element of the Report Server XML Data Provider of SQL Server 2005 available from Microsoft Corporation of Redmond Wash. The ElementPath element in the Report Server XML Data Provider query language defines the sequence of nodes to traverse within the XML document to retrieve fields of data. A query using the standard ElementPath statement allows querying the contents of element as a text value. For example 

This query will return the attributes and the corresponding values for each element using two columns one column with the value of the id attribute of the element and another column with the element s text value. Note that the query returns the contents as encoded XML documents.

Note that the standard ElementPath statement in the Report Server XML Data Provider query language on a compound XML document returns text in the row column indicative of a nested document and not any value sought from that nested document. The present invention allows the enhancement of the ElementPath statement to retrieve values directly from the nested documents of the compound XML document when querying against the primary XML document itself.

The new ElementPath statement allows retrieving values from both NestedDoc1 and NestedDoc2 by defining that some elements contain encoded XML. For example encoded XML can take the form of HTML encoding or BASE64 encoding. Thus a useful extension to the ElementPath definition is possible to permit a single query to search the primary XML document and the nested documents within it. For example an extended ElementPath statement may be used in the query such that the new single query is 

In this new single query against the primary XML document the value of Row element has an HTMLEncoded nested document with a root element NestedDoc1 . This allows the execution engine to decode it and navigate inside of it. Here also inside the contents of NestedDoc1 is another HTMLEncoded nested document with a root element NestedDoc2 . The ElementPath syntax that describes the encoding allows the execution engine to decode NestedDoc2 and navigate inside it. Finally this exposes the desired value within NestedDoc2. The results of the single query against the compound XML document are as follows 

In the above example only the Row and the value of NestedDoc2 were specifically requested. However rows of information containing values from the primary XML document the first level of nested document and any other level of nested document are able to be queried and returned in the single query statement. Naturally the encoding used on any of the nested documents may vary from one nested document to another.

In one embodiment the encoding schemes for the various nested documents may be provided by the compound XML document provider. In the case of multiple nesting of documents a document tree or node structure may be provided to assist in mapping the various encoded nested documents and their relationship to the root primary document.

After the encoding of the nested documents of interest is known then a single query can be generated to search all desired portions of the compound XML document in step . The single generated query can search any aspect of the compound XML document including the primary XML document and the various nested documents. The query can be generated manually or the query may be generated automatically or semi automatically. In one embodiment a graphical user interface may be used to enable a user to identify what query items in which nested documents are of interest in a search of the compound XML document. In this instance a fully coded query may be generated based on a user input via graphical user interface that displays the implied tree node structure of the primary XML document and the nested document structure.

In one embodiment the query may take the form of an expanded ElementPath statement in a Report Server XML Data Provider in SQL Server 2005. The basic syntax of the query in a nested document includes 

In one aspect of the invention the above syntax may be concatenated so that lower levels or tiers of nested documents may be queried in a single query statement. For example consider the statement 

Node1 encoding of nesteddoc1 searchterm1 nesteddoc1 root subNode1 subNode2 encoding of nesteddoc2 searchterm2 nesteddoc2 root.

This statement searches node 1 having encoding on nested document 1 for an attribute or search term 1 in document nested doc1. Then the search continues to a lower level nested node 2 having encoding on nested document 2 for an attribute or search term 2 in document nested doc2. Thus one may generate a single query by concatenation of the various queries for each nested portion of interest of the compound XML document.

In one aspect of the invention the structure of the compound XML document is implied in the construction of the query statement such that the first portion of the statement if present suggests the attribute to be sought in the primary XML document. The second portion of the statement if present suggests the attribute and encoding of the first level of nested documents. The third portion of the statement if present suggest the attribute and encoding of the next level down nested document. The fourth portion of syntax if present would be constructed to decode and access the next lower tier of nest documents etc. In addition to handling arbitrarily deep nesting the syntax can also be generalized to cover multiple nested items and peer encoded documents at any level. For example consider the following XML document 

Returning to after the single query is generated the query may be executed at step . The execution includes decoding the nested documents as needed. For example in a variation of the example given above the query included the statement DataSet Row HTMLEncoded id NestedDoc1 BASE64Encoded NestedDoc2 .

In this statement NestedDoc1 is HTML encoded and NestedDoc2 is BASE64 encoded. Execution of this statement includes decoding the HTML encoded Nested Doc1 and retrieving the value of id. Also execution includes decoding the BASE64 encoded Nested Doc2 and retrieving the value of that document. The execution may be performed in a execution environment that includes a processor in a query execution engine. The query execution engine may access program code stored in memory that contains instructions for interpreting the single query statement instructions for performing the decoding of the nested documents and instructions for the assembly of the individual rowset portions from each nested document into a composite or combined query result.

As mentioned above the single query can be used to search multiple documents starting with the principal XML document and ending with the last nested document specified by the query. Thus a plurality of retrieved data sets may be produced. Each one of these retrieved data sets or rowsets is combined in step to produce a combined or composite rowset. This final combined rowset includes all of the retrieved rows from the principal XML document and each of the nested documents that were queried. The XML primary document and encoded nested documents may each produce a retrieved rowset using a single query and producing a single composite result set. The results may assembled in a storage device or an accumulator.

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims.

Although not required embodiments of the invention can also be implemented via an operating system for use by a developer of services for a device or object and or included within application software. Software may be described in the general context of computer executable instructions such as program modules being executed by one or more computers such as client workstations servers or other devices. Generally program modules include routines programs objects components data structures and the like that perform particular tasks or implement particular abstract data types. Typically the functionality of the program modules may be combined or distributed as desired in various embodiments. Moreover those skilled in the art will appreciate that various embodiments of the invention may be practiced with other computer configurations. Other well known computing systems environments and or configurations that may be suitable for use include but are not limited to personal computers PCs automated teller machines server computers hand held or laptop devices multi processor systems microprocessor based systems programmable consumer electronics network PCs appliances lights environmental control elements minicomputers mainframe computers and the like. Embodiments of the invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network bus or other data transmission medium. In a distributed computing environment program modules may be located in both local and remote computer storage media including memory storage devices and client nodes may in turn behave as server nodes.

With reference to an exemplary system embodied as a computing environment for implementing an example host computer includes a general purpose computing device in the form of a computer system . Components of computer system may include but are not limited to a processing unit a system memory and a system bus that couples various system components including the system memory to the processing unit . The system bus may be any of several types of bus structures including a memory bus or memory controller a peripheral bus and a local bus using any of a variety of bus architectures.

Computer system typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by computer system and includes both volatile and nonvolatile media removable and non removable media. By way of example and not limitation computer readable media may comprise computer storage media and communication media. Computer storage media includes volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to Random Access Memory RAM Read Only Memory ROM Electrically Erasable Programmable Read Only Memory EEPROM flash memory or other memory technology Compact Disk Read Only Memory CDROM compact disc rewritable CDRW digital versatile disks DVD or other optical disk storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can accessed by computer system .

The system memory includes computer storage media in the form of volatile and or nonvolatile memory such as read only memory ROM and random access memory RAM . A basic input output system BIOS containing the basic routines that help to transfer information between elements within computer system such as during start up is typically stored in ROM . RAM typically contains data and or program modules that are immediately accessible to and or presently being operated on by processing unit . By way of example and not limitation illustrates operating system application programs other program modules and program data .

The computer system may also include other removable non removable volatile nonvolatile computer storage media. By way of example only illustrates a hard disk drive that reads from or writes to non removable nonvolatile magnetic media a magnetic disk drive that reads from or writes to a removable nonvolatile magnetic disk and an optical disk drive that reads from or writes to a removable nonvolatile optical disk such as a CD ROM CDRW DVD or other optical media. Other removable non removable volatile nonvolatile computer storage media that can be used in the exemplary operating environment include but are not limited to magnetic tape cassettes flash memory cards digital versatile disks digital video tape solid state RAM solid state ROM and the like. The hard disk drive is typically connected to the system bus through a non removable memory interface such as interface and magnetic disk drive and optical disk drive are typically connected to the system bus by a removable memory interface such as interface .

The drives and their associated computer storage media discussed above and illustrated in provide storage of computer readable instructions data structures program modules and other data for the computer system . In for example hard disk drive is illustrated as storing operating system application programs other program modules and program data . Note that these components can either be the same as or different from operating system application programs other program modules and program data . Operating system application programs other program modules and program data are given different numbers here to illustrate that at a minimum they are different copies.

A user may enter commands and information into the computer system through input devices such as a keyboard and pointing device commonly referred to as a mouse trackball or touch pad. Other input devices not shown may include a microphone joystick game pad satellite dish scanner or the like. These and other input devices are often connected to the processing unit through a user input interface that is coupled to the system bus but may be connected by other interface and bus structures such as a parallel port game port or a universal serial bus USB . A monitor or other type of display device is also connected to the system bus via an interface such as a video interface which may in turn communicate with video memory not shown . In addition to monitor computer systems may also include other peripheral output devices such as speakers and printer which may be connected through an output peripheral interface .

The computer system may operate in a networked or distributed environment using logical connections to one or more remote computers such as a remote computer . The remote computer may be a personal computer a server a router a network PC a peer device or other common network node and typically includes many or all of the elements described above relative to the computer system although only a memory storage device has been illustrated in . The logical connections depicted in include a local area network LAN and a wide area network WAN but may also include other networks buses. Such networking environments are commonplace in homes offices enterprise wide computer networks intranets and the Internet.

When used in a LAN networking environment the computer system is connected to the LAN through a network interface or adapter . When used in a WAN networking environment the computer system typically includes a modem or other means for establishing communications over the WAN such as the Internet. The modem which may be internal or external may be connected to the system bus via the user input interface or other appropriate mechanism. In a networked environment program modules depicted relative to the computer system or portions thereof may be stored in the remote memory storage device. By way of example and not limitation illustrates remote application programs as residing on memory device . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.

Various distributed computing frameworks have been and are being developed in light of the convergence of personal computing and the Internet. Individuals and business users alike are provided with a seamlessly interoperable and Web enabled interface for applications and computing devices making computing activities increasingly Web browser or network oriented.

For example MICROSOFT s .NET platform available from Microsoft Corporation includes servers building block services such as Web based data storage and downloadable device software. While exemplary embodiments herein are described in connection with software residing on a computing device one or more portions of an embodiment of the invention may also be implemented via an operating system application programming interface API or a middle man object between any of a coprocessor a display device and a requesting object such that operation may be performed by supported in or accessed via all of .NET s languages and services and in other distributed computing frameworks as well.

As mentioned above while exemplary embodiments of the invention have been described in connection with various computing devices and network architectures the underlying concepts may be applied to any computing device or system in which it is desirable to implement a method for querying compound XML documents using a single query. Thus the methods and systems described in connection with embodiments of the present invention may be applied to a variety of applications and devices. While exemplary programming languages names and examples are chosen herein as representative of various choices these languages names and examples are not intended to be limiting. One of ordinary skill in the art will appreciate that there are numerous ways of providing object code that achieves the same similar or equivalent systems and methods achieved by embodiments of the invention.

The various techniques described herein may be implemented in connection with hardware or software or where appropriate with a combination of both. Thus the methods and apparatus of the invention or certain aspects or portions thereof may take the form of program code i.e. instructions embodied in tangible media such as floppy diskettes CD ROMs hard drives or any other machine readable storage medium wherein when the program code is loaded into and executed by a machine such as a computer the machine becomes an apparatus for practicing the invention.

While aspects of the present invention has been described in connection with the preferred embodiments of the various figures it is to be understood that other similar embodiments may be used or modifications and additions may be made to the described embodiment for performing the same function of the present invention without deviating therefrom. Furthermore it should be emphasized that a variety of computer platforms including handheld device operating systems and other application specific operating systems are contemplated especially as the number of wireless networked devices continues to proliferate. Therefore the claimed invention should not be limited to any single embodiment but rather should be construed in breadth and scope in accordance with the appended claims.

