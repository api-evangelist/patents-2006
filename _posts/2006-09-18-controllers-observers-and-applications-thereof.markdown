---

title: Controllers, observers, and applications thereof
abstract: Controller scaling and parameterization are described. Techniques that can be improved by employing the scaling and parameterization include, but are not limited to, controller design, tuning and optimization. The scaling and parameterization methods described here apply to transfer function based controllers, including PID controllers. The parameterization methods also apply to state feedback and state observer based controllers, as well as linear active disturbance rejection (ADRC) controllers. Parameterization simplifies the use of ADRC. A discrete extended state observer (DESO) and a generalized extended state observer (GESO) are described. They improve the performance of the ESO and therefore ADRC. A tracking control algorithm is also described that improves the performance of the ADRC controller. A general algorithm is described for applying ADRC to multi-input multi-output systems. Several specific applications of the control systems and processes are disclosed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08060340&OS=08060340&RS=08060340
owner: Cleveland State University
number: 08060340
owner_city: Cleveland
owner_country: US
publication_date: 20060918
---
This application is a continuation in part CIP application and claims the benefit of U.S. Utility application Ser. No. 10 351 664 filed Jan. 27 2003 published as 2003 0199997. This application also claims the benefit of U.S. Provisional Application 60 373 404 filed Apr. 8 2002 U.S. Provisional Application 60 718 393 filed Sep. 19 2005 U.S. Provisional Application 60 718 581 filed Sep. 19 2005 U.S. Provisional Application 60 718 899 filed Sep. 20 2005 U.S. Provisional Application 60 728 928 filed Oct. 20 2005 and U.S. Provisional Application 60 728 929 filed Oct. 20 2005 all of which are incorporated herein by reference.

This work was supported at least in part by NASA under government contract number NGT3 52387. Accordingly the U.S. government may have certain rights herein.

The systems methods application programming interfaces API graphical user interfaces GUI computer readable media and so on described herein relate generally to controllers and more particularly to scaling and parameterizing controllers and the use of observers and tracking which facilitates improving controller design tuning and optimizing.

A feedback closed loop control system as shown in Prior Art is widely used to modify the behavior of a physical process denoted as the plant so it behaves in a specific desirable way over time. For example it may be desirable to maintain the speed of a car on a highway as close as possible to 60 miles per hour in spite of possible hills or adverse wind or it may be desirable to have an aircraft follow a desired altitude heading and velocity profile independently of wind gusts or it may be desirable to have the temperature and pressure in a reactor vessel in a chemical process plant maintained at desired levels. All these are being accomplished today by using feedback control and the above are examples of what automatic control systems are designed to do without human intervention.

The key component in a feedback control system is the controller which determines the difference between the output of the plant e.g. the temperature and its desired value and produces a corresponding control signal u e.g. turning a heater on or off . The goal of controller design is usually to make this difference as small as possible as soon as possible. Today controllers are employed in a large number of industrial control applications and in areas like robotics aeronautics astronautics motors motion control thermal control and so on.

Classic Control Theory provides a number of techniques an engineer can use in controller design. Existing controllers for linear time invariant and single input single output plants can be categorized into three forms the proportional integral derivative PID controllers transfer function based TFB controllers and state feedback SF controllers. The PID controller is defined by the equation 1 where u is the control signal and e is the error between the set point and the process output being controlled. This type of controller has been employed in engineering and other applications since the early 1920s. It is an error based controller that does not require an explicit mathematical model of the plant. The TFB controller is given in the form of

The SF controller can be defined by 4 and is based on the state space model of the plant 5 When the state x is not accessible a state observer SO 6 is often used to find its estimate circumflex over x . Here r is the set point for the output to follow. Controller Tuning

Over the years the advances in control theory provided a number of useful analysis and design tools. As a result controller design moved from empirical methods e.g. ad hoc tuning via Ziegler and Nichols tuning tables for PID to analytical methods e.g. pole placement . The frequency response method Bode and Nyquist plots also facilitated analytical control design.

Conventionally controllers are individually designed according to design criteria and then individually tuned until they exhibit an acceptable performance. Practicing engineers may design controllers e.g. PID using look up tables and then tune the controllers using trial and error techniques. But each controller is typically individually designed tuned and tested.

Tuning controllers has perplexed engineers. Controllers that are developed based on a mathematical model of the plant usually need their parameters to be adjusted or tuned as they are implemented in hardware and tested. This is because the mathematical model often does not accurately reflect the dynamics of the plant. Determining appropriate control parameters under such circumstances is often problematic leading to control solutions that are functional but ill tuned yielding lost performance and wasted control energy.

Additionally and or alternatively engineers design using analytical e.g. pole placement techniques but once again tune with trial and error techniques. Since many industrial machines and engineering applications are built to be inherently stable acceptable controllers can be designed and tuned using these conventional techniques however acceptable performance may not approach optimal performance.

One example conventional technique for designing a PID controller included obtaining an open loop response and determining what if anything needed to be improved. By way of illustration the designer would build a candidate system with a feedback loop guess the initial values of the three gains e.g. kp kd ki in PID and observe the performance in terms of rise time steady state error and so on. Then the designer might modify the proportional gain to improve rise time. Similarly the designer might add or modify a derivative controller to improve overshoot and an integral controller to eliminate steady state error. Each component would have its own gain that would be individually tuned. Thus conventional designers often faced choosing three components in a PID controller and individually tuning each component. Furthermore there could be many more parameters that the design engineer must tune if a TFB or a state feedback state observer SFSOB controller is employed.

Another observation of control design is that it is not portable. That is each control problem is solved individually and its solution cannot be easily modified for another control problem. This means that the tedious design and tuning process must be repeated for each control problem. The use of state observers is useful in not only system monitoring and regulation but also detecting as well as identifying failures in dynamical systems. Since almost all observer designs are based on the mathematical model of the plant the presence of disturbances dynamic uncertainties and nonlinearities pose great challenges in practical applications. Toward this end the high performance robust observer design problem has been topic of considerable interest recently and several advanced observer designs have been proposed. Although satisfactory in certain respects a need remains for an improved strategy for an observer and incorporation and use of such in a control system.

Observers extract real time information of a plant s internal state from its input output data. The observer usually presumes precise model information of the plant since performance is largely based on its mathematical accuracy. Closed loop controllers require both types of information. This relationship is depicted in of . Such presumptions however often make the method impractical in engineering applications since the challenge for industry remains in constructing these models as part of the design process. Another level of complexity is added when gain scheduling and adaptive techniques are used to deal with nonlinearity and time variance respectively.

Recently disturbance rejection techniques have been used to account for uncertainties in the real world and successfully control complex nonlinear systems. The premise is to solve the problem of model accuracy in reverse by modeling a system with an equivalent input disturbance d that represents any difference between the actual plant P and a derived selected model Pof the plant including external disturbances w. An observer is then designed to estimate the disturbance in real time and provide feedback to cancel it. As a result the augmented system acts like the model Pat low frequencies making the system accurate to Pand allowing a controller to be designed for P. This concept is illustrated in of .

The most common of these techniques is the disturbance observer DOB structure Endo S. H. Kobayashi C. J. Kempf S. Kobayashi M. Tomizuka and Y. Hori 1996 . Robust Digital Tracking Controller Design for High Speed Positioning Systems. 4 4 527 536 Kim B. K. H. T. Choi W. K. Chung and I. H. Suh 2002 . Analysis and Design of Robust Motion Controllers in the Unified Framework. 124 313 321 Lee H. S. and M. Tomizuka 1996 . Robust Motion Controller Design for High Accuracy Positioning Systems. 43 1 48 55 Tesfaye A. H. S. Lee and M. Tomizuka 2000 . A Sensitivity Optimization Approach to Design of a Disturbance Observer in Digital Motion Control. 5 1 32 38 Umeno T. and Y. Hori 1991 . Robust Speed Control of DC Servomotors Using Modern Two Degrees of Freedom Controller Design . 38 5 363 368 . It uses simple binomial Q filters allowing the observer to be parameterized i.e. tuned by a single bandwidth parameter. A model deliberately different from P is also suggested in E. Schrijver and J. van Dijk Disturbance Observers for Rigid Mechanical Systems Equivalence Stability and Design 124 no. 4 pp. 539 548 2002 to facilitate design but no guidelines are given other than it should be as simple as possible cautioning stability and performance may be in danger. Another obstacle is that a separate observer must be designed to provide state feedback to the controller. In existing research derivative approximates are used in this way but their effect on performance and stability has yet to be analyzed. Furthermore the controller design is dependent on the DOB design meaning that derivative approximates can not be arbitrarily selected.

Multiple DOBs were used to control a multivariable robot by treating it as a set of decoupled single input single output SISO systems each with disturbances that included the coupled dynamics Bickel R. and M. Tomizuka 1999 . Passivity Based Versus Disturbance Observer Based Robot Control Equivalence and Stability. 121 41 47 Hori Y. K. Shimura and M. Tomizuka 1992 . Position Force Control of Multi Axis Robot Manipulator Based on the TDOF Robust Servo Controller For Each Joint. 753 757 Kwon S. J. and W. K. Chung 2002 . Robust Performance of the Multiloop Perturbation Compensator. 7 2 190 200 Schrijver E. and J. Van Dijk 2002 Disturbance Observers for Rigid Mechanical Systems Equivalence Stability and Design. 124 539 548.

Another technique referred to as the unknown input observer UIO estimates the states of both the plant and the disturbance by augmenting a linear plant model with a linear disturbance model Burl J. B. 1999 . 308 314. Addison Wesley Longman Inc. Calif. Franklin G. F. J. D. Powell and M. Workman 1998 . Third Edition Addison Wesley Longman Calif. Johnson C. D. 1971 . Accommodation of External Disturbances in Linear Regulator and Servomechanism Problems. AC 16 6 635 644 Liu C. S. and H. Peng 2002 . Inverse Dynamics Based State and Disturbance Observer for Linear Time Invariant Systems. 124 375 381 Profeta J. A. III W. G. Vogt and M. H. Mickle 1990 . Disturbance Estimation and Compensation in Linear Systems. 26 2 225 231 Schrijver E. and J. van Dijk 2002 Disturbance Observers for Rigid Mechanical Systems Equivalence Stability and Design. J. 124 539 548 . Unlike the DOB structure the controller and observer can be designed independently like a Luenberger observer. However it still relies on a good mathematical model and a design procedure to determine observer gains. An external disturbance w is generally modeled using cascaded integrators 1 s . When they are assumed to be piece wise constant the observer is simply extended by one state and still demonstrates a high degree of performance.

In this regard the extended state observer ESO is quite different. Originally proposed by Han J. 1999 . Nonlinear Design Methods for Control Systems. 14 in the form of a nonlinear UIO and later simplified to a linear version with one tuning parameter by Gao Z. 2003 . Scaling and Parameterization Based Controller Tuning. 4989 4996 the ESO combines the state and disturbance estimation power of a UIO with the tuning simplicity of a DOB. One finds a decisive shift in the underlying design concept as well. The traditional observer is based on a linear time invariant model that often describes a nonlinear time varying process. Although the DOB and UIO reject input disturbances for such nominal plants they leave the question of dynamic uncertainty mostly unanswered in direct form. The ESO on the other hand addresses both issues in one simple framework by formulating the simplest possible design model P 1 sfor a large class of uncertain systems. Pis selected to simplify controller and observer design forcing P to behave like it at low frequencies rather than P. As a result the effects of most plant dynamics and external disturbances are concentrated into a single unknown quantity. The ESO estimates this quantity along with derivatives of the output giving way to the straightforward design of a high performance controller.

Originally proposed by Han J. 1999 . Nonlinear Design Methods for Control Systems. 14 a nonlinear non parameterized active disturbance rejection control ADRC is a method that uses an ESO. A linear version of the ADRC controller and ESO were parameterized for transparent tuning by Gao Z. 2003 . Scaling and Parameterization Based Controller Tuning. 4989 4996. Its practical usefulness is seen in a number of benchmark applications already implemented throughout industry with promising results Gao Z. S. Hu and F. Jiang 2001 . A Novel Motion Control Design Approach Based on Active Disturbance Rejection. 40 Goforth F. 2004 . On Motion Control Design and Tuning Techniques. Proc. of ACC Hu S. 2001 . On High Performance Servo Control Solutions for Hard Disk Drive. Department of Electrical and Computer Engineering Cleveland State University Hou Y. Z. Gao F. Jiang and B. T. Boulter 2001 . Active Disturbance Rejection Control for Web Tension Regulation. 40 Huang Y. K. Xu and J. Han 2001 . Flight Control Design Using Extended State Observer and Nonsmooth Feedback. Proc. of 40th IEEE Conf. on Decision and Control Sun B and Z. Gao 2004 . A DSP Based Active Disturbance Rejection Control Design for a 1 KW H Bridge DC DC Power Converter. To appear in Xia Y. L. Wu K. Xu and J. Han 2004 . Active Disturbance Rejection Control for Uncertain Multivariable Systems With Time Delay 2004 . It was also applied to a fairly complex multivariable aircraft control problem Huang Y. K. Xu and J. Han 2001 . Flight Control Design Using Extended State Observer and Nonsmooth Feedback. 40 .

What is needed is a control framework for application to systems throughout industry that are complex and largely unknown to the personnel often responsible for controlling them. In the absence of required expertise less tuning parameters are needed than current approaches such as multi loop PID while maintaining or even improving performance and robustness.

In addition to the above controllers a more practical controller is the recently developed from Active Disturbance Rejection Controller ADRC . Its linear form LADRC for a second order plant is introduced below as an illustration. The unique distinction of ADRC is that it is largely independent of the mathematical model of the plant and is therefore better than most controllers in performance and robustness in practical applications.

Consider an example of controlling a second order plant 7 where y and u are output and input respectively and w is an input disturbance. Here both parameters a and b are unknown although there is some knowledge of b e.g. b b derived from the initial acceleration of y in step response . Rewrite 7 as 8 where adot over y by w b b u. Here is referred to as the generalized disturbance or disturbance because it represents both the unknown internal dynamics adot over y by b b u and the external disturbance w t .

If an estimate of circumflex over can be obtained then the control law reduces the plant to circumflex over uwhich is a unit gain double integrator control problem with a disturbance circumflex over .

Command following refers to the output of a controlled system meeting design requirements when a specified reference trajectory is applied. Oftentimes it refers to how closely the output y compares to the reference input r at any given point in time. This measurement is known as the error e r y.

Control problems can be categorized in two major groups point to point control and tracking control. Point to point applications call for a smooth step response with minimal overshoot and zero steady state error such as when controlling linear motion from one position to the next and then stopping. Since the importance is placed on destination accuracy and not on the trajectory between points conventional design methods produce a controller with inherent phase lag in order to produce a smooth output. Tracking applications require precise tracking of a reference input by keeping the error as small as possible such as when controlling a process that does not stop. Since the importance is placed on accurately following a changing reference trajectory between points the problem here is that any phase lag produces unacceptably large errors in the transient response which lasts for the duration of the process. Although it does not produce a response without overshoot it does produce a much smaller error signal than the point to point controller. The significance is in its ability to reduce the error by orders of magnitude. A step input may be used in point to point applications but a motion profile should be used in tracking applications.

Various methods have been used to remove phase lag from conventional control systems. All of them essentially modify the control law to create a desired closed loop transfer function equal to one. As a result the output tracks the reference input without any phase lag and the effective bandwidth of the overall system is improved. The most common method is model inversion where the inverse of the desired closed loop transfer function is added as a prefilter. Another method proposed a zero Phase Error Tracking Controller ZPETC that cancels poles and stable zeros of the closed loop system and compensates for phase error introduced by un cancelable zeros. Although it is referred to as a tracking controller it is really a prefilter that reduces to the inverse of the desired closed loop transfer function when unstable zeros are not present. Other methods consist of a single tracking control law with feed forward terms in place of the conventional feedback controller and prefilter but they are application specific. However all of these and other previous methods apply to systems where the model is known.

Model inaccuracy can also create tracking problems. The performance of model based controllers is largely dependent on the accuracy of the model. When linear time invariant LTI models are used to characterize nonlinear time varying NTV systems the information becomes inaccurate over time. As a result gain scheduling and adaptive techniques are developed to deal with nonlinearity and time variance respectively. However the complexity added to the design process leads to an impractical solution for industry because of the time and level of expertise involved in constructing accurate mathematical models and designing tuning and maintaining each control system.

There have been a number of high performance tracking algorithms that consist of three primary components disturbance rejection feedback control and phase error compensation implemented as a prefilter. First disturbance rejection techniques are applied to eliminate model inaccuracy with an inner feedback loop. Next a stabilizing controller is constructed based on a nominal model and implemented in an outer feedback loop. Finally the inverse of the desired closed loop transfer function is added as a prefilter to eliminate phase lag. Many studies have concentrated on unifying the disturbance rejection and control part but not on combining the control and phase error compensation part such as the RIC framework. Internal model control IMC cancels an equivalent output disturbance. B. Francis and W. Wonham The Internal Model Principal of Control Theory vol 12 1976 pp. 457 465. E. Schrijver and J. van Dijk Disturbance Observers for Rigid Mechanical Systems Equivalence Stability and Design vol. 124 December 2002 pp. 539 548 uses a basic tracking controller with a DOB to control a multivariable robot. The ZPETC has been widely used in combination with the DOB framework and model based controllers.

Thus having reviewed controllers and observers the application now describes example systems and methods related to controllers and observers.

Web tension regulation is a challenging industrial control problem. Many types of material such as paper plastic film cloth fabrics and even strip steel are manufactured or processed in a web form. The quality of the end product is often greatly affected by the web tension making it a crucial variable for feedback control design together with the velocities at the various stages in the manufacturing process. The ever increasing demands on the quality and efficiency in industry motivate researchers and engineers alike to explore better methods for tension and velocity control. However the highly nonlinear nature of the web handling process and changes in operating conditions temperature humidity machine wear and variations in raw materials make the control problem challenging.

Accumulators in web processing lines are important elements in web handling machines as they are primarily responsible for continuous operation of web processing lines. For this reason the study and control of accumulator dynamics is an important concern that involves a particular class of problems. The characteristics of an accumulator and its operation as well as the dynamic behavior and control of the accumulator carriage web spans and tension are known in the art.

Both open loop and closed loop methods are commonly used in web processing industries for tension control purposes. In the open loop control case the tension in a web span is controlled indirectly by regulating the velocities of the rollers at either end of the web span. An inherent drawback of this method is its dependency on an accurate mathematical model between the velocities and tension which is highly nonlinear and highly sensitive to velocity variations. Nevertheless simplicity of the controller outweighs this drawback in many applications. Closing the tension loop with tension feedback is an obvious solution to improve accuracy and to reduce sensitivity to modeling errors. It requires tension measurement for example through a load cell but is typically justified by the resulting improvements in tension regulation.

Most control systems will unavoidably encounter disturbances both internal and external and such disturbances have been the obstacles to the development of high performance controller. This is particularly true for tension control applications and therefore a good tension regulation scheme must be able to deal with unknown disturbances. In particular tension dynamics are highly nonlinear and sensitive to velocity variations. Further process control variables are highly dependent on the operating conditions and web material characteristics. Thus what are needed are systems and methods for control that are not only overly dependent on the accuracy of the plant model but also suitable for the rejection of significant internal and external disturbances.

A great deal of research has been conducted towards the application of modern multivariable control techniques on aircraft engines. The majority of this research has been to control the engine at a single operating point. Among these methods are a multivariable integrator windup protection scheme Watts S. R. and S. Garg 1996 . An Optimized Integrator Windup Protection Technique Applied to a Turbofan Engine Control a tracking filter and a control mode selection for model based control Adibhatla S. and Z. Gastineau 1994 . Tracking Filter Selection And Control Mode Selection For Model Based Control. 30 an Hmethod and linear quadratic Gaussian with loop transfer recovery method Watts S. R. and S. Garg 1995 . A Comparison Of Multivariable Control Design Techniques For A Turbofan Engine Control. . and a performance seeking control method Adibhatla S. and K. L. Johnson 1993 . Evaluation of a Nonlinear Psc Algorithm on a Variable Cycle Engine. 29 . Various schemes have been developed to reduce gain scheduling Garg S. 1997 . A Simplified Scheme for Scheduling Multivariable Controllers. and have even been combined with integrator windup protection and H Frederick D. K. S. Garg and S. Adibhatla 2000 . Turbofan Engine Control Design Using Robust Multivariable Control Technologies. .

Conventionally there have been a limited number of control techniques for full flight operation Garg S. 1997 . A Simplified Scheme for Scheduling Multivariable Controllers. IEEE Control Systems and Polley J. A. S. Adibhatla and P. J. Hoffman 1988 . Multivariable Turbofan Engine Control for Full Conference on Decision and Control Flight Operation. . However there has been no development of tuning a controller for satisfactory performance when applied to an engine. Generally at any given operating point models can become inaccurate from one engine to another. This accuracy increases with model complexity and subsequently design and tuning complexity. As a result very few of these or similar aircraft design studies have led to implementation on an operational vehicle.

The current method for controlling high performance jet engines remains multivariable proportional integral PI control Edmunds J. M. 1979 . Control System Design Using Closed Loop Nyquist and Bode Arrays. 30 5 773 802 and Polley J. A. S. Adibhatla and P. J. Hoffman 1988 . Multivariable Turbofan Engine Control for Full Conference on Decision and Control. Flight Operation. . Although the controller is designed by implementing Bode and Nyquist techniques and is tunable a problem remains due to the sheer number of tuning parameters compounded by scheduling.

The terms health fault diagnosis and tolerance are used in broad terms. Some literature defines a fault as an unpermitted deviation of at least one characteristic property or variable by L. H. Chiang E. Russell and R. D. Braatz Springer Verlag February 2001. Others define it more generally as the indication that something is going wrong with the system by J. J. Gertler Survey of model based failure detection and isolation in complex plants 1988.

Industry is increasingly interested in actively diagnosing faults in complex systems. The importance of fault diagnosis can be seen by the amount of literature associated with it. There are a number of good survey papers by J. J. Gertler Survey of model based failure detection and isolation in complex plants December 1988. V. Venkatasubramanian R. Rengaswamy K. Yin and S. N. Kavuri A review of process fault detection and diagnosis part i Quantitative model based methods 27 pp. 293 311 April 2003 P. M. Frank Fault diagnosis in dynamic systems using analytical and knowledge based redundancy a survey and some new results 26 no. 3 pp. 459 474 1990 K. Madani A survey of artificial neural networks based fault detection and fault diagnosis techniques vol. 5 pp. 3442 3446 July 1999 P. M. Frank Analytical and qualitative model based fault diagnosis a survey and some new results 1996 P. M. Frank and X. Ding Survey of robust residual generation and evaluation methods in observer based fault detection 1997 J. Riedesel A survey of fault diagnosis technology for space power systems in Proceedings of the 24 891989 pp. 183 188 A. Willsky A survey of design methods for failure detection in dynamic systems N vol. 76 pp. 11 347 1975 M. Kinnaert Fault diagnosis based on analytical models for linear and nonlinear systems a tutorial Department of Control Engineering and System Analysis Universit Libre de Bruxelles Tech. Rep. 2004. and books by L. H. Chiang E. Russell and R. D. Braatz Springer Verlag February 2001 M. Blanke M. Kinnaert J. Junze M. Staroswiecki J. Schroder and J. Lunze Springer Verlag August 2003 R. Patton P. M. Frank and R. N. Clark Springer Verlag Telos 2000 S. Simani C. Fantuzzi and R. Patton . Springer Verlag January 2003 E. Russell L. H. Chiang and R. D. Braatz . Springer Verlag 2000 M. Basseville and I. V. Nikiforov . Prentice Hall Inc April 1993. which collect many of the issues and solutions for faults.

There are four main categories of fault diagnosis. Fault detection is the indication that something is going wrong with the system. Fault isolation determines the location of the failure. Failure identification is the determination of the size of the failure. Fault accommodation and remediation is the act or process of correcting a fault. Most fault solutions deal with the first three categories and do not make adjustments to closed loop systems. The common solutions can be categorized into a six major areas 

Some of these methods attempt to remove the need for accurate mathematical models yet require other implicit models. Analytical redundancy by E. Y. Chow and A. S. Willsky Analytical redundancy and the design of robust failure detection systems October 1982. the most popular method relies heavily on mathematical models.

Often detailed model information is not available although diagnostics of the dynamic control system are still important. A less developed but important problem is characterizing what can be determined from input output data with few assumptions about the plant.

Without adequate knowledge of the plant disturbances faults and modeling errors it is difficult to build an effective estimator. For the most part each of these issues has been approached independently.

This section presents a simplified summary of methods systems and computer readable media and so on for scaling and parameterizing controllers to facilitate providing a basic understanding of these items. This summary is not an extensive overview and is not intended to identify key or critical elements of the methods systems computer readable media and so on or to delineate the scope of these items. This summary provides a conceptual introduction in a simplified form as a prelude to the more detailed description that is presented later.

The application describes scaling and parameterizing controllers. With these two techniques controller designing tuning and optimizing can be improved. In one example systems methods and so on described herein facilitate reusing a controller design by scaling a controller from one application to another. This scaling may be available for example for applications whose plant differences can be detailed through frequency scale and or gain scale. While PID controllers are used as examples it is to be appreciated that other controllers can benefit from scaling and parameterization as described herein.

Those familiar with filter design understand that filters may be designed and then scaled for use in analogous applications. Filter designers are versed in the concept of the unit filter which facilitates scaling filters. In example controller scaling techniques a plant transfer function is first reduced to a unit gain and unit bandwidth UGUB form. Then a known controller for an appropriate UGUB plant is scaled for an analogous plant. Since certain plants share certain characteristics classes of UGUB plants can be designed for which corresponding classes of scaleable parameterizable controllers can be designed.

Since certain classes of plants have similar properties it is possible to frequency scale controllers within classes. For example an anti lock brake plant for a passenger car that weighs 2000 pounds may share a number of characteristics with an anti lock brake plant for a passenger car that weighs 2500 pounds. Thus if a UGUB plant can be designed for this class of cars then a frequency scaleable controller can also be designed for the class of plants. Then once a controller has been selected and engineered for a member of the class e.g. the 2000 pound car it becomes a known controller from which other analogous controllers can be designed for other similar cars e.g. the 2500 pound car using frequency scaling.

This scaling method makes a controller portable . That is a single controller can be used as the seed to generate controllers for a large number of different plants that are similar in nature. The remaining question concerns how to account for differences in design requirements. Controller parameterization addresses this issue. The example parameterization techniques described herein make controller coefficients functions of a single design parameter namely the crossover frequency also known as the bandwidth . In doing so the controller can be tuned for different design requirements which is primarily reflected in the bandwidth requirement.

The combination of scaling and parameterization methods means that an existing controller including PID TFB and SFSOB can be scaled for different plants and then through the adjustment of one parameter changed to meet different performance requirements that are unique in different applications.

Certain illustrative example methods systems computer readable media and so on are described herein in connection with the following description and the annexed drawings. These examples are indicative however of but a few of the various ways in which the principles of the methods systems computer readable media and so on may be employed and thus are intended to be inclusive of equivalents. Other advantages and novel features may become apparent from the following detailed description when considered in conjunction with the drawings.

As used in this application the term computer component refers to a computer related entity either hardware firmware software a combination thereof or software in execution. For example a computer component can be but is not limited to being a process running on a processor a processor an object an executable a thread of execution a program and a computer. By way of illustration both an application running on a server and the server can be computer components. One or more computer components can reside within a process and or thread of execution and a computer component can be localized on one computer and or distributed between two or more computers.

 Computer communications as used herein refers to a communication between two or more computers and can be for example a network transfer a file transfer an applet transfer an email a hypertext transfer protocol HTTP message a datagram an object transfer a binary large object BLOB transfer and so on. A computer communication can occur across for example a wireless system e.g. IEEE 802.11 an Ethernet system e.g. IEEE 802.3 a token ring system e.g. IEEE 802.5 a local area network LAN a wide area network WAN a point to point system a circuit switching system a packet switching system and so on.

 Logic as used herein includes but is not limited to hardware firmware software and or combinations of each to perform a function s or an action s . For example based on a desired application or needs logic may include a software controlled microprocessor discrete logic such as an application specific integrated circuit ASIC or other programmed logic device. Logic may also be fully embodied as software.

An operable connection is one in which signals and or actual communication flow and or logical communication flow may be sent and or received. Usually an operable connection includes a physical interface an electrical interface and or a data interface but it is to be noted that an operable connection may consist of differing combinations of these or other types of connections sufficient to allow operable control.

 Signal as used herein includes but is not limited to one or more electrical or optical signals analog or digital one or more computer instructions a bit or bit stream or the like.

 Software as used herein includes but is not limited to one or more computer readable and or executable instructions that cause a computer or other electronic device to perform functions actions and or behave in a desired manner. The instructions may be embodied in various forms like routines algorithms modules methods threads and or programs. Software may also be implemented in a variety of executable and or loadable forms including but not limited to a stand alone program a function call local and or remote a servelet an applet instructions stored in a memory part of an operating system or browser and the like. It is to be appreciated that the computer readable and or executable instructions can be located in one computer component and or distributed between two or more communicating co operating and or parallel processing computer components and thus can be loaded and or executed in serial parallel massively parallel and other manners. It will be appreciated by one of ordinary skill in the art that the form of software may be dependent on for example requirements of a desired application the environment in which it runs and or the desires of a designer programmer or the like.

 Data store as used herein refers to a physical and or logical entity that can store data. A data store may be for example a database a table a file a list a queue a heap and so on. A data store may reside in one logical and or physical entity and or may be distributed between two or more logical and or physical entities.

To the extent that the term includes is employed in the detailed description or the claims it is intended to be inclusive in a manner similar to the term comprising as that term is interpreted when employed as a transitional word in a claim.

To the extent that the term or is employed in the claims e.g. A or B it is intended to mean A or B or both . When the author intends to indicate only A or B but not both then the author will employ the term A or B but not both . Thus use of the term or in the claims is the inclusive and not the exclusive use. See Bryan A. Garner A Dictionary of Modern Legal Usage 624 2d Ed. 1995 .

Example methods systems computer media and so on are now described with reference to the drawings where like reference numerals are used to refer to like elements throughout. In the following description for purposes of explanation numerous specific details are set forth in order to facilitate thoroughly understanding the methods systems computer readable media and so on. It may be evident however that the methods systems and so on can be practiced without these specific details. In other instances well known structures and devices are shown in block diagram form in order to simplify description.

Controllers typically are not scalable and thus are not portable between applications. However controllers can be made portable via scaling as described in the example systems and methods provided herein. In general a plant mathematically represented by a transfer function G s where s is the Laplace Transform variable can be scaled according to 16 where is the plant frequency scale and k is the gain scale to represent a large number of plants that differ from the original plant by a frequency scale and a gain scale k.

Consider a unit feedback control system with the plant G s and controller G s as shown in . Assume that G s was designed with desired command following disturbance rejection noise rejection and stability robustness. Now consider a similar class of plants kG s . For given using example systems and methods described herein a suitable controller can be produced through frequency scaling. Thus define as the frequency scale and k as the gain scale of the plant G s with respect to G s . Then 1 . 18 

Referring to an example system that employs frequency scaling is illustrated. The system includes a controller identifier that can identify a known controller associated with controlling a known plant. The controller may have one or more scaleable parameters e.g. frequency gains that facilitate scaling the controller. The controller identifier may access a controller information data store and or a plant information data store to facilitate characterizing one or more properties of the known controller. By way of illustration the controller identifier may identify the frequency scale of the controller and or the frequency scale and transfer function s of a plant controlled by the known controller.

The controller information data store may store for example controller class information and or information concerning scaleable controller parameters. Similarly the plant data store may store for example plant information like transfer function shape frequency scale and so on.

The system may also include a controller scaler that produces a scaled controller from the identified scaleable parameter. The scaler may make scaling decisions based for example on information in the controller information data store e.g. controller class scaleable parameters frequency scale information in the plant information data store e.g. plant class plant transfer function frequency scale and so on.

While illustrated as two separate entities it is to be appreciated that the identifier and scaler could be implemented in a single computer component and or as two or more distributed communicating co operating computer components. Thus the entities illustrated in may communicate through computer communications using signals carrier waves data packets and so on. Similarly while illustrated as two separate data stores the controller information data store and the plant information data store may be implemented as a single data store and or distributed between two or more communicating co operating data stores.

Aspects of controller scaling can be related to filter design. In filter design with the bandwidth the pass band and stop band requirements given filter design is straight forward. An example filter design method includes finding a unit bandwidth filter such as an nth order Chebeshev filter H s that meets the pass band and stop band specifications and then frequency scaling the filter as H s to achieve a bandwidth of .

Revisiting the system in to facilitate understanding frequency scaling and time scaling as related to controllers denote as the frequency scale of the plant Gp s with respect to G s and 1 the corresponding time scale. Then denote k as the gain scale of the plant kGp s with respect to Gp s . With these definitions in hand differences in example industrial control problems can be described in terms of the frequency and gain scales. For example temperature processes with different time constants in first order transfer functions motion control problems with different inertias motor sizes frictions and the like can be described in terms of the defined frequency and gain scales.

These scales facilitate paying less attention to differences between controllers and applications and more attention to a generic solution for a class of problems because using the scales facilitates reducing linear time invariant plants proper and without a finite zero to one of the following example forms 

Equation 19 describes many example industrial control problems that can be approximated by a first order or a second order transfer function response. Additionally equation 19 can be appended by terms like 

Assume G s is a stabilizing controller for plant G s and the loop gain crossover frequency is s then the controller 23 will stabilize the plant s kG s . The new controller new loop gain 24 will have a bandwidth of and substantially the same stability margins of since . Note that the new closed loop system has substantially the same frequency response shape as the original system except that it is shifted by . Thus feedback control properties like bandwidth disturbance and noise rejection are retained as is the stability robustness from the previous design except that frequency ranges are shifted by .

Now that controller scaling has been described PID scaling can be addressed. According to the frequency scale principle discussed above and assuming the original controller for G s is a PID e.g. 

To demonstrate the practical application and tangible results possible from the method described above in the following example consider a plant that has a transfer function of

In one example the controller is a PID controller. The PID controller may have a plant frequency scale as a scaleable parameter. In another example the method includes producing the scaled controller. For example a computer component may be programmed to perform the frequency scaled controlling. Additionally computer executable portions of the method may be stored on a computer readable medium and or be transmitted between computer components by for example carrier waves encoding computer executable instructions.

In view of the exemplary systems shown and described below example methodologies that are implemented will be better appreciated with reference to the flow diagrams of and . While for purposes of simplicity of explanation the illustrated methodologies are shown and described as a series of blocks it is to be appreciated that the methodologies are not limited by the order of the blocks as some blocks can occur in different orders and or concurrently with other blocks from that shown and described. Moreover less than all the illustrated blocks may be required to implement an example methodology. Furthermore additional and or alternative methodologies can employ additional not illustrated blocks. In one example methodologies are implemented as computer executable instructions and or operations stored on computer readable media including but not limited to an application specific integrated circuit ASIC a compact disc CD a digital versatile disk DVD a random access memory RAM a read only memory ROM a programmable read only memory PROM an electronically erasable programmable read only memory EEPROM a disk a carrier wave and a memory stick.

In the flow diagrams rectangular blocks denote processing blocks that may be implemented for example in software. Similarly the diamond shaped blocks denote decision blocks or flow control blocks that may also be implemented for example in software. Alternatively and or additionally the processing and decision blocks can be implemented in functionally equivalent circuits like a digital signal processor DSP an ASIC and the like.

A flow diagram does not depict syntax for any particular programming language methodology or style e.g. procedural object oriented . Rather a flow diagram illustrates functional information one skilled in the art may employ to program software design circuits and so on. It is to be appreciated that in some examples program elements like temporary variables initialization of loops and variables routine loops and so on are not shown.

Turning to a flowchart for an example method for producing a controller is illustrated. The method includes at identifying a controller G s that stabilizes a plant G s where the controller has a frequency and at producing a controller s by scaling the controller G s according to s G s k where the controller s will stabilize the plant s kG s where is the frequency scale of the plant G s and where k is the gain scale of the plant kG s . In one example the controller is a PID controller of the form

Applying a unit step function as the set point the responses of an original controller and a scaled controller are shown in demonstrating that the response of the scaled controller is substantially the same as the response of the original controller but scaled by 1 . The gain margins of both systems are substantially infinite and the phase margins are both approximately 82.372 degrees. The 0 dB crossover frequency for both systems are 2.3935 and 23.935 r s respectively. Thus the PID scaled by the example method is demonstrably appropriate for the application.

While the method described above concerned linear PIDs it is to be appreciated that the method can also be applied to scaling nonlinear PIDs. For example PID performance can be improved by using nonlinear gains in place of the linear ones. For example 28 where g e g e and g e are nonlinear functions. The non linear PIDs can be denoted NPID. Nonlinearities are selected so that the proportional control is more sensitive to small errors the integral control is limited to the small error region which leads to significant reduction in the associate phase lag and the differential control is limited to a large error region which reduces its sensitivity to the poor signal to noise ratio when the response reaches steady state and the error is small.

The NPID retains the simplicity of PID and the intuitive tuning. The same gain scaling formula 30 will also apply to the NPID controller when the plant changes from G s to kG s .

Scaling facilitates concentrating on normalized control problems like those defined in 22 . This facilitates selecting an appropriate controller for an individual problem by using the scaling formula in 26 and the related systems and methods that produce tangible results e.g. scaled controller . This further facilitates focusing on the fundamentals of control like basic assumptions requirements and limitations. Thus the example systems methods and so on described herein concerning scaling and parameterization can be employed to facilitate optimizing individual solutions given the physical constraints of a problem.

Working with controllers can be simplified if they can be described in terms of a smaller set of parameters than is conventionally possible. Typically a controller and possibly an observer may have many e.g. 15 parameters. The systems and methods described herein concerning parameterization facilitate describing a controller in terms of a single parameter. In one example controller parameterization concerns making controller parameters functions of a single variable the controller bandwidth .

Applying pole placement design to the first and second order plants in 22 a set of example parameterized controllers are obtained and shown in Table I. Information concerning the plants and the related controllers can be stored for example in a data store.

Loop shaping design can also be parameterized. Loop shaping refers to manipulating the loop gain frequency response L j G j G j as a control design tool. One example loop shaping method includes converting design specifications to loop gain constraints as shown in and finding a controller G j to meet the specifications.

As an example of loop shaping considering the plants of the form G s in Table I the desired loop gain can be characterized as

Once appropriate loop gain constraints are derived and the corresponding lowest order L s in 33 is selected the controller can be determined from

A compromise between and the phase margin can be made by adjusting upwards which will improve the low frequency properties at the cost of reducing phase margin. A similar compromise can be made between phase margin and .

Turning to an example method for scaling a controller is illustrated. The method includes at identifying a known controller in a controller class where the known controller controls a first plant. The method also includes at identifying a scaleable parameter for the known controller. At the method includes identifying a desired controller in the controller class where the desired controller controls a second frequency related plant and at establishing the frequency relation between the known controller and the desired controller. At the method scales the known controller to the desired controller by scaling the scaleable parameter based at least in part on the relation between the known controller and the desired controller.

Practical controller optimization concerns obtaining optimal performance out of existing hardware and software given physical constraints. Practical controller optimization is measured by performance measurements including but not limited to command following quickness a.k.a. settling time accuracy transient and steady state errors and disturbance rejection ability e.g. attenuation magnitude and frequency range . Example physical constraints include but are not limited to sampling and loop update rate sensor noise plant dynamic uncertainties saturation limit and actuation signal smoothness requirements.

Conventional tuning relies for example on minimizing a cost function like Hand H. However conventional cost functions may not comprehensively reflect the realities of control engineering and may therefore lead to suboptimal tuning. For example one common cost function is mathematically attractive but can lead to suboptimal controller tuning. Thus optimizing other criteria like are considered.

A typical industrial control application involves a stable single input single output SISO plant where the output represents a measurable process variable to be regulated and the input represents the control actuation that has a certain dynamic relationship to the output. This relationship is usually nonlinear and unknown although a linear approximation can be obtained at an operating point via the plant response to a particular input excitation like a step change.

Evaluating performance measurements in light of physical limitations yields the fact that they benefit from maximum controller bandwidth . If poles are placed in the same location then can become the single item to tune. Thus practical PID optimization can be achieved with single parameter tuning. For example in manufacturing a design objective for an assembly line may be to make it run as fast as possible while minimizing the down time for maintenance and trouble shooting. Similarly in servo design for a computer hard disk drive a design objective may be to make the read write head position follow the setpoint as fast as possible while maintaining extremely high accuracy. In automobile anti lock brake control design a design objective may be to have the wheel speed follow a desired speed as closely as possible to achieve minimum braking distance.

In the three examples the design goal can be translated to maximizing controller bandwidth . There are other industrial control examples that lead to the same conclusion. Thus maximization appears to be a useful criterion for practical optimality. Furthermore unlike purely mathematical optimization techniques optimization has real world applicability because it is limited by physical constraints. For example sending to infinity may be impractical because it may cause a resulting signal to vary unacceptably.

As an example of how physical limitations may affect optimization consider digital control apparatus that have a maximum sampling rate and a maximum loop update rate. The maximum sampling rate is a hardware limit associated with the Analog to Digital Converter ADC and the maximum loop update rate is software limit related to central processing unit CPU speed and the control algorithm complexity. Typically computation speeds outpace sampling rates and therefore only the sampling rate limitation is considered.

As another example measurement noise may also be considered when examining the physical limitations of optimization. For example the is limited to the frequency range where the accurate measurement of the process variable can be obtained. Outside of this range the noise can be filtered using either analog or digital filters.

Plant dynamic uncertainty may also be considered when examining the physical limitations of optimization. Conventional control design is based on a mathematical description of the plant which may only be reliable in a low frequency range. Some physical plants exhibit erratic phase distortions and nonlinear behaviors at a relative high frequency range. The controller bandwidth is therefore limited to the low frequency range where the plant is well behaved and predictable. To safeguard the system from instability the loop gain is reduced where the plant is uncertain. Thus maximizing the bandwidth safely amounts to expanding the effective high gain control to the edge of frequency range where the behavior of the plant is well known.

Similarly actuator saturation and smoothness may also affect design. Although using transient profile helps to decouple bandwidth design and the transient requirement limitations in the actuator like saturation nonlinearities like backlash and hysteresis limits on rate of change smoothness requirements based on wear and tear considerations and so on may affect the design. For example in a motion control application with a significant backlash problem in the gearbox excessively high bandwidth will result in a chattering gearbox and very likely premature breakdown. Thus optimization because it considers physical limitations like sampling rate loop update rate plant uncertainty actuator saturation and so on may produce improved performance.

In one controller optimization example assume that the plant is minimum phase e.g. its poles and zeros are in the left half plane that the plant transfer function is given that the parameterized controllers are known and available in form of Table I that a transient profile is defined according to the transient response specifications and that a simulator of closed loop control system as shown in is available. It is to be appreciated that the closed loop control system simulator can be for example hardware software or a combination of both. In one example the simulator incorporates limiting factors including but not limited to sensor and quantization noises sampling disturbances actuator limits and the like.

With these assumptions one example design method then includes determining frequency and gain scales and k from the given plant transfer function. The method also includes based on the design specification determining the type of controller required from for example Table I. The method also includes selecting the G s corresponding to the scaled plant in the form of Table I. The method also includes scaling the controller to

Consider an example motion control test bed for which the mathematical model of the motion system is 1.4123.2 23.2 35 where y is the output position u is the control voltage sent to the power amplifier that drives the motor and Tis the torque disturbance. An example design objective for the example system could be rotating the load one revolution in one second with no overshoot. Thus the physical characteristics of the example control problem are 

As described in the Background section the State Feedback SF controller 36 is based on the state space model of the plant 37 When the state x is not accessible a state observer SO 38 is often used to find its estimate circumflex over x . Here r is the setpoint for the output to follow. The state feedback gain K and the observer gain L are determined from the equations eig and eig where s and s are polynomials of s that are chosen by the designer. Usually the K and L have many parameters and are hard to tune.

The parameterization of state feedback and state observer gains are achieved by making and where and are bandwidth of the state feedback system and the state observer respectively and n is the order of the system. This simplifies tuning since parameters in K and L are now functions of and respectively. Parameterization of Linear Active Disturbance Rejection Controller LADRC for a Second Order Plant

Some controllers are associated with observers. Conventionally second order systems with controllers and observers may have a large number e.g. 15 of tunable features in each of the controller and observer. Thus while a design method like the Han method is conceptually viable its practical implementation is difficult because of tuning issues. As a consequence of the scaling and parameterization described herein observer based systems can be constructed and tuned using two parameters observer bandwidth and controller bandwidth .

State observers provide information on the internal states of plants. State observers also function as noise filters. A state observer design principle concerns how fast the observer should track the states e.g. what should its bandwidth be . The closed loop observer or the correction term L y in particular accommodates unknown initial states uncertainties in parameters and disturbances. Whether an observer can meet the control requirements is largely dependent on how fast the observer can track the states and in case of ESO the disturbance f t x1 x2 w . Generally speaking faster observers are preferred. Common limiting factors in observer design include but are not limited to dependency on the state space model of the plant sensor noise and fixed sampling rate.

Dependency on the state space model can limit an application to situations where a model is available. It also makes the observer sensitive to the inaccuracies of the model and the plant dynamic changes. The sensor noise level is hardware dependent but it is reasonable to assume it is a white noise with the peak value 0.1 to 1 of the output. The observer bandwidth can be selected so that there is no significant oscillation in its states due to noises. A state observer is a closed loop system by itself and the sampling rate has similar effects on the state observer performance as it does on feedback control. Thus an example model independent state observer system is described.

Observers are typically based on mathematical models. Example systems and methods described herein can employ a model independent observer as illustrated in . For example a plant may have a controller and an observer . The controller may be implemented as a computer component and thus may be programmatically tunable. Similarly the observer may be implemented as a computer component and thus may have scaleable parameters that can be scaled programmatically. Furthermore using analogous scaling and parameterizing as described herein the parameters of the observer can be reduced to . Therefore overall optimizing of the system reduces to tuning and .

Consider a simple example for controlling a second order plant 39 where y and u are output and input respectively and w is an input disturbance. Here both parameters a and b are unknown although there is some knowledge of b e.g. b b derived from the initial acceleration of y in step response . Rewrite 39 as 40 where adot over y by w b b u. Here is referred to as the generalized disturbance or disturbance because it represents both the unknown internal dynamics adot over y by b b u and the external disturbance w t .

This example illustrated in shows that disturbance observer based PD control achieves zero steady state error without using the integral part of a PID controller. This example illustrates that disturbance observer based PD control achieves zero steady state error without using the integral part of a PID controller. The example also illustrates that the design is model independent in that the design relies on the approximate value of b in 39 . The example also illustrates that the combined effects of the unknown disturbance and the internal dynamics are treated as a generalized disturbance. By augmenting the observer to include an extra state it is actively estimated and canceled out thereby achieving active disturbance rejection. This LESO based control scheme is referred to as linear active disturbance rejection control LADRC because the disturbance both internal and external represented by is actively estimated and eliminated.

The stability of controllers can also be examined. Let e x z i 1 2 3. Combine equation 43 and 44 and subtract the combination from 42 . Thus the error equation can be written 

The LADRC design from 43 to 46 yields a BIBO stable closed loop system if the observer in 43 and 44 and the feedback control law 46 for the double integrator are stable respectively. This is shown by combing equations 45 and 47 into a state feedback form of u 1 b k k 1 z Fz where F 1 b k k 1 . Thus the closed loop system can be represented by the state space equation of 

Since r is the bounded reference signal a nontrivial condition on the plant is that h dot over is bounded. In other words the disturbance must be differentiable.

 parameterization refers to parameterizing the ESO on observer bandwidth . Consider a plant 42 that has three poles at the origin. The related observer will be less sensitive to noises if the observer gains in 44 are small for a given . But observer gains are proportional to the distance for the plant poles to those of the observer. Thus the three observer poles should be placed at or equivalently 53 That is 3 3 54 

It is to be appreciated that equations 53 and 54 are extendable to nth order ESO. Similarly the parameterization method can be extended to the Luenberger Observer for arbitrary A B and C matrices by obtaining as observable canonical form of A B C determining the observer gain so that the poles of the observer are at and using the inverse state transformation to obtain the observer gain L for A B C. The parameters in L are functions of . One example procedure for coo optimization based design is now described.

Given tolerable noise thresholds in the observer states increase until at least one of the thresholds is about to be reached or the observer states become oscillatory due to sampling delay. In general the faster the ESO the faster the disturbance is observed and cancelled by the control law.

Equation 55 applies to a state feedback control system where is determined based on transient response requirements like the settling time specification. Using a transient profile instead of a step command facilitates more aggressive control design. In this example there are two bandwidths to consider the actual control loop bandwidth and the equivalent bandwidth of the transient profile . Part of the design procedure concerns selecting which of the two to use in 55 . Since the observer is evaluated on how closely it tracks the states and more indicative than on how fast the plant states move is the better choice although it is to be appreciated that either can be employed. Furthermore taking other design issues like the sampling delay into consideration a more appropriate minimum is found through simulation and experimentation as 5 10 56 

An example for optimizing LADRC is now presented. One example LADRC design and optimization method includes designing a parameterized LESO and feedback control law where and are the design parameters. The method also includes designing a transient profile with the equivalent bandwidth of and selecting an from 56 . The method then includes setting and simulating and or testing the LADRC in a simulator. The method also includes incrementally increasing and by the same amount until the noise levels and or oscillations in the control signal and output exceed the tolerance. The method also includes incrementally increasing or decreasing and individually if necessary to make trade offs between different design considerations like the maximum error during the transient period the disturbance attenuation and the magnitude and smoothness of the controller.

In one example the simulation and or testing may not yield satisfactory results if the transient design specification described by is untenable due to noise and or sampling limitations. In this case control goals can be lowered by reducing and therefore and . It will be appreciated by one skilled in the art that this approach can be extended to Luenberg state observer based state feedback design.

By way of illustration reconsider the control problem example associated with equations 32 but apply the LADRC in 43 to 48 . Note that b 23.2 for this problem but to make the design realistic assume the designer s estimate of b is b 40. Now rewrite the plant differential equation 38 as 1.4123.2 23.2 40 4040 The LESO is

It will be appreciated by one skilled in the art that observer based design and tuning techniques can be scaled to plants of arbitrary orders. For a general nth order plant with unknown dynamics and external disturbances 57 the observer can be similarly derived starting from the state space equation

The following example method can be employed to identify a plant order and b. Given a black box plant with input u and output y the order n and bcan be estimated by allowing the plant to discharge energy stored internally so that it has a zero initial condition e.g. y 0 dot over y 0 . . . y 0 0 and then assuming 0 0. The method includes applying a set of input signals and determining the initial slope of the response dot over y 0 0 . . . . The method also includes determining the slope y 0 that is proportional to u 0 under various tests e.g. y 0 ku 0 . Then the method includes setting n i 1 and b k.

Auto tuning concerns a press button function in digital control equipment that automatically selects control parameters. Auto tuning is conventionally realized using an algorithm to calculate the PID parameters based on the step response characteristics like overshoot and settling time. Auto tuning has application in for example the start up procedure of closed loop control e.g. commissioning an assembly line in a factory . Auto tuning can benefit from scaling and parameterization.

In some applications dynamic changes in the plant during operations are so severe that controller parameters are varied from one operating point to another. Conventionally gain scheduling is employed to handle these situations. In gain scheduling the controller gains are predetermined for different operating points and switched during operations. Additionally and or alternatively self tuning that actively adjusts control parameters based on real time data identifying dynamic plant changes is employed.

Common goals of these techniques are to make the controller parameter determination automatic given the plant response to a certain input excitation say a step function and to maintain a consistent controller performance over a wide range of operations e.g. making the controller robust .

Example systems methods and so on described herein concerning scaling and parameterization facilitate auto scaling model based controllers. When a transfer function model of a plant is available the controller can be designed using either pole placement or loop shaping techniques. Thus example scaling techniques described herein facilitate automating controller design and tuning for problems including but not limited to motion control where plants are similar differing only in dc gain and the bandwidth and adjusting controller parameters to maintain high control performance as the bandwidth and the gain of the plant change during the operation.

In the examples the plant transfer functions can be represented as s kG s where G s is given and known as the mother plant and k and are obtained from the plant response or transfer function. Assuming the design criteria are similar in nature differing only in terms of the loop gain bandwidth the controller for similar plants can be automatically obtained by scaling the given controller G s for G s . This is achieved by combining the controller scaling defined in equation 26 and parameterization to obtain the controller for s kG s as 67 

There are three parameters in 67 that are subject to tuning. The first two parameters k and represent plant changes or variations that are determined. The third parameter is tuned to maximize performance of the control system subject to practical constraints.

An example method for auto tuning is now described. The auto tuning method includes examining a plant G s and the nominal controller G s . Given the plant G s and the nominal controller G s the method includes performing off line tests to determine k and for the plant. The method also includes using equation 67 to determine a new controller for the plant s kG s obtained in the previous act. The method also includes optimizing for the new plant.

An example method for adaptive self tuning is now described. The adaptive self tuning procedure includes examining a plant s kG s where k and are subject to change during plant operation. Given the plant s kG s the method includes performing real time parameter estimation to determine k and as they change. The method also includes determining when the performance of the control system is degraded beyond a pre determined configurable threshold and updating the controller using 67 . The method also includes selectively decreasing if the plant dynamics deviate significantly from the model kG s which causes performance and stability problems. The method also includes selectively increasing subject to optimization constraints if the plant model can be updated to reflect the changes of the plant beyond k and .

The LADRC technique does not require the mathematical model of the plant. Instead it employs a rough estimate of the single parameter b in the differential equation of the plant 57 . This estimation is denoted as band is the sole plant parameter in LADRC. As the dynamics of the plant changes so does b. Thus bcan be estimated by rewriting 57 as 69 and assuming the zero initial condition e.g. y 0 0 i 1 2 . . . n 1 and f 0 0 . Then b b can be estimated by using 0 0 70 where u 0 is the initial value of the input. It is to be appreciated that this method can be applied to both open loop and closed loop configurations. For the auto tuning purposes the test can be performed off line and a step input u t constant can be applied. The LADRC does not require bto be highly accurate because the difference b b is treated as one of the sources of the disturbance estimated by LESO and cancelled by control law.

The bobtained from the off line estimation of b described above can be adapted for auto tuning LADRC. An auto tuning method includes performing off line tests to determine the order of the plant and b selecting the order and the bparameter of the LADRC using the results of the off line tests and performing a computerized auto optimization.

Using the controller scaling parameterization and optimization techniques presented herein an example computer implemented method as shown in can be employed to facilitate automatically designing and optimizing the automatic controls ADOAC for various applications. The applications include but are not limited to motion control thermal control pH control aeronautics avionics astronautics servo control and so on.

The method at accepts inputs including but not limited to information concerning hardware and software limitations like the actuator saturation limit noise tolerance sampling rate limit noise levels from sensors quantization finite word length and the like. The method also accepts input design requirements like settling time overshoot accuracy disturbance attenuation and so on. Furthermore the method also accepts as input the preferred control law form like PID form model based controller in a transfer function form and model independent LADRC form. In one example the method can indicate if the control law should be provided in a difference equation form. At a determination is made concerning whether a model is available. If a model is available then at the model is accepted either in transfer function differential equations or state space form. If a model is not available then the method may accept step response data at . Information on significant dynamics that is not modeled such as the resonant modes can also be accepted.

Once the method has received information input the method can check design feasibility by evaluating the specification against the limitations. For example in order to see whether transient specifications are achievable given the limitations on the actuator various transient profiles can be used to determine maximum values of the derivatives of the output base on which the maximum control signal can be estimated. Thus at a determination is made concerning whether the design is feasible. In one example if the design is not feasible processing can conclude. Otherwise processing can proceed to .

If the input information passes the feasibility test then at the method can determine an parameterized solution in one or more formats. In one example the solution can then be simulated at to facilitate optimizing the solution.

In one example to assist an engineer or other user the ADOAC method provides parameterized solutions of different kind order and or forms as references. The references can then be ranked separately according to simplicity command following quality disturbance rejection and so on to facilitate comparison.

The bus can be a single internal bus interconnect architecture and or other bus architectures. The bus can be of a variety of types including but not limited to a memory bus or memory controller a peripheral bus or external bus and or a local bus. The local bus can be of varieties including but not limited to an industrial standard architecture ISA bus a microchannel architecture MSA bus an extended ISA EISA bus a peripheral component interconnect PCI bus a universal serial USB bus and a small computer systems interface SCSI bus.

The computer interacts with input output devices via input output ports . Input output devices can include but are not limited to a keyboard a microphone a pointing and selection device cameras video cards displays and the like. The input output ports can include but are not limited to serial ports parallel ports and USB ports.

The computer can operate in a network environment and thus is connected to a network by a network interface . Through the network the computer may be logically connected to a remote computer . The network can include but is not limited to local area networks LAN wide area networks WAN and other networks. The network interface can connect to local area network technologies including but not limited to fiber distributed data interface FDDI copper distributed data interface CDDI Ethernet IEEE 802.3 token ring IEEE 802.5 and the like. Similarly the network interface can connect to wide area network technologies including but not limited to point to point links and circuit switching networks like integrated services digital networks ISDN packet switching networks and digital subscriber lines DSL .

Referring now to information can be transmitted between various computer components associated with controller scaling and parameterization described herein via a data packet . An exemplary data packet is shown. The data packet includes a header field that includes information such as the length and type of packet. A source identifier follows the header field and includes for example an address of the computer component from which the packet originated. Following the source identifier the packet includes a destination identifier that holds for example an address of the computer component to which the packet is ultimately destined. Source and destination identifiers can be for example globally unique identifiers guids URLS uniform resource locators path names and the like. The data field in the packet includes various information intended for the receiving computer component. The data packet ends with an error detecting and or correcting field whereby a computer component can determine if it has properly received the packet . While six fields are illustrated in the data packet it is to be appreciated that a greater and or lesser number of fields can be present in data packets.

Referring now to an application programming interface API is illustrated providing access to a system for controller scaling and or parameterization. The API can be employed for example by programmers and or processes to gain access to processing performed by the system . For example a programmer can write a program to access the system e.g. to invoke its operation to monitor its operation to access its functionality where writing a program is facilitated by the presence of the API . Thus rather than the programmer having to understand the internals of the system the programmer s task is simplified by merely having to learn the interface to the system . This facilitates encapsulating the functionality of the system while exposing that functionality. Similarly the API can be employed to provide data values to the system and or retrieve data values from the system .

For example a process that retrieves plant information from a data store can provide the plant information to the system and or the programmers via the API by for example using a call provided in the API . Thus in one example of the API a set of application program interfaces can be stored on a computer readable medium. The interfaces can be executed by a computer component to gain access to a system for controller scaling and parameterization. Interfaces can include but are not limited to a first interface that facilitates communicating controller information associated with PID production a second interface that facilitates communicating plant information associated with PID production and a third interface that facilitates communicating frequency scaling information generated from the plant information and the controller information.

In another embodiment a linear Active Disturbance Rejection Control LADRC can be employed to provide control on web processing lines. LADRC requires very little information of the plant dynamics has only two parameters to tune and has very good disturbance rejection capability. LADRC controllers are inherently robust against plant variations and are effective in a large range of operations.

The mathematical model of a web process line and the existing control methods are illustrated. The accumulator dynamics are used as a test bed in association with an exemplary embodiment. Generally a web processing line layout includes an entry section a process section and an exit section. Operations such as wash and quench on the web are performed in the process section. The entry and exit section are responsible for web unwinding and rewinding operations with the help of accumulators located in each sections.

With reference to an exemplary exit accumulator is illustrated. Accumulators are primarily used to allow for rewind or unwind core changes while the process continues at a constant velocity. Dynamics of the accumulator directly affect the behavior of web tension in the entire process line. Tension disturbance propagates along both the upstream and downstream of the accumulator due to the accumulator carriage.

Since there is no difference between the entry accumulator and exit accumulator except that one is for unwinding and the other is for rewinding operations the embodiment discussed relates to exit accumulators. However it is to be understood that the systems and methods described herein can relate to an accumulator in substantially any location within substantially any system e.g. a web process line etc. . As shown the exit accumulator includes a carriage and web spans and . It is to be understood that the web spans are for illustrative purposes only and that the number of web spans can be N where N is an integer equal to or greater than one.

The control design objective is to determine a control law such that the process velocities v t v t and v t as well as the tension t t all closely follow their desired trajectories or values. It is assumed that v t v t and v t are measured and available as feedback variables.

Typically proportional integral derivative PID control is the predominant method in industry and such control is conventionally employed with web applications. In one example an industry controller can employ a feed forward method for the position and velocity control of the accumulator carriage and the feed forward plus proportional integral PI control method for the exit side driven roller and process side driven roller velocity control. The control law can be described as 

Since the velocities are generally controlled in open loop by a conventional PI feed forward and control method the industrial controller needs to retune the controller when the operating conditions are changed and external disturbance appears. In addition the industrial controller has a poor performance in the presence of disturbance.

The Lyapunov based controller LBC improves the industrial controller by adding auxiliary error feedback terms to get better performance and disturbance rejection. However the LBC has its own shortcomings since it is designed specifically to deal with disturbances which are introduced in the model. Thus when uncertainties appear in a real world application the LBC may require re design of the controller.

In view of the conventional systems and methods the exemplary embodiment was developed in the framework of an alternative control design paradigm where the internal dynamics and external disturbances are estimated and compensated in real time. Therefore it is inherently robust against plant variations and effective in disturbances and uncertainties in real application. In tension regulation both open loop and closed loop options will be explored. In the open loop case the tension is not measured but indirectly controlled according to Equation 71 by manipulating the velocity variables. In the closed loop case a tension observer is employed in the tension feedback control.

In developing new solutions for this difficult industry problem performance and simplicity are stressed. That is the new controller must have a much better performance than the existing ones and it should also be simple to design implement and tune. In order to provide a comprehensive control structure velocity and tension are both addressed. The three velocity loops are very similar in nature and finding a better solution would be a good first step. The tension problem is crucial because of its importance and its nonlinear dynamics. Based on the cost and performance considerations two solutions are discussed herein 1 if the tension model in 1 is reliable it can be well controlled with fast and accurate velocity loops 2 industry users are quite willing to install tension sensors for direct tension feedback control in return for better tension performance. illustrates an exemplary velocity control system and illustrates a tension control system.

The ESO system can be employed in various forms of dynamic systems. These include but are not limited to electrical mechanical and chemical dynamic systems often concerned with control problems. The most advantage would be achieved if this solution closes the loop of the system to accommodate the estimated faults. However without dynamically controlling the system this method would still provide a benefit for health status and fault detection without automatically attempting to fix the fault or optimize the health. In one example ESO is employed in web processing systems as discussed in detail below. Other applications can include power management and distribution.

The ESO offers a unique position between common methods. There are generally two ways that the health and fault diagnosis problem is approached. On one side of the spectrum the approach is model dependent analytical redundancy. The other side of the spectrum is the model less approaches from fuzzy logic neural networks and statistical component analysis. The ADRC framework offers a unique position between these two extremes without entering into hybrid designs. The ESO requires minimal plant information while estimating the rest of the unknown dynamics and unknown faults. Furthermore built into the solution is a novel scheme for automatic closed loop fault accommodation.

Although a single velocity loop is illustrated it is to be appreciated that the control system can be applied separately for all three velocity loops v t v t and v t . Velocity regulation in a process line is one of the most common control problems in the manufacturing industry. Since most processes are well behaved a PID controller is generally sufficient. Other techniques such as pole placement and loop shaping could potentially improve the performance over PID but require mathematical models of the process. They are also more difficult to tune once they are implemented. An alternative method is described below 

The plants in 84 86 are all of the form 89 where v t is the measure to be controlled u t is the control signal and the value of b is known approximately. t represents the combined effects of internal dynamics and external disturbance.

The key to the control design is to compensate for t and such compensation is simplified if its value can be determined at any given time. To make such a determination an extended state observer can be applied.

As known L 2 L can be parameterized and assign eigenvalues of the observer to . With a functioning LESO which results in z v and z the control law will be designed as 94 

For the given set point r an approximate closed loop transfer function is created without the addition of zeros from the controller.

By setting equal to the desired transfer function s the controller gains are solved as functions of one tuning parameter .

In this example to show how z converges to it is calculated from 89 that dot over v bu. After solving 92 93 and 95 for Zby superposition the result is a filter version of .

The LESO can be further simplified by substituting 93 into 92 to remove an algebraic loop and decouple Z allowing ADRC to be presented in PID form 99 where v t is the measure to be controlled u t is the control signal and the value of b is known approximately. t represents the combined effects of internal dynamics and external disturbance.

The disturbance observer based PD controller can achieve zero steady state error without using an integrator.

The unknown external disturbance and the internal uncertain dynamics are combined and treated as a generalized disturbance.

By augmenting the observer an extra state which can be actively estimated and canceled out the disturbance thereby achieving active disturbance rejection.

The PD controller can be replaced with other advanced controller if necessary. The tuning parameters are and .

Both open loop and closed loop solutions to tension regulation are discussed below. The open loop system is simple and economic whereas the closed loop system is more precise but requires an additional sensing device.

High quality velocity regulation can allow tension in a web based control system to be controlled via open loop if the model of the tension dynamics 71 is accurate. From 71 the tension can be computed as

For a given initial condition t 0 and a given time constraint t. Then if all three velocity loops are well behaved the actual tension should be close to the desired value. An example of this method is given in simulation below. Note that for this purpose the desired velocities must satisfy the following condition

The above approach is a low cost open loop solution. As the operating condition changes the tension dynamics 1 could vary causing variations in tension. If the tension is not measured such variations may go unnoticed until visible effects on the product quality appear. To maintain accurate tension control industry users usually are willing to install a tension sensor which regulates the tension in a feedback loop as discussed below.

In one example a tension meter such as a load cell can be used for closed loop tension control. Conventionally one or more physical instruments are required to sense the tension which require additional machine space and need adjustment. Therefore implementing tension control without a tension sensor can provide an economic benefit. Accordingly a tension observer is employed to act as a surrogate for a hardware tension sensor to provide closed loop tension control. In one embodiment the tension observer receives roller control input values u t u t and u t from the velocity controller and roller velocity values v t v t and v t from the plant . The output from the tension observer circumflex over t t is coupled with the derivative value of the average web tension t t wherein both values are input into the tension controller . The computation of the output value of the tension observer is given below.

Recall in 73 75 tension is coupled in velocity loops v t v t and v t and an Active Disturbance Rejection Control ADRC controller can be used to decouple the tension from the velocity loops. Actually tension is part of the t component which is estimated and canceled out in LESO as illustrated in .

Considering t in three velocity loops and if the other parts of t are known tension can be estimated through equations 86 89 and presented as 

With a proper parameter setting the LESO can guarantee that z v and z . That is to say from the LESO t t and t can be obtained. Since the other components t are all known in this problem tension estimation from three velocity loops can be calculated based on 103 105 .

In this section four types of control systems are compared via simulations including 1 the commonly used industrial controller IC shown in equations 76 to 78 2 the LBC in equations 79 to 82 3 the three ADRC controllers described in 91 94 for the velocity loops with tension regulated in open loop LADRC1 and 4 the same LADRC velocity controllers with an additional LADRC controller for the tension feedback loop LADRC2 .

Note that in IC and LADRC1 the tension is controlled open loop while LADRC2 closes the tension loop with a tension feedback. LBC relies on the tension estimator for its closed loop tension control.

The comparison of these controllers is carried out in the presence of disturbances. In addition to demonstrate the feasibility of the proposed methods they are implemented in discrete time form with a sampling period of 10 ms.

Three control schemes are investigated by conducting simulations on an industrial continuous web process line. The desired tension in the web span is 5180N. The desired process speed is 650 feet per minute fpm . A typical scenario of the exit speed and the carriage speed during a rewind roll change is depicted in . The objective of control design is to make the carriage exit velocity and process velocities closely track their desired trajectories while maintaining the desired average web tension level.

To make the simulation results realistic three sinusoidal disturbances are injected. F t in 73 is a sinusoidal disturbance with the frequency of 0.5 Hz and amplitude of 44N and is applied only in three short specific time intervals 20 30 seconds 106 126 seconds and 318 328 seconds as shown in . t and t in equation 4 and 5 are also sinusoidal functions with the frequency of 0.2 Hz and the amplitude of 44N and is applied throughout the simulation as shown in .

Following the parameterization and design procedure described above and are the two parameters need to be tuned. As known in the art the relationship between and is 3 5 . So we only have one parameter to tune which is .

The other important parameter needed is the approximate value of b in 89 . For this problem the best estimate of b in 83 84 and 85 is as follows 

Here k k kand kare the gains in 76 78 for the IC. and are the gains in 79 81 for the LBC. b b and are specific values of b in 92 for the carriage exit and process velocity loops respectively. Similarly and are the observer gains in equation 91 and and are the controller gains k in equation 94 . b and coot are the corresponding ADRC parameters for the tension plant in 109 .

The velocity errors v vand v and tension tracking errors tresulting from ADRC1 are shown in . Obviously the velocity and tension tracking errors are quite small despite the fact that the controller design is not based on the complete mathematical model of the plant and there are significant disturbances in the process.

The comparisons of IC LBC and LADRC1 are shown in in terms of the tracking errors and control signals for the carriage velocity loop. The carriage velocity errors indicate that LADRC1 is much better than the other two methods and the control signal indicates that the LADRC controller actively responds to the disturbances. It is to be appreciated that utilizing the systems and methods disclosed herein similar characteristics can be found in the exit and process velocity loops.

Due to the poor results of the IC controller only LBC LADRC1 LADRC2 are compared in the tension control results in . With a direct tension measurement LADRC2 results in negligible tension errors. Furthermore even in an open loop control LADRC1 has a smaller error than LBC. This can be attributed to the high quality velocity controllers in LADRC1.

The velocity and tension errors of all four control systems are summarized in Table IV. Overall these results reveal that the proposed LADRC controllers have a distinct advantage in the presence of sinusoidal disturbances and a much better performance in tension control.

A new control strategy is proposed for web processing applications based on the active disturbance rejection concept. It is applied to both velocity and tension regulation problems. Although only one section of the process including the carriage the exit and the process stages is included in this study the proposed method applies to both the upstream and downstream sections to include the entire web line. Simulation results based on a full nonlinear model of the plant have demonstrated that the proposed control algorithm results in not only better velocity control but also significantly less web tension variation. The proposed method can provide several benefits over conventional systems and methods. For example 1 no detailed mathematical model is required 2 zero steady state error is achieved without using the integrator term in the controller 3 improved command following is achieved during the transient stage 4 the controller is able to cope with a large range of the plant s dynamic change and 5 excellent disturbance rejection is achieved.

Although various observers are known such as high gain observers sliding mode observers and extended state observers ESO it is generally regarded that the extended state observer is superior in dealing with dynamic uncertainties disturbances and sensor noise. Controllers that use it depend on quick and accurate estimation in real time of the output and equivalent disturbance as well as their derivatives.

Observers are used to estimate variables that are internal to the system under control i.e. the variables are not readily available outputs. Observers use a model of the system with correction terms and are run in continuous time. In order for continuous functions of time to run in hardware however they are often discretized and run at fixed sample rates. Discrete observers are often referred to as estimators.

The fundamental limiting factor of the controller and estimator is the sampling rate. Improving the ESO will improve the overall performance of the system. Up to this point Euler approximations have been used to implement the ESO in hardware which adversely affects its performance at slower sampling rates. As described in greater detail herein several discrete variants of extended state observers are further identified and analyzed.

There are three main contributions discrete implementation of the ESO or DESO the Generalization of the ESO and DESO or GESO and discrete parameterization of the DESO and GESO.

Performance enhancements are made to the ESO both in formulation and in implementation. Although this is referred to as the DESO a number of methods are disclosed. Here the system model is first discretized using any number of methods Euler zero order hold ZOH and first order hold FOH . Then a predictive discrete estimator PDE from G. F. Franklin J. D. Powell and M. Workman 3rd ed. Menlo Park Calif. Addison Wesley Longman Inc. 1998 pp. 328 337 is constructed from the discrete model and correction terms are determined in discrete time symbolically as a function of one tuning parameter. It is also formulated as a Current Discrete Estimator CDE from G. F. Franklin J. D. Powell and M. Workman 3rd ed. Menlo Park Calif. Addison Wesley Longman Inc. 1998 pp. 328 337 to maintain stable operation at lower sampling rates a major limiting factor in controls. Typical discretization methods such as a PDE generate at least one sample of delay whereas a CDE removes this delay by adding a current time step update to the estimated state. Next Euler zero order hold ZOH and first order hold FOH versions of all discrete matrices are determined symbolically to retain the simplicity of single parameter tuning. In the past only an approximation using Euler integration was used. The problem is that the correction terms were determined in continuous time and become inaccurate when they are increased and at low sample rates. A second order example is used. Simple tests show that the CDE with ZOH performs the best.

The DESO is then generalized to estimate systems of arbitrary order as well as to estimate multiple extended states. This is referred to as the generalized ESO or GESO . This reformulation incorporates a disturbance model of arbitrary order thus allowing the amount of disturbance rejection to be specified for different types of systems. Multiple extended states allow the estimation of higher order derivatives of the disturbance which improves the estimation of the disturbance allowing it to be more accurately cancelled. In the past disturbances were restricted to first order and estimated using one extended state. The standard ESO does not make use of this information. A number of advantages exist for the current discrete version of the GESO. First it offers better estimation and accordingly higher stability. Another implementation benefit is the minimal code space and processing power changes in addition to the standard ESO. The GESO also improves the performance and increases the range of operation while maintaining a similar level of complexity.

The immediate application of the DESO and GESO can be applied to ADRC controllers. Due to the current and eventual wide spread application of both ADRC the powerful GESO also has great immediate and future potential. Many plants or other control applications have physical upper limits for sample time and they will benefit from a stable and accurate estimation at lower sampling rates. They may also have a need to estimate higher order disturbances and they will benefit from higher performance control.

The preferred embodiments described herein allow these advanced control methods to be a practical solution for industry to transparently implement a high performance controller into their systems. The problem it solves is that the usability of the controller will no longer suffer dramatically as a result adding complexity to achieve higher performance. This means a significant reduction in time to design implement tune and maintain each drive in every plant and or every application.

The preferred embodiment observers have been tested in simulation and hardware. Results on simple test applications and popular motion control problems have shown stable control at lower sampling rates than what are possible with the standard ESO. It was applied to ADRC with a tracking controller. The controller was tested in a realistic simulation and in hardware in a motion control servo drive

For the sake of simplicity consider the continuous time differential equation of a second order plant where u and y are the input and output respectively and b is a constant. 107 Combining the internal dynamics g y dot over y t with an external disturbance w to form a generalized disturbance y dot over y t the system is rewritten as 108 

Next an observer is created from the state space model. 110 Note that dot over is ignored in 110 since it is unknown and is estimated by the correction term. The observer is rewritten to output the state circumflex over dot over A LC y circumflex over x 111 where u u y is the combined input and yis the output. It is then decomposed into individual state equations for the purpose of implementation. For the sake of simplicity the observer gain vector L is determined by placing the poles of the characteristic equation in one location. L 3 3 112 

The state space model in 109 is first discretized formulated in discrete time by applying Euler ZOH or FOH. 1 113 A discrete observer is created from this model. 1 114 This is known as a predictive discrete estimator G. F. Franklin J. D. Powell and M. Workman 3rd ed. Menlo Park Calif. Addison Wesley Longman Inc. 1998 pp. 328 337 because the current estimation error y k k is used to predict the next state estimate circumflex over x k 1 .

However by defining the predictive estimator gain vector as L L 115 the estimated state reduces to 1 116 where the new state includes a current time step update giving it less time delay. 117 This is referred to as a current discrete estimator G. F. Franklin J. D. Powell and M. Workman 3rd ed. Menlo Park Calif. Addison Wesley Longman Inc. 1998 pp. 328 337. When the sampling rate is low this could play a significant role in enhancing the stability of a closed loop system. A block diagram is illustrated in of . The estimator is then rewritten to output the new state 1 J L 118 where u k u k y k is the combined input and yis the output. The only difference for the predictive estimator is that y k circumflex over x k . Discrete Parameterization of the ESO

For the sake of simplicity the current estimator gain vector Lis determined by placing the poles of the discrete characteristic equation in one location. 119 The relation between the discrete estimator poles and the continuous observer poles is given as e. 120 

Various discretization methods are analyzed through simulation of various plants. The ESO is first applied in open loop to a simple motion system plant model 50500100 124 where w is a 2.5 Hz square wave starting at 0.3 sec. and u is a trapezoidal profile that lasts 0.125 sec. The estimator parameters are 300 and T 0.005. A tracking error plot is shown in of that compares the predictive and current discrete methods using both Euler and ZOH. The transient and steady state parts of each trajectory are evaluated using integral absolute error and then summarized in Table V.

Next the ESO is applied in closed loop to 124 and to a more complex simulation of an actual servo motor. 80 750.075 

The results show that the most important option for low sampling time requirements is ZOH followed by the current discrete method. In this regard the current discrete ESO with ZOH appears to be six to ten times better than the Euler approximation used in previous literature. The servo system in 145 was also simulated resulting in an improvement of 5.3 times. In summary the current discrete ESO with ZOH should be used for improved tracking accuracy as well as closed loop stability.

Although a second order example was used in the previous section 110 through 120 and 122 are applicable to a plant of arbitrary order with any number of extended states. For example a class of general norder plants similar to 107 is represented as 126 where ydenotes the nderivative of the output and g y . . . y w t represents the internal dynamics. Two critical parameters are relative order n and high frequency gain b. Combining the unknowns into one generalized disturbance y . . . y w t results in 127 Note that when represented with an equivalent input disturbance d b the design model becomes . 128 

As a signal the type of disturbance can be characterized similar that of system type in a classical control. This specification is outlined in G. F. Franklin J. D. Powell and A. Emami Naeni 4th ed. Upper Saddle River N.J. Prentice Hall Inc. 2002 pp. 239 242 601 604 as the degree of a polynomial that approximates a signal which directly relates to the number of times it is differentiated before reaching zero. Sometimes disturbances are represented by a set of cascaded integrators 1 swith unknown input. Under this assumption the plant is represented in of by two sets of cascaded integrators one for the design model and another for the disturbance model. It will also be shown that this assumption leads to an estimated disturbance equivalent to that of a DOB.

In 109 previous ESO design and in disturbances are considered to be piece wise constant with h 1 or a series of steps. Now an ESO with h 1 2 3 can respectively track a square triangular or parabolic disturbance. A sinusoid is a different matter because it is infinitely differentiable. However increasing h increases the degree of the polynomial and improves tracking of a sinusoid or any time varying disturbance. An ESO with h extended states for a relative norder plant is denoted as an ESO.

The new form is represented in continuous state space 129 where the state includes the disturbance and its derivatives to be estimated.

Since the new form consists of cascaded integrators the A matrix simplifies to an n h square matrix with ones on the super diagonal. Each element of A is defined as

For the sake of simplicity the observer gain vector is determined by placing all of the poles of the characteristic equation in one location. 133 As a result each element in L becomes 1 2 134 where the binomial coefficients are

For the sake of simplicity the current estimator gain vector Lc is determined by placing the poles of the discrete characteristic equation in one location. 144 As a result the current estimator gain vector is listed in Table VII as a function of n h. A current discrete ESO with h extended states for a relative norder plant is denoted as CDESO.

A simulation of an industrial motion control test bed is used to demonstrate the control design procedure and its simplicity resulting performance and overall effectiveness in the absence of a simulation model. The servo amplifier motor and drive train are modeled with a resonant load as 4 2.05 

Various discrete implementations of the extended state observer are studied and compared. It is shown that the current discrete formulation is superior to the predictive one in reducing the delay associated with the sampling process. It is also demonstrated that the ZOH implementation improves estimation accuracy and stability without additional complexity to the user. To facilitate the ESO implementation for practitioners the algorithm is derived symbolically with a single tuning parameter i.e. the bandwidth of the observer. Another significant development is the generalization of the ESO for various types of systems and disturbances. Finally a filter version shows that the estimated disturbance is equivalent to the DOB structure. Unlike the DOB however the ESO estimates suitable derivatives of the output allowing for a straightforward controller design. The motion control problem is complex with many uncertainties yet preliminary results show that this observer can achieve high performance over a wide range of system dynamics while remaining easy to use.

The various preferred embodiment controllers and observers described herein can be used in conjunction with tracking components to further improve their function and performance.

The immediate application of the tracking enhancement can be applied to ADRC controllers. Due to the current and eventual wide spread application of ADRC the powerful tracking enhancement also has great immediate and future potential. Future uses also include the specific application of the tracking control method to new controllers.

The already proven ADRC control structure which works well for steady state set point control can now be extended to handle transient tracking control by use of the preferred embodiment tracking strategy. This enhancement allows these advanced control methods to be a practical solution for industry to transparently implement a high performance tracking controller into their systems. The problem it solves is that the usability of the controller will no longer suffer dramatically as a result adding complexity to achieve higher tracking performance. This means a significant reduction in time to design implement tune and maintain each drive in every plant of every company.

The preferred embodiment tracking strategies have been applied to ADRC in the form of prefilters and or feed forward tends to make the desired closed loop transfer function of ADRC approximately equal to one or more generally have a relative order equal to zero. Test results in simulation and hardware have shown error reduction up to eighty fold.

The tracking enhancement was applied to a controller using ADRC and a Current Discrete Extended State Estimator CDESO . The controller was tested in a realistic simulation and in hardware in motion system servo drive.

For the sake of clarity let us first consider a general second order plant where u and y are the input and output respectively and b is a constant. 150 Combining the internal dynamics g y dot over y t with an external disturbance w to form a generalized disturbance y dot over y w t the system is rewritten as 151 An augmented state space model is constructed

An ESO is then created from 152 to estimate the states 153 where circumflex over x circumflex over x circumflex over x circumflex over x dot over circumflex over . For the sake of simplicity the observer gain vector L is determined by placing the poles of the characteristic equation in one location. 154 L 3 3 

A disturbance rejection control law is applied to the plant in 151 to dynamically cancel y dot over y w t using its estimate circumflex over x . 155 This reduces the plant to a double integrator at low frequencies. u 156 A simple control law is then applied 157 to form the following closed loop transfer function.

The problem with 157 is in the phase lag it produces in 158 . Therefore in situations requiring precise command following it is proposed that the inverse of the closed loop transfer function shown in square brackets in 161 is added to the reference input of the control law as a prefilter

A simpler way of implementation is in reducing the new control law in 161 to 162 where velocity and acceleration feed forward are utilized. Here the first two terms drive the error and its derivative to zero while the last term provides a desired control input u such that follows umlaut over r . This equivalent tracking control configuration is shown in of . Even though this example applies tracking to a parameterized controller note that the concepts in 161 and 162 will work for any linear time invariant controller regardless of its parameter values. Therefore the application of tracking to ADRC is independent of the application of parameterization to ADRC whether it is by means of a prefilter as in 161 or by a single control law with feed forward terms as in 162 .

A compromise in performance between the point to point controller in 157 and the tracking controller in 162 is reached when using 163 to produce a closed loop transfer function with a relative degree of one.

When 151 is extended to arbitrary order the system is represented by . 165 Where ydenotes the nwith derivative of y.

For the sake of simplicity the observer gain L l l . . . l is determined by placing the poles of the characteristic equation in one location. 169 As a result each element in L becomes

A disturbance rejection control law is applied to 16 to dynamically cancel y dot over y w t using its estimate in circumflex over x . 171 and reduce the plant to cascaded integrators at low frequencies. y u 172 

A point to point control law is then applied 173 to form the following closed loop transfer function.

For precise tracking the inverse of 174 is added to the reference input of 173 as a prefilter making G 1. As a result the tracking control law becomes . . . r . 177 A single control law is formed by combining 177 with 171 178 where the new gains k k . . . k b and the feed forward terms x r dot over r . . . r . Discrete Implementation of Tracking ADRC

In hardware a discrete ESO is created. 1 179 where k circumflex over x k L y k yHcircumflex over x k is the current time update.

A discrete control law is formed circumflex over 184 where the feed forward terms circumflex over x k circumflex over r k dot over circumflex over r k . . . circumflex over r k .

The feed forward terms contain the reference input r and its derivatives. Since the reference input is generated by an algorithm and not a measured signal it is often noise free. As a result discrete differences are used for derivatives. A typical example of velocity and acceleration feed forward calculations are given. 1 1 185 

Since the states of the ESO are subtracted from these signals in the control law in 184 any difference in derivation between the ESO states and the feed forward terms causes dynamic errors. As a result an estimator similar to the discrete ESO is used to estimate the feed forward terms thus reducing the error and increasing performance. A model representing n 1 cascaded integrators and h 1 extended states is used to form a discrete estimator where only the model output signal r is available. 1 186 where k circumflex over x k L y k yHcircumflex over x k is the current time update.

Another problem arises in discrete implementation of the ESO and feed forward estimators when signals within them grow large and create numerical errors and even instability due to increasing input signals. As a result the two estimators are combined to form a single estimator that uses error as an input. Since the control law merely subtracts the states of each estimator the matrices L L H are only functions of n h and only resides in the state feedback observer 179 is subtracted from 186 to form

As proof of concept a simulation example is given. The setup in 145 is used to track a motion profile reference signal with a final time t 1 second. The system is simulated with and without a tracking controller and the results are compared in of . Note that the tracking and reference traces are so close that they are on top of each other. With tracking control the maximum error is reduced by a factor of 80 times during the initial transient shown in the first 1.5 seconds with only a slight increase in maximum control effort. There is also no adverse affect on the disturbance rejection property of the controller shown when a square wave disturbance is added after 1.5 seconds.

This discrete tracking ADRC algorithm does not require an explicit mathematical model to achieve high performance. It has one or two tuning parameters that can be adjusted quickly meaning that the level of expertise time and resources typically needed to construct a model design a controller and maintain performance is no longer required. This reduces manufacturing costs.

A general control method is given that can be applied to any MIMO system with the number of inputs greater than or equal to the number of outputs not just jet engines. For proof of concept it is then applied to dynamically decouple and control turbofan engines i.e. jet engines. Since the jet engine is one of the most complex systems in existence it is to be appreciated that this will provide a good example. If one is able to control it without knowing its mathematical model which may be several thousand lines of code then there is good chance this method will work on almost any plant. For example this control system can be utilized with chemical processes flight control of airplanes and missiles CNC machine control robotics magnetic bearing satellite attitude control and process control.

The idea is to estimate H and cancel it in real time reducing the plant to a set of cascaded integrators. In order to represent the plant with a set of state equations let X X X . . . X Y dot over Y . . . Y H . . . H such that

An observer is then designed from the state space model where L . . . L circumflex over X 195 In 195 the state equations of the multivariable ESO become

The observer gains L L . . . Lare q q matrices in general. However for the sake of tuning simplicity the gains are defined to form q parallel observer loops for j 1 2 . . . n h. diag 197 Each loop then has its n h poles placed in one location for the sake of further simplification.

With B defined as the right inverse of B a disturbance rejection control law is applied to 191 effectively cancelling H at low frequencies. 200 This allows a kind of feedback linearization and decoupling to occur which reduces the plant to a set of parallel n integrator systems at low frequencies. 201 At this point any number of control methods may be used. A simple control law with no integrators is proposed 202 where Y is the desired trajectory for Y and the controller gains K K . . . Kare q q matrices in general. However for the sake of tuning simplicity the controller gains are defined to form q parallel control loops for j 0 1 . . . n 1. diag 203 Each control loop has its n poles placed in one location for the sake of further simplification.

Typically a nonsingular Bcan be approximated by a diagonal matrix of reciprocal elements since inaccuracies in B can be accounted for in H.

A tracking controller can be used in place of 202 to improve the tracking error. . . . 207 Multivariable Discrete ESO

To output the states the ESO in 194 and 195 is rewritten as Y circumflex over X 208 where Yis the state output. It can then be discretized forming a multivariable CDESO 1 0 209 where L . . . L L diag lc lc . . . lc and similar notation is true for . The simplest way to determine the matrices is the case when 209 is equivalent to q parallel SISO loops. To show an example of how the matrices are directly extended from their SISO counterparts the matrices for a CDESOas a result of ZOH become

that are functions of a 3 1 state vector x a 7 1 input vector u a 10 1 health parameter vector p altitude alt and Mach number xm . A 22 1 vector of sensor outputs y is combined to calculate thrust fn fan stall sm2 and over speed pcn2r margins engine temperature ratio etr and pressure ratios of the engine eprs liner lepr a core cepr . These performance parameters form the controlled output. Y fn eprs lepr etr sm2 pcn2r cepr 212 

Each of the seven inputs u is controlled by a separate SISO actuator consisting of a torque motor and servomechanism with saturation limits for position velocity and current. The first three actuators drive the fuel flow wf36 variable nozzle exit area a8 and rear bypass door variable area a16 respectively. These actuator inputs form the control signal. U wf36 a8 a16 213 

The remaining four actuators drive stator and guide vane angles using steady state schedules within the primary control loop ensuring safe operating limits.

The goal of the control system is to achieve a fast thrust response with minimal overshoot and zero steady state error while maintaining safe rotor speeds pressure and temperature limits and stall margins. In MAPSS the supplied multi mode controller consists of four multivariable PI regulators each controlling only three outputs at one time. Y fn eprs lepr Y fn etr lepr Y fn smn2 lepr Y pcn2r cepr lepr 214 

The first regulator controls eprs at low speeds while the second regulator controls etr at high speeds. The third and fourth regulators actively control limits associated with the fan components namely the fan stall and over speed margins when their limits are approached. Limits associated with the engine core are met by acceleration and deceleration schedules on fuel flow Kreiner A. and K. Lietzau 2003 . The Use of Onboard Real Time Models for Jet Engine Control. Germany . These schedules along with actuator limits are then placed to constrain the outgoing control signal.

A generic design procedure is given for multivariable ADRC using the application to the MAPPS jet engine in as an example. Test conditions are then discussed for the jet engine followed by simulation results that compare the new algorithm to the current one showing that similar performance can be achieved with much less design effort.

The design procedure for applying any of the new disturbance rejection techniques is uniquely characterized by the plant representation. 215 In 215 the size of the input vector U and output vector Y should be known. The design procedure involves the determination of n and B as well as a method of tuning the controller.

A generic procedure is given followed by a detailed explanation of each step with examples specific to the jet engine application.

Step One The first step is to determine the number of control inputs p and controlled outputs q of the plant. If q p then multi mode control should be used to make q pfor each of the j sub controllers. It is preferable to make q pwhich produces a square B matrix that allows the diagonal elements to become tuning parameters. Note that when B is a square matrix B B. A diagonal B matrix also permits the new technique to be reduced to multiple SISO techniques.

The jet engine in MAPPS for example has three actuator inputs that control seven performance parameter outputs. As a result the jet engine controller consists of four separate regulators each controlling only three outputs at a time. In this research a simple form of multivariable ADRC using Euler integration is applied to the three input three output low speed regulator section and tested in simulation. This approach will isolate the affects that blending of multiple modes may have on the results.

Step Two The second step is to determine the high frequency gain B of the system. This matrix will drastically change for different values of relative order n. The trick is that n must be known in order to determine B and B must be known to determine n a circular argument. As a result steps two and three are interchangeable and an iterative process may be used in finding n and B. Nevertheless there is only a problem if both are unknown. If this is the case use the identity matrix for B to first determine n and then iterate. The B matrix can also be tuned in step seven. In practice B needs to be initially within fifty percent of its true value and such a broad range is frequently known. However if it is unknown or the system is too complex then various system identification techniques can be used.

In MAPSS the control signals are scaled to produce the proper units for each actuator input allowing each control signal to be within the same relative range. Thus a logical starting point for B in the low speed regulator is the identity matrix.

Step Three The third step is to determine the relative order n of the plant. The overall structure of the observer and controller depends on n which may or may not be the actual order of the system depending on which dynamics are dominant. The idea is to find n 1 2 or 3 that produces the smallest H the smallest control signal or the best closed loop results. Sometimes n is known or can be derived from a model of physical relationships. If none of the above techniques work the last resort is trial and error. In this situation start by assuming the system is first order and complete the remaining steps. Then assume the system is second order and repeat the process to see if the results are better. Then try third order etc. Lower order is usually better.

Another consideration is that n can be determined for each plant input output pair. For a particular output the input yielding the lowest order with the highest gain is the most direct form of control and therefore should be used.

Since not all of the engine s states are measurable in MAPPS the model for low speed regulation is represented as a nonlinear input output vector function. Without explicit knowledge of system order the simplest and lowest order case is first attempted. 216 When a 3 3 matrix B is used to approximate the actual high frequency gain B the signal H is defined as H F Y U t BU 217 The system then reduces to a form that has distinct terms to represent any internal or external dynamics and an instantaneous input. dot over Y H BU 218 After running simulation tests at higher orders first order was found to be sufficient for MAPPS. This also makes sense since the CLM is represented as a first order state space equation and the actuator dynamics are fast enough to be neglected.

Step Four The fourth step is to determine the number of extended states h. This affects the overall structure of the ESO. For ADRC select h 1 2 or 3 based on the system type of the disturbance H or an external disturbance. The assumption h 1 will suffice in most cases and therefore is used in the remaining examples for the sake of clarity. Similar is true for determining the number of extended states m in the control law when using generalized PID.

Step Five The fifth step is to apply the new algorithm to the system. The overall configuration is shown in . The structure of the observer and controller depends on the integer values selected for n and h. The most frequently used cases are now explicitly given for multivariable ADRC with Euler integration. In general U is a p 1 vector Y is a q 1 vector B is a q p matrix and Land Kare q q matrices.

When n 1 and h 1 the ESO equations become 219 and the controller is represented by 220 By applying 219 and 220 the control configuration is then shown in . Notice that since the input to B is essentially BU it is used as an input to the ESO instead of multiplying U by B. In doing so there is only one matrix to adjust containing elements of B and it acts to scale the plant and allow the rest of the algorithm to be designed for a unity gain plant.

When n 2 and h 1 the ESO equations become 221 and the controller is represented by 222 By applying 221 and 222 the control configuration is then shown in .

The first order plant in 218 used for low speed regulation is represented by state equations where the extended state Xis assigned to track the general disturbance H dot over X dot over H 223 and the 3 1 state vectors are defined as X X X Y H . By also defining the estimated states as circumflex over X circumflex over X circumflex over X an ESO is designed from 223 . 224 A disturbance rejection control law is then implemented 225 to decouple the plant reducing it to three parallel integrators at low frequencies dot over Y U 226 whereby a simple proportional control law is applied. 227 The entire algorithm consists of 219 and 220 and is shown implemented in . U B circumflex over X 228 

The original jet engine regulators incorporate PID controllers that are subject to integrator windup because the integrator input is a function of the controller error R Y where convergence to zero is affected by plant saturation. An interesting benefit of replacing these regulators with ADRC is that the integrators within ADRC do not wind up because their inputs are a function of the observer error Y circumflex over X where convergence to zero is not affected by plant saturation. As a result additional anti windup mechanisms are no longer required.

Step Six The sixth step is to run the closed loop system in order to tune the controller and observer bandwidths. In general Land Kare q q matrices. However when Land Kare selected as diagonal matrices the ADRC algorithm reduces to a set of SISO controllers one to control each output. An example is given in for a three output system. A tuning procedure for this type of configuration is proposed.

When n 1 and h 1 the resulting observer and controller gain matrices become diag 2 2 . . . 2 diag . . . 229 diag . . . 230 

When n 2 and h 1 the resulting observer and controller gain matrices become diag 3 3 . . . 3 diag 3 3 . . . 3 diag . . . 231 diag . . . diag 2 2 . . . 2 232 

Preliminary system identification is often unnecessary because the only design parameters are and b and they have a direct impact on the bandwidth and overshoot of the output meaning they can easily be adjusted by the user. In practice 1 b needs to be initially within fifty percent of its true value the total inertia in a second order system and such a broad range is frequently known.

When a profile with settling time tis used the total settling time of the system is then approximated by t t t 234 

A procedure to tune and for each output i is now given dropping the i subscript for the sake of clarity. The idea is to set the controller bandwidth as high as possible. A profile is then typically used to achieve a slower settling time or to meet control signal constraints but a step is used if the fastest possible response is desired without regard to exact trajectory.

In MAPPS all three observer bandwidths are set equal for the sake of simplicity and proof of concept. This makes the observer gain matrices a function of one parameter. L 2 I L 2 I 235 All three controller bandwidths are also set equal for the same reason making the controller gain matrix a function of one parameter as well. K I 236 

Step Seven The seventh step is to run the closed loop system in order to tune B. Although B is determined using system identification techniques in step two it acts as a control signal gain that directly affects overshoot of the closed loop system. As a result B can also be tuned by adjusting its elements to the point just before overshoot appears in the output. It is preferable to have as many inputs as outputs to facilitate tuning. This is demonstrated by first expanding the vector products U u . . . u and b b . . . b in the following norder input output equations.

Since each jet engine regulator has three inputs and three outputs and the system parameters are unknown the plant used for low speed regulation was represented by 240 and the diagonal elements of Bwere tuned. The identity matrix was selected as a starting point. The relative signs of each diagonal element were next determined followed by magnitude adjustment.

Turbofan engine performance varies from engine to engine due to manufacturing tolerances and deterioration from extended use. Even though degradation may eventually require an engine to be overhauled as limits are reached the engine control system should be robust enough to keep the engine operating within safe limits for several thousand flight cycles. With repeated use the engine components wear and performance is degraded. For example turbine blades erode and clearances open up. In order to achieve the same level of thrust as a new engine a deteriorated engine must run hotter and or faster. This shift from nominal operation increases with use and eventually reaches the point where performance can not be maintained without compromising the safety of the engine or the life of its components. The degradation in performance is simulated in MAPSS by adjusting ten health parameters.

In most turbofan engines thrust is calculated as a function of regulated and non regulated variables since it cannot be directly measured. Although regulated variables are maintained at their set points regardless of engine degradation non regulated parameters shift from their nominal values with deterioration. As a result the closed loop performance of the current model based controller suffers as the engine wears. One of the objectives here is to control the transient thrust response of a deteriorated engine making it behave as close to a new engine as possible.

Gas path analysis is a diagnostic technique that is used to estimate and trend health parameters by examining shifts in component health based upon gas path sensor measurements i.e. pressures temperatures rotor speeds and the known aero thermodynamic relationships that exist between them. The health parameters follow an average degradation profile over the life span of the engine 1 exp 242 where a b and care constants for each health parameter and trepresents the physical age of the engine in effective flight cycles rather than it chronological age. The initial exponential rise is intended to simulate rub in and new engine deterioration mechanisms. As the engine ages the health parameter degradation tends to become more linear.

The component degradation values in percent resulting from health parameter changes are shown in Table IX. They reflect moderate to beyond severe degradation such as what might occur when the engine is due for an overhaul or when the engine is placed in a harsh desert environment.

The level of degradation is characterized by effective cycles twhere zero cycles is a new engine with no degradation 3000 cycles is moderate degradation 4500 cycles is heavy degradation and 5250 cycles is severe degradation.

Test operating points were selected to cover a large portion of the entire MAPSS flight envelope and most of the subsonic range. They are shown in Table X. Test point 1 represents ground idle conditions where the pla is stepped from 21 to 35 for takeoff. The rest of the test points represent the majority of subsonic power conditions.

The redesigned low speed regulator in 228 was digitized using Euler integration. MAPSS is a multi rate simulation package where the engine sample time is fixed at 0.0004 seconds and the controller sample time is fixed at 0.02 seconds. For proof of concept the new ADRC controller and the supplied nominal controller were simulated at each of the first three operating points in Table X. The results from the nominal controller are used as a reference to compare the performance of the ADRC controller with. The goal here was not to show that one controller is better in performance over the other but merely that they are comparable in performance and ADRC is very simple to design especially since the exact method of tuning the nominal controller is not known. The new ADRC controller was then simulated at the next three operating points in Table X to show how it is able operate over a substantial range of the low speed regulator.

All simulations were conducted for each of the six levels of degradation in Table IX. As shown in Table XI they are labeled as Run 1 through Run 6 in each simulation.

Although the high speed regulator and the other two fan safety regulators were not tested similar performance is expected. The results are shown in of and in of for test point . Note that the trajectories at different levels of degradation are virtually indistinguishable from one another. Other test point yielded similar results with no change in the new controller parameters.

Although the ADRC controller responded a bit faster and with less overshoot to the change in demand levels than the nominal controller the real significance is in the simplicity of design of the new controller and how it was able to control engine thrust without being affected by degradation over a wide range of operation. The design procedure of the nominal controller basically involves running the CLM at several operating points to calculate a set of gains from Bode and Nyquist arrays at each operating point. The eighteen gains are each scheduled by six parameters amounting to a total of 108 possible adjustments that can be made when configuring a single regulator on an actual engine. During the simulations these gains change by as much as 200 percent.

In contrast the five ADRC gains remained constant throughout all simulations. 8 16 diag 0.2 0.5 0.5 243 There was no scheduling. Each gain was quickly tuned on the CLM just as if it would be on an actual engine. The engine was then simulated at multiple operating points to verify the performance of the new controller.

Preliminary results of these simulation tests on a rather complex turbofan model show the power of the dynamic decoupling method proposed here. Mathematical models are often inaccurate when representing nonlinear multivariable systems. Gain scheduling helps in this area but makes tuning even worse than it was before. Where modern multivariable control schemes are limited this approach appears well suited for complex nonlinear systems with incomplete model information. The ultimate goal is to offer a degree of tunability to account for variations between engines without sacrificing performance while being robust enough to withstand slow degradations from aging or damage.

This research combines the unique concept of design model disturbance estimation with health monitoring and fault diagnosis. The tools developed in the previous description can be directly applied to health monitoring with minimal model information. The unique application uses the ESO as a disturbance estimator with minimal plant information to estimate system dynamics and disturbances. The estimated disturbance is then used for health and fault diagnosis. Most dynamic health and fault monitoring estimators require significant model information to work effectively. Since the ESO use a simple design model that works on a wide variety of plants estimator design can be reduced to single parameter tuning. In of the general concept of fault monitoring is illustrated.

The following gives a more detailed explanation of the concept of using the ESO for health and fault monitoring. A wide range of input u output y systems can be described by the differential equation in Han s canonical model form 244 

Here yrepresents the nderivative of y where is a lumped nonlinear time varying function of the plant dynamics as well as the external disturbance w. Based on the input output data detail of illustrates the concept of generating the unknown dynamics of from the input output characteristics. Once estimated can be analyzed for health diagnosis fault detection and performance analysis.

The unknown portion contains modeling inaccuracies effects of faults and external disturbances . Detail of illustrates how can encapsulate a number of effects related to health monitoring and fault detection where is lumped unknown dynamics is unmodeled dynamics is unmodeled external disturbances is static nominal plant inaccuracies is time varying plant degradations is faults due to large model structural changes is time varying model parameters and is health degradation.

For the most part literature has approached the unknown plant effects that compose separately. In each case assumptions are made that the other effects are negligible. Likewise an overarching framework to integrate the problem of control fault diagnosis and health monitoring and accommodation is an open problem for research.

Recently large saving has been provided by six sigma techniques to actively monitor the health of a control loop performance by C. McAnarney and G. Buckbee Taking it to the boardroom Use performance supervision information for higher level management decisions Jul. 31 2006 . Using the disturbance estimation concept for health diagnostics in combination with closed loop control is an effective means to provide health diagnosis without extensive model information.

Once the model is formulated in the input u output y and disturbance formulation the control problem can be reformulated.

Canceling the unknown disturbance and dynamics begins with estimating . The main idea is to use input output data and minimal dynamic information to estimate circumflex over and cancel it. circumflex over 245 

Once is estimated the disturbance is rejected to behave like the forced design model plant with a new input u. find s.t. . 246 

At this point the unknown disturbances and plant dynamics have been removed and a conventional controller based on the design model can be designed so the output y follows the reference r. find us.t. y r. 247 

This overview of concepts suggests that there are three independent mathematical expressions that solve the control problem 1 the estimation law 245 2 the rejection law 246 and 3 the nominal control law 247 . This division is illustrated in of .

Most control paradigms include the estimation and rejection laws lumped together in the control law. Since is the key to this control paradigm this research investigates the active estimation of for health and fault monitoring.

The general methodology to apply the Extended State Observer to the health monitoring problem follows 

The systems methods and objects described herein may be stored for example on a computer readable media. Media can include but are not limited to an ASIC a CD a DVD a RAM a ROM a PROM a disk a carrier wave a memory stick and the like. Thus an example computer readable medium can store computer executable instructions for one or more of the claimed methods.

What has been described above includes several examples. It is of course not possible to describe every conceivable combination of components or methodologies for purposes of describing the systems methods computer readable media and so on employed in scaling and parameterizing controllers. However one of ordinary skill in the art may recognize that further combinations and permutations are possible. Accordingly this application is intended to embrace alterations modifications and variations that fall within the scope of the appended claims. Furthermore the preceding description is not meant to limit the scope of the invention. Rather the scope of the invention is to be determined only by the appended claims and their equivalents.

All documents cited herein are in relevant part incorporated herein by reference the citation of any document is not to be construed as an admission that it is prior art with respect to the present invention.

While the systems methods and so on herein have been illustrated by describing examples and while the examples have been described in considerable detail it is not the intention of the applicants to restrict or in any way limit the scope of the appended claims to such detail. Additional advantages and modifications will be readily apparent to those skilled in the art. Therefore the invention in its broader aspects is not limited to the specific details the representative apparatus and illustrative examples shown and described. Accordingly departures may be made from such details without departing from the spirit or scope of the applicant s general inventive concept.

