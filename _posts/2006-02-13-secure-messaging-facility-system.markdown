---

title: Secure messaging facility system
abstract: A secure message facility transfers authentication data between various applications, operating systems, and authentication devices and software in the form of messages. These messages comprise a data structure with a standard header with fields that describe the class, length, and type of message, and routing information. This header information is used to route the message to the appropriate handler. The messages are transferred between applications via the messaging facility DLL and the messaging facility Service. The messaging facility DLL is intended to be loaded by an application. The messaging facility DLL forms the messages, directs them to the appropriate messaging facility service (local or remote) and interprets the responses. The messages sent between the messaging facility DLL and messaging facility Service are extremely flexible and can be used to send any type of data or content of messages.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08356104&OS=08356104&RS=08356104
owner: Indigo Identityware, Inc.
number: 08356104
owner_city: Edina
owner_country: US
publication_date: 20060213
---
This application claims benefit from the earlier filed U.S. Provisional Application No. 60 653 250 filed Feb. 15 2005 entitled Software Messaging Facility System and is hereby incorporated into this application by reference as if fully set forth herein.

This patent application is also related to U.S. Provisional Application 60 643 029 filed Jan. 11 2005 entitled Multiple User Desktop Graphical Identification and Authentication U.S. Provisional Application No. 60 653 249 filed Feb. 15 2005 entitled Software Authentication Facility and U.S. utility application entitled Secure Authentication Facility filed concurrently herewith application to be assigned a copy of which is attached and the disclosure of which is incorporated herein by reference.

The present invention relates to software messaging for computer workstations servers networks and the like and more particularly to a method software and system for passage of authentication data between computer resources including hardware devices operating systems and graphical identification and authentication modules and application software whether locally remotely or in combination. The secure messaging facility is intended for use by individuals and businesses that need to limit access to secured resources.

Most authentication based applications other than certain proprietary authentication components communicate with one another by directly loading each other into their respective address spaces. This method of interaction is known as tightly coupled meaning that individual applications directly call functions of the other applications and load the hardware drivers directly. This method of interaction is very rigid and limiting since a high degree of compatibility is needed for the applications to be able to properly call functions of the other applications. In order to obtain this high degree of compatibility highly customized modifications to application and authentication software can be required. The ability to accommodate local and remote users and authentication devices and provide secure access to local and remote resources severely limits the flexibility of such an approach.

The general purpose of the present invention is to provide a system for transferring data between various applications to enable efficient and flexible secure authentication. Specifically the present invention overcomes inadequacies of the prior art by creating a novel architecture for authentication related data transfer and communication between the various users authentication modules authentication devices operating systems application software and other resources including local and remote hardware software and data. The present invention provides this utility by transferring all the required data through the messaging facility in the form of messages. Since the authentication related data is transferred throughout the messaging facility layer in the form of messages the secure messaging facility of the present invention provides for simpler and more flexible authentication among various local and remote resources. The messages use a request and response format meaning that for every message request submitted there is a response message generated.

The present secure messaging facility has particular utility for computers workstations and servers running Microsoft Windows NT based operating systems. The present invention also has utility for computers running other operating systems and can be adapted for such.

The messaging facility is comprised of three main components the first creates and processes messages and contains the messaging facility library which is an object code library such as those loaded by Windows applications. These libraries are normally referred to as Dynamic Link Libraries or DLLs. The second component is the messaging facility Service which is a specialized version of the standard Windows application which is designed to be loaded when the operating system starts. The third component is a proprietary authentication server.

All messages originate in the messaging facility DLL i.e. the Windows applications and are sent to the messaging facility Service located on the same machine to which the application loaded the messaging facility DLL. The messages however need not be destined for the local messaging facility Service but may be destined instead for a messaging facility Service located on another machine or for the proprietary authentication server. The final location of a particular message can be effected by various controls including control by the local messaging facility Service and including use of information stored in the message itself.

The messaging facility Service is started when the workstation or server boots and stays running the entire time the operating system is on. The messaging facility Service is largely passive since it only responds to messages sent to it by the messaging facility dynamic link library. The primary purpose and function of the messaging facility DLL is to form the messages to be sent to the messaging facility Service where they can be processed or directed to the proprietary authentication Service or another messaging facility Service running on another system. The actual message sent between the messaging facility DLL and messaging facility Service is designed to be extremely flexible and can be used to send almost any type of information.

One significant aspect and feature of the present invention is secure messaging system for communication of authentication data that is easy to integrate into any application software requiring high levels of security authentication freeing the software developer from designing implementing and testing their own version of an authentication system.

Another significant aspect and feature of the present invention is a secure authentication software development package for use with any combination or variety of biometric token proximity or password devices to securely authenticate the user.

A further significant aspect and feature of the present invention is the ability to maintain a detailed and secure audit trail of successful and unsuccessful authentications and logged events.

Yet another significant aspect and feature of the present invention is a communication and coordination system for secure authentication where software applications and authentication hardware are uncoupled and can therefore be local or remote.

Still another significant aspect and feature of the present invention is a secure messaging facility which is easily adapted and independent of underlying hardware.

A further significant aspect and feature of the present invention is a secure messaging facility for flexibly implementing local and remote authentication which is applicable to a variety of operating system environments including Microsoft Windows NT 2000 XP related operating systems as well as non Microsoft Windows NT 2000 XP related operating systems.

Having thus described embodiments and significant aspects and features of the present invention it is the principal object of the present invention to provide a connection between software operating systems or user applications and authentication applications authentication devices or Services.

The present invention is a secure messaging facility which overcomes problems of the prior art methods and software. The messaging facility is comprised of three main components. The first component creates and processes messages and comprises the messaging facility library which is an object code library loaded by software applications. These libraries are normally referred to as Dynamic Link Libraries or DLLs. The second component is the messaging facility Service which is a specialized version of the standard Windows application designed to be loaded when the operating system starts. The third component is a proprietary authentication server.

All messages originate in the messaging facility library DLL i.e. the Windows applications and are sent to the messaging facility Service located on the same machine to which the application loaded the messaging facility library. The messages however need not be destined for the local messaging facility Service but may be destined instead for an messaging facility Service located on another machine or for the proprietary authentication server. The final location of a particular message can be effected by various controls including control by the local messaging facility Service and including use of information stored in the message itself. The use of the message itself to specify the destination of the message makes the present invention particularly adaptable.

The messaging facility Service is started when the workstation or server boots and stays running the entire time the operating system is on. The messaging facility Service is largely passive since it only responds to messages sent to it by the messaging facility dynamic link library. The primary purpose and function of the messaging facility DLL is to form the messages to be sent to the messaging facility Service where they can be processed or directed to the proprietary authentication Service or another messaging facility Service running on another system. The actual message sent between the messaging facility DLL and the messaging facility Service is designed to be extremely flexible and can be used to send almost any type of information.

As illustrated in the secure messaging facility SMF comprises multiple components or layers which interact to enable proper function. One or multiple instances of the SMF DLL are utilized some instances may be located on remote workstations servers or resources. A memory mapped file and mapping layer serves to coordinate the various instances. Transfer of SMF messages can be by TCP IP as illustrated or by other protocol. The SMF DLL s interact with each other via the memory mapped file mapping layer facilitating auditing logging management and file management functions as depicted. In one embodiment the secure messaging facility interacts with a secure authentication facility an example of which is illustrated in as indicated. The secure messaging facility communicates with authentication devices and any required drivers and communicates with remote SMF via ports with local and or remote logging as illustrated.

In another embodiment of the present invention is a flowchart which depicts data flow of the present invention s validation functions and validation values returned. Data flows via the CST Map to verification of the validity of the map instance to decision whether a direct call or an indirect call is to be performed. In the case of an indirect call a channel request is performed parameters validated input parameters copied and a channel call is performed with validation and copying of the return values.

In a further extended and detailed flowchart depicts logic and data flow for and embodiment of the present invention with validation of data. As in there is a path for direct call and a path for mapped call via the secure messaging facility. With various initialization and logical tests the direct mode results in a direct call and the mapped or indirect mode utilizes the secure messaging facility with memory map and validation of input output parameters creation of a message transport of the message call of SMF function and a resulting true or false from the function process to return the result to the CST Map. Item A of is a return failure path which is entered when any of several logical tests return false. Items B and C from continue to items B and C of .

An example of a secure authentication facility is illustrated in which connects to via items A B and C. In this example a graphical identification and authentication GINA or third party application interacts with and accesses a secure authentication facility API functions and a memory mapped file via the secure messaging facility DLLs.

The secure messaging facility has a very flexible messaging architecture. In order for an application to use the messaging facility components a programmer will link and load the messaging facility library DLL . This can be accomplished using a standard Win32API call or by using the newer COM and Windows. NET methods for accessing Windows DLLs. Once the messaging facility library is loaded into an application it must be initialized. This initialization sets up a shared memory region that allows contact and information exchange with the messaging facility Service located on the same system as the messaging facility DLL. The messaging facility DLL may not need to access any of the handlers in the messaging facility Service but utilizes a connection to the local messaging facility so that it may contact the appropriate messaging facility Service running on a remote system.

The messaging facility Service is passive and does not normally distinguish between local messages retrieved from the shared memory region an application running the local messaging facility DLL and messages retrieved from the TCP IP connection or other type of communication protocol information sent to the messaging facility Service from a messaging facility DLL located on another system. This simplifies the coding of the messaging facility Service as all messages to the handlers are acted upon in the same manner and only the response messages are different in the information contained in the header. All messages contain routing information and the messaging facility Services do not need to keep any state information as to where or how the message was received. The messaging facility Service is passive in nature so it never initiates communication with the messaging facility DLL.

The messaging facility Service is designed to receive messages from the messaging facility route them to the correct message handler and then formulate an appropriate response. The messaging facility Service handlers are not dependent upon message origination as this information is stored in the message header and is only used by the send message routine to route the message back to the correct messaging facility library. The messaging facility Service is intended to handle multiple connections from multiple messaging facility libraries either located locally or remotely. The routing information for each message is stored in the message header and is the responsibility of the messaging facility DLL. This simplifies the messaging facility Service logic and the design of the messages themselves. There is a hierarchy to how message are created and how the handlers for these messages are determined and all messages are placed in a specific class that describes in general what type of message it is. Some examples are the audit message class and the credential message class. Within a message class there can be multiple message categories the messages created by the messaging facility are generally derived from the application programming interfaces API .

In some embodiments the secure messaging facility is adapted for 32 bit Windows NT based operating systems including but not limited to Windows NT 4.0 Server Workstation Windows 2000 Server Workstation and Windows XP systems.

In another embodiment the secure messaging facility is adapted for a 64 bit operating system environment.

In yet another embodiment the secure authentication facility is configured to run on operating systems other than Windows NT based operating systems.

Some embodiments of the present invention comprise software. Additional embodiments of the present invention comprise methods of authentication data transfer. One such method provides for transfer of user authentication data accommodating remote authentication device s . Another such method provides for transfer of user authentication data accommodating remote applications and resources.

Various modifications can be made to the present invention without departing from the apparent scope hereof. This description will suggest many variations and alternatives to one of ordinary skill in this art. The various elements described may be combined or modified for combination as desired. All these alternatives and variations are intended to be included within the scope of the claims. Further the particular features presented in the dependent claims can be combined with each other in other manners within the scope of the invention.

