---

title: System and method for XML based data driven generation of a composite source user interface
abstract: The subject application is directed to a system and method for generating a dynamic composite source user interface. Text data is received into a data document stored in associated memory. Data representing each of a plurality of graphical elements that correspond to the received text data is then received. A visual indicator, corresponding to each of the graphical elements, is generated on an associated display. Selection data representing a selection of one of the graphical elements on the associated display is then received. Pointer data is then associated with the selected graphical element. The pointer data is further associated with the text data. Next, the selected graphical element is then displayed on the associated display in conjunction with the text data, as referenced by the pointer data.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07624350&OS=07624350&RS=07624350
owner: Toshiba Tec Kabushiki Kaisha
number: 07624350
owner_city: 
owner_country: JP
publication_date: 20060810
---
The subject application is directed to a system and method for data driven generation of a composite source user interface. In particular the subject application is directed to a system and method for data driven dynamic graphical user interface development. The system and method of the subject application allow for more efficient and easier generation updating and modification of a user interface.

Graphical user interfaces provide a user friendly mechanism for interaction with computing systems including those used in the operation of appliances and devices such as document processing devices. A well designed graphical user interface allows for effective operation of complex devices with relative ease by unsophisticated or novice users. When such user interfaces are used in connection with document processing devices in addition to initial setup there is a frequent need to update or customize the interface as additional functions are added or subtracted or to address new or updated device features.

The earliest graphical user interfaces required a programmer to manually code all portions of graphical and textual elements forming the display. Any updates or modifications required full reprogramming. More recently tools have surfaced that allow for greater ease and efficiency in creating or modifying graphical user interfaces.

Currently available graphical user interface development tools and systems allow for the development of a user interface wherein a change in data associated with the user interface allows for the content of the user interface to be changed accordingly. However the incorporation of an associated graphical element typically requires one to write specialized code to generate it. Additionally both text and graphical display portions must be merged and communicated to a display making it difficult or time consuming to modify a display once set.

It would be advantageous to have a system and method that allows for entry of a textual element of a graphical user interface that allows for quick and accurate selection of a corresponding graphical element which is linked for display along with the textual element.

In accordance with the subject application there is provided a system and method for data driven generation of a composite source user interface.

Further in accordance with the subject application there is provided a system and method which allows for more efficient and easier generation updating and modification of a user interface.

Still further in accordance with the subject application there is provided a system and method that allows for entry of a textual element of a graphical user interface that allows for quick and accurate selection of a corresponding graphical element which is linked for display along with the textual element.

Still further in accordance with the subject application there is provided a system for data driven generation of a composite source user interface. The system includes means adapted for receiving text data into a data document stored in an associated memory and means adapted for receiving data representative of each of a plurality of graphical elements that correspond to received text data. The system further includes means adapted for generating on an associated display a visual indicator corresponding to each of the plurality of graphical elements and means adapted for receiving selection data representative of a selected one of the plurality of graphical elements. The system also comprises means adapted for associating pointer data with the selected one of the plurality of graphical elements which pointer data is associated with the text data and means adapted for displaying the selected one of the plurality of graphical elements on the associated display in conjunction with the text data as referenced by the pointer data.

In one embodiment the system further includes means adapted for receiving a modification to the text data and means adapted for selecting an alternative graphical element in accordance with a received modification to the text data.

In another embodiment the pointer data is comprised of an XPath query. Preferably the data document is comprised of a document object model.

In a further embodiment the plurality of graphical elements include at least one graphical element chosen from the group of a push button a radio button a check box a border box and a scroll bar.

In yet another embodiment the system further comprises means adapted for selecting an alternative graphical element in accordance with a specified trigger event. Preferably the trigger event includes a screen switch of the associated display.

Still further in accordance with the subject application there is provided a method for data driven generation of a composite source user interface in accordance with the system as set forth above.

Still other advantages aspects and features of the subject application will become readily apparent to those skilled in the art from the following description wherein there is shown and described a preferred embodiment of the subject application simply by way of illustration of one of the best modes best suited to carry out the subject application. As it will be realized the subject application is capable of other different embodiments and its several details are capable of modifications in various obvious aspects all without departing from the scope of the subject application. Accordingly the drawings and description will be regarded as illustrative in nature and not as restrictive.

The subject application is directed to a system and method for data driven generation of a composite source user interface. In particular the subject application is directed to a system and method which allows for more efficient and easier generation updating and modification of a user interface. More particularly the subject application is directed to a system and method that allows for entry of a textual element of a graphical user interface that allows for quick and accurate selection of a corresponding graphical element which is linked for display along with the textual element. It will become apparent to those skilled in the art that the system and method described herein are suitably adapted to a plurality of varying electronic fields employing user interfaces including for example and without limitation communications general computing data processing document processing or the like. The preferred embodiment as depicted in illustrates a document processing field for example purposes only and is not a limitation of the subject application solely to such a field.

Referring now to there is shown an overall diagram of the system for data driven generation of a composite source user interface in accordance with the subject application. As shown in the system is capable of implementation using a distributed computing environment illustrated as a computer network . It will be appreciated by those skilled in the art that the computer network is any distributed communications system known in the art capable of enabling the exchange of data between two or more electronic devices. The skilled artisan will further appreciate that the computer network includes for example and without limitation a virtual local area network a wide area network a personal area network a local area network the Internet an intranet or the any suitable combination thereof. In accordance with the preferred embodiment of the subject application the computer network is comprised of physical layers and transport layers as illustrated by the myriad of conventional data transport mechanisms such as for example and without limitation Token Ring 802.11 x Ethernet or other wireless or wire based data communication mechanisms. The skilled artisan will appreciate that while a computer network is shown in the subject application is equally capable of use in a stand alone system as will be known in the art.

The system also includes a document processing device depicted in as a multifunction peripheral device suitably adapted to perform a variety of document processing operations. It will be appreciated by those skilled in the art that such document processing operations include for example and without limitation facsimile scanning copying printing electronic mail document management document storage or the like. Suitable commercially available document processing devices include for example and without limitation the Toshiba e Studio Series Controller. In accordance with one aspect of the subject application the document processing device is suitably adapted to provide remote document processing services to external or network devices. Preferably the document processing device includes hardware software and any suitable combination thereof configured to interact with an associated user a networked device or the like.

According to one embodiment of the subject application the document processing device is suitably equipped to receive a plurality of portable storage media including without limitation Firewire drive USB drive SD MMC XD Compact Flash Memory Stick and the like. In the preferred embodiment of the subject application the document processing device further includes an associated user interface such as a touch screen LCD display touch panel alpha numeric keypad or the like via which an associated user is able to interact directly with the document processing device . In accordance with the preferred embodiment of the subject application the user interface is advantageously used to communicate information to the associated user and receive selections from the associated user. The skilled artisan will appreciate that the user interface comprises various components suitably adapted to present data to the associated user as are known in the art. In accordance with one embodiment of the subject application the user interface comprises a display suitably adapted to display one or more graphical elements text data or the like to an associated user receive input from the associated user and communicate the same to a backend component such as a controller as explained in greater detail below. Preferably the document processing device is communicatively coupled to the computer network via a suitable communications link . As will be understood by those skilled in the art suitable communications links include for example and without limitation WiMax 802.11a 802.11b 802.11g 802.11 x Bluetooth the public switched telephone network a proprietary communications network infrared optical or any other suitable wired or wireless data transmission communications known in the art.

In accordance with the subject application the document processing device further incorporates a backend component designated as the controller suitably adapted to facilitate the operations of the document processing device as will be understood by those skilled in the art. Preferably the controller is embodied as hardware software or any suitable combination thereof configured to control the operations of the associated document processing device facilitate the display of images via the user interface direct the manipulation of electronic image data and the like. For purposes of explanation the controller is used to refer to any myriad of components associated with the document processing device including hardware software or combinations thereof functioning to perform cause to be performed control or otherwise direct the methodologies described hereinafter. It will be understood by those skilled in the art that the methodologies described with respect to the controller are capable of being performed by any general purpose computing system known in the art and thus the controller is representative of such a general computing device and is intended as such when used hereinafter. Furthermore the use of the controller hereinafter is for the example embodiment only and other embodiments which will be apparent to one skilled in the art are capable of employing the system and method for generating a dynamic composite source user interface of the subject application. The functioning of the controller will better be understood in conjunction with the block diagrams illustrated in explained in greater detail below.

Communicatively coupled to the document processing device is a data storage device . In accordance with the preferred embodiment of the subject application the data storage device is any mass storage device known in the art including for example and without limitation magnetic storage drives a hard disk drive optical storage devices flash memory devices or any suitable combination thereof. In the preferred embodiment the data storage device is suitably adapted to store a data document or the like. It will be appreciated by those skilled in the art that while illustrated in as being a separate component of the system the data storage device is capable of being implemented as internal storage component of the document processing device a component of the controller or the like such as for example and without limitation an internal hard disk drive or the like. The data document is representative of any object oriented application programming interface that enables the parsing of a programming language into a well defined tree structure and operating on its contents such as for example and without limitation a document object module. Preferably the data document includes data representative of text data pointer data event data trigger data graphical element data indicia or the like.

The system illustrated in further depicts a user device in data communication with the computer network via a communications link . It will be appreciated by those skilled in the art that the user device is shown in as a laptop computer for illustration purposes only. As will be understood by those skilled in the art the user device is representative of any personal computing device known in the art including for example and without limitation a computer workstation a personal computer a personal data assistant a web enabled cellular telephone a smart phone a proprietary network device or other web enabled electronic device. The communications link is any suitable channel of data communications known in the art including but not limited to wireless communications for example and without limitation Bluetooth WiMax 802.11a 802.11b 802.11g 802.11 x a proprietary communications network infrared optical the public switched telephone network or any suitable wireless data transmission system or wired communications known in the art. Preferably the user device is suitably adapted to generate and transmit electronic documents document processing instructions user interface modifications upgrades updates personalization data or the like to the document processing device or any other similar device coupled to the computer network .

Turning now to illustrated is a representative architecture of a suitable backend component i.e. the controller shown in as the controller on which operations of the subject system are completed. The skilled artisan will understand that the controller is representative of any general computing device known in the art capable of facilitating the methodologies described herein. Included is a processor suitably comprised of a central processor unit. However it will be appreciated that processor may advantageously be composed of multiple processors working in concert with one another as will be appreciated by one of ordinary skill in the art. Also included is a non volatile or read only memory which is advantageously used for static or fixed data or instructions such as BIOS functions system functions system configuration data and other routines or data used for operation of the controller .

Also included in the controller is random access memory suitably formed of dynamic random access memory static random access memory or any other suitable addressable and writable memory system. Random access memory provides a storage area for data instructions associated with applications and data handling accomplished by processor .

A storage interface suitably provides a mechanism for non volatile bulk or long term storage of data associated with the controller . The storage interface suitably uses bulk storage such as any suitable addressable or serial storage such as a disk optical tape drive and the like as shown as illustrated in as the storage device as well as any suitable storage medium as will be appreciated by one of ordinary skill in the art.

A network interface subsystem suitably routes input and output from an associated network allowing the controller to communicate to other devices. Network interface subsystem suitably interfaces with one or more connections with external devices to the device . By way of example illustrated is at least one network interface card for data communication with fixed or wired networks such as Ethernet token ring and the like and a wireless interface suitably adapted for wireless communication via means such as WiFi WiMax wireless modem cellular network or any suitable wireless communication system. It is to be appreciated however that the network interface subsystem suitably utilizes any physical or non physical data transfer layer or protocol layer as will be appreciated by one of ordinary skill in the art. In the illustration the network interface is interconnected for data interchange via a physical network suitably comprised of a local area network wide area network or a combination thereof.

Data communication between the processor read only memory random access memory storage interface and network interface subsystem is suitably accomplished via a bus data transfer mechanism such as illustrated by bus .

Also in data communication with bus is a document processor interface . Document processor interface suitably provides connection with hardware to perform one or more document processing operations. Such operations include copying accomplished via copy hardware scanning accomplished via scan hardware printing accomplished via print hardware and facsimile communication accomplished via facsimile hardware . It is to be appreciated that a controller suitably operates any or all of the aforementioned document processing operations. Systems accomplishing more than one document processing operation are commonly referred to as multifunction peripherals or multifunction devices.

Functionality of the subject system is accomplished on a suitable document processing device that includes the controller of shown in as the controller as an intelligent subsystem associated with a document processing device. In the illustration of controller function in the preferred embodiment includes a document processing engine . A suitable controller functionality is that incorporated into the Toshiba e Studio system in the preferred embodiment. illustrates suitable functionality of the hardware of in connection with software and operating system functionality as will be appreciated by one of ordinary skill in the art.

In the preferred embodiment the engine allows for printing operations copy operations facsimile operations and scanning operations. This functionality is frequently associated with multi function peripherals which have become a document processing peripheral of choice in the industry. It will be appreciated however that the subject controller does not have to have all such capabilities. Controllers are also advantageously employed in dedicated or more limited purposes document processing devices that are subset of the document processing operations listed above.

The engine is suitably interfaced to a user interface panel which panel allows for a user or administrator to access functionality controlled by the engine . Access is suitably via an interface local to the controller or remotely via a remote thin or thick client.

The engine is in data communication with printer function facsimile function and scan function . These devices facilitate the actual operation of printing facsimile transmission and reception and document scanning for use in securing document images for copying or generating electronic versions.

A job queue is suitably in data communication with printer function facsimile function and scan function . It will be appreciated that various image forms such as bit map page description language or vector format and the like are suitably relayed from scan function for subsequent handling via job queue .

The job queue is also in data communication with network services . In a preferred embodiment job control status data or electronic document data is exchanged between job queue and network services . Thus suitable interface is provided for network based access to the controller via client side network services which is any suitable thin or thick client. In the preferred embodiment the web services access is suitably accomplished via a hypertext transfer protocol file transfer protocol uniform data diagram protocol or any other suitable exchange mechanism. Network services also advantageously supplies data interchange with client side services for communication via FTP electronic mail TELNET or the like. Thus the controller function facilitates output or receipt of electronic document and user information via various network access mechanisms.

Job queue is also advantageously placed in data communication with an image processor . Image processor is suitably a raster image process page description language interpreter or any suitable mechanism for interchange of an electronic document to a format better suited for interchange with device services such as printing facsimile or scanning .

Finally job queue is in data communication with a parser which parser suitably functions to receive print job language files from an external device such as client device services . Client device services suitably include printing facsimile transmission or other suitable input of an electronic document for which handling by the controller function is advantageous. Parser functions to interpret a received electronic document file and relay it to a job queue for handling in connection with the afore described functionality and components.

In operation text data is received into a data document stored in associated memory . Data representing each of a plurality of graphical elements that correspond to the received text data is then received. A visual indicator corresponding to each of the graphical elements is then generated on an associated display. Selection data representing a selection of one of the graphical elements is then received. Pointer data is then associated with the selected graphical element wherein the pointer data is also associated with the text data. Next the selected graphical element is then displayed on the associated display in conjunction with the text data as referenced by the pointer data.

In accordance with one example embodiment of the subject application the data document stored in associated memory first receives text data via any suitable means. The skilled artisan will appreciate that suitable text data is capable of originating as an update upgrade modification or the like from the user device a portable storage medium user interaction with the associated user interface or the like. In accordance with the preferred embodiment of the subject application the data document is a document object model document an XML document or the like. The backend component such as the controller then receives data representing graphical elements corresponding to the received text data. The skilled artisan will appreciate that the graphical element data is received by a suitable component of the controller . Suitable graphical elements include for example and without limitation a push button a radio button a check box a border box a scroll bar or the like.

A visual indicator corresponding to each graphical element is then generated on a display associated with the user interface . Selection data corresponding to a selection of one of the visual indicators of a corresponding graphical element is then received by the backend component . It will be appreciated by those skilled in the art that such selection data is capable of origination by an associated user via the user interface electronic data communicated from the user device or the like. Pointer data is then associated with the selected graphical element which is also associated with the text data. Preferably the pointer data is an XPath query denoting a location in the XML data document where the text data and the graphical element are located. The selected graphical element is then displayed in conjunction with the text data as referenced by the pointer data.

The backend component e.g. the controller then determines whether any modifications to the text data have occurred. For example the controller determines whether an update upgrade language change description or the like has been made to the data document . When such a modification has been detected by the controller an alternative graphical element is selected in accordance with the received text data modification. The alternative selected graphical element is then displayed in conjunction with the text data as referenced by the pointer data. For example an alternative graphical element is capable of including for example and without limitation push button a radio button a check box a border box a scroll bar a window or the like. The skilled artisan will further appreciate that the alternative graphical element differs suitably from the original graphical element such that for example and without limitation when the original element comprised a check box the alternative graphical element comprises a checked or X ed check box indicating different status or the like.

When no modification is detected by the controller the controller determines whether a trigger event has occurred. Suitable triggering events include for example and without limitation a screen switch on the display associated with the user interface selection of a particular graphical element by an associated user via the display associated with the user interface or the like as will be understood by those skilled in the art. When such an event is detected by the controller an alternative graphical element is selected in accordance with the specified trigger event. That is as will be understood by those skilled in the art the alternative graphical element is capable of being predetermined based upon the type of trigger event detected. Thereafter the selected alternative graphical element is displayed on the display associated with the user interface in conjunction with the text data as referenced by the pointer data i.e. the XPath query. For example an alternative graphical element is capable of including for example and without limitation push button a radio button a check box a border box a scroll bar a window or the like. The skilled artisan will further appreciate that the alternative graphical element differs suitably from the original graphical element such that for example and without limitation when the original element comprised a push button the alternative graphical element comprises a depressed or highlighted push button indicating different status or the like.

As stated above the preferred embodiment uses an XML structure to facilitate the implementation of the subject application. A suitable example of an XML implementation of the subject application as used herein is depicted as 

As will be appreciated by those skilled in the art the use of the XPath query in accordance with the subject application enables developers to customize the behavior of graphical elements as displayed on the associated user interface change the underlying data document and alternate between screen displays. An example of such an XML implementation of the subject application with respect to customized behavior i.e. not enabling an increment button if the maximum value has been reached is evidenced as 

The skilled artisan will appreciate that the subject system and components described above with respect to and will be better understood in conjunction with the methodologies described hereinafter with respect to and . Turning now to there is shown a flowchart illustrating a method for generating a dynamic composite source user interface in accordance with the subject application. Beginning at step text data is received into a data document stored in an associated memory . At step data representing each of a plurality of graphical elements which correspond to the received text data are received. In accordance with one embodiment of the subject application the backend component e.g. the controller receives the graphical elements from a graphical storage unit or the like. A visual indicator is then generated on the associated display at step corresponding to each graphical element. Selection data is then received representing a selected graphical element at step . At step pointer data is associated with the selected graphical element which pointer data is also associated with the received text data. Thereafter the selected graphical element is displayed on the associated display at step in conjunction with the text data as referenced by the pointer data.

Referring now to there is shown a flowchart illustrating a method for generating a dynamic composite source user interface in accordance with the subject application. The skilled artisan will appreciate that the methodology depicted in corresponds to graphical and or textual presentation as applied to a user interface associated with a document processing device. The use of the subject methodology implemented with respect to a user interface of an associated document processing device is for illustration purposes and the subject application is not limited only to such an implementation. The method begins at step with the receipt of text data into the data document stored in the associated memory e.g. data storage device . The data document is representative of any object oriented application programming interface that enables the parsing of a programming language into a well defined tree structure and operating on its contents such as for example and without limitation a document object module. Preferably the data document includes data representative of text presentation data graphical presentation data event data trigger data text data graphical data indicia or the like.

At step the backend component such as the controller receives data representing each of a plurality of graphical elements that correspond to the received text data. The skilled artisan will appreciate that such graphical elements are capable of being retrieved from an associated storage device generated internally by the controller received from an external source or the like. Preferably the graphical elements include for example and without limitation a push button a radio button a check box a border box a scroll bar a window or the like. A visual indicator corresponding to each graphical element is then generated on the display associated with the user interface at step . That is the backend component e.g. the controller directs the depiction of a visual indicator for each element on a display associated with the user interface . Selection data is then received at step corresponding to a selection of one of the graphical elements. Preferably such selection data is received from an associated user via the user interface remotely via the user device or the like. The skilled artisan will appreciate that such selection data is advantageously received via the user interface by the backend component.

Operations then continue to step wherein pointer data is associated with the selected graphical element as well as with the received text data. In accordance with the preferred embodiment of the subject application the pointer data is implemented as for example and without limitation an XPath query or the like. Preferably the pointer data corresponds to a location in the data document wherein the graphical element and the text data are located. The selected graphical element is then displayed at step on the display associated with the user interface in conjunction with the text data as referenced by the pointer data. The backend component i.e. controller then determines at step whether a modification to the text data has been received. That is the controller determines whether or not a modification update upgrade or the like has been made to the text data. For example the backend component e.g. the controller analyzes the underlying data document for changes. When a modification to the text data has been received flow proceeds to step whereupon an alternative graphical element is selected in accordance with the received text data modification. The skilled artisan will appreciate that the modification is reflected in the underlying data document while allowing the pointer data to remain unchanged. Thus as will be understood by those skilled in the art the change to the text data is relatively transparent to the display associated with the user interface . Thereafter the selected alternative graphical element is displayed on the display associated with the user interface at step in conjunction with the text data as referenced by the pointer data.

When no modification to the text data is detected flow proceeds to step whereupon a determination is made by the controller whether a trigger event has occurred. Suitable trigger events include for example and without limitation a screen switch of the display associated with the user interface an input from an associated user or the like. It will be appreciated by those skilled in the art that other events not listed herein are equally capable of being implemented as trigger events thereby prompting the selection of an alternative graphical element in accordance with the methodologies described herein. Furthermore the skilled artisan will appreciate that such events are capable of being predetermined such that the occurrence of an event has a predetermined alternative graphical element associated therewith. Preferably the occurrence of such an event is detected by the backend component i.e. the controller . When no trigger event is detected the operation illustrated in the flowchart of terminates. When a trigger event is determined to have occurred by the controller an alternative graphical element is selected at step in accordance with the specified trigger event. Thereafter the selected alternative graphical element is displayed on the associated display at step in conjunction with the text data as referenced by the pointer data. Thus the change in the graphical element displayed on the associated display is made without affecting the pointer data i.e. the pointer data still directs retrieval of text data from the same location in the data document . The skilled artisan will appreciate that the subject application thereby enables the dynamic modification to the graphical components of the display associated with the user interface based upon the modifications to the underlying data document .

The subject application extends to computer programs in the form of source code object code code intermediate sources and partially compiled object code or in any other form suitable for use in the implementation of the subject application. Computer programs are suitably standalone applications software components scripts or plug ins to other applications. Computer programs embedding the subject application are advantageously embodied on a carrier being any entity or device capable of carrying the computer program for example a storage medium such as ROM or RAM optical recording media such as CD ROM or magnetic recording media such as floppy discs. The carrier is any transmissible carrier such as an electrical or optical signal conveyed by electrical or optical cable or by radio or other means. Computer programs are suitably downloaded across the Internet from a server. Computer programs are also capable of being embedded in an integrated circuit. Any and all such embodiments containing code that will cause a computer to perform substantially the subject application principles as described will fall within the scope of the subject application.

The foregoing description of a preferred embodiment of the subject application has been presented for purposes of illustration and description. It is not intended to be exhaustive or to limit the subject application to the precise form disclosed. Obvious modifications or variations are possible in light of the above teachings. The embodiment was chosen and described to provide the best illustration of the principles of the subject application and its practical application to thereby enable one of ordinary skill in the art to use the subject application in various embodiments and with various modifications as are suited to the particular use contemplated. All such modifications and variations are within the scope of the subject application as determined by the appended claims when interpreted in accordance with the breadth to which they are fairly legally and equitably entitled.

