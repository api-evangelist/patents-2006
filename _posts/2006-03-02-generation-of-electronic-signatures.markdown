---

title: Generation of electronic signatures
abstract: A generator uses a robust programming framework to create an electronic signature in association with a data item, wherein the electronic signature includes time stamps and/or countersignatures. The generator can create a signature object that computes a signature value of the electronic signature based on the data item. The generator also creates a signature timestamp object to obtain a timestamp of the signature value, wherein the timestamp is associated with the electronic signature. The generator can also invoke a countersignature service on the signature object to obtain a countersignature based on the signature value of the signature object, wherein the countersignature is associated with the electronic signature.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08086859&OS=08086859&RS=08086859
owner: Microsoft Corporation
number: 08086859
owner_city: Redmond
owner_country: US
publication_date: 20060302
---
Electronic commerce is an emerging method of transacting business between parties across local wide area and global networks. However in order for electronic commerce to be considered a safe and reliable means of doing business there must be suitable controls in place to protect the transaction and to ensure the trust and confidence of both parties in the transaction. For example it is important that one party can rely on the acceptance of an offer by another party in an electronically conducted transaction within a regime providing effective legal protections.

In this respect electronic signatures have been offered as an effective security component in protecting the information of a transaction and providing trust in electronic commerce. A European Directive defines an electronic signature as data in electronic form which is attached to or logically associated with other electronic data and which serves as a method of authentication although other definitions or variations of this definition are also employed. Generally an electronic signature can provide evidence that a commitment has been explicitly endorsed under a signature policy at a given time by an identified signer and optionally a role. The signature policy specifies the technical and procedural requirements on signature creation and verification in order to meet a particular business need.

A given legal framework may recognize a particular signature policy as meeting its statutory regulatory and judicial requirements. For example a specific signature policy may be recognized by courts of law as meeting the legal requirements for electronic commerce. Accordingly within this legal framework a holder of an electronic contract can provide evidence that a contract was electronically signed by another party and is therefore enforceable against that party.

Generation of basic electronic signatures generally involved certain cryptographic operations. However generation of electronic signatures becomes a more complex problem when one adds advanced features such as qualifying properties timestamps and countersignatures. While these features can contribute to long term signature validity and non repudiation of an original electronic signature they can also complicate the electronic signature generation process. Existing approaches fail to provide a robust framework for generating such advanced electronic signatures particularly in the presence of multiple timestamps and countersignatures.

Implementations described and claimed herein address the foregoing problems by providing a generator that uses a robust programming framework to create an electronic signature in association with a data item wherein the electronic signature includes time stamps and or countersignatures. The generator can create a signature object that computes a signature value of the electronic signature based on the data item. The generator also creates a signature timestamp object to obtain a timestamp of the signature value wherein the timestamp is associated with the electronic signature. The generator can also invoke a countersignature service on the signature object to obtain a countersignature based on the signature value of the signature object wherein the countersignature is associated with the electronic signature.

In some implementations articles of manufacture are provided as computer program products. One implementation of a computer program product provides a computer program storage medium readable by a computer system and encoding a computer program. Another implementation of a computer program product may be provided in a computer data signal embodied in a carrier wave by a computing system and encoding the computer program. Other implementations are also described and recited herein.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

From the signer s perspective creation of an advanced signature generally involves interaction with a user interface of the generator . For example the signer can select a Sign document menu option in his or her word processing or email program which executes the generator to effect the signing. The signed document can then be transmitted to or stored for access by the recipient .

Generally the generator employs an advanced electronic signature framework to generate the electronic signature in association with the document. A specification of an example advanced electronic signature framework is described in Juan Carlos Cruellas Gregor Karlinger Denis Pinkas John Ross XAdES World Wide Web Consortium Note NOTE XAdES 20030220 February 2003 incorporated by reference herein for all that it describes and teaches.

One implementation of the technology described herein employs a XadesSignature class which provides an advanced signature oriented API Application Programming Interface for creation and verification of signatures. The XadesSignature class is based on the MICROSOFT . NET class System.Security.Cryptography.Xml.SignedXml which is exposed to callers to enable at least one form of extensibility. It should be understood however that other implementations may be employed.

In one implementation for example the generator creates an electronic signature by executing a hashing algorithm on the digital data that defines a document. Example hashing algorithms may include without limitation variations of Secure Hash Algorithm SHA Message Digest Algorithm MDA and Race Integrity Primitives Evaluation Message Digest RIPEMD . Execution of the hashing algorithm on the digital data yields a hash result often referred to as a hash or digest. The generator can then use a private key obtained from a public private key authority to encrypt the signature digest. The encrypted signature digest represents a basic component of an electronic signature as a signature value associated with the data. The signature value can be transmitted or stored in an electronic signature in association with the digital data.

Upon receiving the data and the signature value a recipient can then use a verifier to verify the received digital data. For example the verifier can use the signer s public key available from the signer a public private key authority or some other source to decrypt the encrypted signature digest associated with the document ostensibly yielding the original signature digest . The verifier can also generate a hash of the received digital data. If the hash of the received digital data and the decrypted signature digest match validity of the basic electronic signature and therefore the received digital data is considered verified at least at a basic level. That is absent other security problems the signature is considered to be that of the signer and the document is unchanged from the time of signing.

Accordingly by associating the document with an electronic signature the signer through the generator creates a signed document that can be verified at some level by a recipient or a verifier . It should be noted that the electronic signature can be associated with the document in several different ways including embedding the electronic signature in the document embedding the document in the electronic signature referencing the document in the electronic signature referencing the electronic signature in the document and storing the document and electronic signature in association with each other e.g. in the same file system directory or folder .

Nevertheless this basic level of verification still exhibits considerable trust concerns. For example the verifier is making the assumption that the public key used to decrypt the encrypted signature digest actually belongs to the signer and is still valid. However the public key may no longer be valid e.g. the corresponding private key has been stolen the signer is no longer authorized to use the private key etc. .

Accordingly the generator can certify the electronic signature by invoking certification services by one or more trusted parties such as certificate authorities or some other certification entities collectively referred to herein as certificate signers to attest that the public key belongs to a specified signer. Generally a certificate uses an electronic signature to bind together a public key with an identity information such as the name of a person or an organization the public key owner s address etc. An example certificate may include the public key being signed a name or identifier of a person a computer or an organization a validity period and an address e.g. a URL of a revocation center although other forms of certificates may be employed. In a typical public key infrastructure PKI scheme for example data can be certified by a trusted certificate authority CA . In a web of trust scheme a certificate can be signed by the signer a self signed certificate or other users endorsements . In either case electronic signatures on a certificate are attestations by the certificate signer that the identity information and the public key belong together.

Certificates can be used for the large scale use of public key cryptography. Securely exchanging secret keys among a multitude of users becomes impractical and unsafe without additional protections. For example if a first party wants others to be able to send him or her secret messages the first party can publish a public key associated with the first party. Anyone possessing the public key can then send the party secure information. Unfortunately a second party can also publish a public key claiming that the public key belongs to the first party and can therefore receive secret messages intended only for the first party. However if the first party builds his or her public key into a certificate and has it digitally signed by a trusted third party e.g. a certificate authority anyone who trusts the trusted third party can merely check the certificate to see whether the trusted third party has certified that the embedded public key belongs to the first party. In this manner a sender of secret information to the first party can have confidence that only the first party can access the secret message. By analogy certification can allow a verifier to have confidence that an electronic signature actually belongs to the signer.

Further in large scale deployments chains of certificates may be employed. For example the first party may not be familiar with a second party s certificate authority so the second party s certificate may also include his or her certificate authorities public key signed by a higher level certificate authority e.g. a commercial certificate authority which might be recognized by the first party. This process can lead to a chain of certificates all of which are certified by an ultimately trusted party that in combination attest that a public key belongs to a specified individual.

However certification has its own security concerns. Some certificates have a limited validity period outside of which the certificate is considered expired. In addition a certificate may be revoked for example if it is discovered that its related private key has been compromised e.g. the certificate authority s systems have been hacked or if the relationship between a signer and a specific public key embedded in the certificate is discovered to be incorrect or has changed e.g. if a person changes jobs or names . One method for determining whether a certificate has been revoked is compare the certificate against a certificate revocation list CRL a list of revoked or cancelled certificates. Another method of determining the validity of a certificate is to query the certificate authority using the Online Certificate Status Protocol OCSP to obtain the status of a specific certificate.

Therefore while certification provides some confidence that the electronic signature associated with a document is that of a specified signer it is possible that the certificate itself had expired or was revoked collectively referred to as invalidated at the time it was associated with the electronic signature. For example assume the signer electronically signs the document and has the electronic signature certified with a revoked certificate. Because the certificate was revoked at the time the signature was certified the verifier cannot sufficiently demonstrate for evidentiary purposes that the signer actually signed the document e.g. the hacker of the certificate authority could have stolen the certificate signed the document and certified his own signature as that of the signer .

To provide protection in such circumstances the generator can create timestamps to enhance the security of advanced electronic signatures. A timestamp is a type of electronic signature that can be obtained from a trusted third party e.g. a timestamp authority to attest that the certificate or certificate chain of the electronic signature existed and was valid at the time specified in the timestamp. In one implementation the timestamp authority verifies the electronic signature and the certificate chain. If these are valid then the timestamp authority hashes a collection of timestamp data which includes a time value and the electronic signature digest and associates the timestamp hash with the electronic signature. In another implementation the timestamp authority receives a hash of the original signature s signature value and merely signs that hash with a timestamp. The timestamp can also be certified by one or more trusted third parties. In one implementation the generator creates and issues calls to signature objects and timestamp objects within a programming framework that implements the generation of electronic signatures with one or more timestamps.

Assuming verification of the basic electronic signature including associated qualifying properties and certificates is accomplished one or more timestamps associated with the electronic signature can be verified to determine whether the electronic signature and certificates were valid at the time of signing. If no certificate of the electronic signature was invalid at the time specified in the timestamp then validity of the electronic signature is said to be verified as of the time specified in the timestamp. If the certificate or certificate chain of the electronic signature was revoked after the time of the timestamp the trust in the electronic signature is unimpaired because validity has at least been verified at one point in time.

However certificates associated with timestamps may also expire or be revoked. This situation does not mean that the electronic signature is invalid just that a timestamp of the electronic signature cannot be trusted. Accordingly a possessor of an electronically signed document may submit the electronic signature to one or more timestamp authorities over time thereby associating multiple timestamps with the electronic signature. For example a company may submit its existing contracts to a timestamp authority on an annual basis to reinforce the validity of the electronically signed document. In this manner the company obtains multiple attestations that at a given time the electronic signature was valid. If one or more timestamps are found to be revoked then it is likely that another timestamp remains valid thereby preserving the validity of the electronic signature at least at one point in time.

In addition the generator can associate an electronic signature value in an advanced electronic signature with one or more electronic countersignatures from third parties e.g. a countersignature authority or some other party collectively referred to as countersignature entities . An electronic countersignature represents approval or notarization of the original signer s electronic signature by another party. An electronic countersignature may also be certified by one or more certificates. For example execution of a document may require an electronic signature from two or more parties before it is considered legally binding. Accordingly a countersignature represents an electronic signature of an identified second party and is associated with the same data electronically signed by the identified first party. A countersignature effectively signs an existing signature associated with the data. One or more countersignatures may be associated with a single document. An electronic countersignature may also be associated with its own timestamp s and or countersignature s . In one implementation the generator creates and issues calls to signature objects within a programming framework that implements the generation of electronic signatures with one or more countersignatures. In another implementation a countersignature authority creates and issues calls to countersignature objects with a programming framework that implements computation of countersignatures based on the signatures values associated with signature objects.

A signed document associated with an electronic signature certificate or chain of certificates zero or more time stamps and zero or more countersignatures can then be transmitted to a recipient . If the recipient wishes to verify the validity of the electronic signature associated with the signed document the verifier e.g. a verification module of a document manager a file manager an email client etc. can receive the signed document and test the electronic signature timestamps and or countersignatures to verify the validity of the electronic signature. In the presence of multiple timestamps and or multiple countersignatures an implementation of the verifier can declare the electronic signature as valid valid at a specified point in time or invalid i.e. not verifiable which suggests that the electronic signature cannot be trusted . The verifier may also generate other declarations about the verification status on the electronic signature.

The generator may also certify the signature value by a certificate . The certificate may be a single certificate or a chain of certificates. As discussed previously one or more certificates associated with the signature value may be invalid at the time of signing or at the time of verification . The electronic signature may also be associated with one or more timestamps as shown in .

The generator can add timestamps through a timestamp service provided by a timestamp authority which optionally tests the electronic signature value and the certificates associated therewith. An example timestamp is shown in an exploded view in timestamp to include the digest of the electronic signature value and a time value e.g. include time and date information . Other parameters can also be combined in the timestamp including without limitation qualifying properties the hashing algorithm type etc.

In one implementation the timestamp authority receives the digest of the signature value combines the digest with a time value e.g. including time and date information and potentially other parameters hashes the combination encrypts the hashed combination with the timestamp authority s private key signs it and sends the signed result back to the original signer for association with the document . In an alternative implementation the timestamp authority receives the electronic signature and verifies the electronic signature value and certificates . If these are valid the timestamp authority hashes the electronic signature value to obtain a new signature digest . The timestamp authority then hashes a combination of the new signature digest the time value and potentially other parameters encrypts the hashed combination with the timestamp authority s private key signs it and sends the signed result back to the original signer for association with the document . The timestamp may also be certified by one or more certificates and may be associated with its own timestamps and countersignatures.

Each timestamp attests to a time e.g. a date and time value at which the electronic signature existed in its specific form. Later the one or more timestamps can be verified by a verifier to determine the earliest time at which the electronic signature was valid in association with the document . For example company A has an agreement electronically signed by company B and wishes to enforce the agreement in a court of law. Company B repudiates the agreement claiming that the signature is not valid pointing out that one of the certificates in the certificate chain of the electronic signature had been revoked. If company A can verify a timestamp with a time prior to the revocation date company A can adduce reliable evidence that the electronic signature was valid at least at one point in time and is therefore enforceable.

The electronic signature may also be associated with one or more countersignatures as shown in . The generator can add countersignatures through countersigning services provided by a countersignature authority which can optionally test the electronic signature value and the certificates associated therewith. An example countersignature is shown in an exploded view in countersignature to include the digest of the electronic signature value . Other parameters can also be combined in the countersignature including without limitation qualifying properties the hashing algorithm type etc.

In one implementation the countersignature authority receives the digest of the signature value hashes the digest encrypts the hashed digest with the countersignature authority s private key and sends the encrypted result i.e. countersignature back to the signer for association with the document . In an alternative implementation the countersignature authority receives the electronic signature and verifies the electronic signature value and certificates . If these are valid the countersignature authority hashes the electronic signature value to obtain a new signature digest . The countersignature authority then hashes the new signature digest encrypts the hashed result with the countersignature authority s private key signs it and sends the signed result countersignature back to the original signer for association with the document . The countersignature may also be certified by one or more certificates and may be associated with its own timestamps and countersignatures.

Each countersignature represents an approval or notarization of the electronic signature associated with the document . For example if signatures of both parents are required in association with a child s signature on an electronic document the parents signatures can be provided as electronic countersignatures . In order for the electronic signature to be verified the verifier validates all of the countersignatures .

It should be understood that the electronic signature may not include a set of one or more timestamps or a set of one or more countersignatures. Nevertheless verification of the electronic signature can be made more robust by inclusion of one or more of these components.

One implementation of the described technology the generator uses a XadesSignature class a QualifyingProperties class and an IxmlTimeStamp class to generate an advanced electronic signature although other implementations are contemplated. An example XadesSignature class is described below although variations from the example XadesSignature may be implemented without departing from the described technology. To create an advanced electronic signature the generator instantiates a XadesSignature object. An XadesSignature object generates and validates XML based electronic signatures in association with one or more data items. It should be understood however that other electronic signature formats may be achieved in alternative implementations.

The callback input parameter of the TimeStampSignatureValue method allows the caller to provide a standard or customized method for timestamping the signature via a method referenced as TimeStampDelegate. Whenever the generator calls the TimeStampSignatureValue method which calls back the method passed in as TimeStampDelegate and returns the computed timestamp.

An example QualifyingProperties class as described below may be employed to support some or all of the qualifying properties specified by the previously incorporated XAdES specification as well as to support additional properties for example using XML manipulation. The implementation of a QualifyingProperties object described below employs XML persistence which allows the object to preserve the elements and attributes of the live XML that the QualifyingProperties object does not natively support.

An example class implementing the IXmlTimeStamp interface as described below may be employed to support a timestamp although other timestamp classes or data structures may be employed. For example a timestamp can be loaded from the XML based electronic signature and examined by a verifier using an IXmlTimeStamp interface.

A timestamp operation issues a call to the signature object to obtain a timestamp based on the signature value. In one implementations an example timestamp operation issues a call to a TimeStampSignatureValue method of an XadesSignature object providing a callback method as an input parameter. A callback operation receives a callback to the callback method e.g. TimeStampDelegate provided in the timestamp operation . The callback method invokes a timestamping service in a service operation .

The timestamp service computes a timestamp e.g. a date and time value and returns it to the generator in computation operation . The timestamp can then be embedded into the signature e.g. an XML signature or other data representation of a signature to associate the timestamp and the signature value in association operation . Alternatively the timestamp and the signature can be associatively stored e.g. in the same directory to provide the desired association. Other forms of association are also contemplated.

A service operation invokes a countersignature service to obtain a countersignature e.g. passing the XadesSignature object to a countersignature authority. The countersignature service issues a call to the signature object to verify the signature value in the signature object including its certificate which can include a certificate chain in a verification operation . If the signature value is successfully verified e.g. the signature value including its certificates are valid the countersignature service then computes a countersignature value and returns it to the generator in creation operation . The countersignature can then be embedded into the signature e.g. an XML signature or other data representation of a signature to associate the countersignature and the signature value in association operation . Alternatively the countersignature and the signature can be associatively stored e.g. in the same directory to provide the desired association.

The example hardware and operating environment of for implementing the invention includes a general purpose computing device in the form of a gaming console or computer including a processing unit a system memory and a system bus that operatively couples various system components including the system memory to the processing unit . There may be only one or there may be more than one processing unit such that the processor of computer comprises a single central processing unit CPU or a plurality of processing units commonly referred to as a parallel processing environment. The computer may be a conventional computer a distributed computer or any other type of computer the invention is not so limited.

The system bus may be any of several types of bus structures including a memory bus or memory controller a peripheral bus a switched fabric point to point connections and a local bus using any of a variety of bus architectures. The system memory may also be referred to as simply the memory and includes read only memory ROM and random access memory RAM . A basic input output system BIOS containing the basic routines that help to transfer information between elements within the computer such as during start up is stored in ROM . The computer further includes a hard disk drive for reading from and writing to a hard disk not shown a magnetic disk drive for reading from or writing to a removable magnetic disk and an optical disk drive for reading from or writing to a removable optical disk such as a CD ROM or other optical media.

The hard disk drive magnetic disk drive and optical disk drive are connected to the system bus by a hard disk drive interface a magnetic disk drive interface and an optical disk drive interface respectively. The drives and their associated computer readable media provide nonvolatile storage of computer readable instructions data structures program modules and other data for the computer . It should be appreciated by those skilled in the art that any type of computer readable media which can store data that is accessible by a computer such as magnetic cassettes flash memory cards digital video disks random access memories RAMs read only memories ROMs and the like may be used in the example operating environment.

A number of program modules may be stored on the hard disk magnetic disk optical disk ROM or RAM including an operating system one or more application programs other program modules and program data . A user may enter commands and information into the personal computer through input devices such as a keyboard and pointing device . Other input devices not shown may include a microphone joystick game pad satellite dish scanner or the like. These and other input devices are often connected to the processing unit through a serial port interface that is coupled to the system bus but may be connected by other interfaces such as a parallel port game port or a universal serial bus USB . A monitor or other type of display device is also connected to the system bus via an interface such as a video adapter . In addition to the monitor computers typically include other peripheral output devices not shown such as speakers and printers.

The computer may operate in a networked environment using logical connections to one or more remote computers such as remote computer . These logical connections are achieved by a communication device coupled to or a part of the computer the invention is not limited to a particular type of communications device. The remote computer may be another computer a server a router a network PC a client a peer device or other common network node and typically includes many or all of the elements described above relative to the computer although only a memory storage device has been illustrated in . The logical connections depicted in include a local area network LAN and a wide area network WAN . Such networking environments are commonplace in office networks enterprise wide computer networks intranets and the Internet which are all types of networks.

When used in a LAN networking environment the computer is connected to the local network through a network interface or adapter which is one type of communications device. When used in a WAN networking environment the computer typically includes a modem a network adapter a type of communications device or any other type of communications device for establishing communications over the wide area network . The modem which may be internal or external is connected to the system bus via the serial port interface . In a networked environment program modules depicted relative to the personal computer or portions thereof may be stored in the remote memory storage device. It is appreciated that the network connections shown are example and other means of and communications devices for establishing a communications link between the computers may be used.

In an example implementation an electronic signature generation module an electronic signature object a qualifying properties object a timestamp object and other modules may be embodied by instructions stored in memory and or storage devices or and processed by the processing unit . An electronic signature a public key a private key a digest a certificate a timestamp a countersignature and other data may be stored in memory and or storage devices or as persistent datastores.

The technology described herein is implemented as logical operations and or modules in one or more systems. The logical operations may be implemented as a sequence of processor implemented steps executing in one or more computer systems and as interconnected machine or circuit modules within one or more computer systems. Likewise the descriptions of various component modules may be provided in terms of operations executed or effected by the modules. The resulting implementation is a matter of choice dependent on the performance requirements of the underlying system implementing the described technology. Accordingly the logical operations making up the embodiments of the technology described herein are referred to variously as operations steps objects or modules. Furthermore it should be understood that logical operations may be performed in any order unless explicitly claimed otherwise or a specific order is inherently necessitated by the claim language.

The above specification examples and data provide a complete description of the structure and use of example embodiments of the invention. Although various embodiments of the invention have been described above with a certain degree of particularity or with reference to one or more individual embodiments those skilled in the art could make numerous alterations to the disclosed embodiments without departing from the spirit or scope of this invention. In particular it should be understood that the described technology may be employed independent of a personal computer. Other embodiments are therefore contemplated. It is intended that all matter contained in the above description and shown in the accompanying drawings shall be interpreted as illustrative only of particular embodiments and not limiting. Changes in detail or structure may be made without departing from the basic elements of the invention as defined in the following claims.

Although the subject matter has been described in language specific to structural features and or methodological arts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claimed subject matter.

