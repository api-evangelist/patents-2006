---

title: Techniques for generating serial presence detect contents
abstract: Techniques are presented for automatically generating Serial Presence Detect (SPD) contents. Standards for specific values associated with SPD contents are electronically represented with SPD tokens and rules. When a memory module is identified, a string of needed SPD tokens are acquired for that memory module. The SPD tokens are searched for in the standards and specific SPD values are assembled for the memory module based on the defined rules. The resulting SPD values which are associated with the rules form the needed SPD contents for the memory module. The SPD contents are used to configure an Electrically Erasable Programmable Read-Only Memory (EEPROM) on a memory module.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07472248&OS=07472248&RS=07472248
owner: Micron Technology, Inc.
number: 07472248
owner_city: Boise
owner_country: US
publication_date: 20060717
---
This application is a Continuation of U.S. application Ser. No. 10 782 446 filed Feb. 19 2004 which is incorporated herein by reference.

The invention relates generally to memory fabrication and in particular to techniques for generating Serial Presence Detect SPD contents in desired formats.

Electrically Erasable Programmable Read Only Memory EEPROM is a user modifiable Read Only Memory ROM that can be written to repeatedly through applications with higher than normal electrical voltage. Unlike Erasable Programmable Read Only Memory EPROM EEPROM does not need to be removed from a computing device to be modified.

A single type and vendor specific memory module is defined within an EEPROM via a Serial Presence Detect SPD data structure. A single memory module can define a variety of types of memory such as Dynamic Random Access Memory DRAM Static Random Access Memory SRAM Synchronous DRAM SDRAM Double Data Rate SDRAM DDR SDRAM Magnetoresistive Random Access Memory MRAM flash memory image memory and other types of memory.

In order for a memory module to properly configure itself within a computing device at start up or boot up a number of configuration attributes associated with that memory module must be defined in the EEPROM on a memory module via the SPD data structure. However each type of vendor specific memory module can include a variety of physical and performance characteristics associated with a plurality of needed memory components.

Thus in order to permit interoperability between varying types of vendor specific memory modules to be automatically operational and configured within a variety of disparate computing devices and platforms the memory industry formed committees within the Joint Electron Device Engineering Council JEDEC with the intent of standardizing the structure and contents of the SPD data structure of an EEPROM on a memory module.

Presently the SPD data structure is defined as a string of 256 bytes each byte representing a particular configuration component. Some bytes are required other bytes are optional and provide for better descriptions and information that may be useful in resolving error conditions. For each byte a variety of selectable values can be defined in hexadecimal according to rules associated with the SPD contents which JEDEC has defined.

The standardization of the format and content of the SPD data structure for EEPROMs on memory modules has had its intended effect of permitting a variety of vendors with a variety of memory modules to automatically integrate into a plurality of disparate computing devices and environments. However the process of generating a particular instance of SPD contents for an SPD data structure remains problematic.

This is so because the process of generating needed instances of SPD contents remains largely a manual process fraught with time delays and errors in the industry. Typically when a particular instance of SPD contents is needed for a particular EEPROM on a memory module a variety of internal groups of a particular vendor will assist in defining their needed components within the SPD contents. Each group will manually inspect the SPD industry standards to resolve their needed SPD values and the location within the SPD data structure where their contents are to be placed. When the entire needed SPD contents are defined still other groups serve as quality assurance and testing to ensure no manual errors or incorrect values were produced. The entire process involves multiple individual resources and remains primarily manual. Consequently it is not uncommon for EEPROMs on memory modules to ship with errors that were still undetected or to ship with significant production delays due in large part to the manual process used to create the needed SPD contents.

Therefore there is a need for improved and automated techniques for generating SPD contents for EEPROM on memory modules.

Initially an environment that is conducive to the processing is established. This environment includes an electronic representation of an industry standard for generating SPD contents. As one example the JEDEC standard for SPD contents is codified in a computer accessible environment. This standard includes definitions for each byte and available byte values of an SPD data structure based on a variety of variables. Some of these variables include the type of memory module DRAM SDRAM DDR SDRAM etc. being defined in the SPD data structure the vendor supplying the memory module e.g. MICRON etc. the number of components associated with the memory module the physical dimensions of the memory module or components e.g. height width depth the memory module version number the processing speed of the memory module or components the type of packaging and dies used with the memory module the die revision number and the printed circuit revision designator and low profile designator and others. Not all variables may be used within a particular session with the processing but all available variables in the standard are in a codified format such that each variable needed to resolve a byte location and byte value for any particular permutation of an SPD data structure instance is available within the codified format.

Moreover although present standards envision an SPD data structure having 256 bytes the embodiments of the invention are not intended to be so limiting. In fact any standard that now exist or exists in the future can be codified and used in the novel manners presented with embodiments of this invention.

In addition each variable defining a particular byte location within the standards can include a plurality of additional sub dependent variables. The resolution as to which sub dependent variable to select in a given situation is codified as rules within the standards. Furthermore each variable or sub dependent variable is associated with a corresponding acceptable value or list of selectable values which can be included within the SPD contents. All these permutations of acceptable values or list of selectable values are also defined within the codified version of the standards.

The variables and sub dependent variables are represented as tokens within the codified standards. Each token or sets of certain tokens are associated with the rules which drive selecting a needed SPD value or resolving a needed SPD value from a list of acceptable values.

The tokens defined in the standards are also mapped to available vendors available memory modules of a specific vendor and to characteristics and components associated with specific memory modules. These tokens can include token identifiers for easy retrieval and storage. Also the tokens can be assembled by the processing for an SPD tokenized string. A single instance of a SPD tokenized string includes information necessary to generate SPD contents for a desired memory module.

With this environment established the processing begins at where a particular memory module identifier is received. Receipt of the memory module identifier can come from an engineer interfacing with processing either directly via a user Application Programming Interface API or indirectly via another application that acts as an intermediary for the processing.

Once the memory module identifier is received a data store is queried at for purposes of acquiring an instance of an SPD tokenized string. The SPD tokenized string includes a plurality of SPD tokens. These SPD tokens represent variables and or sub dependent variables represented in the codified version of the standards for generating SPD contents. The SPD tokenized string includes enough SPD tokens necessary to generate a valid instance of SPD contents for the received memory module identifier. In some cases this means all 256 available SPD data structure bytes are represented by one or more SPD tokens. In other cases this means that less than all 256 bytes are represented under circumstances where not all SPD data structure bytes are needed to generate a valid SPD contents for the received memory module identifier. In yet other cases more than 256 SPD data structure bytes are represented with one or more SPD tokens.

At the processing parses the SPD tokenized string to acquire each of the embedded SPD tokens. As each token is acquired from the SPD tokenized string at the acquired token is evaluated via of the codified version of the standards. In one embodiment this means the codified version of the standards is indexed into with each acquired token at in order to acquire needed SPD values for that particular token. This can entail enforcing rules associated with any particular token such that dependencies are required before that particular token can be present. In other words some tokens may require that another token be present before the presence of those tokens is permissible e.g. sub dependent variables . As another example a rule may state that a particular token being evaluated also include two or more sub dependent variables for proper resolution.

The processing of parsing and evaluating the acquired tokens from the SPD tokenized string continues back at and iterates until each token within tokenized string has been evaluated. During each iteration of the loop specific needed SPD values are being resolved by the evaluation. In some cases some values are resolved after all of the tokens are evaluated. In either case upon the conclusion of evaluating each of the tokens a specific instance of SPD contents is generated at . This generated SPD contents represents byte values contained in the proper byte locations to populate an SPD data structure in order to properly configure a memory module associated with the memory module identifier within an EEPROM.

Thus in some embodiments at the generated SPD contents are transmitted to an EEPROM configuration module. The EEPROM configuration module when executed at writes or configures the SPD contents within an EEPROM. That EEPROM can now be shipped for installation within a computing or processing device or that EEPROM can now be directly installed within a computing or processing device.

The embodiments presented with the processing of permit specific instances of SPD contents to be automatically generated and configured into a needed instances of an SPD data structure. Conventionally this entire process has been a manual one fraught with development delays and errors. However the teachings presented herein create an automatic process and removes any errors that can be introduced from the manual creation of SPD contents. As a result SPD contents are more timely generated and have improved quality with the embodiments of this invention.

At an industry standard for generating SPD contents is codified in an interpretable electronic format. The industry standard is represented as a series of SPD tokens sub dependent tokens values and rules. The rules drive the dependencies between the tokens and values. In some embodiments at a single SPD token or single sub dependent token can have a one to many relationship with one or more values. That is a token may be associated with a rule that states a variety of selectable SPD values are acceptable for this particular token.

At a selective number of the SPD tokens and sub dependent tokens are also associated with vendor specific memory modules. This can be done by grouping sets of selective tokens into SPD tokenized strings for memory modules identified by memory module identifiers. In some embodiments vendor identifiers can also be used such that the association at is first dependent upon a specific vendor. In other embodiments the memory module identifiers are pre established based on specific unique vendors.

At the codified version of the industry standard along with the SPD tokens SPD sub dependent tokens values and rules are housed in one or more searchable data stores. In some embodiments the data stores are relational databases object oriented databases or electronic files having APIs which permit the tokens values and rules to be indexed into the electronic files and retrieved from the electronic files based on searches conducted through the APIs.

Once the industry standard is codified and housed in the one or more data stores and the SPD tokens associated with memory modules at the one or more data stores are interfaced with a SPD content creator. In one embodiment the SPD content creator performs the processing defined with method of above. The SPD content creator generates instances of specific SPD contents based on supplied memory module identifiers. A particular SPD contents is used as the configuration contents for a needed SPD data structure that is to populate an EEPROM for a given memory module.

At the SPD content generator can be processed for a given memory module for purposes of generating configuration contents e.g. SPD contents . Since the SPD content generator is interfaced to the one or more data stores it generates a tokenized string for a given memory module and interacts with the data stores to acquire rules and values defined in the industry standard for each of the tokens contained in the tokenized string. In some embodiments during evaluation of any particular token and associated rule there can be a one to many relationship between the rule and one or more available and acceptable values as was discussed above with respect to block . In these situations the SPD content creator can be preconfigured to automatically select one of the many acceptable values can be configured to evaluate metadata to automatically select one of the many acceptable values or can at manually prompt a user to manually select one of the many acceptable values.

In still other embodiments of the method the process associated with generating industry standard labels for any generated EEPROM that includes generated SPD contents for a particular memory module can also be automated with techniques similar to what has been discussed herein. For example at standards associated with memory labels can be electronically codified and represented. At label tokens and or rules associated with the label standards can be associated with memory modules. These tokens rules values associated with the tokens and rules can be stored in one or more additional data stores at . A label generator can then be interfaced to the one or more additional data stores at . The label generator performs processing similar to the SPD content creator only against the label tokens the label rules and label values of the one or more additional data stores. Accordingly the label generator can be used to automatically generate industry required labels for the memory modules defined in EEPROMs.

The embodiments of method teach how a fabrication environment can be established which permits the automatic generation of SPD contents when needed. Additionally the fabrication environment can be extended to include the automatic generation of label information needed for memory modules.

At SPD tokens are parsed from an SPD tokenized string for a given memory module. The SPD tokens represent variables and sub dependent variables defined in a codified version of an industry standard for generating SPD contents. Moreover each of the SPD tokens is associated with one or more rules defined in that industry standard.

As each of the SPD tokens are acquired from the parsing of rules are identified for that acquired SPD token. The rules are identified by token identifiers that uniquely identify the SPD tokens within the industry standard. At the rules are enforced for each acquired token in order to acquire a specific SPD value or set of available SPD values. At and in some embodiments the rules can be acquired by searching a data store with a token identifier. The data store includes the codified version of the industry standard.

After each token is evaluated and values acquired for each token that requires a value the processing generates SPD contents for each token at . During the processing the acquired values can be populated or concatenated to an instance of an SPD data structure or alternatively all the acquired values can be held until processing completes and then organized into their proper locations within an instance of an SPD data structure.

When more than a single SPD value can be provided for a given token that is being evaluated at the processing can be configured to automatically select a particular one of the values based on a preconfigured preference based on evaluation of other metadata or based on manually inputted selection to the processing.

Once an instance of the SPD contents is completely generated and populated to an instance of an SPD data structure the SPD contents can be configured or written to an EEPROM. The generated SPD contents represents the needed value configuration of an SPD data structure for the given memory module that is needed according to the industry standards for an EEPROM.

Initially an industry standard for generating SPD contents is evaluated for purposes of identifying variables and sub dependent variables that are permissibly defined and available in the industry standard. These variables are represented as SPD tokens. Permissible values associated with the variables define SPD contents. The values are also defined in the standards.

At SPD tokens are electronically associated e.g. linked or mapped with their appropriate values as defined in the industry standard. Rules associated with selecting particular values or associated with dependent relationships between various tokens are electronically represented at based on the industry standard. Next at the SPD tokens values and rules are housed or populated within a SPD content fabrication data store.

The fabrication data store is now in condition to be queried and consumed by a SPD content creator. The SPD content creator generates specific instances of SPD contents for given memory modules. Some example SPD content creator processing is provided above with respect to . Accordingly once the fabrication data store is populated at a SPD content creator is interfaced to an API of that data store. In some embodiments the SPD content creator is also interfaced to an EEPROM configuration module at . An EEPROM configuration module is capable of receiving SPD contents for a given memory module and configuring or writing a needed instance of a SPD data structure to an EEPROM.

The embodiments of the method describe how an industry standard for generating SPD contents can be electronically codified within a SPD content fabrication data store. This fabrication data store further facilitates and automates the automatic generation or SPD contents performed by SPD content creators for given memory modules.

Initially at a memory module identifier associated with a specific type of memory module is received. In some embodiments the memory module identifier is received from an interface that interacts with a user. The user desires to produce the appropriate SPD contents for a memory module for purposes of writing or configuring the SPD contents into an EEPROM. The EEPROM will contain configuration data which can dynamically configure a processing device with the appropriate configuration and locations of the proper memory module components when the device is initialized at start up or boot up. In other embodiments a specific memory module identifier is received from a service or automated application that may serially interact with the processing of for purposes of generating several different SPD contents for several different memory modules.

At the processing of the method obtains a SPD token string that represents a plurality of needed SPD tokens for the memory module. The SPD token string is obtained by issuing a search request to a first data store with the search operand being the memory module identifier. As previously discussed in detail an SPD token represents a variable parameter or variable sub dependent parameter defined in an electronic version of an industry standard for generating SPD contents for EEPROMs. Each SPD token is associated with one or more rules and one or more specific SPD values. The SPD values represent specific byte values for a SPD data structure.

After the SPD token string is obtained for the memory module identifier from the first data store the SPD token string is parsed for each unique SPD token included therein at . Also at each SPD token is used as a separate search request into a second data store in order to obtain rules and values associated with each SPD token. The second data store includes a codified electronic version of the industry standard in a searchable format. Thus at rules and values are obtained as results of the searches for each of the SPD tokens contained in the SPD token string.

At the rules are enforced. That is the rules are processed based on the identities of the SPD tokens and based on logic that is driven by the rules. Next at by enforcing the rules specific SPD values are obtained for an instance of a SPD data structure. In some embodiments at a number of the rules during enforcement or interpretation may indicate that there is more than one available and acceptable value for a particular SPD token. In these instances the processing of may prompt a user interface to provide manually inputted values which are selected from a list of available values defined by the rules. In other instances there is no prompting when more than one value is permissible rather the processing of the method is preconfigured to determine or resolve a preferred or desired value selection based on predefined preferences or based on evaluation of other metadata.

At and in one embodiment the generated SPD contents for the memory module are transmitted to an EEPROM configuration module. The EEPROM configuration module configures or writes an instance of a SPD data structure which has the generated SPD contents to an EEPROM. Correspondingly at an instance of an EEPROM is automatically configured with the generated SPD contents.

The processing of the method demonstrates how automated processing can be implemented to generate SPD contents for a desired type of memory module. Conventionally this processing was manual and fraught with manually introduced errors. The processing of the method corrects these conventional shortcomings.

The SPD data structure includes a plurality of SPD tokens and . An SPD token or logically and electronically represents variable parameters defined in an industry standard for generating SPD contents for SPD data structures. Each SPD token or is associated with one or more logical rules or dictates which are associated with the industry standard. Interpretation or enforcement of the rules for a particular SPD token or yields an SPD value or a list of available and acceptable SPD values. The SPD values are byte values for the SPD data structure and when assembled in the correct format from an instance of a SPD data structure. That instance defines a particular memory module for an EEPROM. The EEPROM is interpreted during start up or boot up of a processing device having the EEPROM in order to properly configure and initiate the memory module.

Each instance of the SPD data structure forms a particular SPD token string. That is based on the identity of a particular memory module the types of SPD tokens and will vary within the SPD data structure . The SPD token string is formed by concatenating select ones of the SPD tokens and together. In some embodiments an exact ordering of the SPD tokens and is not required. This is so because each SPD token or is unique such that any particular SPD token or within the SPD data structure can be resolved by processing that consumes or parses the SPD data structure . In other embodiments for purposes of processing efficiency the SPD data structure the SPD tokens or are arranged in a predefined order based on identifiers associated with the SPD tokens and .

In one embodiment instances of the SPD data structure are predefined and stored in an SPD token string data store . Each instance represents need SPD tokens and for a specific type of memory module. The SPD tokens and are also individually represented within data store that electronically codifies the standard for generating SPD contents for EEPROMs.

In one embodiment the data format of the SPD data structure is in an Extensible Markup Language XML format. This permits the SPD data structure to be interpreted and processed in an automated fashion through use of schemas and translation programs that can dynamically interpret the schemas and parse the SPD data structure for the individual SPD tokens and . Thus in embodiments where the SPD data structure is in an XML format no specialized processing is needed or need be developed to parse the SPD tokens and all that is needed is an XML schema that defines the SPD data structure and conventionally available translation programs can then be used to automatically parse the SPD tokens and . This is beneficial because should SPD tokens and be added changed or removed no changes will need to be made to programs that parse the SPD tokens and . Moreover if the SPD data structure is in an XML format the SPD data structure can be seamlessly and dynamically communicated to other services or applications which can immediately process the SPD data structure using the XML schema. Of course no particular SPD data structure format is needed for the teachings of this invention. Therefore the format of the SPD data structure is not intended to be limited to any particular data format.

The SPD data structure permits more efficient processing for automatically fabricating the SPD contents for desired memory modules within an EEPROM. In some embodiments the SPD data structure is consumed by the processing described above with .

The SPD data structure includes a plurality of SPD tokens a plurality of SPD values a plurality of rules and a plurality of links . The SPD tokens map to specific variable parameters or sub dependent variable parameters defined in an industry standard for generating SPD contents. Similarly the SPD values are associated with the SPD tokens and represent specific acceptable SPD content value assignments defined in the standard. Moreover the SPD rules define processing directives or requirements for particular SPD tokens vis vis particular SPD values . The links define the proper dependencies between the SPD tokens the SPD values and the SPD rules .

The SPD data structure is consumed by processing to automatically generate SPD contents. Each instance of the SPD data structure can represent a standard for which contents are derived based on parameters and rules. Thus the SPD data structure can be used with other standards such as a standard for automatically conforming labeling information is associated with a particular type of memory module. In some embodiments the SPD data structure is indexed and housed in a data store . In other cases the SPD data structure is dynamically generated and housed in memory during processing that automatically generates SPD contents.

In one embodiment an SPD content creator consumes the SPD data structure for purposes of generating instances of SPD contents for EEPROMs. The SPD data structure may be predefined and available to the SPD content creator in the data store or the SPD content creator or some other process may automatically generate the SPD data structure based on a given SPD industry standard for generating SPD contents. The SPD content creator can use the SPD data structure in combination with the SPD data structure in order to acquire a SPD tokenized sting SPD data structure for a given memory module locate the individual tokens within the available SPD tokens for purposes of acquiring the needed links the links provided the associated SPD values and the associated SPD rules . The SPD content creator then evaluates or interprets the linked SPD rules for purposes of acquiring the needed SPD values needed for automatically generating SPD contents.

In one embodiment the SPD data structure is populated initially with the processing defined above with method or method of respectively. The SPD data structure then provides the proper initial environment for the processing of methods and of and respectively. In some embodiments for purposes of efficiency the methods and can also consume and use the SPD data structure of .

The content creation system minimally includes a SPD data store and a SPD creator . In one embodiment the content creation system also includes a SPD creator interface . However it is to be understood that the features of the SPD creator interface described herein and below can be embodied in whole within the SPD creator . Moreover in some embodiments the content creation system also includes one or more of the following an EEPROM configuration module a label generator a string generator and a SPD string data store . In one embodiment the SPD data store includes the SPD data structure of which is generated by the processing of the methods and of respectively. In another embodiment the SPD string data store includes the SPD data structure of . In still other embodiments the processing of the SPD creator is defined by the processing of the methods and of and respectively. Moreover in one embodiment the processing of the label generator is defined by the processing of method of .

The SPD creator interface is an API which can be interacted with by a user. The SPD creator interface can be implemented in any programming language or within browser pages associated with existing and conventionally available Word Wide Web WWW browser interfaces. The SPD creator interface acts as an intermediary between a user and the SPD creator . The user accesses the SPD creator interface for purposes of defining the SPD contents for a user desired memory module. In some embodiments the SPD creator interface is designed to communicate error conditions occurring with the SPD creator or based on syntax or semantics associated with memory module identifiers and SPD contents.

During operation of the SPD content creation system the SPD creation interface interacts with the user to acquire a memory module identifier that identifies a particular memory module. In some embodiments the SPD content creation system may require the use to initially enter a vendor identification for a specific vendor before the memory module identifier is supplied by the user.

Next the SPD creation interface transmits or interacts with the SPD creator to supply the user supplied memory module identifier and or vendor identifier. In some embodiments in response to the supplied memory module identifier the SPD creator contacts the string generator and communicates the memory module identifier. The string generator either generates a SPD tokenized string for the SPD creator or issues a search request to the SPD string data store for purposes of acquiring the SPD tokenized string for the needed memory module. When the needed SPD tokenized string is acquired it is communicated back to the SPD creator . The SPD creator proceeds to parse the SPD tokenized string to acquire each unique SPD token contained therein.

The SPD creator uses each SPD token as a search operand into the SPD data store . In response to the search request the SPD data store returns SPD values and SPD rules that are linked and associated with the search operand SPD token . These types of searches continue until all SPD tokens are searched for in the SPD data store . In one embodiment the SPD creator issues a single search request that includes all the tokens of the SPD tokenized string and then assembles the search results for processing.

Next the SPD creator proceeds to evaluate or interpret each of the returned rules vis vis their linked SPD tokens. As the rules are enforced the SPD creator assembles selected ones of the SPD values necessary for generating the needed SPD contents for the originally user supplied memory module identifier. Accordingly after all the rules have been processed the SPD creator assembles complete SPD contents for the needed memory module.

In one embodiment the SPD creator can be configured based on a predefined preference of the user to automatically transmit the generated SPD contents for the needed memory module to the EEPROM configuration module . In another embodiment the SPD creator provides the generated SPD contents to the SPD creator interface where it is communicated to the user. The user via the SPD creator interface can then manually direct the SPD creator or the SPD creator interface to transmit the SPD contents to the EEPROM configuration module . The EEPROM configuration module then batches the request to configure an EEPROM with the SPD contents or immediately configures an EEPROM with the SPD contents.

In still another embodiment the SPD content creation system uses a label generator for purposes of acquiring label tokens for a given memory module identifier. The label generator can be contacted or communicated with via the SPD creator interface the SPD creator or another and separate label generator interface not shown in . The label generator contacts a label store not shown in acquires associated rules and values for each of the label tokens associated with the needed memory module and the label generator automatically generate an industry standard label for the needed memory module.

The architectural configuration and layout of is presented for purposes of illustration and comprehension only and is not intended to limit embodiments of the invention. Correspondingly features of the components of can be embedded in additional modules not shown in or some features of one or more components can be implemented as features in one or more separate components.

The SPD creation system includes a SPD data store a SPD string generator a SPD creation interface and a SPD creator . Initially a user interacts with the SPD creation interface and supplies a memory module identifier and or vendor identification. The SPD creation interface supplies the memory module identifier to the SPD string generator . The string generator searches the SPD data store and acquires an SPD tokenized string for the supplied memory module identifier.

Next the SPD string generator transmits the SPD tokenized string to the SPD creator . The SPD creator parses the SPD tokenized string to acquire a list of unique SPD tokens embedded therein. Next the SPD creator either issues a series of search requests to the SPD data store for each unique SPD token or issues a single search request to the SPD data store having all of the unique SPD tokens.

The SPD data store response the search request s from the SPD creator with an association for each unique SPD token. That association includes links between each unique SPD token vis vis SPD rules and SPD values. The SPD creator interprets and enforces the rules with respect to each association in order to acquire the proper SPD values. This processing continues until each of the associations is addressed by the SPD creator . Upon completion the SPD creator has created or generated specific SPD contents. The SPD contents represent needed information that needs programmed into or configured within an EEPROM in order for that EEPROM to be processed by a processing device to configure the needed memory module within the processing device at start up or boot up.

In some embodiments a particular rule that is successfully processed may indicate to the SPD creator that a variety of SPD values can be acceptably used. In these situations the SPD creator can be preconfigured to resolve an acceptable SPD value or can contact the SPD creation interface for assistance to acquire an acceptable SPD value from the user.

In one embodiment the SPD creator transmits a completed SPD contents to an EEPROM configuration module . The EEPROM configuration module writes or configures the SPD contents into an instance of an EEPROM.

In one embodiment the EEPROM configuration module batches the supplied SPD contents and waits until a predetermined number of additional instances of SPD supplied contents are received from the SPD creator . When the predetermined number threshold is reached the EEPROM configuration module writes or configures the appropriate instances of SPD contents to appropriate instances of EEPROMs. In still another embodiment the EEPROM configuration module batches the SPD creator supplied SPD contents and waits to configure an instance of an EEPROM with the SPD contents until a predefined event occurs. The event can be associated with a specific time of day a specific calendar date a specific manually supplied authorization a specific automatically generated authorization and the like.

That is the SPD contents are automatically generated for a defined memory module based on an electronic and codified version of the industry standards. This codified version includes SPD tokens for industry standard variable parameters or sub dependent variable parameters. Moreover each SPD token is linked or otherwise associated with SPD rules the SPD rules associated with one or more SPD values. A memory module identifier results in automatically generated SPD tokenized strings. Each token is mapped to select SPD rules and SPD values. When the SPD rules are dynamically and automatically interpreted or enforced the needed SPD values are automatically acquired. The needed SPD values are organized in the correct format according to the standards and written or configured within the EEPROM of as automatically generated SPD contents .

In some embodiments the EEPROM also includes an automatically generated label based on industry standards for label generation as was discussed in detail above. In one embodiment the SPD contents are automatically configured or written to the EEPROM by an EEPROM configuration module as discussed in detail above. The EEPROM configuration module acquires the SPD contents from a SPD content creator . The features and processing of a SPD content creator were also described in detail above.

Embodiments of the present invention teach methods data structures systems and EEPROMs where SPD contents are automatically generated. The SPD contents define configuration information for instances of memory modules. The SPD contents can then be configured within an EEPROM and shipped for installation in one or more computing or processing devices or installed within one or more computing devices which are then shipped. Conventional manually intensive efforts were needed to generate instances of SPD contents. This can now be avoided with the teachings presented herein and above.

Moreover the teachings presented herein can be extended to any industry standard such that interfaces and processing techniques presented herein can be modified and used to automatically define and generate individual instances of contents for data structures defined by that industry standard. Thus the invention is not limited to JEDEC standards for SPD contents. Furthermore in some instances the invention is not limited to automatically generating SPD contents for EEPROM.

In fact in some embodiments different standards can be used to render SPD contents or any other types of contents into desired formats required by different devices services or protocols. In this sense the invention presents techniques for consuming a codified standard and rendering specific values for variables of that standard into data formats that are desired. In some cases the rendered data formats are in an XML format and capable of being dynamically consumed or dynamically rendered via an associated XML schema. Accordingly all such extensions are intended to fall within the generous scope of the present invention.

The above description is illustrative and not restrictive. Many other embodiments will be apparent to those of ordinary skill in the art upon reviewing the above description. The scope of embodiments of the invention should therefore be determined with reference to the appended claims along with the full scope of equivalents to which such claims are entitled.

The Abstract is provided to comply with 37 C.F.R. 1.72 b requiring an Abstract that will allow the reader to quickly ascertain the nature and gist of the technical disclosure. It is submitted with the understanding that it will not be used to interpret or limit the scope or meaning of the claims.

In the foregoing description of the embodiments various features are grouped together in a single embodiment for the purpose of streamlining the disclosure. This method of disclosure is not to be interpreted as reflecting an intention that the claimed embodiments of the invention require more features than are expressly recited in each claim. Rather as the following claims reflect inventive subject mater lies in less than all features of a single disclosed embodiment. Thus the following claims are hereby incorporated into the Description of the Embodiments with each claim standing on its own as a separate exemplary embodiment.

