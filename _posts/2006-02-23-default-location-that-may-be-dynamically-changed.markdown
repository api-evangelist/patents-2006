---

title: Default location that may be dynamically changed
abstract: Content that is received by an application is delivered to a default location that may be dynamically updated. This default location for content may be updated without interfering with the functionality of a process or application that interacts with the default location. An API allows processes to request the current location of default location and then send and access content at the default location. A user interface allows a user to change the default location within a file system. The default location may be local to a computing device or remote from the computing device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08065351&OS=08065351&RS=08065351
owner: Microsoft Corporation
number: 08065351
owner_city: Redmond
owner_country: US
publication_date: 20060223
---
An application receives content from a variety of sources. Currently applications use a number of methods for deciding where to initially place content that is received. In one method an application may prompt the user each time content is received for a location to place the content. This method is constantly prompting and interrupting the user for a location to place the data. Another method creates a fixed default location for any content that is received by the application. This second method disregards the user s own filing method. A third method provides a way to manually set the destination for content that is received from a specific source. This method requires configuration for each of the data sources from which content may be received.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used as an aid in determining the scope of the claimed subject matter.

Content that is received by an application is delivered to a default location that may be dynamically updated. This default location for content may be updated without interfering with the functionality of a process or application that interacts with the default location. An application programming interface allows processes to request the current location of default location and then send content to the default location. A user interface may be provided that allows a user to change the default location within a file system. The default location may be local to a computing device or remote from the computing device. The default location removes the requirement for a process or a user to manually configure the default location for each of the processes that may deliver content to the default location.

Referring now to the drawings in which like numerals represent like elements various embodiments will be described. In particular and the corresponding discussion are intended to provide a brief general description of a suitable computing environment in which embodiments may be implemented.

Generally program modules include routines programs components data structures and other types of structures that perform particular tasks or implement particular abstract data types. Other computer system configurations may also be used including hand held devices multiprocessor systems microprocessor based or programmable consumer electronics minicomputers mainframe computers and the like. Distributed computing environments may also be used where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules may be located in both local and remote memory storage devices.

Referring now to an illustrative computer architecture for a computer utilized in the various embodiments will be described. The computer architecture shown in may be configured as a desktop or mobile computer and includes a central processing unit CPU a system memory including a random access memory RAM and a read only memory ROM and a system bus that couples the memory to the CPU . A basic input output system containing the basic routines that help to transfer information between elements within the computer such as during startup is stored in the ROM . The computer further includes a mass storage device for storing an operating system application programs and other program modules which will be described in greater detail below.

The mass storage device is connected to the CPU through a mass storage controller not shown connected to the bus . The mass storage device and its associated computer readable media provide non volatile storage for the computer . Although the description of computer readable media contained herein refers to a mass storage device such as a hard disk or CD ROM drive the computer readable media can be any available media that can be accessed by the computer .

By way of example and not limitation computer readable media may comprise computer storage media and communication media. Computer storage media includes volatile and non volatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to RAM ROM EPROM EEPROM flash memory or other solid state memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by the computer .

According to various embodiments the computer may operate in a networked environment using logical connections to remote computers through a network such as the Internet. The computer may connect to the network through a network interface unit connected to the bus . The network interface unit may also be utilized to connect to other types of networks and remote computer systems. The computer may also include an input output controller for receiving and processing input from a number of other devices including a keyboard mouse or electronic stylus not shown in . Similarly an input output controller may provide output to a display screen a printer or other type of output device.

As mentioned briefly above a number of program modules and data files may be stored in the mass storage device and RAM of the computer including an operating system suitable for controlling the operation of a networked personal computer such as the WINDOWS XP operating system from MICROSOFT CORPORATION of Redmond Wash. The mass storage device and RAM may also store one or more program modules. In particular the mass storage device and the RAM may store an application program . The application program is operative to receive content from one or more internal and or external processes and store the content at a default location. According to one embodiment the application program comprises the MICROSOFT ONENOTE application program from MICROSOFT CORPORATION. Other application programs that receive content that needs to be stored in a default location may also be utilized. For instance email programs browser programs PIM programs and the like may be utilized.

The application program may utilize a content manager . As will be described in greater detail below the content manager may be used to provide functionality relating to the default location. For example the content manager may provide functionality for determining the location of the default location placing content within the default location and changing the default location.

In order to facilitate communication with the content manager one or more callback routines illustrated in as callback code may be implemented. According to one embodiment any content that is received by application program and that is directed to the default location may be temporarily stored in a backing store . Alternatively any content that is directed to a default location that is associated with application program may be stored directly at the default location .

A default location allows features applications processes to deposit content that may be later specifically placed within an application such as application . By having a defined default location for the content the application does not have to access different random folders and sections within a program such as MICROSOFT ONENOTE that have been individually created as a dumping ground for content. This uniformity of the default location assists users and processes in accessing the content that has placed within the default location such that these users and processes may easily find and manipulate the content that was sent to the application. The default location provides a common model for how to deal with content that is directed to a default location.

The content manager provides facilities for interacting with content that is received by application program and that is directed toward a default location . Generally a default location is specified as a temporary dumping ground for content until it may be processed by a user or some other process. For example a default location may be used to temporarily store notes files and the like. An API is provided to internal and external processes that may be used to perform actions relating to the default location. For example the API may provide functionality for determining the current location of the default location changing the location of the default location retrieving content from the default location as well as sending content to the default location.

When a user and or process changes the location of the default location that is associated with application program application communicates these changes to content manager such that the default location is updated. According to one embodiment content manager updates a registry key to include the updated path to the default location. For example the default location may be changed from residing on computing device to residing on server . As illustrated the default location may be located within the application program space local to the computing device of application program or remotely from computing device .

A GUI may also be used to move and or specify the location of the default location. If the user moves the default location to another location by dragging and dropping the location See or using an edit box See or some similar method then application updates the location of the default location and redirects all content that is received to the newly updated default location. Content that is already located at the default location may either be moved to the new location or stay at the previous location. According to one embodiment if the default location is deleted or absent application recreates it at the specified location.

According to one embodiment a registration key specifies the path to the default location. An application such as application may use API to determine the location of the default location or may directly access the registration key to determine where the default location is located. The location of the default location may be stored many different ways. For example the default location may be stored within a file at a known location with application or in some other manner.

Generally a user may select a default content icon e.g. default content icon to navigate to the content by clicking on it. For example when a default content icon is selected in the ONENOTE application the application opens an unfiled section of the notebook that includes all of the content that has been sent to the default location. The content icon will access the content that is stored at the default location regardless of whether the default location has changed. For example during one period of time the default location may be located at Location and during a second period of time the default location may be located at Location. Changing the default location does not cause an application to have to recompile or change a parameter or setting in order to access the content at the default location. The same function call may be used to retrieve the current default location.

According to one embodiment the default content icon is displayed on a menu bar that is located on the left side of application window . Other locations however may be used for the default content icon. For example the default content icon may be displayed on the desktop as illustrated by default content icon . The default content icon may also be displayed within menu bar as illustrated by default content icon . Many other locations may be used to display the default content icon. The three areas shown for the default content icon are merely representative.

Referring to GUI a user has selected the save category . In response to the selection edit box displays the path to the default location. As discussed above the path may be a path that is local to the computing device or a path that is remote to the computing device. The modify button may be selected to make the text within edit box editable such that the default location may be changed. Alternatively the user may select the text within edit box by placing their cursor within edit box and highlighting the portion of the default location they would like to change. Once the user has made any desired edits the user may select the save button to save the change to the default location. In response to the save event the default location is updated such that any requests for the default location that are received after the change has been made are provided with the updated default location. A change to the default location may be made at any time. For example a change may be made whether or not the application is currently running.

Referring to first location window it can be seen that the default location is located within the file system before Location . Location may be any location within a file system. The file system may show the local file system as well as the networked file systems. As such Locations through may indicate local and or remote file system locations.

Once the user has selected the default location indicator the default location may be dragged and dropped to any location within the file system. As illustrated in intermediate location window the user has dragged the default location to between Location and Location .

Once the user releases the default location the default location is updated to the specified location. In the present example the default location is updated to be between Location and Location as shown in resulting location window .

As discussed above any application or process that interacts with the default location does not have to be updated to react to the change in the default location.

Referring now to an illustrative process for providing a default location that may be dynamically changed will be described.

When reading the discussion of the routines presented herein it should be appreciated that the logical operations of various embodiments are implemented 1 as a sequence of computer implemented acts or program modules running on a computing system and or 2 as interconnected machine logic circuits or circuit modules within the computing system. The implementation is a matter of choice dependent on the performance requirements of the computing system implementing. Accordingly the logical operations illustrated and making up the embodiments described herein are referred to variously as operations structural devices acts or modules. These operations structural devices acts and modules may be implemented in software in firmware in special purpose digital logic and any combination thereof.

Flowing to operation once the default location is determined the content may be sent to the default location for storage or the content that is already stored at the default location may be accessed. For example a content icon as described in conjunction with may access the default location.

The process then moves to operation where the content may either be stored at the default location or the content may be retrieved from the default location. As discussed above the default location may reside on the same computing device as the application receiving the content or it may reside on a separate computing device that is coupled to the application s computing device.

Flowing to decision operation a determination is made as to whether the default location has changed. When the default location has not changed the process returns to operation for continued monitoring.

When the default location has changed the process moves to decision operation where a determination is made as to whether the default location exists.

When the default location does not exist the process moves to operation where the default location is created. For example if a directory specified by the default location does not exist then that directory is created within the filing system s file structure. The process then moves to operation .

When the default location does exist the process moves to operation where the default location is updated. According to one embodiment updating the default location involves updating a registry key to the new path of the default location. Other methods may be used to update the default location. For example the default location may be stored within a configuration file.

The above specification examples and data provide a complete description of the manufacture and use of the composition of the invention. Since many embodiments of the invention can be made without departing from the spirit and scope of the invention the invention resides in the claims hereinafter appended.

