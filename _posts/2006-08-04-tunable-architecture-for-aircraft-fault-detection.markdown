---

title: Tunable architecture for aircraft fault detection
abstract: A method for detecting faults in an aircraft is disclosed. The method involves predicting at least one state of the aircraft and tuning at least one threshold value to tightly upper bound the size of a mismatch between the at least one predicted state and a corresponding actual state of the non-faulted aircraft. If the mismatch between the at least one predicted state and the corresponding actual state is greater than or equal to the at least one threshold value, the method indicates that at least one fault has been detected.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08209083&OS=08209083&RS=08209083
owner: Honeywell International Inc.
number: 08209083
owner_city: Morristown
owner_country: US
publication_date: 20060804
---
The invention described herein was made in the performance of work under NASA Contract No. NAS1 00107 and is subject to the provisions of Section 305 of the National Aeronautics and Space Act of 1958 42 U.S.C. 2457 .

Fast and reliable failure detection is crucial for damaged aircraft to maintain controlled flight. The two main objectives of the U.S. Government s Aviation Safety Program are to develop and demonstrate technologies that reduce aircraft accident rates and develop technologies that reduce aviation injuries and fatalities when accidents do occur. Fault detection isolation and reconfiguration FDIR for flight control continues to be an active area of research in the aerospace community. To date a wide variety of technologies have been demonstrated in high fidelity simulations that is simulations with minimal distortions and in actual flight tests with various levels of success.

For model based aircraft fault detection a mathematical model of the aircraft is used. Model based fault detection is based on comparing measurements from the aircraft with corresponding error predictions from the aircraft model that is residual processing . In real life situations the comparison of these signals is not trivial. This is due to the fact that typically there are imperfections in most mathematical flight simulation models coinciding with multiple sources of aircraft measurements errors. Therefore any fault detection algorithms require fast and reliable processing in the presence of modeling and measurement errors.

The following specification addresses an architecture and tuning procedure for aircraft fault detection. Particularly in one embodiment a method for detecting faults in an aircraft is provided. The method involves predicting at least one state of the aircraft and tuning at least one threshold value to tightly upper bound the size of a mismatch between the at least one predicted state and a corresponding actual state of the non faulted aircraft. If the mismatch between the at least one predicted state and the corresponding actual state is greater than or equal to the at least one threshold value the method indicates that at least one fault has been detected.

The flight deck further includes a flight display . In the example embodiment of the flight display is a version of a flight display for a Control Upset Prevention and Recovery System CUPRSys or the like that simulates aircraft failure prevention and recovery on a plurality of civilian commercial or military aircraft. In one implementation the flight display displays without limitation angular acceleration of the aircraft and pitch roll and yaw of the aircraft with respect to a rotating earth. The flight display further indicates without limitation effects of current control surface positions of the plurality of control surfaces discussed above including the landing gear on the aerodynamics of the aircraft . Additional aircraft state information provided by the flight display includes without limitation performance of engines and landing gear and current atmosphere and turbulence measurements. In the example embodiment of any potential aircraft fault of the aircraft are visually displayed in the flight deck by the flight display . In one implementation potential aircraft faults include without limitation stuck and floating flight control surfaces due to a hydraulic or mechanical malfunction reduced surface effectiveness due to a surface loss an engine failure a landing gear failure and a buildup of ice on one or more flight control surfaces.

A simulated model of the aircraft includes a tunable architecture for aircraft fault detection such as further described for example with respect to below. The tunable architecture for aircraft fault detection will substantially minimize that is reduce the number of false alarms due to any mismatches in actual aircraft states versus predicted aircraft states of the aircraft while maintaining a required level of fault detection. The simulated model of the aircraft discussed below with respect to is concerned with detecting faults that is equivalent aircraft to model mismatches for proper flight deck control in the flight deck during an actual flight.

In one implementation the flight command block represents flight commands received from an operator pilot navigating the aircraft of . Moreover the flight simulation block represents the aircraft . The flight simulation block continuously issues one or more simulated control surface position sensor outputs and one or more aircraft state outputs to the flight measurement block . The flight measurement block predicts at least one aircraft state of the flight simulation block . The flight deck control model models operational behavior of the flight simulation block so that any mismatch is reduced in actual movements versus predicted movements of the non faulted aircraft model block . The flight deck control model reconfigures control of the flight deck in real time based on a tunable fault detection algorithm and a fault isolation algorithm. The tunable fault detection algorithm is described further below in connection with . By incorporating the tunable fault detection algorithm the flight deck control model maintains a required level of fault detection for at least the aircraft faults discussed above with respect to .

In operation the control law block and fault detection block receive one or more flight commands from the flight command block . The control law block and fault detection block receive one or more aircraft state measurements from the flight measurement block . The control law block controls one or more positions of the plurality of flight control surfaces discussed above with respect to . To accomplish this the control law block receives one or more input commands from the flight command block and the flight measurement block . The one or more input commands include without limitation a roll rate p a blend of pitch rate and normal acceleration C and an angle of sideslip . From the one or more input commands received the control law block issues one or more flight control surface commands to the flight simulation block . The one or more flight control surface commands include without limitation an aileron difference between the ailerons and of an average elevator for the elevators and of and the rudder of the aircraft . In one implementation the control law block generates roll pitch and yaw commands based on the one or more aircraft state measurements from the flight measurement block . The control law block allocates at least one flight control surface command for every corresponding flight control surface on the aircraft model block .

The fault detection block models non linear equations of motion of the aircraft through a constant matrix H the control law block uses the same model structure with a different constant matrix H . In one implementation the fault isolation block estimates the change in H H for every fault that the fault detection block detects using a recursive least squares RLS estimator. The RLS estimator receives a processed state of the aircraft one or more control surface position measurements of the aircraft and one or more angular accelerations of the aircraft from the fault detection block . The fault isolation block isolates at least one fault when the estimate of Hconverges. Once the at least one fault is isolated the fault isolation block updates the control law block with a reconfigured control law that is reconfigures the Hif matrix . At substantially the same time the pilot display block notifies the flight display of with a status and potential impact of the at least one detected fault on the aircraft .

From the aircraft state measurements and the one or more flight control surface position measurements the flight measurement block predicts that is estimates angular acceleration of the aircraft in all three axes that is the x y and z axes . The fault detection block determines a difference that is an error between measured and estimated angular accelerations to produce a residual signal as further discussed in detail below with respect to . The residual signal is subsequently compared to a fault detection threshold within the fault detection block . When the residual signal is greater than the fault detection threshold a fault is flagged on the flight display block . As further discussed in detail below with respect to the fault detection block tightly bounds one or more differences between predicted states and actual states of the non faulted aircraft . The fault detection block is further responsible for substantially minimizing missed fault detections and reducing false alarms. To substantially minimize and reduce false alarms due to wind gusts the fault detection threshold within the fault detection block is also made a function of measured linear accelerations.

The threshold function accepts at least three reference commands indicated as rto rin from the flight command block of . The threshold function transfers each of the at least three reference commands rto rto corresponding absolute measurement functions to and threshold filter functions to for each axis of motion. Each threshold summation point to receives an output from the corresponding threshold filter function to and at least one bias value from corresponding bias model blocks to . Each bias model block compensates accommodates for one or more external unmeasured disturbances for example atmospheric turbulence on each axis of motion. The threshold signal multiplexer issues a threshold signal to the comparator function .

The error function comprises an aircraft model block and a selector block coupled to a differencer . The aircraft model block receives one or more control surface positions and one or more actual aircraft states from the flight measurement block of . The selector block receives the one or more actual aircraft states from the flight measurement block . The aircraft model block determines an estimated angular acceleration of the aircraft indicated as dot over circumflex over in . The selector block derives a measured angular acceleration of the aircraft indicated as dot over in from the one or more actual aircraft states indicated as in . As further illustrated below the differencer differences the estimated angular acceleration and the measured angular acceleration of the aircraft in all three axes of motion to produce error signals eto e. The residual band pass filter filters the error signals eto efrom the error function to remove control surface trim and measurement errors creating the residual signal .

A model of the one or more aircraft states from the flight measurement block of is illustrated below in Equation 1. dot over Equation 1 

With respect to Equation 1 above x Rdenotes an actual aircraft state vector u Rdenotes a control surface input vector and Rdenotes an angular velocity vector. In one implementation C contains zeroes and ones. Measurements of x and u are represented below in Equation 2. Equation 2 

With respect to Equation 2 above x and u denote any measurement errors based on flight measurement data from the flight measurement block the flight measurement data indicated as and in . In particular sources of measurement error from the flight measurement block include sensor noise and sensor bias. Additional sources of measurement error include without limitation sensor drift sensor dynamics and sensor time delay. From the control surface positions and actual aircraft states provided by the flight measurement block an estimated angular acceleration of the aircraft is calculated in the aircraft model block as illustrated below in Equation 3.

With respect to Equation 3 above J represents an estimate of the inertia matrix represents an estimate of the moments generated by the propulsion system of the aircraft about the center of gravity of the aircraft and represents an estimate of the aerodynamic moments about the center of gravity of the aircraft . In the example embodiment of a value for measured angular acceleration dot over results from differentiating Cxas illustrated below in Equation 4.

With respect to Equation 4 above dot over represents sensor noise. Taking the difference of the measured angular acceleration of the aircraft with the actual angular acceleration of the aircraft results in the error signal e as illustrated below in Equation 5.

Subsequently x u of Equation 5 is considered a trim condition of the aircraft that is f x u 0 . Taking the Taylor series expansion of e about x u and keeping only first order terms results in the expression illustrated below with respect to Equation 6.

The residual band pass filter combines each error signal eto e once filtered in the residual signal multiplexer to create the residual signal . The low pass filter function removes one or more errors due to sensor noise and high frequency un modeled sensor dynamics for example aircraft flexure of the aircraft in all three axes of motion. The high pass filter function removes control surface trim and sensor bias errors in all three axes of motion.

The threshold signal is the tightly bound upper limit of the one or more potential differences between the at least three reference commands rto rand the at least three error signals eto e. When the comparator function determines the residual signal is greater than or equal to the threshold signal the fault signal indicates that a fault has been detected. In one implementation the fault signal equals one when the fault is detected. When the fault signal is equal to one the fault detection module the fault detection block informs the fault isolation block of to estimate a change in H M as discussed above with respect to . When the aircraft of does not experience any faults the residual signal is less than the threshold signal .

For each reference command r received from the flight command block of an upper bound is derived in the threshold function . The upper bound limits a modeling mismatch between estimated that is predictions made by the one or more reference commands r and the non faulted actual aircraft states for example angular acceleration from the aircraft model block . The threshold function tightly bounds the size of the modeling mismatch in order to minimize the number of false alarms that is flagging a fault that has not occurred and the number of missed detections that is not flagging a fault when one has occurred .

The threshold function represents an upper bound of a linear time invariant transfer matrix G s of the at least three reference commands rto rto the residual signal . An impulse response of G s is denoted by g t and g t denotes an irow of G s . An ielement of tilde over e is illustrated below in Equation 7.

With respect to Equation 8 above the threshold function for tilde over e t is graphically depicted in as the absolute measurement functions to the threshold filter functions to and the threshold signal multiplexer . The threshold filter functions to represented as first order filters F s in Equation 9 below tightly bounds tilde over e t . A mathematical model of the first order filters F s is illustrated below with respect to Equation 9.

In one implementation to achieve a particular balance between modeling uncertainty and the number of missed detections T2 seconds for all three axes with respect to Equation 9 above. The selection of filter gains k for the first order filters F along with a suitable model of sensor bias from each of the bias model blocks generates a fault detection classifier for each of the threshold filter functions to . The fault detection classifier separates faulted flight data from non faulted flight data for each axis of motion. The classification of faulted vs. non faulted flight data results in a tunable threshold function .

In the example embodiment of each of the threshold filter functions to classify every flight command dataset from the at least three reference commands rto r using Statistical Learning Theory SLT . Alternate classification methods are possible. SLT allows the threshold function to learn a classifier function y f x that will correctly classify unseen fault examples that is fault samples as an expected risk. The expected risk measures performance of a candidate solution f as illustrated below in Equation 10. Equation 10 

 0 1 P x y represents a probability density function PDF of the filter gains kof the threshold filter functions x and the sensor bias from the bias model blocks y and L is the loss function defined as illustrated below with respect to Equation 11.

Along with calculating the expected risk a risk over each of the flight command datasets or an empirical risk is determined as illustrated below in Equation 12.

In one implementation an empirical risk minimization ERM controls complexity that is capacity of the function of Equation 12 above. In one implementation the classifier function uses a Vapnik Chervonenkis VC dimension to measure complexity. The VC dimension of the classifier f measures the largest number of examples which can be modeled by a family of f. The VC dimension of the function bounds the expected risk of Equation 10 as a function of the empirical risk of Equation 12 and a number of available examples. Moreover a probability 1 illustrates that the expected risk R of classification by the function is upper bounded by the sum of the empirical risk R and a VC confidence function as illustrated in Equation 13 below.

With respect to Equation 13 h is the VC dimension of f N is the number of examples and a second term on the right hand side is the VC confidence function. To reduce the expected risk in classification the classifier minimizes both the empirical risk and the VC confidence using Structural Risk Minimization SRM . As the N h term grows larger the VC confidence term becomes smaller and the expected risk becomes closer to the empirical risk. For a fixed size of the dataset the expected risk is reduced by reducing the VC dimension of the classifier.

The bound on the expected risk is used to estimate a sample size within a prescribed confidence level that is the sample size guarantees a desired degree of confidence in the classification results obtained by f . To estimate the sample size represents an error tolerance between the estimated and empirical risks as illustrated below in Equation 14. sup 1 Equation 14 

With respect to Equation 14 above any classification based on f is with a confidence of 1 correct within a tolerance of . Equation 15 is derived below based on Equations 13 and 14 above.

With the values of and h the threshold function computes the size of each of the flight command datasets represented as N using Equation 15. In the example embodiment of one or more values are used for and for example of the order of 0.01 0.10 . Moreover using 0.1 0.01 and h 3 a VC dimension for a 2 D hyperplane classifier Equation 15 computes the lower bound on N as approximately 3200. Tighter bounds for values of and reduce N by a substantial order of magnitude. In one implementation N that is the flight command dataset is reduced by a factor of 18.

In one implementation a separating hyperplane substantially maximizes a margin that is the distance between the decision surface and the nearest data point of each class for the linearly separable dataset from the viewpoint of SRM. A VC dimension of the separating hyperplane h with margin m bounded is illustrated below in Equation 16.

With respect to Equation 16 above n is the dimensionality of the input space and R is the radius of the smallest hypersphere containing all the input vectors. The fault detection module substantially maximizes the margin m to substantially minimize the VC dimension of the separating hyperplane. In one implementation the separating hyperplane has substantially no empirical error that is the separating hyperplane correctly separates the dataset . By correctly separating each flight command dataset into faulted and non faulted responses the margin is substantially maximized and the upper bound on the expected risk is substantially minimized that is the fault detection classifier provides a statistical guarantee that the threshold function will correctly identify faulted and non faulted flight data .

In one implementation in order to correctly separate the reference command dataset the separating hyperplane involves separating a set of training vectors belonging to two separate classes as illustrated below in Equation 17 with a hyperplane as illustrated below in Equation 18. . . . 1 1 Equation 17 0 Equation 18 

In one implementation the fault detection module includes a canonical hyperplane where the parameters w representing the filter gains kof the threshold functions and b representing the sensor bias of the bias model blocks are constrained as illustrated below in Equation 19. min1 Equation 19 

An optimal separating hyperplane must satisfy the following constraints as illustrated below in Equation 20 with a margin given as illustrated in Equation 21.

Optimizing the dataset of each of the threshold filter functions to is illustrated below in Equations 22 and 23.

With respect to Equation 23 above are Lagrangian multipliers with 0. Casting Equation 23 as a quadratic programming QP problem using a dual formulation is illustrated below in Equation 24.

In one implementation and with respect to Equation 24 above xrepresents a support vector from each class that is fault and non fault data of the flight command dataset and xrepresents a support vector from each class of the sensor bias readings that both satisfy Equation 25 as illustrated below. 0 1 1 Equation 25 

With respect to Equation 25 above a classifier function for the support vectors xand xis illustrated below in Equation 26. Equation 26 

With respect to Equation 26 above w a vector of size 3 represents the optimal gains kfor each of the threshold filter functions to and b a vector of size 3 represents the optimal bias for each of the bias model blocks to . The support vectors xand xclassify the faulted and non faulted flight command data in each of the threshold filter functions to . The fault detection classifier trains that is tunes the threshold function to optimally classify the faulted and non faulted flight data and ignore the non faulted data.

While the methods and techniques described here have been described in the context of a fully functioning simulated aircraft fault detection system apparatus embodying these techniques are capable of being distributed in the form of a computer readable medium of instructions and a variety of forms that apply equally regardless of the particular type of signal bearing media actually used to carry out the distribution. Examples of computer readable media include recordable type media such as a portable memory device a hard disk drive a RAM CD ROMs DVD ROMs and transmission type media such as digital and analog communications links wired or wireless communications links using transmission forms such as for example radio frequency and light wave transmissions. The computer readable media may take the form of coded formats that are decoded for actual use in an aircraft flight system including flight system of .

