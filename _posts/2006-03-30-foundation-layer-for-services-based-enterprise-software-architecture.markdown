---

title: Foundation layer for services based enterprise software architecture
abstract: Methods and apparatus, including systems and computer program products, for a services architecture design that provides enterprise services having foundation layer functionality at the level of an enterprise application. The design includes a set of service operations, process components, and optionally deployment units. Suitable business objects are also described.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08438119&OS=08438119&RS=08438119
owner: SAP AG
number: 08438119
owner_city: Walldorf
owner_country: DE
publication_date: 20060330
---
This specification relates to data processing systems implemented on computers and more particular to data processing systems providing services in the nature of web services.

Enterprise software systems are generally large and complex. Such systems can require many different components distributed across many different hardware platforms possibly in several different geographical locations. Thus the architecture of a large software application i.e. what its components are and how they fit together is an important aspect of its design for a successful implementation.

Web services are one technology for making the functionality of software applications available to other software including other applications. A web service is a standards based way of encapsulating the functionality of an application that other applications can locate and access. A service oriented architecture is a distributed software model within which functionality is defined as independent web services. Within a service oriented architecture web services can be used in defined sequences according to business logic to form applications that enable business processes.

This specification describes the foundation layer for a services architecture design for implementing services based applications having various functionality at the level of an enterprise application.

In its various aspects the invention can be embodied in systems methods and computer program products. For example a system in one embodiment implements a services architecture design that provides foundation layer functionality for enterprise applications. The design includes service operations data objects and process components. Business objects can also be included. Particular embodiments can be replicated and synchronized on multiple computer hardware platforms that are distinct and separate from each other to support a software application deployed in distinct aspects on the separate hardware platforms.

The subject matter described in this specification can be implemented to realize one or more of the following advantages. Effective use is made of process components as units of software reuse to provide a design that can be implemented reliably in a cost effective way. Effective use is made of deployment units each of which is deployable on a separate computer hardware platform independent of every other deployment unit to provide a scalable design. Service interfaces of the process components define a pair wise interaction between pairs of process components that are in different deployment units in a scalable way.

Details of one or more implementations of the subject matter described in this specification are set forth in the accompanying drawings and in the description below. Further features aspects and advantages of the subject matter will become apparent from the description the drawings and the claims.

The elements of the architecture include the business object the process component the service operation or simply the operation the service interface the message and the deployment unit. The elements can also include process agents and reuse service components. These will be generally described below.

In one implementation the application software is implemented to be deployed on an application platform that includes a foundation layer that contains all fundamental entities that can used from multiple deployment units. These entities can be process components business objects and reuse service components. A reuse service component is a piece of software that is reused in different transactions. A reuse service component is used by its defined interfaces which can be e.g. local APIs Application Programming Interfaces or service interfaces.

The elements of the architecture can be implemented to realize a software application that implements enterprise application service interfaces. The elements of the architecture are at times described in this specification as being contained or included in other elements for example a process component is described as being contained in a deployment unit. It should be understood however that such operational inclusion can be realized in a variety of ways and is not limited to a physical inclusion of the entirety of one element in another.

The architectural elements include the business object. A business object is a representation of a type of a uniquely identifiable business entity an object instance described by a structural model. Processes operate on business objects.

A business object represents a specific view on some well defined business content. A business object represents content and instances of business objects include content which a typical business user would expect and understand with little explanation. Whether an object as a type or an instance of an object is intended by the term is generally clear from the context so the distinction will be made explicitly only when necessary. Properly implemented business objects are implemented free of redundancies.

Business objects are further categorized as business process objects master data objects mass data run objects dependent objects and transformed objects. A master data object is an object that encapsulates master data i.e. data that is valid for a period of time . A business process object which is the kind of business object generally found in a process component is an object that encapsulates transactional data i.e. data that is valid for a point in time . A mass data run object is an application object that executes an algorithm for a particular mass data run. An instance of a mass data run object contains a particular set of selections and parameters. A mass data run object implements an algorithm that modifies manages and or processes a large amount of data in multiple transactions possibly but not necessarily with parallel processing. A dependent object is a business object used as a reuse part in another business object. A dependent object represents a concept that cannot stand by itself from a business point of view. Instances of dependent objects only occur in the context of a non dependent business object. A transformed object is a transformation of multiple business objects for a well defined purpose. It transforms the structure of multiple business objects into a common structure. A transformed object does not have own persistency.

The architectural elements also include the process component. A process component is a software package that realizes a business process and generally exposes its functionality as services. The functionality contains business transactions. A process component contains one or more semantically related business objects. Any business object belongs to no more than one process component.

Process components are modular and context independent. That they are context independent means that a process component is not specific to any specific application and is reusable. The process component is the smallest most granular element of reuse in the architecture.

The architectural elements also include the operation. An operation belongs to exactly one process component. A process component generally has multiple operations. Operations can be synchronous or asynchronous corresponding to synchronous or asynchronous process agents which will be described below. An operation is the smallest separately callable function described by a set of data types used as input output and fault parameters or some combination of them serving as a signature. For convenience in supporting use of the operations supported by a system implementing elements of the design such a system can optionally include a repository of service descriptions that includes a standards based description of each of the supported service operations.

The architectural elements also include the service interface which may be referred to simply as an interface. An interface is a named group of operations. Each operation belongs to exactly one interface. An interface belongs to exactly one process component. A process component might contain multiple interfaces. In one implementation an interface contains only inbound or outbound operations but not a mixture of both. One interface can contain both synchronous and asynchronous operations. All operations of the same type either inbound or outbound which belong to the same message choreography will preferably belong to the same interface. Thus generally all outbound operations to the same other process component are in one interface.

The architectural elements also include the message. Operations transmit and receive messages. Any convenient messaging infrastructure can be used. A message is information conveyed from one process component instance to another with the expectation that activity will ensue. An operation can use multiple message types for inbound outbound or error messages. When two process components are in different deployment units invocation of an operation of one process component by the other process component is accomplished by an operation on the other process component sending a message to the first process component.

The architectural elements also include the process agent. Process agents do business processing that involves the sending or receiving of messages. Each operation will generally have at least one associated process agent. A process agent can be associated with one or more operations. Process agents can be either inbound or outbound and either synchronous or asynchronous.

Asynchronous outbound process agents are called after a business object changes e.g. after a create update or delete of a business object instance.

An output process agent will generally perform some processing of the data of the business object instance whose change triggered the event. An outbound agent triggers subsequent business process steps by sending messages using well defined outbound services to another process component which generally will be in another deployment unit or to an external system. An outbound process agent is linked to the one business object that triggers the agent but it is sent not to another business object but rather to another process component. Thus the outbound process agent can be implemented without knowledge of the exact business object design of the recipient process component.

Inbound process agents are called after a message has been received. Inbound process agents are used for the inbound part of a message based communication. An inbound process agent starts the execution of the business process step requested in a message by creating or updating one or multiple business object instances. An inbound process agent is not the agent of a business object but of its process component. An inbound process agent can act on multiple business objects in a process component.

Synchronous agents are used when a process component requires a more or less immediate response from another process component and is waiting for that response to continue its work.

Operations and process components are described in this specification in terms of process agents. However in alternative implementations process components and operations can be implemented without use of agents using other conventional techniques to perform the functions described in this specification.

The architectural elements also include the deployment unit. A deployment unit includes one or more process components and optionally one or more business objects that are deployed together on a single computer system platform. Conversely separate deployment units can be deployed on separate physical computing systems. For this reason a deployment unit boundary defines the limits of an application defined transaction i.e. a set of actions that have the ACID properties of atomicity consistency isolation and durability. To make use of database manager facilities the architecture requires that all operations of such a transaction be performed on one physical database as a consequence the processes of such a transaction must be performed by the process components of one instance of one deployment unit.

The process components of one deployment unit interact with those of another deployment unit using messages passed through one or more data communication networks or other suitable communication channels. Thus a deployment unit deployed on a platform belonging one business can interact with a deployment unit software entity deployed on a separate platform belonging to a different and unrelated business allowing for business to business communication. More than one instance of a given deployment unit can execute at the same time on the same computing system or on separate physical computing systems. This arrangement allows the functionality offered by a deployment unit to be scaled to meet demand by creating as many instances as needed.

Since interaction between deployment units is through service operations a deployment unit can be replaced by other another deployment unit as long as the new deployment unit supports the operations depended upon by other deployment units. Thus while deployment units can depend on the external interfaces of process components in other deployment units deployment units are not dependent on process component interactions i.e. interactions between process components involving their respective business objects operations interfaces and messages within other deployment units. Similarly process components that interact with other process components or external systems only through messages e.g. as sent and received by operations can also be replaced as long as the replacement supports the operations of the original.

Interactions between process components that occur only within a deployment unit are not constrained to using service operations. These can be implemented in any convenient fashion.

In contrast to a deployment unit the foundation layer does not define a limit for application defined transactions. Deployment units communicate directly with entities in the foundation layer which communication is typically not message based. The foundation layer is active in every system instance on which the application is deployed. Business objects in the foundation layer are generally master data objects. In addition the foundation layer may include some business process objects that are used by multiple deployment units. Master data objects and business process objects that should be specific to a deployment unit should be assigned to their respective deployment unit.

The Business Partner Data Processing process component enables a company to manage all business partner data that is relevant to control its business processes such as sales purchasing and accounting processes. The Business Partner Data Processing process component includes a Business Partner master data object an Employee master data object a Clearing House master data object a Payment Card master data object a Customer master data object a Supplier master data object a Tax Authority master data object a House Bank master data object a Sales Arrangement master data object a Procurement Arrangement master data object a Company Tax Arrangement master data object a Payment Agreement master data object and a Party transformed object .

The Business Partner master data object represents a person organization or group of persons in which a company has a business interest. The Employee master data object represents a person who contributes or has contributed to the creation of goods or services for a company. The Clearing House master data object represents an organization which provides the services concerning credit card payments. The Payment Card master data object represents a payment medium. The Customer master data object represents a business partner with whom a business relationship exists. The Supplier master data object represents a business partner who provides materials and or services. The Tax Authority master data object represents a business partner for value added tax declaration. The House Bank master data object represents a business partner providing services for our company such as account management or lock box. The Sales Arrangement master data object represents an arrangement that is made by a sales unit for a customer and is used for sales transactions. The Procurement Arrangement master data object represents an arrangement that is made by a purchasing unit for a supplier and is used for procurement transactions. The Company Tax Arrangement master data object represents a contractual arrangement based on the agreement between a company and a tax authority for a tax type. The Payment Agreement master data object represents the agreement between a company and a business partner concerning the handling of incoming and outgoing payments.

The Organizational Management process component provides central and unified organizational structures of the enterprise and its collaborative partners. The Organizational Management process component includes an Organizational Center master data object a Position master data object a Cost Center master data object a Reporting Line Unit master data object a Company master data object a Production Center master data object a Distribution Center master data object a Permanent Establishment master data object a Sales Unit master data object a Purchasing Unit master data object a Service Unit master data object a Profit Center master data object a Segment master data object and a Program master data object .

The Organizational Center master data object represents a building block of the enterprise model which represents a node in an organizational structure of the extended enterprise. The Position master data object represents an object of the enterprise model representing a specific post in an enterprise that can be occupied by holders and is therefore a placeholder for persons in an organizational structure. The Cost Center master data object represents an organizational unit that represents a defined location of cost incurrence and for which costs are recorded separately. The Reporting Line Unit master data object represents the organizational unit in the personnel reporting line of the enterprise. The Company master data object represents a financially and legally independent locally unbound entity registered under business law. The Production Center master data object represents an organizational unit that is responsible for organizing and executing the delivery processes as well as the processes in site logistics. The Distribution Center master data object represents an organizational unit that is responsible for organizing and executing the processes in production. The Permanent Establishment master data object represents an organizational unit that represents a localized subdivision of a company whose business activities are subject to uniform fiscal treatment. The Sales Unit master data object represents responsible for planning realizing and administering of sales force processes. The Purchasing Unit master data object represents an organizational unit responsible for strategic and operational purchasing. The Service Unit master data object represents the organizational unit responsible for processes covering all aspects of a customer service and a support center s business. The Profit Center master data object represents an organizational section of the enterprise for which a separate period result is determined and used for profit oriented rating or control of the section activities. The Segment master data object represents a business branch of a company for which a closing statement e.g. a financial statement and a profit and loss statement is to be created based on the segment reporting regulations within the context of the particular accounting principle. The Program master data object represents an organizational unit that represents a complex temporary undertaking to achieve subordinate objectives within one overall strategy.

The Product Data Processing process component enables a company to manage all product data that describes its tangible and intangible products and that is relevant to control its business processes such as sales purchasing planning production and accounting processes. The Product Data Processing process component includes a Material master data object a Material Sales Process Control transformed object a Material Inventory Process Control transformed object a Material Availability Confirmation Process Control transformed object a Service Product master data object a Material Procurement Process Control transformed object a Material Delivery Process Control transformed object a Material Financials Process Control transformed object a Warranty master data object a Service Product Sales Process Control transformed object a Service Product Procurement Process Control transformed object a Material Supply Planning Process Control transformed object an Individual Material master data object a Product Category Hierarchy master data object a Warranty Service Process Control transformed object and an Individual Material Sales Process Control transformed object .

The Material master data object represents a tangible product such as a sellable article packaging auxiliary material or expendable supplies. The Material Sales Process Control transformed object represents a material needed to control processes in presales sales and customer service. The Material Inventory Process Control transformed object represents the control features for a material that are used in several logistics processes especially for inventory management. The Material Availability Confirmation Process Control transformed object represents the control features for a material and are used when executing the availability check. The Service Product master data object represents an intangible product such as consulting and hotline service. The Material Procurement Process Control transformed object represents a material that is required to use the material in procurement relevant processes. The Material Delivery Process Control transformed object represents the control features for a material required by the delivery processes in a distribution center. The Material Financials Process Control transformed object represents parameters to control processes in financials applied to a material. The Warranty master data object represents an intangible product such as a warranty for electronic devices and machinery. The Service Product Sales Process Control transformed object represents a service product needed to control processes in presales sales and customer service. The Service Product Procurement Process Control transformed object represents about a service product that is required to use the service product in procurement relevant processes. The Material Supply Planning Process Control transformed object represents the control features for a material that are required to control procurement planning. The Individual Material master data object represents a tangible product. The Product Category Hierarchy master data object represents a hierarchy for structuring product categories. The Warranty Service Process Control transformed object represents a warranty needed to control processes in customer service. The Individual Material Sales Process Control transformed object represents an individual material needed to control processes in presales sales and customer service.

The Resource Data Processing process component . The Resource Data Processing process component includes an Equipment Resource master data object a Vehicle Resource master data object a Labor Resource master data object a Resource Group master data object and a Capacity Aggregation Group master data object . The Equipment Resource master data object represents a permanently installed operating facility or a group of identical operating facilities providing capacity to perform specific services. The Vehicle Resource master data object represents a means of transportation or a group of identical means of transportation providing capacity to perform transportation services. The Labor Resource master data object represents an employee or a group of employees with the same skills and qualifications that provides capacity to operate specific devices or to perform specific tasks. The Resource Group master data object represents a grouping of individual resources that provide similar services or have similar physical and functional characteristics. The Capacity Aggregation Group master data object represents the total of the capacities of several resources that provide identical services and can be used for logistics or production planning and scheduling purposes.

The Location Data Processing process component includes a Location master data object a Transportation Zone master data object a Transportation Lane master data object and a Supply Planning Area master data object . The Location master data object represents a geographical place used for example for communication of place information in business processes. The Transportation Zone master data object represents geographical locations that may be considered collectively for modeling or planning transportation routes or transportations. The Transportation Lane master data object represents a connection between two locations in a supply chain model used for planning cross location product movements. The Supply Planning Area master data object represents groups of requirements stocks and other requirements coverage elements with the purpose of being together taken into account in net requirements calculation of supply planning.

The Logistics Storage Data Processing process component includes a Logistics Area master data object a Source and Destination Determination Rule master data object and a Storage Behavior Method master data object . The Logistics Area master data object represents an object that describes the internal structure of a logistics facility e.g. warehouse or production . The Source and Destination Determination Rule master data object represents a rule to determine the search method for locating the source for stock retrieval or the destination for stock storage. The Storage Behavior Method master data object represents a set of rules distinguished by the manner in which a logistics area or resource is managed e.g. picking area .

The Inspection Master Data Processing process component handles the processing of inspection relevant master data like inspection rules sample drawing procedures and the definition of quality relevant category catalogs. The Inspection Master Data Processing process component includes a Quality Issue Category Catalog master data object a Sample Drawing Procedure master data object and an Inspection Rule master data object . The Quality Issue Category Catalog master data object represents a catalogue of quality issues for the rating of different aspects of quality management e.g. inspection decisions or inspection findings in the quality inspection process . The Sample Drawing Procedure master data object represents how samples are taken for an inspection such as the number quantity and subcategory of samples. The Inspection Rule master data object represents how an inspection of a given object must be performed.

The Business Document Flow Processing process component includes a Business Document Flow transformed object . The Business Document Flow transformed object represents a view on the flow of business transaction documents.

The Document Management process component includes a Document master data object . The Document master data object represents a carrier of electronic information including control and monitoring information.

The Production Model Processing process component combines all the tasks required to maintain master data for the planned production order and the production order. The Production Model Processing process component includes a Production Model master data object a Production Bill of Material master data object a Production Bill of Operations master data object a Released Planning Production Model master data object a Released Execution Production Model master data object A and a Production Segment master data object A. The Production Model master data object represents a model of a production process in a production center that is specified by a network of production segments. The Production Bill of Material master data object represents a complete structured list of the components that make up a product or a family of similar products. The Production Bill of Operations master data object represents a detailed description of how a product is to be produced. The Released Planning Production Model master data object represents a released version of a production model in a production center that contains all details from the production bill of operations and production bill of material necessary for the planning of a production process. The Released Execution Production Model master data object A represents a released version of a production model in a production center that contains all details from the production bill of operations and production bill of material necessary for the execution of a production process. The Production Segment master data object A represents part of a production process in a production center specified by a network of operations and assigned materials for the production of a material.

The Site Logistics Model Processing process component includes a Site Logistics Bill of Operations master data object A a Site Logistics Process Segment master data object A a Site Logistics Process Model master data object A and a Released Site Logistics Process Model master data object A. The Site Logistics Bill of Operations master data object A represents a detailed description of how a product is to be moved packed and otherwise dealt with during site logistics processing. The Site Logistics Process Segment master data object A represents a set of operations for moving packing or checking stock in a logistics division which specifies a segment of a site logistics process. The Site Logistics Process Model master data object A represents a model that defines a logistic process managed by a logistics division by specifying a sequence of process segments. The Released Site Logistics Process Model master data object A represents a structure that defines a logistic process in a logistics division by specifying a sequence of process segments.

The Activity Management process component is used to record public interactions that is activities undertaken on behalf of a company. The Activity Management process component includes a Task business process object A a Phone Call Activity business process object A a Letter Activity business process object A an Appointment Activity business process object A an Email Activity business process object A a Fax Activity process business object A and an Activity transformed object A. The Task business process object A represents a piece of daily business work or a notification about a business event. The Phone Call Activity business process object A represents a type of activity that records telephone interactions that are undertaken by employees on behalf of their company. The Letter Activity business process object A represents a type of activity that records messages written on paper by employees on behalf of their company. The Appointment Activity business process object A represents different types of planned activities that are maintained in an employee s calendar including external appointments and scheduled meetings with other business parties. The Email Activity business process object A represents a type of activity that records messages written on paper by employees on behalf of their company. The Fax Activity process business object A represents a type of activity that records documents or graphics transmitted over a telecommunications facility by employees on behalf of their company. The Activity transformed object A represents an activity that can be performed by employees on behalf of their company.

The Source of Supply Determination process component enables maintenance and access to sources of supply and quota arrangements for external and internal procurement processes. The Source of Supply Determination process component includes a Supply Quota Arrangement master data object A a Source of Supply master data object A and a Sourcing List transformed object A. The Supply Quota Arrangement master data object A represents a distribution of material requirements or goods to different sources of supply business partners or organizational units within ones own company. The Source of Supply master data object A represents an object that describes a logical link between a possible source of products and a possible target. The Sourcing List transformed object A represents supply arrangements and supply sources.

The Software Problem Reporting process component is used for collecting context data in a centric IT solution in case of an incident summarizing these data in a software problem report and sending the report to the appropriate service desk. The Software Problem Reporting process component includes a Software Problem Report business process object A. The Software Problem Report business process object A represents a report about a computer software incident.

The Installed Base Data Processing process component enables a company to manage and structure business objects within installations by their logical or physical location concerning functional aspects. The Installed Base Data Processing process component includes an Installed Base master data object A and an Installation Point master data object A. The Installed Base master data object A represents a container that holds structured information of business components and their compositions as well as their business features. The Installation Point master data object A represents the time dependent assignment of a business component to installed bases.

The Price Master Data Management process component includes a Sales Price Specification master data object A a Sales Price List master data object A and a Procurement Price Specification master data object A. The Sales Price Specification master data object A represents the specification of a price discount or surcharge to be used in sales and service documents. The Sales Price List master data object A represents a list of price specifications with respect to common identifying criteria. The Procurement Price Specification master data object A represents the specification of a price discount or surcharge to be used in procurement documents.

The Identity Management process component includes an Identity master data object A. The Identity master data object A represents a set of attributes identifying a person together with all of his user accounts in a system landscape.

The Pricing Engine process component includes a Price and Tax Calculation dependent object A a Price Calculation dependent object A a Tax Calculation dependent object A and a Price Specification dependent object A. The Price and Tax Calculation dependent object A represents the summarization of the determined and calculated price and tax elements of a business case. The Price Calculation dependent object A represents the summarization of the determined and calculated price elements of a business case. The Tax Calculation dependent object A represents the summarization of the determined and calculated tax elements of a business case. The Price Specification dependent object A represents the specification of a price discount or surcharge to be used in procurement documents.

The Engineering Change Processing process component is the definition and processing of change management parameters for business objects in the product lifecycle phases engineering and manufacturing. The Engineering Change Processing process component includes an Engineering Change Order business process object A. The Engineering Change Order business process object A represents an object that controls the alteration of different objects over time and their usage by means of other parameters.

The Financial Market Data Management process component integrates all data and activities concerning financial market data provided by generally accepted agencies. The Financial Market Data Management process component includes an Exchange Rate master data object A and a Bank Directory Entry master data object A. The Exchange Rate master data object A represents the relative value of two different currencies for a time span. The Bank Directory Entry master data object A represents a bank or institution capable of performing financial transactions.

As shown in the Foundation Layer also includes a Used Address transformed object A a Change Document business process object A a Logistic Unit master data object A a Logistic Unit Usage master data object A a Logistics Task Folder master data object A a Service Issue Category Catalog master data object A an Output Request business process object A a Packing Bill of Material master data object A a Supply Planning Exception View transformed object A an Incident Context dependent object A a Payment Explanation dependent object A an Accounting Coding Block Distribution dependent object A a Financial Audit Trail Documentation dependent object A an Address dependent object A a Storage Control dependent object A a Payment Control dependent object A a Market Segment dependent object A a Cash Discount Terms dependent object A an Attachment Folder dependent object A a Text Collection dependent object A a Product Requirement Specification business process object A a Controlled Output Request transformed object A a Customer VAT Value Added Tax Exemption Arrangement business process object A an Identified Stock master data object A and a Key Performance Indicator master data object A.

The Used Address transformed object A represents the address data e.g. the addressee postal address and communication connections used in a business transaction. The Logistic Unit master data object A represents an object that represents an item of any composition which is used for storage movement and packing. The Logistic Unit Usage master data object A represents an object that represents a logistics purpose for which logistic units are grouped. The Logistics Task Folder master data object A represents the local work organization on the shop floor. The Service Issue Category Catalog master data object A represents a structured directory of issue categories that describe business transactions in customer service from an objective or subjective point of view. The Packing Bill of Material master data object A represents a complete and structured list of components that defines the packing structure of logistic units. The Supply Planning Exception View transformed object A represents an unsolved or incorrect planning situation. The Incident Context dependent object A represents structured information about the status of the source system where an incident is reported. The Payment Explanation dependent object A represents the explanation of a payment amount with regard to one or more business documents e.g. invoices or orders . The Accounting Coding Block Distribution dependent object A represents the distribution of coding blocks to enterprise resources changes such as expenses or material movements. The Financial Audit Trail Documentation dependent object A represents the uniform documentation of a business transaction in terms of an operational component. The Address dependent object A represents the data that describes the addressee postal address and communication connections. The Storage Control dependent object A represents the data that describes addressee postal address and communication connections. The Payment Control dependent object A represents a storage related behavior scheme that specifies storage state set of rules and required actions. The Market Segment dependent object A represents a homogeneous submarket of the total market it contains characteristics of customer product region and organizational classification. The Cash Discount Terms dependent object A represents the modalities agreed upon between business partners for the payment of goods delivered or services provided. The Attachment Folder dependent object A represents a collection of all related documents for an arbitrary business object node. The Text Collection dependent object A represents a set of all multilingual textual descriptions including formatting information for a business object or a part of a business object.

As shown in the Foundation Layer can be deployed on multiple separate and distinct hardware platforms e.g. System A and System B to support application software deployed as two or more deployment units distributed on the platforms including deployment unit deployed on System A and deployment unit deployed on System B. As explained above process components in separate deployment units interact through service operations as illustrated by messages passing between service operations and which are implemented in process components and respectively which are included in deployment units and respectively. As also explained above some form of direct communication is generally the form of interaction used between a business object e.g. business object and of an application deployment unit and a business object e.g. master data object of the Foundation Layer .

The subject matter described in this specification and all of the functional operations described in this specification can be implemented in digital electronic circuitry or in computer software firmware or hardware including the structural means disclosed in this specification and structural equivalents thereof or in combinations of them. The subject matter described in this specification can be implemented as one or more computer program products i.e. one or more computer programs tangibly embodied in an information carrier e.g. in a machine readable storage device or in a propagated signal for execution by or to control the operation of data processing apparatus e.g. a programmable processor a computer or multiple computers. A computer program also known as a program software software application or code can be written in any form of programming language including compiled or interpreted languages and it can be deployed in any form including as a stand alone program or as a module component subroutine or other unit suitable for use in a computing environment. A computer program does not necessarily correspond to a file. A program can be stored in a portion of a file that holds other programs or data in a single file dedicated to the program in question or in multiple coordinated files e.g. files that store one or more modules sub programs or portions of code . A computer program can be deployed to be executed on one computer or on multiple computers at one site or distributed across multiple sites and interconnected by a communication network.

The processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform functions by operating on input data and generating output. The processes and logic flows can also be performed by and apparatus can also be implemented as special purpose logic circuitry e.g. an FPGA field programmable gate array or an ASIC application specific integrated circuit .

Processors suitable for the execution of a computer program include by way of example both general and special purpose microprocessors and any one or more processors of any kind of digital computer. Generally a processor will receive instructions and data from a read only memory or a random access memory or both. The essential elements of a computer are a processor for executing instructions and one or more memory devices for storing instructions and data. Generally a computer will also include or be operatively coupled to receive data from or transfer data to or both one or more mass storage devices for storing data e.g. magnetic magneto optical disks or optical disks. Information carriers suitable for embodying computer program instructions and data include all forms of non volatile memory including by way of example semiconductor memory devices e.g. EPROM EEPROM and flash memory devices magnetic disks e.g. internal hard disks or removable disks magneto optical disks and CD ROM and DVD ROM disks. The processor and the memory can be supplemented by or incorporated in special purpose logic circuitry.

To provide for interaction with a user the subject matter described in this specification can be implemented on a computer having a display device e.g. a CRT cathode ray tube or LCD liquid crystal display monitor for displaying information to the user and a keyboard and a pointing device e.g. a mouse or a trackball by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well for example feedback provided to the user can be any form of sensory feedback e.g. visual feedback auditory feedback or tactile feedback and input from the user can be received in any form including acoustic speech or tactile input.

The subject matter described in this specification can be implemented in a computing system that includes a back end component e.g. a data server a middleware component e.g. an application server or a front end component e.g. a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described herein or any combination of such back end middleware and front end components. The components of the system can be interconnected by any form or medium of digital data communication e.g. a communication network. Examples of communication networks include a local area network LAN and a wide area network WAN e.g. the Internet.

The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client server relationship to each other.

While this specification contains many specifics these should not be construed as limitations on the scope of the invention or of what may be claimed but rather as an exemplification of preferred embodiments of the invention. Certain features that are described in this specification in the context of separate embodiments may also be provided in combination in a single embodiment. Conversely various features that are described in the context of a single embodiment may also be provided in multiple embodiments separately or in any suitable subcombination. Moreover although features may be described above as acting in certain combinations and even initially claimed as such one or more features from a claimed combination can in some cases be excised from the combination and the claimed combination may be directed to a subcombination or variation of a subcombination.

The subject matter has been described in terms of particular variations but other variations can be implemented and are within the scope of the following claims. For example the actions recited in the claims can be performed in a different order and still achieve desirable results. As one example the processes depicted in the accompanying figures do not necessarily require the particular order shown or sequential order to achieve desirable results. In certain implementations multitasking and parallel processing may be advantageous. Other variations are within the scope of the following claims.

