---

title: Method and system for centralized user notification and application execution control
abstract: A method for providing application-defined notifications to a user upon receipt of an event at a device is provided. A list of applications is centrally maintained, the list defining, for each application, event identification and corresponding event notification. Whenever an event is received and identified, the corresponding event notification for the event identification is dispatched to the user.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08082292&OS=08082292&RS=08082292
owner: Research In Motion Limited
number: 08082292
owner_city: Waterloo, Ontario
owner_country: CA
publication_date: 20060418
---
This application is based on and claims benefit of 35 U.S.C. 119 e of Provisional Patent Application No. 60 672 090 filed Apr. 18 2005 which is hereby incorporated by reference.

The present application relates to management of event notifications in a runtime environment. More specifically it relates to a method and system for centralized management of application defined user notifications.

For wireless devices that interact through an event based mechanism whenever an event occurs for which the user s input is required in order to execute an action the user must be notified of the event and provided with execution options. Events are linked to applications such that on a specific event occurrence a particular application will be responsible for carrying out a response such as executing an appropriate action.

Current systems support applications that contain individually built and maintained user notification processes. The concept of applications requiring user notifications can be found in all of mobile non mobile wireless non wireless systems. For non handheld systems Microsoft Outlook is an example of application with user notifications. For handheld devices there can be other custom built applications by the vendor. Unfortunately the systems themselves do not provide any means by which application defined notifications to the user can be centrally maintained dispatched and controlled.

Some of the drawbacks of current systems are that each application has to individually design and implement its own event capture and user notification mechanisms and the application has to be running in order to capture the event and notify the user.

According to a broad aspect there is provided a method for providing application defined notifications to a user upon receipt of an event at a device comprising centrally maintaining a list of applications the list defining for each application event identification and corresponding event notification receiving an event comprising event identification and centrally dispatching to the user the corresponding event notification for the event identification.

According to another broad aspect there is provided a system for providing application defined event notifications to a user upon receipt of an event at a device. The system comprises a communication module for receiving the event an event processor module for determining event identification information from the event a storage module for storing event identification for registered applications and event notification corresponding thereto and a control module for receiving the event identification from the event processor module retrieving the event notification from the storage module and providing the event notification to the user.

Referring to a network system comprises mobile communication devices A B C for interacting with one or more backend data sources e.g. a schema based service such as web services or database that provides enterprise services used by an application via a wireless network coupled to an application gateway . The devices A B C are devices such as but not limited to mobile telephones PDAs two way pagers dual mode communication devices. The network can also have desktop computers not shown coupled though a local area network. The devices A B C and desktop computers of the network are hereafter referred to as the devices for the sake of simplicity. It is recognized that the application gateway and data sources can be linked via extranets e.g. the Internet and or intranets as is known in the art. The application gateway handles request response messages initiated by the applications on the devices as well as subscription notifications pushed to the devices from the data sources . The Application Gateway can function as a Data Mapping Server for mediating messaging between a client runtime environment RE on the device and a backend server of the data sources . The Runtime Environment RE is an intelligent container that executes application components and provides common services as needed for execution of the applications. The application gateway can provide for asynchronous messaging for the applications and can integrate and communicate with legacy back end data sources . The devices transmit and receive wireless component applications as further described below when in communication with the data sources via the Application Gateway as well as transmit receive messaging associated with operation of the applications. The devices can operate as web clients of the data sources and through execution of the applications when provisioned on respective runtime environments RE of the devices .

For satisfying the appropriate messaging associated with the applications the application gateway communicates with the data sources and through various protocols such as but not limited to HyperText Transfer Protocol HTTP Standard Query Language SQL and component Application Programming Interface API for exposing relevant business logic methods to the applications once provisioned on the devices . The applications can use the business logic of the data sources and similarly to calling a method on an object or a function . It is recognized that the applications can be downloaded uploaded in relation to data sources via the network and application gateway directly to the devices . For example the application gateway is coupled to a provisioning server and a discovery server for providing a mechanism for optimized over the air provisioning of the applications including capabilities for application discovery from the device as listed in a Universal Description Discovery and Integration UDDI for example registry . In an embodiment the devices need not be in communication with data sources to download an application it need only be in communication with the application gateway . The registry can be part of the discovery service implemented by the server and the registry is used for publishing the applications. The application information in the registry can contain such as but not limited to a Deployment Descriptor DD contains information such as application name version and description as well as the location of this application in an application repository .

Now with respect to which is an application runtime environment upon receipt of an event according to an embodiment a system and method for providing centralized user notification and application execution control will be described. The system container provides a system level service which at the time of installation of each application registers a plurality of events supported by the application and associated user notifications desired by the application. Alternatively an application may cause registration or unregistration of events when it is run.

It is to be noted that some events like low memory are generic to the system and shared by all applications. Others like an incoming message for an application are unique to an application. If the event is generic to the system it is assigned an identification by the system. In a sample implementation the event identification can be obtained by applications via the control centre or event processor. Multiple applications can register a custom notification to be dispatched for the same event. In the case of a unique event like an incoming message the application would only specify the message it is registering as an event. The translation from to event identification is still performed by the system say the event processor module. This way when the message arrives the event processor can appropriately translate the application and message IDs from the message to the same event ID.

An example of an event is an incoming message for an application. In one embodiment inbound and outbound messaging for an application is also controlled by the system level container . The message is received at a communication event listener module . Since all applications use the same centralized communication module all received messages have the same message structure. The communication module is therefore able to recognize the format of an incoming message and extract an identification of the application for which the message is destined APP ID and an identification code of the message itself MESSAGE ID . The communication module sends the information to the event processor module . The event processor module translates information to an .

In one embodiment whenever there is a registered listener for an incoming event the event processor module provides the event identification and the application identification to a control center .

The control center has access to a list of applications a set of event identifications and corresponding application defined notifications for each of the events. Applications and which will be referred to hereinafter as applications register with the control center as listening for a particular event or a plurality of events. In one embodiment the event identification and the corresponding event notification are stored as a mapping table . The mapping table allows to retrieve given an event ID the APP ID and the corresponding event notification .

Registration therefore includes the step of adding an event for the applications to the mapping table of the system container and associating the event with a corresponding event notification . At the time of registration the corresponding event notification is also defined. The notification properties can include but are not limited to i should the notification be dispatched if the application is running as the foreground application ii should the notification be dispatched if the application is running but not as the foreground application iii should the notification be dispatched if the application is not running iv if dispatched when the application is not running should the notification give the user the option to start the application and v the presentation properties of the notification i.e. should it cause the device to emit a sound e.g. to beep display an indicator next to the application s name icon on the device s home screen display a dialog with some custom message etc.

Event notifications may be dispatched even when a particular application is not running as the notification may give the user the option of starting the application . In the case of an incoming message the message may provide new data to the application or it may be an information request. If the application is not running when a particular message arrives the user still needs to be notified in order to take appropriate action e.g. view the new data or send the requested information. In one embodiment event related notifications for an application may be ignored if the application is running in the foreground as the message will be processed and the result will be visible to the user immediately.

Similarly the control center dispatching the notification may choose to ignore some of the presentation properties of the notification . For example if a notification containing both beep and display dialog properties is to be dispatched when an application is running in the foreground the beep property may be ignored.

In the particular embodiment described the event processor module passes the to the control centre which can look up the associated notification s . The event processor module does not need to provide the information as this will be available to the control centre from its mapping table .

The control centre handles installation upgrade deletion of applications. More specifically the control centre provides a lifecycle management service including event notification dispatching and application execution control. In one embodiment the communication messaging module can interact directly with the control center in order to provide message related event information. The control center translates to a specific event type and dispatches the associated notification. If the application is not running and the user elects to start the application as a result of the notification it is the lifecycle service of the control center that will start the application.

Alternatively the event processor module dispatches the associated notification s if any instead of requiring the control centre to do so. If the application is not running and the user elects to start the application as a result of the notification the event processor module will provide the control centre with the and request it to start the associated application.

In an embodiment the communication module the event processor module and the control centre module are part of the same container referred to herein as the system container . Applications when running run in their own separate containers. However an application container can still interact with the system container which enables it to use centralized services such as the communication module etc.

For a wireless handheld device examples of user notifications are beeping vibration display of a dialog with text appearance or modification of an icon on the main screen or a combination of these.

A user receives the appropriate event notification and can ignore it or respond with an action. For example a displayed dialog box can contain an option to start a specific application. If the user chooses to start the application the action is received by the control center of the application container that dispatched the notification. The control center then places an action request to start the appropriate application.

Another example of an event is a transition of the system to a low memory state triggered upon creation and storage of new data by the user . An application can define a notification for this event containing options for data deletion in order to free up memory. Based on the action chosen by the user the control center can request the application to perform data cleaning operations.

Yet another example of an event can be the transition of the system to an out of coverage area. For example a chat application that is running on the device at the time that an out of coverage event is received can notify the user with a custom message that the chat conversation will be interrupted. When the device returns to a coverage area the application will notify the user that the conversation can be resumed. If the chat application is no longer running at that time the user may have the option of starting the application.

Yet another example of an event is a low battery notification. All wireless devices generally have a warning system to notify the user when battery resources are running low. With an event an application can customize its warning to the user . Only specific applications would care about losing data and would only want to dispatch a warning if the application is running. The user might be given the option of saving specific data messages before the battery is completely depleted.

Now with respect to the method for providing application defined event notifications upon receipt of an event at a device according to an embodiment will be described. In a first step a list of applications defining event identifications and corresponding event notifications are centrally maintained. In a next step an event is received comprising an event identification. Finally in step the corresponding event notification for the event identification is centrally dispatched to a user.

While illustrated in the block diagrams as groups of discrete components communicating with each other via distinct data signal connections it will be understood by those skilled in the art that the embodiments are provided by a combination of hardware and software components with some components being implemented by a given function or operation of a hardware or software system and many of the data paths illustrated being implemented by data communication within a computer application or operating system. The structure illustrated is thus provided for efficiency of teaching the present embodiment.

It should be noted that the present invention can be carried out as a method can be embodied in a system a computer readable medium or an electrical or electro magnetical signal.

It will be understood that numerous modifications thereto will appear to those skilled in the art. Accordingly the above description and accompanying drawings should be taken as illustrative and not in a limiting sense. It will further be understood that it is intended to cover any variations uses or adaptations following in general the principles of the application and including such departures from the present disclosure as come within known or customary practice within the art to which the application pertains and as may be applied to the essential features herein before set forth and as follows in the scope of the appended claims.

