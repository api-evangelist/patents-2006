---

title: Scalable transformation and configuration of EDI interchanges
abstract: Transforming one or more of a collection of electronic data interchange (EDI) transactions. A type of EDI transactions is identified to be transformed from a source format to a destination format. The collection of the EDI transactions is received according to the source format. A particular one or more of the collection of the EDI transactions is identified corresponding to the identified type of EDI transactions. A transformation map is defined to transform the identified particular one or more of the transactions from the source format to the destination format. The identified particular one or more transactions is transformed according to the defined transformation map.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07703099&OS=07703099&RS=07703099
owner: Microsoft Corporation
number: 07703099
owner_city: Redmond
owner_country: US
publication_date: 20060224
---
Electronic data interchange EDI is one of the ways businesses use for exchanging computer to computer business information based on approved formatting standards and schemas. For example millions of companies around the world transmit data associated with business transactions e.g. purchase orders shipping air bills invoices or the like using EDI to conduct commerce.

In a typical EDI transaction model a large business entity or an EDI integration broker trades with numerous partners and has the technical capability to handle numerous EDI transaction data in various EDI formats and schemas. These large business entities also known as hubs transact with one or more suppliers also known as spokes . Each of the spokes typically is a relatively small business entity that is only capable of dealing with one hub.

Frequently EDI documents are exchanged in batches between the hub and the spokes and each batch may include multiple types or a collection of business documents. For example the batch of EDI documents from the hub to the spokes may include purchase order payment advice return material notifications etc.

Trading parties also may modify the EDI formats and consequently the schemas associated with the EDI documents during their course of conducting business to serve their business and integration needs. After such modification business entities frequently use an EDI transformation system to transform EDI data or EDI messages formatted from the previous schema to the modified schema.

In transforming EDI transaction data formatted according to previous or old EDI schemas EDI transformation systems e.g. systems using XSLT typically perform a transformation of all EDI transaction data from the previous EDI schemas to the new EDI formats. As such such systems load the EDI message which includes a batched transaction data with a size of 30 to 40 MB in a memory storage area for the transformation to take place. This transformation thus unnecessarily poses a limit on the size of documents that can be loaded without compromising performance significantly. In addition for the spokes that lack advanced processing equipment to handle such transformation efficiently existing transformation method places heavy burden on the transformation performance and resources of the spokes.

Embodiments of the invention overcome the shortcomings of the existing technology by transforming one or more particular transactions from a collection of EDI transactions. Embodiments of the invention selectively identify parts of the EDI message and transform only those EDI transactions that need to be transformed. Using the example above embodiments of the invention enable the hub to transform update the return material notification while processing the other transaction types while loading into the transform routine.

This summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used as an aid in determining the scope of the claimed subject matter.

Referring first to a block diagram illustrates a system for conducting electronic data interchange EDI transactions according to an embodiment of the invention. The system includes a hub linked to and communicating with one or more spokes . In one embodiment the hub includes a server computer or a computing device serving one or more processors e.g. processor or processing units for executing computer executable instructions for serving the spokes . In one example the spokes include a computing device having one or more components included in or coupled with a computer as shown in .

In one example the hub also includes a memory area for storing one or more EDI schemas such as an EDI schema . Initially the hub and the spokes establish agreements as to the EDI formats or standards to be used for transmitting transaction data there between. Once the parties determine the particular EDI formats or standards to use the hub selects the appropriate EDI schemas to be transmitted to the spokes . In another example the hub may choose to select all EDI schemas for all types of transactions such as purchase orders bills of lading invoices payrolls or the like to the spokes . Although the communications between the hub and the spokes can be a private or public communications network a wired or wireless network the spokes typically lack the hardware resources to handle large amount of EDI schemas sent from the hub . In addition the type and bandwidth of computing network communications for the spokes are not equipped to handle such demand imposed by the thousands of EDI schemas which can reach several Gigabytes in data size.

Referring now to a block diagram depicts a system for transforming one or more of a collection of EDI transactions according to an embodiment of the invention. In this example a computing device has a processor executing computer executable instructions. A collection of EDI transactions is transmitted to the computing device through an interface e.g. a communications network interface . In one embodiment the collection of EDI transactions may be streamed via a common communications network either wired or wireless from one or more sources such as the spokes . In another embodiment the collection of transactions may be stored in a data store not shown coupled with the computing device such that the processor may access the collection of EDI transactions .

Initially a trading partner at a destination device may wish to modify a type of EDI transactions such as a purchase order type. For example the trading partner may discover that it needs to insert a delimiter symbol such as an asterisk at the end of each purchase order transactions. As such the trading partner needs to inform the computing device of such change otherwise the destination device of the trading partner would invalidate all purchase order transactions from the computing device because they fail to conform to the new format.

As such the trading partner may communicate such desired change via regular communications channels such as electronic mail telephone or the like so that the existing purchase order transactions may be transformed. In one embodiment the trading partner and the computing device may electronically communicate such modification via EDI so that the processor at the computing device can automatically transform the EDI transactions. In another embodiment a user accessing the computing device may manually configure the modification via a user interface UI .

Once a type of EDI transactions is identified the processor receives the collection of the EDI transactions according to the source format. For example the source format may be an existing EDI format that the trading parties may have already agreed upon. As discussed above the processor may receive the EDI transactions from the source or the data store. Upon receiving the collection of the EDI transactions the processor identifies a particular one or more of the collection of the EDI transactions corresponding to the identified type of EDI transactions. Using the purchase order example above the processor identifies the particular type i.e. purchase order transactions from the collection of EDI transactions .

Embodiments of the invention identify a particular set or a portion of the entire collection of the EDI transactions for transformation. As such the time and resources spent on processing transformation or modification to EDI transactions is greatly reduced. In contrast in existing systems all transactions in the collection of EDI transactions will go through a transformation process even though the transformation rules or instructions do not apply to some or most of the transactions.

After the processor identifies the particular one or more transactions from the collection of EDI transactions the processor defines a transformation map to transform the identified particular one or more of the transactions from the source format to the destination format. For example the destination format may be a new format that is different from the source format. In this example the destination format may include an extra character such as at the end of every invoice type of EDI transactions between the trading partners. For example the transformation map may include computer executable instructions codes routines or functions for transforming the identified particular transactions.

In one example the transformation map includes information relating to a change in date format from DDMMYYYY to MMDDYYY . In another example the transformation map may include information relating to changes in unit of measure for ordered items e.g. ponds lbs to kilograms kg in the purchase order type of transactions. As such by using this defined transformation map embodiments of the invention apply the desired transformation or modification inside any existing mapping routines to update the Date and or Unit of Measurement per the destination party requirements. The processor next transforms the identified particular one or more transactions according to the defined transformation map .

In an alternative embodiment the processor transmits a collection of transformed EDI transactions to the trading partner with the remaining untransformed transactions of the collection of EDI transactions as one EDI message to the destination device of the trading partner . In another embodiment the processor during the transformation modifies one or more delimiters delimiting the collection of the EDI transactions .

In one example suppose all the incoming EDI transactions include a symbol as the segment delimiter. During the transformation the processor may modify such delimiter to the return material authorization by inserting the symbol after characters such as CR and LF characters.

In yet another alternative embodiment the processor automatically modifies segment counts in response to transforming of the particular one or more transactions. For example the purchase order EDI transaction type sometimes includes a currency segment identifier CUR which is unacceptable to a processing or consuming application. As such the processor modifies the purchase order transaction by deleting the segment identifier and the segment totals is updated in the footer section of the EDI document.

In yet another alternative embodiment the transformation map includes one or more re usable configuration units in the transformation map for transforming the particular one or more transactions. For example suppose a purchase order document includes a re useable configuration unit for a specific value of the destination. The transformation map may during the transformation define such configuration unit and the processor would transform the value by performing the following routine 

By selectively transform the particular type of transactions from the collection of EDI transactions embodiments of the invention efficiently process transformation or modification of transactions from a source or an older format to a destination or a new format without demanding additional resources such as memory and processing power.

Referring now to a block diagram illustrates an exemplary computer readable medium on which aspects of the invention may be stored. In one example one or more computer readable media such as the computer readable medium execute computer executable components to implement the method illustrated in which is an exemplary flow chart illustrating operation of transforming one or more of a collection of EDI transactions according to an embodiment of the invention.

Initially a memory component stores the collection of EDI transactions. At a transaction component identifies a type of EDI transactions to be modified from a source format to a destination format. An interface component receives the collection of the EDI transactions according to the source format at . At a selector component identifies a particular one or more of the collection of the EDI transactions corresponding to the identified type of EDI transactions. At a map component defines a map e.g. transformation map to modify or transform the identified particular one or more of the transactions from the source format to the destination format. At a modifier component modifies or transforms the identified particular one or more transactions according to the defined map. In an alternative embodiment a user interface UI either visually or audibly provides the EDI transactions to a user such as user .

In operation embodiments of the invention may be implemented according to the following illustration. Suppose a spoke transmits a plurality of EDI transactions to a hub the plurality of EDI transactions includes transactions such as purchase order shipping bills invoices or the like. Without the knowledge of the spoke the hub has modified its invoice processing software and the new invoice processing software requires that all invoice transaction data transmitted via EDI must end with a plus symbol .

Instead of request the spoke to retransmit the plurality of EDI transactions the hub apply aspects of the invention by identifying a particular one or more of the collection of the EDI transactions received by the hub corresponding to the identified type of EDI transactions. In this scenario the identified type of EDI transactions is the invoice type. Even though the EDI message from the spoke includes many other types of EDI transactions embodiments of the invention identify the particular i.e. invoice type one or more of the EDI transactions. The hub next defines a transformation map to transform the identified particular one or more of the transactions from the source format to the destination format. In this illustration the transformation map indicates that all invoice transaction data need to end with a symbol. With the transformation map the hub transforms the identified particular one or more transactions according to the defined transformation map such that the EDI transaction data including the newly transformed invoice type of EDI transaction transmitted from the spoke is efficiently processed.

The computer typically has at least some form of computer readable media. Computer readable media which include both volatile and nonvolatile media removable and non removable media may be any available medium that may be accessed by computer . By way of example and not limitation computer readable media comprise computer storage media and communication media. Computer storage media include volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. For example computer storage media include RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical disk storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium that may be used to store the desired information and that may be accessed by computer . Communication media typically embody computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and include any information delivery media. Those skilled in the art are familiar with the modulated data signal which has one or more of its characteristics set or changed in such a manner as to encode information in the signal. Wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media are examples of communication media. Combinations of any of the above are also included within the scope of computer readable media.

The system memory includes computer storage media in the form of removable and or non removable volatile and or nonvolatile memory. In the illustrated embodiment system memory includes read only memory ROM and random access memory RAM . A basic input output system BIOS containing the basic routines that help to transfer information between elements within computer such as during start up is typically stored in ROM . RAM typically contains data and or program modules that are immediately accessible to and or presently being operated on by processing unit . By way of example and not limitation illustrates operating system application programs other program modules and program data .

The computer may also include other removable non removable volatile nonvolatile computer storage media. For example illustrates a hard disk drive that reads from or writes to non removable nonvolatile magnetic media. also shows a magnetic disk drive that reads from or writes to a removable nonvolatile magnetic disk and an optical disk drive that reads from or writes to a removable nonvolatile optical disk such as a CD ROM or other optical media. Other removable non removable volatile nonvolatile computer storage media that may be used in the exemplary operating environment include but are not limited to magnetic tape cassettes flash memory cards digital versatile disks digital video tape solid state RAM solid state ROM and the like. The hard disk drive and magnetic disk drive and optical disk drive are typically connected to the system bus by a non volatile memory interface such as interface .

The drives or other mass storage devices and their associated computer storage media discussed above and illustrated in provide storage of computer readable instructions data structures program modules and other data for the computer . In for example hard disk drive is illustrated as storing operating system application programs other program modules and program data . Note that these components may either be the same as or different from operating system application programs other program modules and program data . Operating system application programs other program modules and program data are given different numbers here to illustrate that at a minimum they are different copies.

A user may enter commands and information into computer through input devices or user interface selection devices such as a keyboard and a pointing device e.g. a mouse trackball pen or touch pad . Other input devices not shown may include a microphone joystick game pad satellite dish scanner or the like. These and other input devices are connected to processing unit through a user input interface that is coupled to system bus but may be connected by other interface and bus structures such as a parallel port game port or a Universal Serial Bus USB . A monitor or other type of display device is also connected to system bus via an interface such as a video interface . In addition to the monitor computers often include other peripheral output devices not shown such as a printer and speakers which may be connected through an output peripheral interface not shown .

The computer may operate in a networked environment using logical connections to one or more remote computers such as a remote computer . The remote computer may be a personal computer a server a router a network PC a peer device or other common network node and typically includes many or all of the elements described above relative to computer . The logical connections depicted in include a local area network LAN and a wide area network WAN but may also include other networks. LAN and or WAN may be a wired network a wireless network a combination thereof and so on. Such networking environments are commonplace in offices enterprise wide computer networks intranets and global computer networks e.g. the Internet .

When used in a local area networking environment computer is connected to the LAN through a network interface or adapter . When used in a wide area networking environment computer typically includes a modem or other means for establishing communications over the WAN such as the Internet. The modem which may be internal or external is connected to system bus via the user input interface or other appropriate mechanism. In a networked environment program modules depicted relative to computer or portions thereof may be stored in a remote memory storage device not shown . By way of example and not limitation illustrates remote application programs as residing on the memory device. The network connections shown are exemplary and other means of establishing a communications link between the computers may be used.

Generally the data processors of computer are programmed by means of instructions stored at different times in the various computer readable storage media of the computer. Programs and operating systems are typically distributed for example on floppy disks or CD ROMs. From there they are installed or loaded into the secondary memory of a computer. At execution they are loaded at least partially into the computer s primary electronic memory. Aspects of the invention described herein includes these and other various types of computer readable storage media when such media contain instructions or programs for implementing the steps described below in conjunction with a microprocessor or other data processor. Further aspects of the invention include the computer itself when programmed according to the methods and techniques described herein.

For purposes of illustration programs and other executable program components such as the operating system are illustrated herein as discrete blocks. It is recognized however that such programs and components reside at various times in different storage components of the computer and are executed by the data processor s of the computer.

Although described in connection with an exemplary computing system environment including computer embodiments of the invention are operational with numerous other general purpose or special purpose computing system environments or configurations. The computing system environment is not intended to suggest any limitation as to the scope of use or functionality of any aspect of the invention. Moreover the computing system environment should not be interpreted as having any dependency or requirement relating to any one or combination of components illustrated in the exemplary operating environment. Examples of well known computing systems environments and or configurations that may be suitable for use with aspects of the invention include but are not limited to personal computers server computers hand held or laptop devices multiprocessor systems microprocessor based systems set top boxes programmable consumer electronics mobile telephones network PCs minicomputers mainframe computers distributed computing environments that include any of the above systems or devices and the like.

Embodiments of the invention may be described in the general context of computer executable instructions such as program modules executed by one or more computers or other devices. Generally program modules include but are not limited to routines programs objects components and data structures that perform particular tasks or implement particular abstract data types. Aspects of the invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules may be located in both local and remote computer storage media including memory storage devices.

An interface in the context of a software architecture includes a software module component code portion or other sequence of computer executable instructions. The interface includes for example a first module accessing a second module to perform computing tasks on behalf of the first module. The first and second modules include in one example application programming interfaces APIs such as provided by operating systems component object model COM interfaces e.g. for peer to peer application communication and extensible markup language metadata interchange format XMI interfaces e.g. for communication between web services .

The interface may be a tightly coupled synchronous implementation such as in Java 2 Platform Enterprise Edition J2EE COM or distributed COM DCOM examples. Alternatively or in addition the interface may be a loosely coupled asynchronous implementation such as in a web service e.g. using the simple object access protocol . In general the interface includes any combination of the following characteristics tightly coupled loosely coupled synchronous and asynchronous. Further the interface may conform to a standard protocol a proprietary protocol or any combination of standard and proprietary protocols.

The interfaces described herein may all be part of a single interface or may be implemented as separate interfaces or any combination therein. The interfaces may execute locally or remotely to provide functionality. Further the interfaces may include additional or less functionality than illustrated or described herein.

In operation computer executes computer executable instructions such as those illustrated in the figures such as to implement aspects of the invention.

The order of execution or performance of the operations in embodiments of the invention illustrated and described herein is not essential unless otherwise specified. That is the operations may be performed in any order unless otherwise specified and embodiments of the invention may include additional or fewer operations than those disclosed herein. For example it is contemplated that executing or performing a particular operation before contemporaneously with or after another operation is within the scope of aspects of the invention.

Embodiments of the invention may be implemented with computer executable instructions. The computer executable instructions may be organized into one or more computer executable components or modules. Aspects of the invention may be implemented with any number and organization of such components or modules. For example aspects of the invention are not limited to the specific computer executable instructions or the specific components or modules illustrated in the figures and described herein. Other embodiments of the invention may include different computer executable instructions or components having more or less functionality than illustrated and described herein.

When introducing elements of aspects of the invention or the embodiments thereof the articles a an the and said are intended to mean that there are one or more of the elements. The terms comprising including and having are intended to be inclusive and mean that there may be additional elements other than the listed elements.

As various changes could be made in the above constructions products and methods without departing from the scope of aspects of the invention it is intended that all matter contained in the above description and shown in the accompanying drawings shall be interpreted as illustrative and not in a limiting sense.

