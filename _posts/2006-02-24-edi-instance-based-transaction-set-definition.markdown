---

title: EDI instance based transaction set definition
abstract: Creating an electronic data interchange (EDI) transaction from a description of the EDI schema. The description defines the EDI schema in a non-EDI structure. The description of the EDI schema is received. A plurality of data units included in the received description of the EDI schema is identified. The plurality of data units describes the content of the EDI schema. The identified plurality of data units is analyzed to determine the content of the EDI schema. The document definition is generated for the EDI schema as a function of the analyzed plurality of data units. The document definition is used to create an EDI transaction according to the EDI schema.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07984373&OS=07984373&RS=07984373
owner: Microsoft Corporation
number: 07984373
owner_city: Redmond
owner_country: US
publication_date: 20060224
---
Electronic data interchange EDI is one of the ways businesses use for exchanging computer to computer business information based on approved formatting standards and schemas. For example millions of companies around the world transmit data associated with business transactions e.g. purchase orders shipping air bills invoices or the like using EDI to conduct commerce.

In a typical EDI transaction model a large business entity or an EDI integration broker trades with numerous partners and has the technical capability to handle numerous EDI transaction data in various EDI formats and schemas. These entities also known as hubs transact with one or more suppliers also known as spokes . Each of the spokes typically is a relatively small business entity that is only capable of dealing with one hub.

Before the spokes attempt to initiate transactions via EDI with the hub the hub typically transmits various EDI schemas to the spokes so that the spokes may properly format the EDI transactions according to the EDI schemas. Currently EDI schemas are large in size and the file size for each EDI schema typically ranges from 1 MB to 3 MB. In addition the hub or large trading partners customarily transmit a large amount of schemas to the spokes without taking into considerations of the spokes lack of hardware capability. As such thousands of such schemas which may occupy several Gigabytes in bandwidth during transmission are transmitted from the hub to the spokes.

Occasionally the hub transmits one or more descriptions of the schemas in a non EDI structure to the spokes. For example the description may be in a sample data instance file or even be a text file written in plain English explaining and describing what type of information needs to be included in the EDI schemas. Other times the hub may send an existing EDI schema in a format such as an image file a portable document format PDF file or the like.

In order to begin transactions between the parties the spokes typically need a translation program or a document definition program to define a schema in the proper format. Current systems typically use a number of techniques such as using metadata to define an EDI transaction set from the description. However current systems are limited in defining descriptions of EDI schemas to certain formats such as eXtensible Markup Language XML format. In addition existing techniques commence the translation process by integrating a sample instance such as the description delivered by the Hub and a set of word documents that elaborate on the EDI connectivity. This need of multiple documents to define a document definition reduces the efficiency of conducting business transactions.

Embodiments of the invention overcome the shortcomings of the existing systems by creating a document definition using a description or a sample instance of an EDI transaction. In addition embodiments of the invention heuristically analyze a plurality of data units described in the description to generate such document definition. Embodiments of the invention also avoid reliance on other documents elaborating the EDI connectivity in creating the document definition for such EDI schema.

This summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used as an aid in determining the scope of the claimed subject matter.

Referring first to a block diagram illustrates a system for conducting electronic data interchange EDI transactions according to an embodiment of the invention. The system includes a hub linked to and communicating with one or more spokes . In one embodiment the hub includes a server computer or a computing device serving one or more processors e.g. processor or processing units for executing computer executable instructions for serving the spokes . In one example the spokes include a computing device having one or more components included in or coupled with a computer as shown in .

In one example the hub also includes a memory area for storing one or more EDI schemas such as an EDI schema . Initially the hub and the spokes establish agreements as to the EDI formats or standards to be used for transmitting transaction data therebetween. Once the parties determine the particular EDI formats or standards to use the hub selects the appropriate EDI schemas to be transmitted to the spokes . In another example the hub may choose to select all EDI schemas for all types of transactions such as purchase orders bills of lading invoices payrolls or the like to the spokes . Although the communications between the hub and the spokes can be a private or public communications network a wired or wireless network the spokes typically lack the hardware resources to handle large amount of EDI schemas sent from the hub . In addition the type and bandwidth of computing network communications for the spokes are not equipped to handle such demand imposed by the thousands of EDI schemas which can reach several Gigabytes in data size.

Referring now to a block diagram depicts a system for creating an EDI transaction from a description of the EDI schema according to an embodiment of the invention. The system includes a computing device e.g. a hub or a spoke having a processing unit or a processor for executing computer executable instructions. For simplicity purpose only and not by limitation the computing device is used by a spoke for the following discussion.

Initially two trading partners a hub and a spoke establish a trading agreement for transmitting transaction data using EDI. The hub instead of sending an EDI schema to the spoke transmits a description of the schema and the format of the transaction data. In this example the description is an example of a purchase order EDI instance and illustrates a purchase order transaction data format in conformity with the hub s requirements.

The computing device receives the description of the EDI schema e.g. a description in via an interface . In one embodiment the interface includes network interface protocols for handling data transmission over a common communications network and a user interface UI for receiving user input from a user . In one embodiment the description may be stored in a data store not shown coupled to the computing device .

Upon receiving the description the processor identifies a plurality of data units included in the received description . Referring now to a block diagram illustrates a description of an EDI schema according to an embodiment of the invention. In one example the plurality of data units includes data values associated with one or more of the following transaction set definition segment identification and data elements.

The processor next analyzes the identified plurality of data units to determine the content of the EDI schema. In one embodiment the processor queries a library or the data store to determine whether a particular Transaction Set ID such as transaction set ID exists in the library . If the particular transaction set ID is found in the library the processor determines that it has sufficient information to create an EDI schema based on the transaction set ID.

In this particular example the description includes one or more data units or segments in box each data unit or segment describe the content of the EDI schema. In one embodiment the processor determines whether one or more transaction set identification is known from the identified plurality of data units.

The processor also analyzes one or more identified segments and segment identifications ID which are also included in the plurality of data units. For example a box includes one or more segment headings or notifications in the description . In one embodiment the processor determines whether one or more segments and or segment IDs exist in the library in order to create the EDI schema. The processor continues analyze the description to create the EDI schema such as one or more of the data elements.

In one embodiment the processor executes a set of programmed heuristic logic to determine or analyze properties of data elements. For example an eight character long of format of 199yMmDd or 200yMmDd may be determined to belong to the date data type. Similarly decimal strings may be mapped to Nn data type e.g. integer data type with implied decimal .

For example the description includes one or more data elements in one or more data types such as an integer data element 3859199838 a date data type or 19950727 or 19970523 a enumeration list data type KOW 20392 10 a Nn data type or 35.68 or 2002.91 and a string data type electronics cabinet package 56 high .

In one embodiment the processor may provide partial results of the analysis via the interface to the user so that the user may submit user input. In an alternative embodiment the processor accesses a knowledge base to further analyze the plurality of the data units and or the properties e.g. data type of the data elements.

Once the analysis is completed the processor generates or creates a document definition for the EDI schema as a function of the analyzed plurality of data units. In one embodiment the user may manually review verify or modify the generated or created document definition . The user or the processor may use or apply the document definition to create an EDI transaction according to the document definition . In yet another embodiment the processor stores the document definition for processing and or composing EDI transaction data that match or comply with the particular EDI schema associated with the document definition .

While the description is written in a certain format or style with a certain delimiter symbol it is to be understood that embodiments of the invention may process descriptions written in other formats or styles without departing from the scope of the invention.

For example an interface component receives a description e.g. description of the EDI schema at . At a data component identifies a plurality of data units included in the received description of the EDI schema. The plurality of data units describes the content of the EDI schema. An analysis component analyzes the identified plurality of data units to determine the content of the EDI schema at . At a document component generates or creates the document definition e.g. document definition for the EDI schema as a function of the analyzed plurality of data units. At an application component uses or applies the document definition to create an EDI transaction according to the EDI schema.

In operation embodiments of the invention may be implemented according to the following example. A spoke or hub that wishes to transact business using EDI may receive a description of one or more EDI schemas in a non EDI structure such as a text file. In other words the description does not provide an immediate application to be used in composing an EDI transaction. As such a processor of a computing device at the location the spoke or the hub receives the description from the source which may be another hub. The processor identifies or causes to identify a plurality of data units included in the received description of the EDI schema. The plurality of data units describes the content of the EDI schema. In one example the plurality of data units may be delimited by one or more symbols or characters such as a space an asterisk a dash or other symbols.

The identified plurality of data units is analyzed to determine the content of the EDI schema. For example the data units may include values and the values may be categorized into one or more data types. Once the data units are analyzed the processor may generate or create a document definition for the EDI schema as a function of the analyzed plurality of data units. By using the document definition a user at the computing device at the spoke or the hub may use the document definition to create an EDI transaction according to the EDI schema to begin transact business with the trading partners.

By being able to generate or create a document definition from a description of the EDI schema only not with additional documents or scripts embodiments of the invention efficiently assist the users to quickly begin composing transaction data with the trading partners without a complicated translation process of the description and other supplemental data e.g. metadata or documents .

The computer typically has at least some form of computer readable media. Computer readable media which include both volatile and nonvolatile media removable and non removable media may be any available medium that may be accessed by computer . By way of example and not limitation computer readable media comprise computer storage media and communication media. Computer storage media include volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. For example computer storage media include RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical disk storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium that may be used to store the desired information and that may be accessed by computer . Communication media typically embody computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and include any information delivery media. Those skilled in the art are familiar with the modulated data signal which has one or more of its characteristics set or changed in such a manner as to encode information in the signal. Wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media are examples of communication media. Combinations of any of the above are also included within the scope of computer readable media.

The system memory includes computer storage media in the form of removable and or non removable volatile and or nonvolatile memory. In the illustrated embodiment system memory includes read only memory ROM and random access memory RAM . A basic input output system BIOS containing the basic routines that help to transfer information between elements within computer such as during start up is typically stored in ROM . RAM typically contains data and or program modules that are immediately accessible to and or presently being operated on by processing unit . By way of example and not limitation illustrates operating system application programs other program modules and program data .

The computer may also include other removable non removable volatile nonvolatile computer storage media. For example illustrates a hard disk drive that reads from or writes to non removable nonvolatile magnetic media. also shows a magnetic disk drive that reads from or writes to a removable nonvolatile magnetic disk and an optical disk drive that reads from or writes to a removable nonvolatile optical disk such as a CD ROM or other optical media. Other removable non removable volatile nonvolatile computer storage media that may be used in the exemplary operating environment include but are not limited to magnetic tape cassettes flash memory cards digital versatile disks digital video tape solid state RAM solid state ROM and the like. The hard disk drive and magnetic disk drive and optical disk drive are typically connected to the system bus by a non volatile memory interface such as interface .

The drives or other mass storage devices and their associated computer storage media discussed above and illustrated in provide storage of computer readable instructions data structures program modules and other data for the computer . In for example hard disk drive is illustrated as storing operating system application programs other program modules and program data . Note that these components may either be the same as or different from operating system application programs other program modules and program data . Operating system application programs other program modules and program data are given different numbers here to illustrate that at a minimum they are different copies.

A user may enter commands and information into computer through input devices or user interface selection devices such as a keyboard and a pointing device e.g. a mouse trackball pen or touch pad . Other input devices not shown may include a microphone joystick game pad satellite dish scanner or the like. These and other input devices are connected to processing unit through a user input interface that is coupled to system bus but may be connected by other interface and bus structures such as a parallel port game port or a Universal Serial Bus USB . A monitor or other type of display device is also connected to system bus via an interface such as a video interface . In addition to the monitor computers often include other peripheral output devices not shown such as a printer and speakers which may be connected through an output peripheral interface not shown .

The computer may operate in a networked environment using logical connections to one or more remote computers such as a remote computer . The remote computer may be a personal computer a server a router a network PC a peer device or other common network node and typically includes many or all of the elements described above relative to computer . The logical connections depicted in include a local area network LAN and a wide area network WAN but may also include other networks. LAN and or WAN may be a wired network a wireless network a combination thereof and so on. Such networking environments are commonplace in offices enterprise wide computer networks intranets and global computer networks e.g. the Internet .

When used in a local area networking environment computer is connected to the LAN through a network interface or adapter . When used in a wide area networking environment computer typically includes a modem or other means for establishing communications over the WAN such as the Internet. The modem which may be internal or external is connected to system bus via the user input interface or other appropriate mechanism. In a networked environment program modules depicted relative to computer or portions thereof may be stored in a remote memory storage device not shown . By way of example and not limitation illustrates remote application programs as residing on the memory device. The network connections shown are exemplary and other means of establishing a communications link between the computers may be used.

Generally the data processors of computer are programmed by means of instructions stored at different times in the various computer readable storage media of the computer. Programs and operating systems are typically distributed for example on floppy disks or CD ROMs. From there they are installed or loaded into the secondary memory of a computer. At execution they are loaded at least partially into the computer s primary electronic memory. Aspects of the invention described herein includes these and other various types of computer readable storage media when such media contain instructions or programs for implementing the steps described below in conjunction with a microprocessor or other data processor. Further aspects of the invention include the computer itself when programmed according to the methods and techniques described herein.

For purposes of illustration programs and other executable program components such as the operating system are illustrated herein as discrete blocks. It is recognized however that such programs and components reside at various times in different storage components of the computer and are executed by the data processor s of the computer.

Although described in connection with an exemplary computing system environment including computer embodiments of the invention are operational with numerous other general purpose or special purpose computing system environments or configurations. The computing system environment is not intended to suggest any limitation as to the scope of use or functionality of any aspect of the invention. Moreover the computing system environment should not be interpreted as having any dependency or requirement relating to any one or combination of components illustrated in the exemplary operating environment. Examples of well known computing systems environments and or configurations that may be suitable for use with aspects of the invention include but are not limited to personal computers server computers hand held or laptop devices multiprocessor systems microprocessor based systems set top boxes programmable consumer electronics mobile telephones network PCs minicomputers mainframe computers distributed computing environments that include any of the above systems or devices and the like.

Embodiments of the invention may be described in the general context of computer executable instructions such as program modules executed by one or more computers or other devices. Generally program modules include but are not limited to routines programs objects components and data structures that perform particular tasks or implement particular abstract data types. Aspects of the invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules may be located in both local and remote computer storage media including memory storage devices.

An interface in the context of a software architecture includes a software module component code portion or other sequence of computer executable instructions. The interface includes for example a first module accessing a second module to perform computing tasks on behalf of the first module. The first and second modules include in one example application programming interfaces APIs such as provided by operating systems component object model COM interfaces e.g. for peer to peer application communication and extensible markup language metadata interchange format XMI interfaces e.g. for communication between web services .

The interface may be a tightly coupled synchronous implementation such as in Java 2 Platform Enterprise Edition J2EE COM or distributed COM DCOM examples. Alternatively or in addition the interface may be a loosely coupled asynchronous implementation such as in a web service e.g. using the simple object access protocol . In general the interface includes any combination of the following characteristics tightly coupled loosely coupled synchronous and asynchronous. Further the interface may conform to a standard protocol a proprietary protocol or any combination of standard and proprietary protocols.

The interfaces described herein may all be part of a single interface or may be implemented as separate interfaces or any combination therein. The interfaces may execute locally or remotely to provide functionality. Further the interfaces may include additional or less functionality than illustrated or described herein.

In operation computer executes computer executable instructions such as those illustrated in the figures to implement aspects of the invention.

The order of execution or performance of the operations in embodiments of the invention illustrated and described herein is not essential unless otherwise specified. That is the operations may be performed in any order unless otherwise specified and embodiments of the invention may include additional or fewer operations than those disclosed herein. For example it is contemplated that executing or performing a particular operation before contemporaneously with or after another operation is within the scope of aspects of the invention.

Embodiments of the invention may be implemented with computer executable instructions. The computer executable instructions may be organized into one or more computer executable components or modules. Aspects of the invention may be implemented with any number and organization of such components or modules. For example aspects of the invention are not limited to the specific computer executable instructions or the specific components or modules illustrated in the figures and described herein. Other embodiments of the invention may include different computer executable instructions or components having more or less functionality than illustrated and described herein.

When introducing elements of aspects of the invention or the embodiments thereof the articles a an the and said are intended to mean that there are one or more of the elements. The terms comprising including and having are intended to be inclusive and mean that there may be additional elements other than the listed elements.

As various changes could be made in the above constructions products and methods without departing from the scope of aspects of the invention it is intended that all matter contained in the above description and shown in the accompanying drawings shall be interpreted as illustrative and not in a limiting sense.

