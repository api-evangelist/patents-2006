---

title: System and method for efficient replication of and access to application specific environments and data
abstract: A peer-to-peer system and method for efficient replication of and access to application specific environments and their data that includes automatically accessing application specific metadata to determine the location of application specific data and then replicating or providing access to the application metadata and data to a set of peers. A system and method for efficient replication of and access to application specific environments and data that includes automatically accessing a source application's metadata to determine the location of the source application's data and then automatically transferring and transforming the application metadata and data to a target application's metadata and data.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08738750&OS=08738750&RS=08738750
owner: 
number: 08738750
owner_city: 
owner_country: 
publication_date: 20061221
---
This application claims priority from U.S. Provisional Patent Application Ser. No. 60 751 983 entitled System and Method for Efficient Replication of and Access to Application Specific Environments and Data and filed Dec. 21 2005 the disclosure of which is incorporated herein by reference in its entirety.

This invention relates generally to the field of peer to peer networking systems. More particularly the invention relates to a peer to peer networking system designed to allow users to easily and securely backup replicate and access application specific environments or information repositories.

Computer systems and hand held devices are continuing to grow their capacity in several dimensions permanent storage networking bandwidth memory and processing power. Personal computer users are now able to store thousands of items of personalized content such as pictures music and movies. Users are using software applications to manage the importation of and access to this personal content. These software applications are usually content specific and manage specific types of data for example Outlook handles emails iTunes Musicmatch and Napster handle music pictures and video and TiVo to go handles TV programs and so on . . . . While these content management programs manage their specific data adequately on one computer these programs do NOT provide an automatic way of managing their specific data automatically across multiple computers in different security domains or environments. In addition these programs only manage data explicitly imported into their content databases by the user. As a result data management across multiple computers is a manual time consuming process. It has been estimated the typical computer user spends 15 25 of his or her time on non productive informational related management tasks.

Third party peer to peer programs exist to perform content synchronization but they too do not understand the applications being synchronized and as a result configuring them to work properly is a manual process at best and depending upon the application may not be possible with simple file replication. Many peer to peer networking systems exist providing various file sharing capabilities. Some such systems provide tools for sharing content publicly where the users have no control of who can access the files where the files resides and how reliably the files are stored. Examples of such networks include the original Napster network Kazaa and Bit torrent. Other systems provide explicitly defined security and remote sharing capabilities within ad hoc user groups. An example of such an application is Groove. Still others provide strong explicitly defined data backup and replication capabilities but do not provide any networking security capabilities and need to have special network configurations such as virtual private networks to function properly.

The typical existing network is depicted in . The network contains personal computers with private IP addresses running content management applications storing and managing content metadata and content data hand held devices connected via local area network LAN to a firewall network address translation NAT device with public IP addresses which is connected to the Internet . The LAN provides connectivity between local computers and devices. The firewall NAT devices protect the PCs from hackers and other malicious code such as viruses worms malware and adware. Typically the firewall NAT devices allow unlimited connections out to the Internet but prevent access from other devices on the Internet . A typical user may have access to multiple PCs that are within different security domains i.e. behind different firewalls controlled by different organizations . For example the user may have a home computer running on a home network a notebook computer running a personal firewall a work computer running in the office network and or a browser running in a public domain.

The content management applications allow users to download import store and access their content data . The applications use the content metadata to keep track of the specific content associated with the applications . The applications also automatically synchronize content with the handheld devices . Conventional content management applications do not automatically synchronize content metadata and content data between 1 different user accounts on the same PC 2 between different PCs on the same LAN or 3 between different PCs in different security domains . Currently the methods recommended by content management vendors for synchronizing the content between different security domains are follows 1 Carry the handheld device to the other location and manually copy the content to the other PC 2 Manually copy the content to a DVD then carry the DVD to the other PC and manually add the content back to the other PC 3 Manually email the content to an mail account and manually download the content from the email account and manually add it to the application on the other PC or 4 Manually copy the content to a web storage service to transfer the content back from the service to the other PC and manually add it to the application on the other PC . All of these methods have the drawback that the content is not automatically transferred between the desired devices and PCs and that the content needs to be transferred explicitly file by file or directory by directory.

Currently there are some file synchronizations services such as Groove that allow users to synchronize file data between PCs in multiple security domains . Using these services known file data or content can be transferred between the PCs . The drawbacks and disadvantages of using these file synchronization services for synchronizing content being managed by a content management applications are that 1 the user must manually specify the files or directories that contain the content that needs to be synchronized 2 these file synchronization services cannot synchronize content metadata because the metadata usually resides in a single file and only portions of the file must be synchronized between the PCs 3 these file synchronization services cannot synchronize content metadata or content that has been locked by the associated content management application and 4 these file synchronization services do not provide varying access rights to the owners community of friends to the metadata and content in an application meaningful context.

Currently there are some third party file access services that allow users to access their files via any web browser. The browser could be running on an Internet browser or an Internet enabled handled device . Examples of Internet enabled handheld devices include WiFi enabled PDA or Internet enabled cell phones. These services allow the user to access his her content from many locations as long as the user knows the underlying file structure of the content . The key drawbacks of these access services are that 1 these access services require the user to understand the content file structure 2 these access services do not provide a content application or content metadata based view of the content 3 these access services do not provide content synchronization or enhance content availability and 4 these access services do not provide varying access rights to the owners community of friends to the metadata and content in an application meaningful context.

The following summary provides an overview of various aspects of the invention described in the context of the related inventions incorporated by reference earlier herein the related inventions . This summary is not intended to provide an exhaustive description of all of the important aspects of the invention nor to define the scope of the invention. Rather this summary is intended to serve as an introduction to the detailed description and figures that follow.

An embodiment relates generally to a system for the replication of application specific environments and their respective data. The system includes a set of computing devices running at least one application configured to process associated metadata and associated data on the computing devices. The system also includes a network configured to interconnect the set of computing devices and a set of peer agents executing on the set of computing devices where each agent is executing on a respective computing device. Each agent is configured to communicate with at least one application and other agents. The processing system further includes a processing system configured to interface with the set of peer agents where the processing system is configured to automatically access the associated metadata for at least one application and replicate the associated metadata to the set of peer agents over the network.

Another embodiment pertains generally to a system for replication of application specific environments between multiple applications handling common data across the multiple applications. The system includes a processing system configured to access associated metadata of each application of the multiple applications to determine common data and then replicate the associated metadata and transform the associated metadata from a first application to a second application allowing both the first and second applications to access the data. The system also includes a computing device running multiple applications each application processing an associated metadata and common data on the computing device. The system further includes an agent executing on the computing device configured to communicate with the multiple applications automatically and transparently transform and replicate the associated metadata between the different applications on the computing device.

Yet another embodiment relates generally to a system for replication of application specific environments between multiple applications using common or similar data across the multiple applications. The system includes a processing system configured to automatically access associated application specific metadata across the multiple applications to determine common or similar data replicates the associated specific metadata and common or similar data and transforms the associated application specific metadata and common or similar data from a first application to a second application of the multiple applications to allow the first and second application to use the common or similar data. The processing system further includes a computing device executing the multiple applications where each application is configured to process a respective metadata but the same common or similar data on the computing device. The processing system also includes an agent executing on the computing device configured to communicate with the multiple applications and automatically and transparently transforms and replicates the associated specific metadata and common or similar data in response to two different applications which are configured to use the common or similar data.

Yet another embodiment pertains generally to a system for replication of application specific environments between multiple applications each application using common or similar data. The system includes a processing system configured to automatically access respective application specific metadata of each application of the multiple application to determine common or similar data replicate the respective specific metadata and common or similar data and transforms application specific metadata and common or similar data from a first application to a second application in response to the first and second applications being different. The processing system further includes a set of computing devices where each computing device is executing multiple different applications having respective metadata and common or similar data. The processing system also includes a set of peer agents where each peer agent is executing on a respective computing device and configured to with the multiple applications automatically and transparently transform and replicate respective metadata and the common or similar data in response to a first application being different from a second application.

The subject matter of the present invention is described with specificity to meet statutory requirements. However the description itself is not intended to limit the scope of this patent. Rather the inventor has contemplated that the claimed subject matter might also be embodied in other ways to include different steps or combinations of steps similar to the ones described in this document in conjunction with other present or future technologies. Moreover although the term step may be used herein to connote different elements of methods employed the term should not be interpreted as implying any particular order among or between various steps herein disclosed unless and except when the order of individual steps is explicitly described.

For simplicity and illustrative purposes the principles of the present invention are described by referring mainly to exemplary embodiments thereof. However one of ordinary skill in the art would readily recognize that the same principles are equally applicable to and can be implemented in all types of computer systems that execute multiple applications and that any such variations do not depart from the true spirit and scope of the present invention. Moreover in the following detailed description references are made to the accompanying figures which illustrate specific embodiments. Electrical mechanical logical and structural changes may be made to the embodiments without departing from the spirit and scope of the present invention. The following detailed description is therefore not to be taken in a limiting sense and the scope of the present invention is defined by the appended claims and their equivalents.

Embodiments relate generally to a new secure peer to peer application environment replication service or networking synchronization and backup service that provides the following functions 1 the ability to replicate and provide access to application specific environments data and metadata that includes automatically accessing application specific metadata to determine the location of application specific data and then replicating or providing access to the application metadata and data to a set of peers 2 the ability to replicate and provide access to application specific environments data and metadata that includes automatically accessing a source application s metadata to determine the location of the source application s data and then automatically transferring and transforming the application metadata and data to a target application s metadata and data 3 the ability to provide owners with local and remote access to the metadata and data in an application meaningful context environment across multiple applications managing similar data and 4 the ability allow owners to create a community of buddies and associates who will have varying access rights to the owners application metadata and data in an application meaningful context.

Embodiments of the invention shown in and provide a solution to the above mentioned problems that exist in the prior art solutions in particular the embodiment provides the following functions 1 the ability to replicate and provide access to application specific data that includes automatically accessing application specific metadata to determine the location of application specific data and then replicating or providing access to such application metadata and data to a set of peers MAgents 2 the ability to replicate and provide remote Internet based access to application specific data that includes automatically accessing a source application s metadata to determine the location of the source application s data and then automatically transferring and transforming the application metadata and data to a target application s metadata and data 3 the ability to provide owners with local and remote access to said metadata and data in an application meaningful context across multiple applications managing similar data and 4 the ability to allow owners to create a community of buddies and associates who will have varying access rights to the owners application metadata and data in an application meaningful context.

Moreover it should be readily apparent to those of ordinary skill in the art that the synchronization system depicted in represents a generalized schematic illustration and that other components may be added or existing components may be removed or modified. The components of the synchronization system may be implemented in hardware software or combinations thereof as known to those skilled in the art.

As shown in an embodiment of the synchronization system includes four major components 1 MWeb the central web based and web services based application which manages all the distributed MAgent and MAccess components. 2 MAgent and the synchronization program running locally on each computer possibly within different security domains . 3 MRegistery the centralized web services based application that enables MAgents and MAccess components to find each other even if they are in different security domains . 4 MAccess the light weight connection component that allows Internet browsers to access MAgents in different security domains.

The MWeb component consists of the following sub modules a registration module a device module a MWeb security module an application selection module and a MWeb user community module . The registration module may be configured for new users to register for the application level synchronization and access service provide by the embodiments of the present invention. The device module may be configured to allow device owners to add devices computers to be synchronized. The MWeb security module may be configured to authenticate users and devices e.g. computers see authorizes access and encrypts data before transmission. The application selection module may be configured to provide a user to very easily select the applications that they wish to synchronize. Once the application is selected the appropriate MAgent app module is activated to perform replication. The MWeb user community module may be configured to allow the user to easily configure a community of friends buddies and or associates who will have varying access rights to the owners application metadata see and data in an application meaningful context.

The MAgent may be configured to provide the core functionality of the synchronization system . The MAgent is responsible for providing the application specific knowledge for example metadata and data replication and application specific access. The MAgent may comprise the following components an App module configured to understand the application s metadata and data formats. More specifically the App module may automatically determine the locations of the application metadata and data through various mechanisms such as registry data file extensions types and application specific APIs. The App module also provides all this information to the synchronization module . The MAgent also includes a MAgent security module which is configured to authenticate the remote peer MAgents authorize access and or encrypt data before transmission. The MAgent further includes a MAgent synchronization module which is configured to establish communications to the remote peer MAgents using the MRegistry to locate the remote peer MAgents and for replicating the metadata of App and the data of App based on the information provided by the MAgent App module . The MRegistry maintains a list of online peer MAgents and remote Peer MAgents and provides a mechanism for them to locate and communicate with each other even if they are in different security domains see . The underlying communications between different security domains can be provided by various well known mechanisms including but not limited to a UDP punch thru a shared email account and web storage . The MAgent further includes a MAgent remote access module which is configured to provide web access in an application specific context to browser or Internet enabled handheld device running the MAccess module. The MAccess module uses the registry to find and establish communications to the MAgent remote access module using the various well know communication mechanisms to establish a communication channel to MAgent remote access module in a manner that is similar to the way the synchronization modules of of MAgent and establish communication channels. In addition to establishing the channel the MAgent remote access module generates custom application specific web site for each App Module . The browser or the Internet enabled handheld device access these application specific web sites bit talking to the MAcess module that is running on its local processing unit.

Embodiments of the present invention are not limited to the interactions described herein and may contain other interactions between the modules and may also contain interactions with other generic modules within the components to perform general housekeeping functions such as marketing advertising billing technical support and error handling. The order of these interactions may also be different than described herein. An example flow is shown in . The sample interactions are described as follows The MAgent is initiated by the personal computer the MAgent security module authenticates the MAgent by presenting the user s username and password for verification to MWeb and Mkegistry The synchronization module of the now authenticated MAgent downloads its latest configuration values from MWeb the synchronization module may be configured to transmit the MRegistry the communication information e.g. public and private IP endpoints of the MAgent the App module may be configured to contact App and obtains the metadata the MAgent then waits for another peer to come online or for a browser to contact it when the remote peer MAgent comes online the remote peer MAgent initializes itself in the same manner that the MAgent initialized itself in steps the remote peer MAgent then contacts the MAgent and indicates that it is online The synchronization module then contacts the remote peer MAgent and obtains the metadata of the remote peer MAgent . The MAgent synchronization module then compares its metadata with the metadata of the remote peer MAgent and then proceeds to synchronize the metadata and data between itself and the synchronization module of MAgent . This compare and synchronization process is repeated periodically or when specific events occur in the App module . If a browser or an MAccess agent see contacts the MAgent then the MAgent remote access module receives the request formats the data according to the rules created by the App module and provides the data back to the browser or the MAccess agent .

The MWeb component may include the following modules a registration module a device module a MWeb security module a user community module and an application selection module . The registration module allows new users to register for the application level synchronization and application specific access services provide by embodiments of the present invention. The device module allows device owners to add devices computers to be synchronized. The MWeb security module may be configured to authenticate users and devices computers authorize access and encrypt data before transmission. The application selection module may be configured to allow a user to easily select the applications that they wish to synchronize. Once the application s is are selected the appropriate App module and App module are activated to perform replication and the inter application synchronization. The user community module allows the user to easily configure a community of friends buddies and or associates access to the data . More specifically the user community module may be configured to vary the access rights of each selected member to access the metadata and or data in an application . Users will be able to search for friends by their userID and invite them to become their buddy. Buddies will be able to select click on the MAgent or MWeb access tab and select buddy. Then the user can select a play list of the selected buddy to listen to.

The MAgent may be configured to provide the core functionality of the inter application synchronization system More particularly the MAgent may be responsible for providing the application specific knowledge for example metadata and data replication inter application replication and access.

The MAgent may include an App module a synchronization module a MAgent security module a remote access module and an App module . The App module may be configured to understand the metadata of the App and associated data formats. The App module may be configured to understand the metadata of App and associated data formats. The App module may be configured to automatically discover the locations of the application metadata and associated data through various mechanisms such as registry data file extensions types database protocols and application specific APIs. The App module may be configured to automatically discover the locations of the application metadata and associated data through similar mechanisms used by App module . There are various mechanisms to program the App module and App module collectively called the application modules to understand the metadata and . If the metadata is stored in a readable file then the application modules would be programmed to read and parse the metadata files. If the App . and or App provide an application programming interface API then the application modules would be programmed to call the appropriate APIs to access the metadata. If the metadata is stored in a database then the application modules would be programmed to read and parse the database records. The MAgent application modules and also provide all this information to the synchronization module .

The MAgent security module authenticates remote peer MAgents by presenting the user s database and password for verification authorizes access and encrypts data before transmission.

The synchronization module is responsible for establishing communications to remote peer MAgent using the MRegistry to find the remote peer MAgents and for replicating the metadata and and associated data of App and App respectively. The synchronization module is also responsible synchronizing data between compatible applications app and app . The synchronization module is programmed to detect compatible applications based upon the type of data that the respective application manages. For applications managing compatible data the metadata and are usually quite different between applications. The synchronization module is programmed to understand the differences and can translate transform and replicate the changes between the metadata of the two applications metadata and . Some applications may handle different formats of the same kind of data. Where appropriate the synchronization module will translate transform the data between different formats of the same kind of data when the change in format is required for the different applications to function properly. By way of example only for data that consists of music the different formats may be determined by streaming bandwidth file type and file DRM digital rights management rules. When transforming between different formats the synchronization module takes care to preserve and enforce DRM rules between the different formats. If for example a source data file is only valid until a certain date then the destination data file is only valid until that particular date as well.

The MRegistry may be configured to maintain a list of online peer MAgents and remote peer MAgents and allows them to find and communicate with each other even if they are in different security domains. The underlying communications between different security domains can be provided by various well known mechanism including but not limited to UDP punch through a shared email account and web storage .

The remote access module may be configured to provide web access in an application specific context to browser or Internet enabled handheld device running the MAccess module see .

Embodiments of the present invention are not limited to the interactions described herein and may contain other interactions between the modules and may also contain interactions with other generic modules within the components to perform general housekeeping functions such as marketing advertising billing technical support and error handling. The order of these interactions may also be different than described herein.

An example flow is depicted in . The sample interactions are described as follows The MAgent is initiated by the personal computer . The MAgent security module authenticates the MAgent by presenting the user s username and password for verification to MWeb and MRegistry . The MAgent synchronization module of the now authenticated MAgent downloads its latest configuration values from MWeb . The MAgent synchronization module sends the MRegistery the MAgent s communication information public and private IP endpoints . . The App module contacts App and obtains the metadata and the App module contacts App and obtains the metadata . . For compatible applications the synchronization module compares the metadata and the metadata and updates both of application s metadata and so both App and App can see each others data. . For compatible applications which require different formats of data the synchronization module transforms the source applications data to the format of the destination applications data. The MAgent then waits for another peer to come online or for a browser to contact it. When the remote peer MAgent comes online the remote peer MAgent initializes itself in the same manner that the MAgent initialized itself in steps . The remote peer MAgent then contacts the MAgent and indicates that it is online. The MAgent synchronization module then contacts the remote peer MAgent and obtains the metadata of the remote peer MAgent . The MAgent synchronization module then compares its metadata and with the metadata of the remote peer MAgent and then proceeds to synchronize the data between itself and the synchronization module of MAgent changing the data formats as required or needed. This compare and synchronize process is repeated periodically or when specific events occur in the App module or the App module . If a browser or an MAccess agent contacts the MAgent then the MAgent remote access module receives the request formats the data according to the rules provided by the App module or the App module and provides the data back to the browser or the MAccess agent .

The underlying communications between different security domains can be provided by various well known mechanisms. An embodiment may select to use UDP punch thru as the default communications mechanism for MAgents and in different security domains. The synchronization module of the MAgents and may contain a UDP punch through sub module which specifically handles the UDP punch through tasks. Generally UDP punch through is composed of several different phases a discovery phase a punch through phase and a data transport phase. In the discovery phase the UDP sub modules in MAgent and talk to a central server the MRegistery to discover their public IP endpoints. The UDP sub modules then register this data with the MRegistry and obtain their peers end point information from the MRegistery . The UTDP sub modules then begin the punch through phase where they start sending data to each others public IP endpoint. Most firewalls will allow the incoming UDP traffic in because out going traffic is also occurring on the same public endpoint. Once the UDP sub modules detect traffic from each other they can start transferring data. Several mechanisms can be used to send TCP IP traffic over a UDP connection these include but are not limited to encapsulating the TCP IP traffic in UDP IP packets or terminating the TCP IP packets locally and reliably sending the packets content in UDP packets. Reliable transport of UDP packets can be achieved by implementing error control and congestion control mechanisms in the application transmitting the UDP packets. An implementation of the present invention is not limited to the UDP punch through as described herein and may contain other communication mechanisms such as a shared email account and or web based storage .

As shown in the title bar displays the application s title. The file menu allows access to the application s properties and allows the user to exit the application and service. The help menu tells the user the version number of the program. The Services tab lists the current services and displays there status. The logs tab allows the user to search for and access activity logs and error messages. The access tab allows the user to access his own or his buddies data. The access tab is still under development. The community tab allows the user to add and remove buddies and associates. The community tab is still under development.

The play button allows the user to initiate a synchronization cycle for this service manually. The title section displays the title of this synchronization service iTunes. The stop button stops synchronization for this service. The status icon is currently displaying the default active but sleeping icon. The status icon changes as this synchronization service changes to different states. The status message displays the current state of this synchronization service.

The My Tezlink link takes the user to the web based configuration manager MWeb . The user name displays the owner of this Magent instance.

The play button allows the user to initiate a synchronization cycle for this service manually. The title section displays the title of this synchronization service Files. The stop button stops synchronization for this service. The status icon is currently displaying the default active but sleeping icon. The status icon changes as this synchronization service changes to different states. The status message displays the current state of this synchronization service.

The header allows users to navigate the MWeb web site as well as access the MWeb application. The MWeb application can be accessed by clicking the My TezLink button. The MWeb application has the following pages Overview My Profile My Pin My Community My Data and Billing . The My Community page is still being developed and will display the user s buddies and associates. The My Data page is still being developed and will allow the user to access his own content or stream content from his buddies or associates. The Billing page is still being developed and will allow the user to review billing history and purchase new services or devices.

The Overview page provides a list of MAgents and associated in the account in table . This table also provides some details about the MAgents and such as but not limited to the login id the priority and the online status.

It will be appreciated that the embodiments described above and illustrated in the drawings represent only a few of the many ways of implementing a system and method for efficient replication of and access to application specific environments and data.

Referring to the personal computer may be implemented by any personal or other type of computer system e.g. IBM compatible Apple Macintosh laptop palm pilot etc. . The personal computer may include any commercially available operating system e.g. Windows OS 2 Unix Linux PalmOS Symbian etc. . The computer systems may further include any commercially available or custom software e.g. server software browser software viewing software etc. database and or database management systems. The computer systems may further include any types of input devices e.g. keyboard mouse voice recognition etc. to navigate the screen enter information and or actuate buttons or icons. The databases may be implemented by any conventional or other database or storage structure e.g. file data structure etc. . The servers MWeb and MRegistery may be composed of redundant servers and may be of any quantity of such servers and may lag or transfer information between each other at any desired time intervals e.g. seconds minutes hours days etc. .

It is to be understood that the software for the computer systems e.g. personal computers servers and handhelds etc. may be implemented in any desired computer language and could be developed by one of ordinary skill in the computer arts based on the functional descriptions contained in the specification and flow charts illustrated in the drawings. By way of example only the software for the functionality of the embodiments of the present invention e.g. MAgent and MWeb MRegistery etc. may be developed utilizing JAVA Script HTML Visual Basic Script MS C .NET Technology and or C computer languages. The computer systems may alternatively be implemented by any type of hardware and or other processing circuitry. The various functions of the computer systems may be distributed in any manner among any quantity of software modules processing or computer systems and or circuitry. The software and or algorithms described above and illustrated in the flow charts may be modified in any manner that accomplishes the functions described herein.

The networks e.g. public private virtual private etc. may be implemented by any communications network e.g. LAN WAN Internet Intranet VPN etc. . The computer systems may include any conventional or other communications devices to communicate over the networks via any conventional or other protocols. The functions of the MWeb and MRegistry may be distributed among servers redundant servers and or personal computers in any desired fashion.

The MWeb and MRegistry database may be implemented by any quantity of any conventional or other database or storage units. The database may store any desired information. The file system may be implemented by any quantity of any conventional or other file storage system and may store any desired information. The codes may be stored within the file system and or database in any desired fashion e.g. the file system and database may individually or collectively store the codes in any desired combination or fashion etc. . The MAgents and MWeb and MRegistry may utilize any desired codes to validate users and sessions e.g. checksum hash code assign unique identifiers etc. . The system may be utilized with or without validation.

The MWeb and MRegistry may communicate and or retrieve information from any quantity of MAgents and utilizing any desired formats or interfaces. The data and metadata within the MAgents and may be associated with any programs via any suitable identifiers e.g. alphanumeric symbols etc. . The MAgents and may poll each other and the MWeb and MRegistry at any desired intervals to retrieve information. The information may be retrieved based on any suitable criteria e.g. time new online offline events new data new metadata etc. . The button or switch may be implemented in any fashion e.g. software hardware signal etc. to enable the MAgents and to access the MWeb and MRegistry .

The MAgents and may utilize any conventional or other caching techniques e.g. transmit configuration data and metadata requests in any order utilize any techniques e.g. FIFO etc. proactively transfer configuration data and metadata to each other based on any suitable criteria e.g. priority type of service type of data etc. to transmit data to each other prior to requests for that item. The MAgent and memories may be implemented by any conventional or other storage device and may include any desired storage capacity. The MAgent and memories may store any desired quantity of configurations data and metadata during any desired time interval e.g. days etc. . The MAgent and synchronization module may send the images to each other at any desired time intervals or in response to any suitable conditions e.g. receipt of new data etc. . The MAgents and may associate users with locations in any desired fashion e.g. zones areas etc. and based on any suitable identifiers e.g. IP or other addresses of any local components etc. .

The various topologies e.g. for MWeb and MRegistry may be arranged in any desired fashion and include any quantity of components. The MAgents and and MAccess may include any quantity of components arranged or in communication with each other in any desired fashion.

The display screens or web pages and windows may be arranged in any fashion and contain any type of information e.g. the number of devices the synchronization state the file transfer status etc. . The display screens or web pages and windows may be navigated or viewed in any desired order or fashion. The screens may include any quantity of any type of buttons or icons of any shapes sizes or colors and disposed at any locations to initiate any desired actions or indicate any desired conditions. The screens may include any quantity of any type of fields e.g. fill in drop down menus or lists etc. of any shapes or sizes disposed at any locations to receive information from the system and or user and or to display information. The system may automatically log out users after any desired time interval and may track any desired information pertaining to a session e.g. configuration changes new devices new services etc. . The system may display and or receive information via any input mechanisms e.g. screens menus line prompts forms fields etc. or input devices e.g. keyboard mouse voice recognition etc. . The system may limit user access to information in any desired fashion and based on any suitable criteria e.g. users may be limited to viewing information of buddies or associates etc. .

The tables may be arranged in any fashion and include any information listed in any desired order e.g. based on any information . The search may be performed based on any desired searching criteria e.g. any table or database field dates or range of dates etc. . The table entries may be sorted in any desired fashion or order based on any quantity of any desired table columns. The system may display in any fashion any quantity of images or patient information for comparison or other purposes. The system may enable communication by any quantity of any desired users based on any conditions or criteria e.g. updated or new data or metadata status of a user etc. .

The MWeb and MRegistry may be utilized in combination with any suitable communications systems e.g. voip email IM etc. in any desired fashion to provide enhanced user experiences. These other communication systems may provide any suitable icon or other indicator to indicate the capability of synchronizing application specific environments.

The present invention may employ various techniques to validate the synchronization of data and metadata. For example file size time stamp hash codes or CRC validation may be performed on the data and metadata. The comparison may be performed with respect to any desired units e.g. seconds minutes bytes etc. . An error message may be displayed to notify users of data or metadata that appears invalid.

It is to be understood that the terms top bottom side upper lower front rear horizontal vertical and the like are used herein merely to describe points of reference and do not limit the present invention to any specific configuration or orientation.

The embodiments of the present invention is not limited to the applications disclosed herein but may be utilized for any type of media or other application to enable remote access of applications.

From the foregoing description it will be appreciated that the invention makes available a novel system and method for efficient replication of and access to application specific environments and data.

Having described preferred embodiments of a new and improved system and method for efficient replication of and access to application specific environments and data it is believed that other modifications variations and changes will be suggested to those skilled in the art in view of the teachings set forth herein. It is therefore to be understood that all such variations modifications and changes are believed to fall within the scope of the present invention as defined by the appended claims.

