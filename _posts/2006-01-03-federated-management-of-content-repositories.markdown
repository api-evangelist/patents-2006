---

title: Federated management of content repositories
abstract: A method for integrating a plurality of content repositories into a virtual content repository (VCR), comprising providing credential information to each one of said plurality of content repositories, receiving authorization information from each one of said plurality of content repositories, wherein the authorization information indicates whether or not an authorization procedure succeeded, integrating into the VCR each one of said plurality of content repositories whose authorization information indicates successful authorization, and wherein each one of said plurality of content repositories exposes a first set of services to enable its integration into the VCR.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07433896&OS=07433896&RS=07433896
owner: BEA Systems, Inc.
number: 07433896
owner_city: San Jose
owner_country: US
publication_date: 20060103
---
This application is a Continuation of U.S. application Ser. No. 10 618 513 entitled FEDERATED MANAGEMENT OF CONTENT REPOSITORIES by James Owen et al. filed Jul. 11 2003 which claims priority under 35 U.S.C. section 119 e to 

U.S. Provisional Patent Application No. 60 449 154 entitled SYSTEM AND METHOD FOR VIRTUAL CONTENT REPOSITORY by James Owen et al. filed on Feb. 20 2003 and

U.S. Provisional Patent Application No. 60 451 174 entitled SYSTEMS AND METHODS FOR PORTAL AND WEB SERVER ADMINISTRATION by Christopher Bales et al. filed on Feb. 28 2003.

This application is related to the following co pending applications which are each hereby incorporated by reference in their entirety 

U.S. application Ser. No. 10 618 519 entitled VIRTUAL REPOSITORY CONTENT MODEL by James Owen et al. filed on Jul. 11 2003 

U.S. application Ser. No. 10 618 380 entitled VIRTUAL REPOSITORY COMPLEX CONTENT MODEL by James Owen et al. filed Jul. 11 2003 

U.S. application Ser. No. 10 618 495 entitled SYSTEM AND METHOD FOR A VIRTUAL CONTENT REPOSITORY by James Owen et al. filed Jul. 11 2003 

U.S. application Ser. No. 10 618 494 entitled VIRTUAL CONTENT REPOSITORY APPLICATION PROGRAM INTERFACE by James Owen et al. filed Jul. 11 2003 

U.S. application Ser. No. 10 619 165 entitled SYSTEM AND METHOD FOR SEARCHING A VIRTUAL REPOSITORY CONTENT by Gregory Smith filed Jul. 11 2003 and

U.S. application Ser. No. 10 618 379 VIRTUAL CONTENT REPOSITORY BROWSER by Jalpesh Patadia et al. filed Jul. 11 2003.

A portion of the disclosure of this patent document contains material which is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure as it appears in the Patent and Trademark Office patent file or records but otherwise reserves all copyright rights whatsoever.

The present invention disclosure relates to content management and in particular a system and method for integrating disparate content repositories.

Content repositories manage and provide access to large data stores such as a newspaper archives advertisements inventories image collections etc. A content repository can be a key component of a Web application such as a Web portal which must quickly serve up different types of content in response to a particular user s requests. However difficulties can arise when trying to integrate more than one vendor s content repository. Each may have its own proprietary application program interface API conventions for manipulating content and data formats. Performing a search across different repositories for example could require using completely different search mechanisms and converting each repository s search results into a common format. Furthermore each time a repository is added to an application the application software must be modified to accommodate these differences.

The invention is illustrated by way of example and not by way of limitation in the figures of the accompanying drawings in which like references indicate similar elements. It should be noted that references to an or one embodiment in this disclosure are not necessarily to the same embodiment and such references mean at least one.

In the following description various aspects of the present invention will be described. However it will be apparent to those skilled in the art that the present invention may be practiced with only some or all aspects of the present invention. For purposes of explanation specific numbers materials and configurations are set forth in order to provide a thorough understanding of the present invention. However it will be apparent to one skilled in the art that the present invention may be practiced without the specific details. In other instances well known features are omitted or simplified in order not to obscure the present invention.

Parts of the description will be presented in data processing terms such as data selection retrieval generation and so forth consistent with the manner commonly employed by those skilled in the art to convey the substance of their work to others skilled in the art. As well understood by those skilled in the art these quantities take the form of electrical magnetic or optical signals capable of being stored transferred combined and otherwise manipulated through electrical and or optical components of a processor and its subsystems.

Various operations will be described as multiple discrete steps in turn in a manner that is most helpful in understanding the present invention however the order of description should not be construed as to imply that these operations are necessarily order dependent. In particular these operations need not be performed in the order of presentation.

Various embodiments will be illustrated in terms of exemplary classes and or objects in an object oriented programming paradigm. It will be apparent to one skilled in the art that the present invention can be practiced using any number of different classes objects not merely those included here for illustrative purposes. Furthermore it will also be apparent that the present invention is not limited to any particular software programming language or programming paradigm.

A virtual or federated content repository hereinafter referred to as VCR is a logical representation of one or more individual content repositories such that they appear and behave as a single content repository from an application program s standpoint. This is accomplished in part by use of an API application program interface and an SPI service provider interface . An API describes how an application program library or process can interface with some program logic or functionality. By way of a non limiting illustration a process can include a thread a server a servlet a portlet a distributed object a web browser or a lightweight process. An SPI describes how a service provider e.g. a content repository can be integrated into a system of some kind. SPI s are typically specified as a collection of classes interfaces data structures and functions that work together to provided a programmatic means through which a service can be accessed and utilized. By way of a non limiting example APIs and SPIs can be specified in an object oriented programming language such as Java available from Sun Microsystems Inc. of Mountain View Calif. and C available from Microsoft Corp. of Redmond Wash. . The API and SPI can be exposed in a number of ways including but not limited to static libraries dynamic link libraries distributed objects servers class interface instances etc.

In one embodiment the API presents a unified view of all repositories to application programs and enables them to navigate perform CRUD create read update and delete operations and search across multiple content repositories as though they were a single repository. Content repositories that implement the SPI can plug into the VCR. The SPI includes a set of interfaces and services that repositories can implement and extend including schema management hierarchy operations and CRUD operations. The API and SPI share a content model that represents the combined content of all repositories as a hierarchical namespace of nodes or hierarchy . Given a node N nodes that are hierarchically inferior to N are referred to as children of N whereas nodes that are hierarchically superior to N are referred to as parents of N. The top most level of the hierarchy is called the federated root. There is no limit to the depth of the hierarchy.

In one embodiment content repositories can be children of the federated root. Each content repository can have child nodes. Nodes can represent hierarchy information or content. Hierarchy nodes serve as a container for other nodes in the hierarchy akin to a file subdirectory in a hierarchical file system. Content nodes can have properties. In one embodiment a property associates a name with a value of some kind. By way of a non limiting illustration a value can be a text string a number an image an audio visual presentation binary data etc. Either type of node can have a schema associated with it. A schema describes the data type of one or more of a node s properties.

Referring again to and by way of a non limiting example content mining facilities portlets tag libraries applications and other libraries can all utilize the API to interact with a VCR. Content mining facilities can include services for automatically extracting content from the VCR based on parameters. Portlet and Java ServerPages tag libraries enable portals to interact with the VCR and surface its content on web pages. Java ServerPages is available from Sun Microsystems Inc. In addition application programs and other libraries can be built on top of the API.

In one embodiment the API can include optimizations to improve the performance of interacting with the VCR. One or more content caches can be used to buffer search results and recently accessed nodes. Content caches can include node caches and binary caches. A node cache can be used to provide fast access to recently accessed nodes. A binary cache can be used to provide fast access to the data associated with each node in a node cache. The API can also provide a configuration facility to enable applications tools and libraries to configure content caches and the VCR. In one embodiment this facility can be implemented as a Java Management Extension available from Sun Microsystems Inc. . Exemplary configuration parameters are provided in Table 1.

In one embodiment content and hierarchy nodes can be represented by a Node or node . A node has a name an id and can also include a path that uniquely specifies a node s location in the VCR hierarchy. By way of a non limiting example the path can be in a Unix like directory path format such as a b c where is a federated root a is a repository b is a node in the a repository and c is the node s name. The Node class provides methods by with a node s parent and children can be obtained. This is useful for applications and tools that need to traverse the VCR hierarchy e.g. browsers . Nodes can be associated with zero or more Property objects or properties . A property can have a name and zero or more values . In one embodiment a property s name is unique relative to the node to which the property is associated. A Value can represent any value including but not limited to binary Boolean date time floating point integer or string values. If a property has more than one value associated with it it is referred to as multi valued .

A node s properties can be described by a schema. A schema can be referred to as metadata since it does not constitute the content or data of the VCR per se. Schemas can be represented by an ObjectClass object and zero or more PropertyDefinition objects. An ObjectClass has a schema name that uniquely identifies it within a content repository. A node can refer to a schema using the ObjectClass name. In another embodiment a content node can define its own schema by referencing an ObjectClass object directly. In one embodiment there is one PropertyDefinition object for each of a node s associated Property objects. PropertyDefinition objects define the shape or type of properties. Repositories and tools that operate on VCRs such as hierarchical browsers can utilize schemas. By way of a non limiting example a hierarchy node s schema could be used to provide information regarding its children or could be used to enforce a schema on them. By way of a further non limiting example a VCR browser could use a content node s schema in order to properly display the node s values.

In one embodiment a PropertyDefinition can have a name and can describe a corresponding property s data type e.g. binary Boolean string double calendar long reference to an external data source etc. whether it is required whether it is read only whether it provides a default value and whether it specifies a property choice type. A property choice can indicate if a property is a single unrestricted value a single restricted value a multiple unrestricted value or a multiple restricted value. Properties that are single have only one value whereas properties that are multiple can have more than one value. If a property is restricted its value s are chosen from a finite set of values. But if a property is unrestricted any value s can be provided for it. PropertyChoice objects can be associated with a PropertyDefinition object to define a set of value choices in the case where the PropertyDefinition is restricted. A choice can be designated as a default value but only one choice can be a default for a given PropertyDefinition.

A PropertyDefinition object may also be designated as a primary property. By way of a non limiting example when a schema is associated with a node the primary property of a node can be considered its default content. The isPrimary method of the PropertyDefinition class returns true if a PropertyDefinition object is the primary PropertyDefinition. By way of a further non limiting example if a node contained a binary property to hold an image it could also contain a second binary property to represent a thumbnail view of the image. If the thumbnail view was the primary property software applications such as browser could display it by default.

A ticket can utilize a user s credentials to authorize a service. In one embodiment a ticket can be the access point for the following service interfaces NodeOps ObjectClassOps and SearchOps . An application program can obtain objects that are compatible with these interfaces through the API RepositoryManager class. The NodeOps interface provides CRUD methods for nodes in the VCR. Nodes can be operated on based on their id or through their path in the node hierarchy. Table 2 summarizes NodeOp class functionality exposed in the API.

As with the NodeOps service there is one SPI ObjectClassOps object per repository and a single API ObjectClassOps object. The API ObjectClassOps object maps requests to one or more SPI ObjectClassOps which in turn fulfill the requests using their respective repositories. Through this service ObjectClass and PropertyDefinition objects can be operated on based on their id or through their path in the node hierarchy. Table 3 summarizes ObjectClassOps class functionality exposed in the API.

As with the NodeOps and ObjectClassOps services there is one SPI SearchOps object per repository and a single API SearchOps object. The API SearchOps object maps requests to one or more SPI SearchOps which in turn fulfill the requests using their respective repositories. Among other things the SearchOps services allows applications and libraries to search for properties and or values throughout the entire VCR. In one embodiment searches can be conducted across all Property Value BinaryValue ObjectClass PropertyChoice and PropertyDefinitions objects in the VCR. Search expressions can include but are not limited to one or more logical expressions Boolean operators nested expressions object names function calls mathematical functions mathematical operators string operators image operators and Structured Query Language SQL . Table 4 summarizes SearchOps class functionality exposed in the API.

One embodiment may be implemented using a conventional general purpose or a specialized digital computer or microprocessor s programmed according to the teachings of the present disclosure as will be apparent to those skilled in the computer art. Appropriate software coding can readily be prepared by skilled programmers based on the teachings of the present disclosure as will be apparent to those skilled in the software art. The invention may also be implemented by the preparation of integrated circuits or by interconnecting an appropriate network of conventional component circuits as will be readily apparent to those skilled in the art.

One embodiment includes a computer program product which is a storage medium media having instructions stored thereon in which can be used to program a computer to perform any of the features presented herein. The storage medium can include but is not limited to any type of disk including floppy disks optical discs DVD CD ROMs microdrive and magneto optical disks ROMs RAMs EPROMs EEPROMs DRAMs VRAMs flash memory devices magnetic or optical cards nanosystems including molecular memory ICs or any type of media or device suitable for storing instructions and or data.

Stored on any one of the computer readable medium media the present invention includes software for controlling both the hardware of the general purpose specialized computer or microprocessor and for enabling the computer or microprocessor to interact with a human user or other mechanism utilizing the results of the present invention. Such software may include but is not limited to device drivers operating systems execution environments containers and user applications.

The foregoing description of the preferred embodiments of the present invention has been provided for the purposes of illustration and description. It is not intended to be exhaustive or to limit the invention to the precise forms disclosed. Many modifications and variations will be apparent to the practitioner skilled in the art. Embodiments were chosen and described in order to best describe the principles of the invention and its practical application thereby enabling others skilled in the art to understand the invention the various embodiments and with various modifications that are suited to the particular use contemplated. It is intended that the scope of the invention be defined by the following claims and their equivalents.

