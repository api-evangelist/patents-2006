---

title: Method and system for network configuration for containers
abstract: A method for changing network configuration parameters that includes generating a request to change a network configuration parameter by a user, determining whether the user is allowed to change the network configuration parameter using a network configuration database, if the user is allowed to change the network configuration parameter, updating the network configuration database to reflect the change in the network configuration parameter, updating a container associated with the network configuration parameter to reflect the change in the configuration parameter, and if the user is not allowed to change the network configuration parameter, dropping the request.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07912926&OS=07912926&RS=07912926
owner: Oracle America, Inc.
number: 07912926
owner_city: Redwood City
owner_country: US
publication_date: 20060720
---
The present application contains subject matter that may be related to the subject matter in the following U.S. applications filed on Apr. 22 2005 and assigned to the assignee of the present application Method and Apparatus for Managing and Accounting for Bandwidth Utilization Within A Computing System with U.S. application Ser. No. 11 112 367 Method and Apparatus for Consolidating Available Computing Resources on Different Computing Devices with U.S. application Ser. No. 11 112 368 Assigning Higher Priority to Transactions Based on Subscription Level with U.S. application Ser. No. 11 112 947 Method and Apparatus for Dynamically Isolating Affected Services Under Denial of Service Attack with U.S. application Ser. No. 11 112 158 Method and Apparatus for Improving User Experience for Legitimate Traffic of a Service Impacted by Denial of Service Attack with U.S. application Ser. No. 11 112 629 Method and Apparatus for Limiting Denial of Service Attack by Limiting Traffic for Hosts with U.S. application Ser. No. 11 112 328 Hardware Based Network Interface Per Ring Resource Accounting with U.S. application Ser. No. 11 112 222 Dynamic Hardware Classification Engine Updating for a Network Interface with U.S. application Ser. No. 11 112 934 Network Interface Card Resource Mapping to Virtual Network Interface Cards with U.S. application Ser. No. 11 112 063 Network Interface Decryption and Classification Technique with U.S. application Ser. No. 11 112 436 Method and Apparatus for Enforcing Resource Utilization of a Container with U.S. application Ser. No. 11 112 910 Method and Apparatus for Enforcing Packet Destination Specific Priority Using Threads with U.S. application Ser. No. 11 112 584 Method and Apparatus for Processing Network Traffic Associated with Specific Protocols with U.S. application Ser. No. 11 112 228.

The present application contains subject matter that may be related to the subject matter in the following U.S. applications filed on Oct. 21 2005 and assigned to the assignee of the present application Method and Apparatus for Defending Against Denial of Service Attacks with U.S. application Ser. No. 11 255 366 Router Based Defense Against Denial of Service Attacks Using Dynamic Feedback from Attacked Host with U.S. application Ser. No. 11 256 254 and Method and Apparatus for Monitoring Packets at High Data Rates with U.S. application Ser. No. 11 226 790.

The present application contains subject matter that may be related to the subject matter in the following U.S. applications filed on Jun. 30 2006 and assigned to the assignee of the present application Network Interface Card Virtualization Based On Hardware Resources and Software Rings with U.S. application Ser. No. 11 479 046 Method and System for Controlling Virtual Machine Bandwidth with U.S. application Ser. No. 11 480 000 Virtual Switch with U.S. application Ser. No. 11 480 261 System and Method for Virtual Network Interface Cards Based on Internet Protocol Addresses with U.S. application Ser. No. 11 479 997 Virtual Network Interface Card Loopback Fastpath with U.S. application Ser. No. 11 479 946 Bridging Network Components with U.S. application Ser. No. 11 479 948 Reflecting the Bandwidth Assigned to a Virtual Network Interface Card Through Its Link Speed with U.S. application Ser. No. 11 479 161 Method and Apparatus for Containing a Denial of Service Attack Using Hardware Resources on a Virtual Network Interface Card with U.S. application Ser. No. 11 480 100 Virtual Network Interface Cards with VLAN Functionality with U.S. application Ser. No. 11 479 998 Method and Apparatus for Dynamic Assignment of Network Interface Card Resources with U.S. application Ser. No. 11 479 817 Generalized Serialization Queue Framework for Protocol Processing with U.S. application Ser. No. 11 479 947 Serialization Queue Framework for Transmitting Packets with U.S. application Ser. No. 11 479 143.

The present application contains subject matter that may be related to the subject matter in the following U.S. applications filed on Jul. 20 2006 and assigned to the assignee of the present application Low Impact Network Debugging with U.S. application Ser. No. 11 489 926 Reflecting Bandwidth and Priority in Network Attached Storage I O with U.S. application Ser. No. 11 489 936 Priority and Bandwidth Specification at Mount Time of NAS Device Volume with U.S. application Ser. No. 11 489 934 Notifying Network Applications of Receive Overflow Conditions with U.S. application Ser. No. 11 490 821 Host Operating System Bypass for Packets Destined for a Virtual Machine with U.S. application Ser. No. 11 489 943 Multi Level Packet Classification with U.S. application Ser. No. 11 490 745 Method and System for Automatically Reflecting Hardware Resource Allocation Modifications with U.S. application Ser. No. 11 490 582 Multiple Virtual Network Stack Instances Using Virtual Network Interface Cards with U.S. application Ser. No. 11 489 942 Network Memory Pools for Packet Destinations and Virtual Machines with U.S. application Ser. No. 11 490 486 Method and System for Network Configuration for Virtual Machines with U.S. application Ser. No. 11 489 923 Multiple Virtual Network Stack Instances with U.S. application Ser. No. 11 489 929 and Shared and Separate Network Stack Instances with U.S. application Ser. No. 11 489 933.

Network traffic is transmitted over a network such as the Internet from a sending system e.g. a computer system to a receiving system e.g. a computer system via a physical network interface card NIC . The NIC is a piece of hardware found in a typical computer system that includes functionality to send and receive network traffic. Typically network traffic is transmitted in the form of packets where each packet includes a header and a payload. The header contains information regarding the source address destination address size transport protocol used to transmit the packet and various other identification information associated with the packet. The payload contains the actual data to be transmitted from the network to the receiving system.

Each of the packets sent between the sending system and receiving system is typically associated with a connection. The connection ensures that packets from a given process on the sending system reach the appropriate process on the receiving system. Packets received by the receiving system via a NIC associated with the receiving system are analyzed by a classifier to determine the connection associated with the packet.

Typically the classifier includes a connection data structure that includes information about active connections on the receiving system. The connection data structure may include the following information about each active connection i the queue associated with the connection and ii information necessary to process the packets on the queue associated with the connection. Depending on the implementation the connection data structure may include additional information about each active connection. Such queues are typically implemented as first in first out FIFO queues and are bound to a specific central processing unit CPU on the receiving computer system. Thus all packets for a given connection are placed in the same queue and are processed by the same CPU. In addition each queue is typically configured to support multiple connections.

Once the classifier determines the connection associated with the packets the packets are sent to a temporary data structure e.g. a receive ring on the NIC and an interrupt is issued to the CPU associated with the queue. In response to the interrupt a thread associated with the CPU to which the serialization queue is bound retrieves the packets from the temporary data structure and places them in the appropriate queue. Once packets are placed in the queue those packets are processed in due course. In some implementations the queues are implemented such that only one thread is allowed to access a given queue at any given time.

In general in one aspect the invention relates to a method for changing network configuration parameters. The method comprises generating a request to change a network configuration parameter by a user determining whether the user is allowed to change the network configuration parameter using a network configuration database if the user is allowed to change the network configuration parameter updating the network configuration database to reflect the change in the network configuration parameter updating a container associated with the network configuration parameter to reflect the change in the configuration parameter and if the user is not allowed to change the network configuration parameter dropping the request.

In general in one aspect the invention relates to a method for changing network configuration parameters. The method comprises generating a request to change a network configuration parameter by a user wherein the request specifies a virtual network stack with which the network configuration parameter is associated determining whether the user is allowed to change the network configuration parameter if the user is allowed to change the network configuration parameter updating a network configuration database to reflect the change in the network configuration parameter updating a container associated with the network configuration parameter to reflect the change in the configuration parameter and if the user is not allowed to change the network configuration parameter dropping the request.

In general in one aspect the invention relates to a host. The host comprises a global container comprising a network configuration database comprising a first entry wherein the first entry specifies a non global container and a first plurality of network configuration parameters a non global container can change the non global container executing in the global container comprising a container specific network configuration database comprising a second entry wherein the second entry specifies a user and a second plurality of network configuration parameters the user can change wherein the second plurality of network configuration parameters is a subset of the first plurality of network configuration parameters wherein the non global container is configured to receive a request to change a network configuration parameter from a user in the non global container determine whether the user is allowed to change the network configuration parameter using the container specific network configuration database if the user is allowed to change the network configuration parameter change the network configuration parameter in the non global container update the container specific network configuration database to reflect the change in the network configuration parameter and if the user is not allowed to change the network configuration parameter drop the request.

Other aspects of the invention will be apparent from the following description and the appended claims.

Specific embodiments of the invention will now be described in detail with reference to the accompanying figures. Like elements in the various figures are denoted by like reference numerals for consistency.

In the following detailed description of embodiments of the invention numerous specific details are set forth in order to provide a more thorough understanding of the invention. However it will be apparent to one of ordinary skill in the art that the invention may be practiced without these specific details. In other instances well known features have not been described in detail to avoid unnecessarily complicating the description.

In general embodiments of the invention relate to a method and system for changing network configuration parameters. Further embodiments of the invention provide a method and system for limiting the network configuration parameters that a non global container may change.

In one embodiment of the invention a network configuration parameter corresponds to any parameter that is associated with networking. Examples of network configuration parameters may include but are not limited to Media Access Control MAC address Internet Protocol IP address IP routing algorithm e.g. Routing Information Protocol RIP Open Shortest Path First OSPF etc. transport layer protocol e.g. Transmission Control Protocol TCP User Datagram Protocol UDP default route i.e. the route set in the IP routing table used when no other entry in the IP routing table matches the destination IP address of the packet TCP parameters i.e. parameters in the TCP that may be changed for example bandwidth delay product buffer size etc. IP parameters i.e. parameters in the IP that may be changed and TCP port number.

Continuing with the discussion of once a packet has been classified the packet is forwarded to the appropriate RR . Typically each RR is configured to receive packets for a specific non global container or a particular packet destination in the global container . In one embodiment of the invention each RR corresponds to a buffer in the NIC which is configured to store a finite number of packets.

The host includes a device driver not shown a number of virtual network interface cards VNICs one or more virtual network stacks VNSs one or more packet destinations in the global container one or more non global containers a container management component and a network configuration database . Each of the aforementioned components is described below.

Though not shown in the device driver is configured to expose the NIC to the host . Further the device driver is configured to expose the individual RRs to the host . Exposing the aforementioned components to the host includes providing application programming interfaces APIs to allow the host or components executing therein to interact with the NIC and the RRs on the NIC . Interacting with the NIC typically includes obtaining packets from the NIC and sending packets to the NIC .

Each VNIC in the host includes the same functionality as the NIC . However unlike the NIC the VNICs are implemented in the host typically in a MAC layer of the host . To all components above the VNICs e.g. the VNSs the packet destination in the global container and the non global containers the VNICs appear as physical NICs.

Each VNIC is associated with a MAC address and an IP address. Further each VNIC may be optionally associated with a TCP port. Further each VNIC is associated with a RR such that the VNICs obtain packets from the RR with which it is associated. For example VNIC obtains packets from RR . As discussed above each VNIC may be associated with a VNS . The VNS is described in below.

As shown in the host includes a global container and a number of non global containers . The global container corresponds to an isolated execution environment within the host . Further each non global container corresponds to an isolated execution environment within the global container . All of the containers global and non global share a common kernel and accordingly are executing the operating system. While all of the aforementioned containers share a common kernel the non global containers are configured such that processes executing in a given non global container are restricted to execute in the non global container and have no access to resources not assigned to the non global container. An example of a container is a Solaris Container. Solaris is a trademark of Sun Microsystems Inc. of California USA .

As shown in each container global and non global is associated with a VNS . The container is configured to receive packets and send packets using the VNS with which it is associated. For example non global container is configured to send and receive packets via VNS .

The isolated execution environments of each non global container as well as the global container are managed by a container management component executing on the host . The container management component typically executes outside of the global container .

In one embodiment of the invention the packet destination in the global container corresponds to a process executing in the global container where the process is configured to send and receive packets but does not include its own internal networking stack. Rather the packet destination uses a VNS e.g. executing in the global container .

In one embodiment of the invention the network configuration database is configured to maintain all network configuration parameters associated with the networking components in the host . Accordingly the configuration database may include network configuration parameters for each packet destination in the global container each non global container and each VNIC . Further the network configuration database also includes information about which network configuration parameters may be changed and who i.e. user with a specific privilege is allowed to change them see A B below .

In addition the network configuration database may also indicate the allowable values each network configuration parameter may be changed to. For example the network configuration database may allow a user to change the IP address of non global container but the network configuration database may include a list of IP addresses to which the IP address of non global container may be changed. Finally as shown in the network configuration database is configured to receive requests to change network configuration parameters from non global containers via the associated VNICs .

In one embodiment the IP layer is configured to receive packets from the VNIC associated with the VNS e.g. VNS receives packets from VNIC in . Further the IP layer is configured to receive packets from the transport layer . In one embodiment of the invention the IP layer is configured to perform IP level processing for both inbound and outbound packets.

Continuing with the discussion of the inbound VSQ is configured to receive packets from the IP layer . The inbound VSQ corresponds to a queue data structure and is configured to queue packets received from the IP layer prior to the packets being processed by the transport layer . In one embodiment of the invention the inbound VSQ may be used to control the number of packets being received by the packet destination or non global container associated with VNS. The inbound VSQ may control the bandwidth by limiting the number of packets in the VSQ and preventing additional packets from entering the VNS until the inbound VSQ has less than a threshold number of packets.

In one embodiment of the invention the transport layer is configured to process inbound and outbound packets in accordance with Transmission Control Protocol TCP User Datagram Protocol UDP or both UDP and TCP. Other protocols may be supported by the transport layer .

In one embodiment of the invention the outbound VSQ is a queue data structure configured to receive packets from the packet destination or non global container with which the VNS is associated. Further the outbound VSQ is configured to store packets prior to sending the received packets to the transport layer . In one embodiment of the invention the outbound VSQ is also configured to control the flow of packets from the packet destination or non global container associated with the VNS to the VNS . In one embodiment of the invention the outbound VSQ or a related process is configured to block an application for sending packets to the outbound VSQ if the packet destination or non global container is attempting to issue packets at a higher rate than the outbound bandwidth allocated to the packet destination or non global container . Further the outbound VSQ or a related process is configured to notify the packet destination or non global container when it is no longer blocked from issuing packets to the VNS .

In one embodiment of the invention the inbound VSQ and outbound VSQ are each configured to enforce the manner in which packets are processed. Specifically the inbound VSQ and outbound VSQ may be configured to enforce the packet processing requirements imposed by the transport layer . For example TCP requires serial processing of packets. Thus the inbound VSQ and outbound VSQ may require all threads accessing the inbound VSQ and outbound VSQ to conform to a mutual exclusion policy. In one embodiment of the invention the mutual exclusion policy requires that only one thread may access the VSQ inbound or outbound at a time. Thus if two threads are attempting to access a given VSQ inbound or outbound one thread must wait until the other thread has finished accessing the VSQ inbound or outbound .

Alternatively if the transport layer only supports UDP then the inbound VSQ and outbound VSQ may be configured to allow concurrent access. Said another way two or more threads may concurrently access the VSQ inbound or outbound . In one embodiment of the invention if the transport layer is configured to process both TCP and UDP packets then the inbound VSQ and outbound VSQ are configured to conform to the more stringent standard e.g. TCP if the transport layer supports both TCP and UDP .

In one embodiment of the invention the inbound VSQ and the outbound VSQ are implemented as a single bi directional VSQ. In such cases the bi directional VSQ includes a single set of configuration parameters discussed above to enforce the manner in which packets are processed. Further the enforcement of the configuration parameters is performed on a VSQ basis as opposed to a per direction basis . For example if the bi directional VSQ enforces a mutual exclusion policy then only one thread may access the bi directional VSQ at a time.

In one embodiment of the invention each privilege corresponds to network configuration parameter or grouping of network configuration parameters the user is allowed to change. Examples of privileges may include but are not limited to Media Access Control MAC change privilege an Internet Protocol IP address change privilege a default route change privilege an IP routing algorithm change privilege a Transport layer algorithm change privilege TCP parameters change privilege IP parameters change privilege and a TCP port number change privilege.

The listing of VNSs A N A N associated with each of the privileges associated with a user indicates to which VNSs A N A N the privilege applies. Further by listing a specific VNS the privileges may extend to the VNIC associated with the VNS and the non global container or packet destination associated with the VNS.

For example user A A may be associated with a MAC address change privilege and an IP routing algorithm change privilege. Further the MAC address change privilege is associated with VNS in and VNS in and the IP routing algorithm change privilege is associated with VNS in . Thus user A A may change the MAC address associated with VNS in which results in VNIC in being updated with the new MAC address. Further user A A may change the IP routing algorithm for VNS to RIP where the change is reflected in the IP layer of VNS in .

In one embodiment of the invention each entry in the Network Configuration Database includes a listing of privileges A N A N and the corresponding containers associated with each of the privileges. In this case the container or a process executing therein may change any network configuration parameter for which it has the appropriate privilege. Further the privileges associated with a given container are applied to all VNSs associated with the container .

Initially a user requests a change in a network configuration parameter ST . The request may include the network configuration parameter that the user is attempting to change the new value for the network configuration parameter and the VNS with which the network configuration parameter is associated. In one embodiment of the invention if the request is issued by a user from a non global container then the VNS is derived from the source of the request. Accordingly in such cases the VNS corresponds to the VNS associated with the non global container from which the user issued the request.

Continuing with the discussion in the request is sent from the non global container or a packet destination in the global container to the associated VNIC ST . Upon receipt of the request the VNIC sends the request to the network configuration database ST .

Once received the network configuration database determines whether the user is allowed to change the network configuration parameter i.e. the network configuration parameter in the request ST . As discussed above if the network configuration database corresponds to the network configuration database in then the determination in ST corresponds to determining whether i the user has the necessary privilege to change the network configuration parameter and ii whether the user is allowed to apply this privilege to the VNS with which the network configuration parameter is associated.

If the user is not allowed to change the network configuration parameter then change to the network configuration parameter is not committed to the network configuration database ST and the process ends. Alternatively if the user is allowed to change the network configuration parameter then the network configuration database is updated to reflect the change in the network configuration parameter ST . Optionally the VNIC associated with the container is subsequently updated ST . ST is optional as the network configuration parameter that is changed may not affect the VNIC. For example if the IP address is changed then the VNIC is updated to include the new IP address. However if the IP routing algorithm was changed then the VNIC is not affected and thus is not changed.

Optionally the VNS associated with the container is subsequently updated ST . ST is optional as the network configuration parameter that is changed may not affect the VNS. For example if the IP address is changed then the VNIC is updated to include the new IP address but the VNS is not updated. However if the IP routing algorithm was changed then the VNS or more specifically the IP layer in the VNS is updated. Finally the container from which the user requested the change in the network configuration parameter is informed that change has been accepted ST . Though not shown in the container upon being informed of the change in the network configuration parameter may be updated to reflect the change in the network configuration parameter.

In one embodiment of the invention though not shown in the global container is not associated with an entry. Rather the global container is associated with a set of entries corresponding to the entries in . Thus non global containers use the entries shown in and the global container uses entries of the type shown in . In one embodiment of the invention the entries associated with the global container are located in the network configuration database of . Thus though not shown in the network configuration database on includes the entries shown in for non global containers along with the entries shown in where the entries of the type shown in are limited to entries corresponding to the global container.

The listing of privileges A N A N associated with each user A P is limited by the privileges associated with the container as specified in the network configuration database see . Thus a given user A P may have all the privileges specified in the corresponding entry in the network configuration database or a subset of the privileges specified in the corresponding entry in the network configuration database.

For example in the network configuration database non global container in may have the following privileges Media Access Control MAC change privilege an Internet Protocol IP address change privilege a default route change privilege TCP parameters change privilege and a TCP port number change privilege. Thus a user in non global container in may at most have the aforementioned privileges. Thus user A in non global container in may be assigned the following privileges Media Access Control MAC change privilege and an Internet Protocol IP address change privilege. In this case user A has a subset of the privileges.

Though not shown in or B in one embodiment of the invention in addition to storing the information shown in the network configuration database stores the network configuration parameters for all global and non global containers. Alternatively in one embodiment of the invention the network configuration database stores the network configuration parameters for all global and non global containers and the container specific network configuration database stores the network configuration parameters for the non global container with which it is associated. Finally in one embodiment of the invention the network configuration database stores the network configuration parameters for the global container and the container specific network configuration database stores the network configuration parameters for the non global container with which it is associated.

In one embodiment of the invention the container specific network configuration database for a given non global container is stored in the corresponding non global container. For example container specific network configuration database for non global container in is stored in non global container in .

Initially a user requests a change in a network configuration parameter ST . The request may include the network configuration parameter that the user is attempting to change the new value for the network configuration parameter and the VNS with which the network configuration parameter is associated. In one embodiment of the invention if the request is issued by a user from a non global container then the VNS may be derived from the source of the request. Accordingly in such cases the VNS corresponds to the VNS associated with the non global container from which the user issued the request and the request may not explicitly include the VNS with which the network configuration parameter is associated.

If the user is in a non global container ST then the method proceeds to ST. Alternatively if the user is in the global container ST then the method proceeds to ST. Those skilled in the art will appreciate that ST is implicitly performed based on the location global container or non global container from which the user issued the request.

If the request was issued from a global container the global container sends the request to the network configuration database e.g. the modified network configuration database discussed in ST . Alternatively if the request was issued from a non global container then the request is sent to the container specific network configuration database ST .

Once received the network configuration database or the container specific network configuration database determines whether the user is allowed to change the network configuration parameter i.e. the network configuration parameter in the request ST . As discussed above if the network configuration database corresponds to the network configuration database in and the network configuration parameter is associated with the global container then the determination in ST corresponds to determining whether i the user has the necessary privilege to change the network configuration parameter and ii whether the user is allowed to apply this privilege to the VNS with which the network configuration parameter is associated.

Alternatively if the network configuration database corresponds to the container specific network configuration database in and the network configuration parameter is associated with a non global container then the determination in ST corresponds to determining whether the user has the necessary privilege to change the network configuration parameter.

In either case if the requested network configuration parameter is not allowed to be changed then the change to the network configuration parameter is not committed ST and the process ends. If the change to the network configuration parameter is allowed then the container specific network configuration database is updated if the network configuration parameter is associated with a non global container and the container specific network configuration database is configured to store the aforementioned network configuration parameter ST .

The network configuration database is optionally updated to reflect to change in the network configuration parameter ST . ST depends on i whether the changed network configuration parameter is associated with a global or non global container and ii whether the network configuration database is configured to store the aforementioned network configuration parameter.

Optionally the VNIC associated with the container is subsequently updated ST . ST is optional as the network configuration parameter that is changed may not affect the VNIC. For example if the IP address is changed then the VNIC is updated to include the new IP address. However if the IP routing algorithm was changed then the VNIC is not affected and thus is not changed.

Optionally the VNS associated with the container is subsequently updated ST . ST is optional as the network configuration parameter that is changed may not affect the VNS. For example if the IP address is changed then the VNIC is updated to include the new IP address but the VNS is not updated. However if the IP routing algorithm was changed then the VNS or more specifically the IP layer in the VNS is updated. Finally the container global or non global is updated as necessary to reflect the change in the network configuration parameter ST .

An embodiment of the invention may be implemented on virtually any type of computer regardless of the platform being used. For example as shown in a networked computer system includes a processor associated memory a storage device and numerous other elements and functionalities typical of today s computers not shown . The networked computer may also include input means such as a keyboard and a mouse and output means such as a monitor . The networked computer system is connected to a local area network LAN or a wide area network via a network interface connection not shown . Those skilled in the art will appreciate that these input and output means may take other forms. Further those skilled in the art will appreciate that one or more elements of the aforementioned computer may be remotely located and connected to the other elements over a network. Further software instructions to perform embodiments of the invention may be stored on a computer readable medium such as a compact disc CD a diskette a tape a file or any other computer readable storage device.

While the invention has been described with respect to a limited number of embodiments those skilled in the art having benefit of this disclosure will appreciate that other embodiments can be devised which do not depart from the scope of the invention as disclosed herein. Accordingly the scope of the invention should be limited only by the attached claims.

