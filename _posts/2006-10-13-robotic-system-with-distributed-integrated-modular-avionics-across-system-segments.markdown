---

title: Robotic system with distributed integrated modular avionics across system segments
abstract: A robotic system includes a plurality of robotic elements, each having at least one processing component, at least one memory component, and an I/O interface; and a virtual backplane coupling the plurality of robotic elements.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08588970&OS=08588970&RS=08588970
owner: Honeywell International Inc.
number: 08588970
owner_city: Morristown
owner_country: US
publication_date: 20061013
---
The present invention generally relates to a robotic system and more particularly relates to a robotic system with distributed integrated modular avionics across system segments.

NASA initiatives for space exploration include the development of programs such as the Space Exploration Vision and Project Constellation programs. Aspects of these programs include lunar or extra planetary base concepts and operations including precursor missions to the Moon and Mars. Achieving the initiatives of NASA will require significant support from robotic systems with such varied functions as rendezvous and docking in space assembly in situ mining and refining and mobile astronaut assistants.

Conventional robotic systems can include dozens or hundreds of robots operating simultaneously. A team of several individuals can be required for each robot. For example the Mars Exploration Rovers require a staff of approximately 70 people to support continual operation of a single robotic rover. While this has been sufficient for prior robotic missions economic realities and increasing levels of system complexities render this approach difficult. Increased autonomy with the attendant decrease in required operator interaction can provide advantages. However increased autonomy can increase financial and time costs because the robots must be individually designed for a specific mission. Moreover increased autonomy tends to decrease the reliability of the system as well as increase the risk of mission failure equipment damage and human injury.

Accordingly it is desirable to provide an improved robotics system that can be implemented at a lower cost and require less human interaction. Furthermore other desirable features and characteristics of the present invention will become apparent from the subsequent detailed description of the invention and the appended claims taken in conjunction with the accompanying drawings and this background of the invention.

A robotic system comprises a plurality of robotic elements each having at least one processing component at least one memory component and an I O interface and a virtual backplane coupling the plurality of robotic elements.

A method is provided for completing a function with a robotic system comprising a plurality of robotic elements. The method includes gathering data with at least one sensor provided on a first robotic element of the plurality of robotic elements processing the data with at least one processing element provided on a second robotic element of the plurality of robotic elements and performing the function with at least one effector provided on a third robotic element of the plurality of robotic elements based on the processed data.

The following detailed description of the invention is merely exemplary in nature and is not intended to limit the invention or the application and uses of the invention. Furthermore there is no intention to be bound by any theory presented in the preceding background of the invention or the following detailed description of the invention.

Referring initially to a robotic system in accordance with the present invention can include one or more robots .The robots can include one or more effectors and one or more sensors .The effectors can include actuators for controlling the robots such as wheel drives and actuators for performing a designated mission function such as arm .Other types of effectors can include sensor actuators grappling devices docking mechanisms soil and environment manipulators astronaut assistance antenna pointing systems motor drives thrusters momentum control devices such as reaction wheels and control moment gyroscopes solenoids power control and similar components. The types of sensors can include guidance navigation and control sensors and or mission specific sensors. Other types of sensors include cameras sonar radar lidar pressure temperature accelerometers inertial measurement units ring laser gyroscopes strain gages chemical composition detectors spectrographs imaging radiation detectors proximity detectors soil analyzers and similar sensors. The robots can be coupled together wirelessly with a virtual backplane which is discussed in greater detail below.

Each robotic element can include one or more hardware components such as a processing component one or more I O components and one or more physical backplanes .The processing components can include one or more communication interfaces .The I O components can receive and provide inputs to and from sensors and effectors such as sensors and effectors of the robots of . The processing components control the flow of data to and from the I O components and are discussed in further detail below. The physical backplanes can be used to connect the respective processing components and I O components The physical backplanes can be any type including point to point cPCI VME IDE FSB serial PCI and the like. Other components can also be provided. The processing components I O components and communication interfaces can be modular to simplify the robotic system implementation and to reduce manufacturing and repair costs.

Each robotic element can be coupled to the other robotic elements by a virtual backplane . The virtual backplane represents the virtual communications interface between the robotic elements particularly the virtual communications interfaces between individual communications interfaces and the physical backplanes .The virtual backplane can include a high speed data bus or wireless data bus and enable all the data of the system to be available to each of the robotic elements regardless of the origin or physical location of the data. This allows the robotic elements to be independent of the software application of the entire robotic system thus allowing a more simplistic implementation. The virtual backplane additionally enables the system to implement the modular architecture across many robotic elements .The virtual backplane and the resulting accessibility of all data to all robotic elements enables the robotic elements to be optimally sized to reduce weight and to allow local thermal issues to be considered in the architectural implementation. Additional robotic elements can be added for extended availability increased redundancy and or increased processing and I O capabilities. Embodiments and further features of the virtual backplane are described in further detail below in reference to the subsequent FIGS.

The virtual backplane can be a deterministic wireless virtual backplane. As noted above the interface for the respective robotic element can access any data within the system . Any data that is transferred within the system either within a robotic element or between robotic elements is placed on the virtual backplane . The interface can determine whether the data is applicable to the respective robotic element and read and store only that data on the robotic element .In an alternate embodiment the virtual backplane can place all data in all robotic elements 

The processing element is coupled to the communication interface inter module memory and one or more system tables . The processing element controls the system tables outside the processor . In an alternative embodiment the processing element is part of the processor .

The communication interface can be coupled to the virtual backplane for example with AFDX SAE 1394 or similar interfaces. The communication interface can place data from the robotic element on the virtual backplane and or retrieve data from the virtual backplane at a time specified in the system table . The processing element controls the transfer of data to and from the inter module memory and from the inter module memory to the processor such as memory mapped processor memory included in the processor . In addition processing element can create interrupts within the processor to define time partitioning.

Memory subcomponents store data and program files that are executed using the processing subcomponents .Memory subcomponents are preferably a readable writable memory that can be updated as needed. In one embodiment of the present invention multiple applications can be stored in the memory subcomponents 

The memory subcomponents can include system memory and scratchpad memory. System memory can include configuration or system tables such as system tables discussed above with reference to . The system tables in one embodiment contain information concerning the programs and the sequence of events the programs are to be executed by the processing subcomponent and what data is to be presented to and from the virtual backplane . In addition the system tables can contain information as to what data needs to be placed or retrieved from the virtual backplane when to place or retrieve the data and the rate that the data are to be placed or retrieved. The applications running on the partitions use the system tables to determine the data retrieval and placement information.

In addition to including system tables system memory can comprise a multiplicity of toggle memory. Toggle memory associates each of the tables with the occurrence of specific events. For example a robotic element may be associated with one task until a certain amount of time has passed. When the time elapses or a predetermined event occurs toggle memory can be used to determine a new system table to use. The new system table could then change what the robotic element was doing such as by starting a new application and changing the information flow on the virtual backplane . The new system table can also change the data retrieved from and sent to the virtual backplane . In this exemplary embodiment the use of system tables allows data to be provided or sent in a predetermined deterministic manner.

In one exemplary embodiment of the present invention an event that can cause a change of the system tables can include a change in the number of partitions .The change in the number of partitions can include the failure or loss of a partition If a partition malfunctions a new system table can be used that instructs another partition to take over for the failed partition 

In another exemplary embodiment of the present invention an event that can cause a change of the system tables can include a change in software functionality. A change in software functionality can include the loss of software functionality or the addition of software functionality.

In one exemplary embodiment of the present invention additional system tables or changes to the system tables can be provided as needed for example by the operator. For example if an event is anticipated that does not have a system table an appropriate system table can be generated by off line tools in the same manor as prior system tables. In one exemplary embodiment the system table can then be uploaded into system . For example if the system is deployed in a spacecraft ground control could provide new system tables.

The partition allocation can be predetermined by operational tools and based upon the computational requirements of the partition .A clock interrupt scheme of a host processing module can be used to enable an operating system or middleware to perform a context switch from one partition to the next according to the predefined schedule. Thus a partition is guaranteed sufficient computing resources based upon the execution frame rate requirement of the partition .The order of execution between partitions can be consistent within each execution frame. In one embodiment the allocation of processing in partitions is predetermined and established by time partitioning such as described in ARINC 653.

In the I O component access and backplane access domains data flow is likewise identified by the application developer and controlled by the underlying hardware and software infrastructure. The movement of data in and out of the partitions as well as communication between the partitions is predetermined by operational tools and based upon the needs of the various partitions .In one embodiment the movement of data in and out of the partitions is predetermined and established by space partitioning such as described in ARINC 653.

The robotic element includes a partitioned operating system . The operating system can include an OS Application Programming Interface API memory management application fault response protocols and time management features. The robotic element can further include one or more applications which are labeled Application A and Application B in . The applications can correspond to the partitions in or the partitions can run more than one application . In one embodiment the operating system can adhere to the protocol defined in ARINC 653 Avionics Application Standard Software Interface or other partitioned operating systems such as the Honeywell DEOS . The operating system can allocate a pre defined set of memory resources for each application . A hardware based Memory Management Unit MMU can enforce access rights to the memory resources to ensure that the memory resources of the applications including stack and scratch areas are protected from access by other applications and that software and or memory failures do not propagate to other partitions running on the same robotic element . Temporary storage locations such as program registers can be automatically stored by the software infrastructure when a context switch occurs. Each application can perform the typical functions associated with complex applications such as interaction between multiple processes threading and executing processes at differing cyclic rates.

Other partitions of the robotic element can include built in test equipment BITE component an I O partition . The BITE component can include functions for continuous BITE status generation maintenance interface and fault server as well as an OS API to interact with the operating system . The I O partition can include an IEEE 1394 interface an MIL STD 1553 interface an Ethernet interface analog I O discrete I O and or a RS 422 interfaces well as an OS API to interact with the operating system . The I O partition may house all of the I O drivers and assures that the I O data is moved to and from partitions according to pre defined table entries. Alternately I O partition may be implemented by a plurality of partitions.

One skilled in the art of electronic systems that contain computing elements will recognize that other infrastructure components of the robotic element can include a non resident boot component a resident boot component a common monitor component and a tools interface component . The non resident boot component can include a hardware abstraction layer HAL non resident boot initialization power up boot POST phantom fault response software loader platform load verification module load verification and cabinet initialization. The resident boot component can include boot initialization and a hardware abstraction layer HAL . The common monitor component can include a system monitor and or a debug interface. The tools interface component can include a partition monitor and or a debug interface.

The applications within the robotic element can be seamless. In the preferred embodiment in highly reliable systems no application can contaminate the code I O or data storage areas of another application consume the shared processor resources to the exclusion of any other application consume I O resources to the exclusion of any other application or cause adverse affects to any other application as a result of a hardware or software failure unique to that partition.

The architecture of the robotic element can enhance the overall processing platform reliability. A fault in an individual hardware element affects only the application associated with that element. A hardware failure does not necessarily disable an entire robotic element. An application running on a single processor can be modified without requiring re certification of other applications running on the same processor. Thus applications that are subject to frequent modifications may be co resident with relatively stable partitions without requiring superfluous reverifications. Likewise applications with mixed criticality levels may be co resident without requiring all partitions to be certified to the highest criticality level.

Associated with the modular nature of the architecture a layered approach to the hardware and software of system can minimize the effect of system changes on user applications to provide a continuous spectrum of support ranging from direct interfaces between hardware components to application program interfaces accessed directly by user applications. Layering the architecture can simplify the impact of the future modifications or upgrades inevitably associated with human space applications and long life systems. The impacts of hardware changes due to obsolescence are typically dealt with at the hardware interface or middleware layers while applications are often unaffected by these changes.

The system can utilize a coordinated system of development tools to implement the modular partitioned architecture. The development tool can implement a subdivision of processor and memory resources interactions between partitions coordination of I O operations and execution times and other aspects.

Each robotic element can include a processor that respectively controls the functions of the sensors and effectors onboard the robotic element .Each robotic element can further include an I O interface and an memory component 

As in each robotic element can include one or more partitions or applications and the correlated activities of the overall robotic system can be controlled by a single application running in a partition on one of the robotic elements while the remaining robotic elements would each have their separate I O partitions controlling the low level functions of the onboard sensors and effectors.

Alternatively the centralized computing engine can broken up into any number of distributed robotic elements and the I O interface to the sensors and effectors is distributed into each robotic element within the system . Any of the elements required for processing the sensor data and providing the effector commands can be provided by any partition within the system . Using processes and tools static system tables can be generated that identify the assignment of applications to computing engines the processor and memory resources assigned to each application and the data movement between applications. The underlying hardware software infrastructure controls system operations and data movement between applications using these tables. Each robotic element can implement a fault containment zone which would hold as a minimum a partition that contains the I O control of the onboard sensors and effectors for that robotic element 

In one embodiment human safety within the robotic system can be considered. Each robotic element can be fail passive which can be provided by lock step processing polynomial progression encoding and or triple modular redundancy. A safety partition can enforce a set of rules designed to protect the astronaut prior to those commands being sent to the robot effectors.

In one embodiment of the robotic system of the present invention redundancy can be provided. In one embodiment spare robotic elements can be configured to replace any of the robotic elements .An alternate embodiment includes redundant elements that only operate when their primary element fails.

Functional switching capability can be provided within the integrated modular avionics architecture to allow each robotic element to have multiple capabilities within the partitioned software activating only those capabilities and interactions that are appropriate to a given configuration. Alternate possible configurations based on mission or robotic element availability can be stored in the robotic element .Changes in mission scenarios failures in existing robotic elements or operator command would drive a switchover from one set of onboard controlling tables to an appropriate alternate set of tables. This allows a robotic element to be reconfigured to operate according to predetermined characteristics such as another robotic element failing prior to being placed in service.

In addition data transmitted by the wireless virtual backplane can be redundant in nature. In an integrated modular avionics redundancy scheme if a first robotic element e.g. sends data to the system over the virtual backplane and the secondary robotic element e.g. determines that the primary robotic element did not transmit data in the pre assigned number of bits the secondary robotic element will then place the entire frame contents on the virtual backplane . Each of the robotic elements of the robotic system would notice that data was not received in the initial time slot and wait for the secondary robotic element to transmit the data. In at least one embodiment the time between the primary robotic element not sending data and the secondary robotic element sending data is as little as seven microseconds. This redundancy scheme is transparent at the execution level and is sufficient to meet the safety requirements for interaction with astronauts.

The virtual backplane can include a deterministic wireless communication scheme such as a Time Division Multiple Access TDMA at the Media Access Control layer of wireless protocols such as the Zigbee 802.15.4 protocol and 802.11 protocol.

As noted above the hardware and software of the system can be modular to reduce manufacturing and repair costs. The modular software approach can provide a reduction in logistics such as training spares repair and upgrades. Additional development benefits are realized through decreased built in test software needs reduced board support package development fewer required unique data loaders etc.

The system according to one embodiment can realize the improved safety requirements while additionally lowering their cost of operation for the NASA space exploration vision. The system is expandable and or re configurable in the future and meets the human ratings safety requirements avionics performance requirements reduced human control requirements and lower lifecycle cost of implementation and execution.

Exemplary embodiments of the present invention enable a single operator or a group of operators to control a plurality of robots including a fleet of robots as a single system. The robots can be controlled and communicate with the operator and one another via a virtual backplane in which each robotic element or partition acts as a virtual computer that collectively forms the overall system.

While at least one exemplary embodiment has been presented in the foregoing detailed description of the invention it should be appreciated that a vast number of variations exist. It should also be appreciated that the exemplary embodiment or exemplary embodiments are only examples and are not intended to limit the scope applicability or configuration of the invention in any way. Rather the foregoing detailed description will provide those skilled in the art with a convenient road map for implementing an exemplary embodiment of the invention. It being understood that various changes may be made in the function and arrangement of elements described in an exemplary embodiment without departing from the scope of the invention as set forth in the appended claims.

