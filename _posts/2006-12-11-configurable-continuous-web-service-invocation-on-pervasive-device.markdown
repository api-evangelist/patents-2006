---

title: Configurable continuous web service invocation on pervasive device
abstract: A client computer is provisioned with interdependent list of web services comprising list information identifying a plurality of web services, wherein further, the list information relates information received from a first web service of the plurality of web services with a subsequently requested second web service. Results of a web service request are provided to another web service request by the client computer utilizing the relationship provided by the list information. Preferably the list information and web service messages from the client computer are XML metadata. A cooperating Generic Mobile Web Services Manager configures and forwards communication between the client and respective web services.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08504644&OS=08504644&RS=08504644
owner: International Business Machines Corporation
number: 08504644
owner_city: Armonk
owner_country: US
publication_date: 20061211
---
The present invention is related to Web Services and is snore particularly related to providing efficient client access to Web Services for pervasive devices.

With the growing popularity of pervasive devices and the increasing bandwidth of wireless communications users want to have access to snore services at their finger tips while traveling without a PC. For example a mobile salesperson may need services such as company inventory lookup customer order status check customer address lookup etc.

A Web service is a software system identified by a URI whose public interfaces and bindings are defined and described using XML. Its definition can be discovered by other software systems. These systems may then interact with the Web service in a manner prescribed by its definition using XML based messages conveyed by Internet protocols.

Traditionally developers had to write a program to enable the access to a web service. For non developers it s very difficult for them to find a program for each web service that they need to access. Also writing a program for each web service results in substantial cost in developing and support. Especially there is not yet an efficient way available to pervasive device users to make use of multiple web services is a configurable and continuous fashion.

U.S. patent application Ser. No. 11 063 708 DYNAMIC EXTENSIBLE LIGHTWEIGHT ACCESS TO WEB SERVICES FOR PERVASIVE DEVICES filed Feb. 23 2005 incorporated herein by reference discloses a Generic Mobile Web Services GMWS manager that provides mobile clients with access to web Services. The GMWS manager provides an interface between Web Services and mobile clients handheld PDAs for example. The GMWS manager maintains a registry of supported Web Services and metadata attributes about the Web Services and the mobile client information is transferred between a client and a registered web service by way of the GMWS manager based on attributes available to the GMWS manager.

US Patent Application Pub. No. 2005 0015491A1 SYSTEM METHODS AND ARTICLES OF MANUFACTURE FOR DYNAMICALLY PROVIDING WEB SERVICES filed May 16 2003 incorporated herein by reference discloses dynamically providing web services in a distributed system in one embodiment a distribution server uses a generic interface to invoke any one of a plurality of web services based on a user request at a client system. The distribution server provides content information that a client system uses to display a customized web page for an authorized user. When the user selects content on a customized web page associated with a web service the client s system sets data values in one or more hidden fields and provides the fields to the distribution server. The server passes the field information to the selected web service to produce result data. The distribution server may use the result data and collected format data to generate the content information that is used to generate the customized web page for the authorized user. Embodiments of the present invention enable the distributed system to modify a web service without having to reprogram any consumers of the modified web service. Further the distribution server is configured such that it dynamically and automatically determines any web services that a user may access and provides access to the authorized web services through the generic interface.

US Patent Application Pub. No. 2002 0174117A1 MOBILE WEB SERVICES filed May 15 2001 incorporated herein by reference describes a method is disclosed to enable a mobile phone or wireless PDA to discover Internet businesses and services by accessing the Universal Description Discovery and Integration UDDI registry. The method facilitates the formation of a query to the UDDI registry for the wireless device user. The method constructs a personal user profile of the user s UDDI searching strategies and Internet accessing preferences. The user profile can be used as a shortcut for online or offline queries to the UDDI registry or for accessing pages from web sites in response to the user s entry of abbreviated inputs to the wireless device. The method is embodied as programmed instructions which may be executed within the user s wireless device to query the UDDI registry. Alternately method is embodied as programmed instructions which may foe executed within a separate knowledge engine server to query the UDDI registry in response to commands from the user s wireless device. The server can be used to cache files accessed from web sites for selective forwarding to the user s wireless device.

US Patent Application No. 2005 0071423A1 System Apparatus and Method for Providing Web Services on Mobile Devices Filed Sep. 26 2003 and incorporated herein by reference provides Web services from a mobile device. In one configuration a method involves forming a Web service message at a first network entity. The Web service message is targeted for a mobile terminal. A request is directed to a locator arrangement to assist in processing the Web service message. The Web service message is sent to the mobile terminal utilizing the locator arrangement. The Web service message is sent to the mobile terminal using a mobile services transport protocol and processed at the mobile terminal.

Browsers do not provide a means to access Web Services directly. Customized Web pages and programs have to be developed for each web service to be accessed. This results in substantial cost in developing and support. Furthermore using a browser to access Web Services from web pages involves extra network RTT round trip time as the customized web page and programs must be downloaded before the browser is capable of accessing the Web Service. With the communication bandwidth limitation on pervasive devices extra RTT has undesirable impact on the performance of the system.

Another approach is to make a customized client application that talks to the service for each web service. The disadvantage of this approach is that eventually the number of applications will outgrow the memory storage limit of the device as the services increase. The total cost to develop support and purchase each application is substantial.

SOA Service Oriented Architecture provides a perspective of software architecture that defines the use of services to support the requirements of software users. In an SOA environment resources an a network are made available as independent services that can be accessed without knowledge of their underlying platform implementation. SOA is usually based on Web services standards e.g. using SOAP or REST that have gained broad industry acceptance. These standards also provide greater interoperability and some protection from lock in to proprietary vendor software. The present invention is in the domain of SOA enablement on pervasive mobile devices. The invention enables integration and continuous web service invocation through simple configuration.

There are solutions offered to enable web service access from pervasive device by different vendors. For example BlackBerry Mobile Data System v4.1 from RESEARCH IN MOTION RIM allows a generated web service client to be pushed to the device so that user can use the client to access the corresponding web service. IBM Web Services Tool Kit offers tools and run time environments that allow development of applications that use Web services on small mobile devices gateway devices and intelligent controllers . However the existing tools or products do not provide a mechanism for the client device to call another web service using the result returned from a previous web service access.

The present invention enables a list of services with associated metadata related to the services and the calling relationships between services to be provided to the client running on a pervasive device. The client that runs on the device can then call a first web service get the result of the said first web service then call a second web service within the context of information received from the first web service. Similarly when the result of the second web service comes back to the client the client can call a third web service within the context of the information returned from the second web service. Variations of the invention consistent with the teaching herein are possible including but not limited to for example accessing multiple web services with results from a single web service access.

According to one aspect of the present invention invention the calling sequences can be configured dynamically on the server side and provisioned to the client. The client that runs on the device need not be changed.

It is therefore an object of the invention to provide a computer implemented capability for accessing web services. The capability including a client computer having an interdependent list of web services responsive to user input selects a first web service of the interdependent list of web services wherein the interdependent list of web services comprises list information identifying a plurality of web services wherein further the list information relates information received from a first web service of the plurality of web services with a subsequently requested second web service. According to the list information responsive to the selecting step a first web service request is sent from the client computer to the first web service. Responsive to the sanding step first information from the first web service is received at the client computer. Responsive to user input the second web service of the interdependent list of web services is selected. According to the list information said first information received is utilized to formulate a second web service request for said selected second web service the formulated second web service request is sent from the client computer to the second web service. Finally responsive to the sending step second information from the second web service is received at the client computer.

It is a farther object of the invention to further according to the list information responsive to user input select a third web service of the list of web services. According to the list information any one of said second information received or said first information received is utilized to formulate a third web service request. To send the formulated third web service from the client computer to the third web service. Responsive to the sending step third information is received from the third web service at the client computer.

It is a further object of the invention to receive the interdependent list information at the client computer the interdependent list comprising metadata the interdependent list information configured by a GMWSM server from configurable interdependent list of web services and associated metadata. A representation of one or more of the plurality of web services is displayed to the user based on a configuration according to said interdependent list. The received metadata of the interdependent list is used when formulating any one of said first web service request or said second web service request. The received metadata of the interdependent list is utilized when creating the client graphical user interface including any one of buttons or menus the client graphical user interface comprising the capability to navigate from said first web service result display to said second web service input display.

In another aspect of the invention the client computer sends the first web service request to a Generic Mobile Web Services Manager wherein the client computer sends the second web service request to a Generic Mobile Web Services Manger wherein the client computer receives a interdependent list of services and associated metadata from the Generic Mobile Web Services Manager wherein the client computer receives the first information from the Generic Mobile Web Services Manager wherein the Generic Mobile Web Services Manager communicates with web services on behalf of the client computer.

It is an object of the invention to provide the interdependent list of web services and the metadata associated with the interdependent list of services at the client computer consisting of XML statements.

It is another object of the invention for the client computer to prompt the user with candidate web service selections according to said list information. The client computer presents the user selected selection to the user according to said list information wherein the prompting and presenting interface to the user consist of any one of a GUI audio keypad mouse or mechanical actuation.

In a further object of the invention each of the first web service request the first information received and the second web service request comprise XML statements.

Additional features and advantages are realized through the techniques of the present invention. Other embodiments and aspects of the invention are described in detail herein and are considered a part of the claimed invention. For a better understanding of the invention with advantages and features refer to the description and to the drawings.

Due to the steady advances in technology mobile computers are now available as palm top or hand held devices such as personal digital assistants PDAs in vehicle devices business organizers and the like. In addition many people now utilize cellular telephones to access the Internet and to perform various other computing functions. Portable computing devices including but not limited to palm tops PDAs and cellular telephones are often collectively referred to as pervasive or mobile computing devices.

The system may communicate with other computers or networks of computers by way of a network adapter capable of communicating with a network . Example network adapters are communications channels token ring Ethernet or modems. Alternatively the workstation may communicate using a wireless interface such as a CDPD cellular digital packet data card. The workstation may be associated with such other computers in a Local Area Network LAN or a Wide Area Network WAN or the workstation can be a client in a client server arrangement with another computer etc. All of these configurations as well as the appropriate communications hardware and software are known in the art.

Still referring to the networks may also include mainframe computers or servers such as a gateway computer client server or application server remote server which may access a data repository . A gateway computer serves as a point of entry into each network . A gateway is needed when connecting one networking protocol to another. The gateway may be preferably coupled to another network the Internet for example by means of a communications link. The gateway may also be directly coupled to one or more workstations using a communications link. The gateway computer may be implemented utilizing an IBM eServer zSeries 900 Server available from IBM Corp.

Software programming code which embodies the present invention is typically accessed by the processor of the system from long term storage media such as a CD ROM drive or hard drive. The software programming code may be embodied on any of a variety of known media for use with a data processing system such as a diskette hard drive or CD ROM. The code may be distributed on such media or may be distributed to users from the memory or storage of one computer system over a network to other computer systems for use by users of such other systems.

Alternatively the programming code may be embodied in the memory and accessed by the processor using the processor bus. Such programming code includes an operating system which controls the function and interaction of the various computer components and one or more application programs. Program code is normally paged from dense storage media to high speed memory where it is available for processing by the processor . The techniques and methods for embodying software programming code in memory on physical media and or distributing software code via networks are well known and will not be further discussed herein.

In a preferred embodiment the present invention is implemented as one or more computer software programs . The implementation of the software of the present invention may operate on a user s workstation as one or more modules or applications also referred to as code subroutines or objects in object oriented programming which are invoked upon request. Alternatively the software may operate on a server in a network or in any device capable of executing the program code implementing the present invention. The logic implementing this invention may be integrated within the code of an application program or it may be implemented as one or more separate utility modules which are invoked by that application without deviating from the inventive concepts disclosed herein. The application may be executing in a Web environment where a Web server provides services in response to requests from a client connected through the Internet. In another embodiment the application may be executing in a corporate intranet or extranet or in any other network environment. Configurations for the environment include a client server network Peer to Peer networks wherein clients interact directly by performing both client and server function as well as a multi tier environment. These environments and configurations are well known in the art.

The present invention provides Web Services by way of a server application to a mobile client device. The server application interprets keywords from the client device to a form compatible with a desired web service. Thus the client device requires minimal software knowledge of the web service as the server application manages the interfaces. Preferably the server application has a list registry of supported Web Services and is able to provide the list to the client device. In a preferred embodiment various forms of communications from the client device are supported. For example text or audio voice is supported whereby the server application provides a translator for translating voice into text or text into voice.

Preferably referring to a Mobile Web Services Manager GMWSM server application in communication with a mobile client device downloads XML metadata to the client device . The metadata is used by the client device for presenting prompts and formulating web service request messages for web services at the client to be sent to the server which performs the web service request s on behalf of the client by way of the network . The Generic Mobile Web Services Manager GMWSM also preferably utilizes XML metadata in formulating messages and handling messages to from the client .

Referring now to a user is prompted by a GUI display on his mobile client device. The display preferably comprises one or more topics and a list of services . The display optionally presents topics and services using widgets numbering or pull down menus or any technique well known in the art. In the example the display presents the topic Services and the user selects an item service on the GUI using a keypad curser touch screen or voice actuation or any technique well known in the art. The user selects a service in this case Customer information at his GUI display . The GUI is updated to highlight underscore the selected service Customer Information . Based on the user s selection and the client metadata the user s mobile device navigates to a new GUI display prompt having a topic Customer information and a list of items Customer Name and Customer ID . The user fills in the information in the appropriate item s in our example the user eaters Acme in Customer Name item . The user invokes the web services by selecting the client provided Invoke button . The GUI is updated to highlight underscore the selection of Invoke . Responsive to the selection of invoke the client sends a web service request including Acme metadata to the Customer Information web service by way of the GMWSM server. When the response of the invoked web service is received by the mobile device the client presents the information at the display . The mobile device displays the results including topic Customer Information as well as items related to the topic also including function dependent on the web service invoked previously and presented as navigation items Account Rep and Purchase History . Next the user can navigate to another display by selecting a customer ID 001 which is then highlighted on the display and then selecting an appropriate navigation item Account Rep . The selection of the navigation item invokes an Account Rep web service request including metadata ID 001 . The Account Rep web service returns information to the client via the GMWSM server and the client navigates to the new mobile device display Account Rep . The display now presents navigation items and a new topic and new items including information derived from the account rep web service . The user selects an item Email jssmith acme.com and the Employee Information menu item. This action sends metadata Email jsmith acme.com to the Employee Information web service . The response from the web service causes the client display to navigate to a new display . The new display includes a topic Employee information and a list of items .

Preferably metadata about the services and relations between services is kept on the server side which can be configured dynamically and the client is provisioned with a subset of the metadata .

The calling sequence is configured by adding a menu in the service element. Attribute action represents the id of the web service that s defined in the xml. For example Customer Information service has two menus. Account Rep and Purchase History . This way Account Rep and Purchase History web services are available to the user after the result of Customer Information is returned input attribute contains a comma delimited list of attribute names. It defines what parts in the first web service return are used in the second web service request. The client will take the corresponding input field and send it in the request to the GMWSM pipe attribute in the menu element is used to define the arguments including the order to pass to the secondary web service. For instance 0 1 means passing the first and second input attribute from the first web service response in that exact order to the next web service request while 1 0 means passing the first and second input attribute from the first web service response but in the reverse order to the next web service request. In the case of Purchase History we pass 0 which is 001 as customer ID and 5 for history to the secondary web service. As the piping only happens on GMWSM side so pipe is not provisioned to the client.

Referring to one embodiment the present invention is implemented on a Client Device Preferably a mobile handheld computer or PDA for example in communication with a Generic Mobile Web Services Manager GMWSM . The has network access to Web Services and a UDDI Registry . Preferably networks comprise the Internet. The communication protocols are SOAP protocols.

The SOAP Internet Draft search.ietf.org Internet drafts draft box http soap 01.txt provides the following example of a SOAP request 

The Client Device preferably employs an operating system such as MICROSOFT WINDOWS MICROSOFT WINDOWS CE PALM OS and BLACKBERRY .

Generic Mobile Web Services Client GMWSC resides in Client Device . It gets the Web Services metadata from GMWSM and generates a user interface for the user on the Client Device . It also sends the web service request to GMWSM .

The GMWSC is preferably implemented in JAVA programming language as a standalone application installed on the device which should provide a JVM Java Virtual Machine .

GMWSM preferably includes four components a Voice Transcription Service a Fast Path Parsing Service a Web Service Dispatcher and a Web Service Registry .

GMWSM is preferably implemented in JAVA programming language running as a server application in an Application Server such as IBM WEBSPHERE .

The Fast Path Parsing Service is used for parsing and converting Fast Path commands received from a client into XML format. A Fast Path command is a semi natural language sentence it has keyword s and several input attributes for a web service. The multi word attribute should be enclosed in quotes. The keywords and or command format is known to the GMWS Manager s Fast Path Parsing service .

Web Services Registry WSR contains the metadata information of managed mobile Web Services. Available Web Services may include one or more web service . Each web service can be registered with the Web Services Registry by providing the following metadata 

The items to can also be obtained from a UDDI Registry if the web service has a Universal Description Discovery Interface UDDI entry. The WSR will get information such as the request response message format service address etc. from the UDDI entry. The template for Fast Path Parsing can be implemented as a regular expression.

Web Services Dispatcher is also responsible for invoking the web service after receiving the request from the client . A preprocess may be applied to add in any hidden input fields before invoking the Web Services. After a response is received from the web service the response may be transformed by the Web Services Dispatcher to a form acceptable by the client and then transferred back to the client .

As another example embodiment a Client logs into the GMWSM . The user starts the GMWSC application at his Client Device. The user provides his credentials ID and Password . The credentials might be saved at the Client such that they are automatically provided by the client software. The client requests a list of Web Services from the GMWSM with user predefined profile. The client receives a list of Web Services and metadata from the GMWSM. The metadata received is used by the client to formulate communications to and from the GMWSM and to provide GUI structure. Preferably a user can elect one of many communications means to access a web service. For example Voice Fast Path predetermined syntax rule text natural language or by selecting a specific web service.

The user may elect any of Voice input or a specific web service for communications with the GMWSM . In the case of Voice input the client calls the Voice Transcription component and optionally receives the text version of his voice call. Optionally the user may receive a voice version of the text response . Optionally the user can make adjustments to his original syntax in light of the response text. The system generates voice input interface for that selected web service. The client sends the user input to the WSD. Then the client receives the response and generates a GUI display or voice output. And similar to the flow described in the return from the first web service can be used as the input to the second web service.

Optionally the user elects to select a specific web service . The system generates the input interface for that web service. The user provides input which the client uses to generate XML input and calls WSD for XML input. Then the client receives the response and generates a GUI display. And similar to the flow described in the return from the first web service can be used as the input to the second web service.

The capabilities of the present invention can be implemented in software firmware hardware or some combination thereof.

As one example one or more aspects of the present invention can be included in an article of manufacture e.g. one or more computer program products having for instance computer usable media. The media has embodied therein for instance computer readable program code means for providing and facilitating the capabilities of the present invention. The article of manufacture can be included as a pert of a computer system or sold separately.

Additionally at least one program storage device readable by a machine tangibly embodying at least one program of instructions executable by the machine to perform the capabilities of the present invention can be provided.

The flow diagrams depicted herein are just examples. There may be many variations to these diagrams or the steps or operations described therein without departing from the spirit of the invention. For instance the steps may be performed in a differing order or steps may be added deleted or modified. All of these variations are considered a part of the claimed invention.

While a preferred embodiment of the invention has been illustrated and described herein it is to be understood that the invention is not limited to the precise construction herein disclosed and the right is reserved to all changes and modifications coming within the scope of the invention as defined in the appended claims.

