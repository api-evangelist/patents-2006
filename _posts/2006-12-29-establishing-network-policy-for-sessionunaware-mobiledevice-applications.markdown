---

title: Establishing network policy for session-unaware mobile-device applications
abstract: The present invention provides the benefits of negotiated network resources to session-unaware applications. When a session-unaware application runs on a mobile device, the device, knowing that the application is session-unaware, negotiates appropriate network-policy parameters for the application. The application remains unaware, but it receives the benefits of the network-policy parameter negotiation. The network-policy parameter negotiation is carried on between the mobile device and a “network policy mediator” in the network. Together, they reserve the appropriate network resources and secure the appropriate guarantees. In some embodiments, a software “shim” runs in the network-protocol stack on the mobile device. By intercepting network-access attempts sent by the session-unaware application, the shim knows to begin the network-policy parameter negotiation. In some embodiments, the mobile device downloads information about session-unaware applications from the network. This information includes a list of which network-policy parameter guarantees would be most beneficial to each application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07975053&OS=07975053&RS=07975053
owner: United States Cellular Corporation
number: 07975053
owner_city: Chicago
owner_country: US
publication_date: 20061229
---
The present invention relates generally to wireless communications and more particularly to establishing parameters for a wireless communications session.

Many communication applications require specific levels of support from their network carriers. Required support parameters can include for example minimum bandwidth maximum latency and reliability of data packet delivery. These support parameters are generally called quality of service QoS parameters or network policy parameters. Some networks can issue network policy parameter guarantees for their ability to support specific traffic requirements. Network policy parameter guarantees are implemented in a network by allocating scarce resources to application traffic in a manner that meets the applications support requirements. For example a congested network element queues the traffic of applications that are tolerant of latency while transmitting latency sensitive traffic without delay. When the congestion clears the queued traffic is sent.

Most applications can benefit from negotiating to reserve network resources and from securing network policy parameter guarantees when they start up. Some applications however are session unaware that is they were not developed with the ability to negotiate for network resources even though their performance would benefit from a guaranteed level of service.

A session unaware application running on a mobile device may provide unacceptable performance. Simply preventing such an application from running on the mobile device however may also be unacceptable.

In view of the foregoing the present invention provides the benefits of negotiated network resources to session unaware applications. When a session unaware application runs on a mobile device the device knowing that the application is session unaware perhaps by consulting a local database negotiates appropriate network policy parameters for the application. The application remains unaware but it receives the benefits of the network policy parameter negotiation.

The network policy parameter negotiation is carried on between the mobile device and a network policy mediator in the network. Together they reserve the appropriate network resources and secure the appropriate guarantees. The data streams to and from the session unaware application however do not terminate at the network policy mediator.

In some embodiments a software shim runs in the network protocol stack on the mobile device. By intercepting network access attempts sent by the session unaware application the shim knows to begin the network policy parameter negotiation.

In some embodiments the mobile device downloads information about session unaware applications from the network. This information includes a list of which network policy parameters would be most beneficial to each application.

Turning to the drawings wherein like reference numerals refer to like elements the present invention is illustrated as being implemented in a suitable environment. The following description is based on embodiments of the invention and should not be taken as limiting the invention with regard to alternative embodiments that are not explicitly described herein.

Through the Radio Access Point A the mobile device can communicate with many other devices through an internetwork . The internetwork can include other wireless links wired links the Public Switched Telephony Network and the Internet.

In the scenario of the mobile device communicates with another mobile device . The other device may communicate via wireless to a Radio Access Point B and thus to the internetwork . In some circumstances the other mobile device may communicate directly with the mobile device without the intervening internetwork . Depending upon the application it is running the mobile device can communicate with a non mobile device such as a wired telephone or a computing server instead of or in addition to another mobile device . The present invention is not limited by the nature of the devices with which the mobile device communicates.

As discussed in greater detail below when the mobile device runs a session unaware application the mobile device communicates with a network policy mediator in order to request network policy parameters on behalf of that session unaware application. The network policy mediator in turn negotiates the parameters with a network policy arbitrator that makes the final decisions about which policy parameters are to be supported in a session.

The functional components shown in illustrate one possible implementation of aspects of the present invention running on the mobile device . is meant to show exemplary information flows and should not be taken as a literal depiction of software and firmware structures on the mobile device .

In addition to supporting session unaware applications according to embodiments of the present invention the mobile device typically also supports session aware applications . These applications know what network policy parameters they wish and they use a session protocol function to negotiate these parameters over the network with the network policy arbitrator . The network policy parameter negotiations and the data of the session aware applications flow through a stack of network protocol functions such as a network API Application Programming Interface and a packet data function as is well known in the art of computer communications.

In the schematic of a network interceptor shim is inserted between the network communications stack and the applications and . The network interceptor shim notices when an application or attempts to access the network. The network interceptor shim then queries a network policy parameter database looking for an entry for the application or . If the requesting application is session aware typically shown by not having an entry in the network policy parameter database then the network interceptor shim does nothing more because the session aware application handles its own network policy parameter negotiations.

If on the other hand the request for network access is made by a session unaware application then further action is taken. presents an overview of the procedure followed by the mobile device when a session unaware application starts to run step . As with any application or the network interceptor shim intercepts attempts to access the network step . When the network interceptor shim queries the network policy parameter database step it finds an entry for the session unaware application . An example of a network policy parameter database is discussed below in reference to . If the network policy database contains suggested network policy parameters for the application step then the session proxy function sends a request for those parameters to the network policy mediator step . In some embodiments the request is delivered via the Session Initiation Protocol as known in the art. When this set up is complete application data sent by and to the session unaware application flow through the network communications stack without interference by the network interceptor shim step .

Thus the session proxy function performs for the session unaware application the task of network policy parameter negotiation that the session aware application knows how to do for itself. Note that the session unaware application need not be modified in any way to work with embodiments of the present invention The session unaware application runs as it was designed to run without knowledge of network policy parameters but because of the present invention the application reaps the advantages of those parameters.

The network policy parameter database can be arranged in many different ways. presents one non limiting example. Key values are used to index into the network policy parameter database . For example the session unaware application whose network access attempts have been intercepted is compared against the applications listed in the first column . In some cases such as for Application in there are multiple rows for a given application. Which row to use is determined by further examination. If Application is running the TCP protocol see column then the first row is used. Many other key values as known in the art can be used. In many cases the application name alone is sufficient such as for Application and Application . In the example network policy parameter database shown in a default row is provided that applies to any session unaware application not explicitly listed. Once the appropriate row is determined suggested network policy parameters are retrieved. In this simple example a bandwidth and a QoS category related to reliability of delivery are given as appropriate for each row. Many other network policy parameters are known in the art and may be used in the database .

A session unaware application would not know how to specify network policy parameters appropriate for its use. In some cases therefore experts analyze a session unaware application and determine which network policy parameters would be of greatest benefit to it. This information is then downloaded to the network policy parameter database on the mobile device . Updated information can be given to all subscribing mobile devices whenever the updates become available or a particular mobile device can download only the information relevant to those session unaware applications that are of interest to its user. In some embodiments the network policy parameter database is kept up to date via the Open Mobile Alliance Device Management Protocol or via the Session Initiation Protocol subscribe notify method.

After the suggested network policy parameters are retrieved from the network policy parameter database the session proxy function sends a request for those parameters . See step of . shows what happens to the request. The request is received by the network policy mediator step and forwarded along to the network policy arbitrator step . The network policy arbitrator analyzes the request considering network policy determined by administrators of the network and also considering other network policy requests made either by the same mobile device or by other devices step . In any case the network policy arbitrator decides what to do with the request step . In some cases the request must be either accepted as is or denied but in other cases the network policy arbitrator proposes a compromise position. The decision is then passed on to the network policy mediator step which in turns passes on the decision to the mobile device step . In small networks the network policy mediator and the network policy arbitrator can be implemented on the same computing device.

Beginning at the top of when the session unaware application wishes to access the network it issues a call to open local resources. This call conforms to an API provided by the operating system of the mobile device . That API may be for example a BSD sockets interface. The call is intercepted by the network interceptor shim which identifies the session unaware application making the call. The identification process itself is determined by the operating system of the mobile device and can occur in two steps The network interceptor shim first obtains the session unaware application s process or task identifier and then uses that identifier to map to an application identifier.

Next the network interceptor shim queries the network policy parameter database using the application identifier as a key. The response to this query tells the network interceptor shim whether the session unaware application could benefit from a session for negotiating network policy parameters and whether such a session has already been established.

If a session would be beneficial but does not yet exist then the network interceptor shim asks the session proxy function to establish a session for the benefit of the session unaware application . In some instances the request to establish a session propagates through several logical entities in the network until it reaches the network policy mediator . The session is established between the network policy mediator and the session proxy function . Of course if the network interceptor shim discovers that the session already exists then the session can be used as follows without establishing it again.

With the session established the network policy mediator receives the request for network resources the particulars of this request are stored in the network policy database as discussed above in reference to and passes the request along to the network policy arbitrator .

The network policy arbitrator considers the network resource request and passes judgment on it. The request can be denied for any of a number of reasons such as 

Assuming that the request for network resources is granted by the network policy arbitrator the response to the request propagates back through the network policy mediator to the network interceptor shim top of .

With the network resources now in place the network interceptor shim now delivers the original request to open local resources along to the network API . The response to that request is passed by the network interceptor shim to the session unaware application . At this point the session unaware application having made its open local resources request and received its response is now ready to communicate across the network and will unbeknownst to itself benefit by using the network resources reserved for it.

Meanwhile the status of the session just established is delivered to the network policy parameter database .

In view of the many possible embodiments to which the principles of the present invention may be applied it should be recognized that the embodiments described herein with respect to the drawing figures are meant to be illustrative only and should not be taken as limiting the scope of the invention. Those of skill in the art will recognize that some implementation details are determined by specific situations specifically the network protocols and operating system interfaces used. Therefore the invention as described herein contemplates all such embodiments as may come within the scope of the following claims and equivalents thereof.

