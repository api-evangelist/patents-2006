---

title: Intermittent computing
abstract: An intermittent computing system state and intermittent computing module is described for a power-constrained personal computer. In the intermittent computing system state, the power-constrained personal computer may transition between sub-states of the intermittent computing system state according to an intermittent computing schedule. Each intermittent computing sub-state may be associated with hardware power sets and software power sets. Altering power supply to hardware components referenced by hardware power sets may alter power consumed in associated intermittent computing sub-states. A caching mechanism may be configured to make it likely that software components referenced by software power sets are loaded into powered storage types during associated intermittent computing sub-states. In the intermittent computing system state, periods of high functionality may be available over extended periods without the high power consumption associated with a continuous working system state. Average power consumption may be adjusted by varying the intermittent computing schedule.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07730333&OS=07730333&RS=07730333
owner: Microsoft Corporation
number: 07730333
owner_city: Redmond
owner_country: US
publication_date: 20060912
---
This application is a continuation application of and claims priority to U.S. application Ser. No. 10 777 410 filed Feb. 12 2004 entitled Intermittent Computing now pending which is hereby incorporated by reference in its entirety.

This invention pertains generally to computing devices and more particularly to power constrained computing devices.

The personal computer PC has become a common feature of everyday business and domestic life. From document creation and sharing to scheduling and messaging personal computers have become part of the way people communicate and interact. As personal computers have become more useful personal computer users have come to demand that their computers be available whenever and wherever they are.

Mobile personal computers have the potential to make personal computing more available than ever before but typically the availability of a mobile personal computer is constrained by its limited mobile power supply. If the power supply runs out the computer becomes unavailable. As a result a mobile personal computer user seeking to maximize availability may need to monitor and conserve the mobile power supply. At times for example when power consumption associated with a task is high maintaining even modest availability may require significant effort.

Power conservation schemes for conventional mobile personal computers typically involve the computer user manually switching the computer to a working state with relatively high power consumption when attentively working with the computer and then switching the computer to a sleeping or off state with relatively low power consumption otherwise. There are variations on this theme for example the computer may determine at times mistakenly that the computer user is not attentive enough to justify the high power consumption of the working state and then automatically switch to the sleeping or off state. A problem with such schemes is that they leave the computer effectively unavailable whenever the computer user is not attentively working with the computer. For example events and alerts that occur during this period of unavailability may not be brought timely to the attention of the computer user and useful background work may be delayed thus lowering efficiency.

This section presents a simplified summary of some embodiments of the invention. This summary is not an extensive overview of the invention. It is not intended to identify key critical elements of the invention or to delineate the scope of the invention. Its sole purpose is to present some embodiments of the invention in a simplified form as a prelude to the more detailed description that is presented later.

In an embodiment of the invention a timer is configured to generate an up alarm signal. A power constrained personal computer may be reconfigured from a first configuration to a second configuration. The first configuration being one of a set of relatively high functionality and consuming relatively high amounts of power. The second configuration being one of a set of relatively low functionality and consuming relatively low amounts of power. In response to the up alarm signal the power constrained personal computer may be reconfigured from the second configuration to a third configuration. The third configuration being from the same set of configurations as the first configuration and possibly the same as the first configuration.

In an embodiment of the invention the power constrained personal computer is transitioned into an intermittent computing system state. In the intermittent computing system state the power constrained personal computer is transitioned between sub states of the intermittent computing system state. In each sub state of the intermittent computing system state the power constrained personal computer is configured such that the amount of power it consumes is altered. In an embodiment of the invention these steps are performed by a power cycle engine of an intermittent computing module.

In an embodiment of the invention software components interact with one or more elements of an application programming interface API of the intermittent computing module. The elements of the application programming interface may include an Enter Intermittent Computing State element and a Get Set Intermittent Computing Schedule element. Interacting with the Enter Intermittent Computing State element may cause the power constrained personal computer to transition to the intermittent computing system state. Interacting with the Get Set Intermittent Computing Schedule element may configure the intermittent computing schedule.

Prior to proceeding with a description of the various embodiments of the invention a description of an example computing system environment and computer in which the various embodiments of the invention may be practiced is provided. Although not required the invention will be described in the general context of computer executable instructions such as program modules being executed by a computer. Generally programs include routines objects components data structures and the like that perform particular tasks or implement particular abstract data types. The term program as used herein may connote a single program module or multiple program modules acting in concert. The terms computer and computing device as used herein may include any device that electronically executes one or more programs such as personal computers PCs multi processor systems network PCs minicomputers tablet PCs laptop computers and the like. The invention may also be employed in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment programs may be located in both local and remote memory storage devices.

With reference to a system incorporating an embodiment of the invention may include a computer . Components of the computer may include but are not limited to a processing unit a system memory and a system bus that couples various system components including the system memory to the processing unit . The system bus may be any of several types of bus structures including a memory bus or memory controller a peripheral bus and a local bus using any of a variety of bus architectures. By way of example and not limitation such architectures include Industry Standard Architecture ISA bus Micro Channel Architecture MCA bus Enhanced ISA EISA bus Video Electronics Standards Association VESA local bus and Peripheral Component Interconnect PCI bus also known as Mezzanine bus.

The computer may include a real time clock RTC . The real time clock may maintain a representation of the calendar date and time of day ideally although not necessarily in synchronization with a national or international standard. The real time clock may be powered by an independent power supply i.e. a power supply independent of one or more power supplies that provide power to other components of the computer and or the computing system environment . For example the independent power supply of the real time clock may be designed to last for years between recharging or replacement. The real time clock may be further capable of maintaining one or more alarm settings and or count down timers and for example issuing an alarm signal when the clock time reaches one of the alarm settings or when one of the count down timers reaches zero.

The computer typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by the computer and includes both volatile and nonvolatile media and removable and non removable media. By way of example and not limitation computer readable media may comprise computer storage media and communication media. Computer storage media includes volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to random access memory RAM read only memory ROM electrically erasable programmable read only memory EEPROM flash memory or other memory technology compact disk read only memory CD ROM digital versatile disks DVD or other optical disk storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by the computer . Communication media typically embodies computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic radio frequency RF infrared and other wireless media. Combinations of the any of the above may also be included within the scope of computer readable media.

The system memory includes computer storage media in the form of volatile and or nonvolatile memory such as read only memory ROM and random access memory RAM . A basic input output system BIOS containing the basic routines that help to transfer information between elements within computer such as during start up is typically stored in ROM . RAM typically contains data and or program modules that are immediately accessible to and or presently being operated on by processing unit . By way of example and not limitation illustrates operating system application programs other program modules and program data .

The computer may also include other removable non removable volatile nonvolatile computer storage media. By way of example only illustrates a hard disk drive that reads from or writes to non removable nonvolatile magnetic media a magnetic disk drive that reads from or writes to a removable nonvolatile magnetic disk and an optical disk drive that reads from or writes to a removable nonvolatile optical disk such as a CD ROM or other optical media. Other removable non removable volatile nonvolatile computer storage media that can be used in the exemplary operating environment include but are not limited to magnetic tape cassettes flash memory cards digital versatile disks digital video tape solid state RAM solid state ROM and the like. The hard disk drive is typically connected to the system bus through a non removable memory interface such as interface and magnetic disk drive and optical disk drive are typically connected to the system bus by a removable memory interface such as interface .

The drives and their associated computer storage media discussed above and illustrated in provide storage of computer readable instructions data structures program modules and other data for the computer . In for example hard disk drive is illustrated as storing operating system application programs other program modules and program data . Note that these components can either be the same as or different from operating system application programs other program modules and program data . Operating system application programs other program modules and program data are given different numbers here to illustrate that at a minimum they are different copies.

A user may enter commands and information into the computer through input devices such as a tablet a microphone a keyboard and pointing device commonly referred to as a mouse trackball or touch pad. The tablet may include one or more touch screens and or electronic digitizers not shown in . Other input devices not shown may include a joystick game pad satellite dish scanner or the like. These and other input devices are often connected to the processing unit through a user input interface that is coupled to the system bus but may be connected by other interface and bus structures such as a parallel port game port or a universal serial bus USB .

A monitor or other type of display device may also connected to the system bus via an interface such as a video interface . The monitor may also be integrated with a touch screen panel or the like. Note that the monitor and or touch screen panel can be physically coupled to a housing in which the computing device is incorporated such as in a tablet type personal computer. The computer may also include peripheral output devices such as speakers printer and auxiliary display which may be connected through an output peripheral interface or the like. The auxiliary display may include one or more liquid crystal displays LCD and or one or more light emitting diodes LED or the like. For example the auxiliary display may have limited display capabilities relative to the monitor but consume less power.

The computer may operate in a networked environment using logical connections to one or more remote computers such as a remote computer . The remote computer may be a personal computer a server a router a network PC a peer device or other common network node and typically includes many or all of the elements described above relative to the computer although only a memory storage device has been illustrated in . The logical connections depicted in include a local area network LAN and a wide area network WAN but may also include other networks. Such networking environments are commonplace in offices enterprise wide computer networks intranets and the Internet. For example in the present invention the computer may comprise the source machine from which data is being migrated and the remote computer may comprise the destination machine. Note however that source and destination machines need not be connected by a network or any other means but instead data may be migrated via any media capable of being written by the source platform and read by the destination platform or platforms.

When used in a LAN networking environment the computer is connected to the LAN through a network interface or adapter . When used in a WAN networking environment the computer typically includes a modem or other means for establishing communications over the WAN such as the Internet. The modem which may be internal or external may be connected to the system bus via the user input interface or other appropriate mechanism. In a networked environment program modules depicted relative to the computer or portions thereof may be stored in the remote memory storage device. By way of example and not limitation illustrates remote application programs as residing on memory device . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.

In the description that follows the invention will be described with reference to acts and symbolic representations of operations that are performed by one or more computing devices unless indicated otherwise. As such it will be understood that such acts and operations which are at times referred to as being computer executed include the manipulation by the processing unit of the computer of electrical signals representing data in a structured form. This manipulation transforms the data or maintains it at locations in the memory system of the computer which reconfigures or otherwise alters the operation of the computer in a manner well understood by those skilled in the art. The data structures where data is maintained are physical locations of the memory that have particular properties defined by the format of the data. However while the invention is being described in the foregoing context it is not meant to be limiting as those of skill in the art will appreciate that various of the acts and operation described hereinafter may also be implemented in hardware.

Each hardware component in the computing system environment may require power to function. For example the processing unit the system memory and the system bus may each require power to function. Each hardware component in the computing system environment may be capable of being partially powered. Partially powered hardware components may have reduced or limited functionality and or performance. For example when partially powered the system bus may enable communications between the processing unit and the system memory but not between the processing unit and the video interface .

The power to the hardware components of the computing system environment may be supplied from one or more power supplies. For example components of the computing system environment may be part of a mobile personal computer powered from one or more limited mobile power supplies such as batteries or fuel cells. The supply of power to each of the hardware components of the computing system environment may be controllable from hardware firmware and or from software. Such control may be coarse or fine grained. For example the operating system may be able to cause the computer as a whole to transition from a fully powered state to a soft off or minimally powered state. In addition the operating system may be able to control power supply to individual hardware components for example the operating system may be able to cause the hard disk drive to transition between fully powered and minimally powered states. Additional context and details relevant to the invention may be found in the 2.0 dated Jul. 27 2000 published by the advanced configuration and power interface special interest group ACPI SIG .

For clarity embodiments of the invention are described with reference to mobile personal computers however aspects of the invention may be advantageously incorporated into any power constrained computing device.

A mobile personal computer e.g. the computer of may have one or more system power configurations that provide relatively high levels of functionality and consume relatively high levels of power e.g. the working system state S and one or more system power configurations that provide relatively low levels of functionality and consume lower levels of power e.g. the sleeping system state S . In an embodiment of the invention the mobile personal computer may include an intermittent computing system state. In the intermittent computing system state the mobile personal computer may cycle between system power configurations that provide higher and lower levels of functionality and that consume higher and lower levels of power. In the intermittent computing system state the mobile personal computer may maintain a relatively high level of functionality availability over a period e.g. 24 hours with a relatively low average consumption of power for the period.

Device drivers may enable the mobile personal computer operating system to interact with the mobile personal computer hardware . The device drivers may include one or more device drivers for each hardware component of the mobile personal computer hardware . For example each of the non removable non volatile memory interface the network interface and the video interface may have a corresponding device driver. One of the device drivers may enable the mobile personal computer operating system to interact with multiple hardware components of the mobile personal computer hardware .

The mobile personal computer operating system may include an intermittent computing module . The intermittent computing module may enable the mobile personal computer to operate in the intermittent computing system state. For example the intermittent computing module may schedule and execute periodic transitions between different system power configurations.

Each hardware power set in the hardware power sets may reference a set of computer hardware components associated with a particular level of functionality. For example one of the hardware power sets may reference the minimum set of mobile personal computer hardware components required for network communications. Similarly each software power set in the software power sets may reference a set of computer software components associated with a particular level of functionality. For example one of the software power sets may reference the minimum set of mobile personal computer software components required to check for the presence of a wireless network. Software power sets may reference any suitable computer software components for example mobile personal computer operating system components including device drivers application programs and application program components.

The power cycle engine may trigger periodic transitions between low or minimal consumption system power configurations e.g. sleeping system states and higher consumption system power configurations for example as defined by hardware power sets . The power cycle engine may supply power to partially power or remove power from computer hardware components. The power cycle engine may arrange for computer software components referenced by software power sets to reside in preferred storage types for example storage types that result in lower power consumption over one or more power cycles. The power cycle engine may trigger system power configuration transitions according to an intermittent computing schedule.

The mobile personal computer operating system and the application programs may interact with the intermittent computing module through the application programming interface . The application programming interface may provide the ability to create read update and delete hardware power sets and software power sets in the power set database . The application programming interface may provide the ability to configure the intermittent computing schedule. The application programming interface may provide the ability for computer software components to subscribe to power cycle events e.g. system power configuration transitions published by the power cycle event publisher . Further details of intermittent computing module application programming interfaces in accordance with an embodiment of the invention are described below with reference to .

Conventional personal computers have typically defined a working system state e.g. system state S and one or more sleeping system states e.g. system states S S . Such system states are known in the art so only some of their details are described here. User mode computer software components e.g. the application programs of may be executed i.e. by the processing unit when the personal computer is in the working system state. When the personal computer in one of the sleeping system states the execution of computer software components may be restricted to system mode e.g. kernel mode computer software components such as operating system software components or execution may be halted. Halting execution of computer software components may enable a transition of the processing unit to a low power consumption configuration.

The transition from the sleeping system state to the working system state is typically manually initiated by the personal computer user for example by pressing a key on the keyboard . The transition from the working system state to the sleeping system state may be manually initiated by the personal computer user for example by explicitly requesting the operating system to do so or by pressing a dedicated button labeled sleep or off. The operating system may initiate the transition from the working system state to the sleeping system state without user intervention for example if the operating system determines that the computer has not received user input for some period of time. Some conventional personal computers have the ability to transition from the sleeping system state to the working system state without direct user intervention for example the transition may be initiated by an alarm signal sent by the real time clock to the processing unit .

In an embodiment of the invention the mobile personal computer may have an intermittent computing system state. depicts example system states in accordance with an embodiment of the invention. In addition to the working system state and the sleeping system state described above with reference to shows an intermittent computing system state . The intermittent computing system state may include sub states. In this example the intermittent computing system state includes a high power system sub state and a low power system sub state .

In the low power system sub state the mobile personal computer may consume less power from its limited supply than when it is in the high power system sub state . However the high power system sub state may enable mobile personal computer functionality including performance levels not available in the low power system sub state . The power consumption and the functionality available in the high power system sub state and the low power system sub state may be determined by associated hardware power sets and or software power sets . The high power system sub state may also be one of the working system states e.g. system state S. The low power system sub state may also be one of the sleeping system states e.g. system state S.

In the intermittent computing system state the mobile personal computer may automatically e.g. without direct user intervention cycle between the high power system sub state and the low power system sub state . For example the periodic sub state transitions may be triggered by the power cycle engine according to the intermittent computing schedule.

The mobile personal computer operating system may be configured to trigger the transition from the working system state to the intermittent computing system state . For example the mobile personal computer operating system may be configured to trigger the transition from the working system state to the intermittent computing system state instead of to the sleeping system state . The relatively high level of functionality of the high power system sub state may be periodically available in the intermittent computing system state whereas it may not be available in the sleeping system state . Nevertheless the intermittent computing schedule may be such that the power consumed in the intermittent computing system state may be less on average than the power consumed in the working system state .

The mobile personal computer may transition from the intermittent computing system state to the working system state . For example the working system state may be more suitable than the intermittent computing system state when the mobile personal computer user is attentively working with the mobile personal computer. The mobile personal computer may transition from the intermittent computing system state to the sleeping system state . For example while the intermittent computing system state may consume less power on average than the working system state the intermittent computing system state may still consume more power than the sleeping system state . If the mobile personal computer is very low on power the sleeping system state may be more suitable than the intermittent computing system state .

When the mobile personal computer is in the working system state its power consumption is at a high level P. When the mobile personal computer is in the intermittent computing system state its power consumption cycles between a low level Pand the high level Paccording to a relatively simple intermittent computing schedule. In this example the high level Pof power consumption in the intermittent computing system state is the same as the level of power consumption in the working system state but this is not necessarily the case.

In this example each power cycle within the intermittent computing system state is the same. The mobile personal computer remains in the low power system sub state for a sleep time T and then transitions to the high power system sub state for a wake time T . The power cycle time T is the sum of the sleep time and the wake time . The power cycle rate is the inverse of the power cycle time . The average power Pconsumed during the intermittent computing system state may be calculated using standard techniques e.g. 

The average power Pconsumed while in the intermittent computing system state may be varied between for example the high level Pand the low level Pby adjusting the intermittent computing schedule. In the case of the relatively simple intermittent computing schedule example depicted in the intermittent computing schedule may be characterized with two parameters for example the sleep time and the wake time or the wake time and the power cycle rate.

An example of functionality that may be available in the high power system sub state that may not be available in the low power system sub state is the ability for the mobile personal computer to communicate with remote computers over a wireless network. In addition to sufficient power supply the availability of such functionality may depend upon other factors that change over time for example the availability of suitable wireless network service. In an embodiment of the invention the intermittent computing schedule is adjusted in response to such factors. For example the power cycle rate may be reduced when suitable wireless network service is not available thus reducing average power Pconsumption during the period that the high level Pof power consumption would not result in a higher level of functionality.

In an embodiment of the invention the mobile personal computer e.g. the intermittent computing module of the mobile personal computer may be configured with a power cycle rate curve that defines how the intermittent computing schedule should be adjusted in response to a power cycle rate control variable. illustrates an example power cycle rate curve in accordance with an embodiment of the invention. The power cycle rate curve defines how the power cycle rate of the intermittent computing schedule changes in response to the power cycle rate control variable. Examples of suitable power cycle rate control variables include the amount of time since a particular network was available or the number of consecutive network presence tests with a false result other network specific variables such as nominal or available bandwidth latency cost and security level proportion of power supply consumed and weighted combinations thereof.

In this example the power cycle rate of the intermittent computing schedule begins at a default value R e.g. 1 cycle every 5 minutes corresponding to a starting point on the power cycle rate curve and to a default power cycle rate control variable value X. If the power cycle rate control variable value decreases the power cycle rate increases to a maximum value R e.g. 1 cycle every 2 minutes . If the power cycle rate control variable value increases the power cycle rate decreases to a minimum value R e.g. 1 cycle every 60 minutes . If the power cycle rate control variable value increases further the power cycle rate may temporarily drop to zero until the control variable value decreases again. The default power cycle rate Rmay be the maximum power cycle rate R. There may not be a pre determined default starting point for example the starting value of the power cycle rate may be determined by the value of the control variable when the mobile personal computer enters the intermittent computing system state .

Intermittent computing schedules and resultant power cycle graphs may be more complex than the intermittent computing schedule and power cycle graph illustrated in . In particular the intermittent computing system state may have additional system sub states and thus the power cycle graph may transition to additional levels of power consumption i.e. levels of power consumption other than the high level Pand the low level Pshown in . Each additional system sub state may be associated with one or more hardware power sets and or one or more software power sets of the intermittent computing module . Hardware power sets and software power sets may be nested i.e. reference other power sets and at least partially ordered e.g. in terms of functionality enabled by the power set and or power consumed by the power set.

Hardware power set may reference computer hardware components that enable access to non volatile memory for example the non removable non volatile memory interface and the hard drive . Hardware power set may reference computer hardware components that enable video output for example the video interface and the monitor . Hardware power set contains hardware power sets and . Hardware power set may further reference the remaining computer hardware components of except for low priority peripherals for example the printer . Hardware power set may reference the low priority peripherals. The hardware power sets and may represent a standard set of hardware power sets incorporated into each intermittent computing module . Additional custom hardware power sets may be defined for example by application programs .

As the mobile personal computer cycles through sub states of the intermittent computing system state the mobile personal computer may turn on i.e. supply power to each referenced computer hardware component or turn off i.e. remove power from each referenced computer hardware component each of the hardware power sets and . Set mechanics e.g. the properties of intersection union and set difference operations may apply when turning on or off a particular hardware power set. For example in an embodiment of the invention turning on hardware power set when hardware power set is already on need not include more than turning on hardware power sets and . Similarly a request to turn off hardware power set but keep hardware power set on need not include more than turning off hardware power sets and . Hardware power sets need not be turned on or off in a particular order for example hardware power sets and may be turned on without turning on hardware power sets and or .

The hardware power sets and may reference computer hardware components at a higher level of granularity than the level of granularity at which a particular mobile personal computer is able to control power supply. For example the hardware power sets may reference portions of the system bus but the mobile personal computer may have ability to power all or none of the system bus . In such a case the mobile personal computer e.g. the intermittent computing module of the mobile personal computer may power at least the computer hardware components referenced by a particular hardware power set that is the mobile personal computer may power a superset of the computer hardware components referenced by the hardware power set. For example although hardware power set references a portion of the system bus the mobile personal computer may power the entire system bus if it lacks control at the specified level of granularity.

Similar relationships may apply to software power sets . illustrates an example set of software power sets in accordance with an embodiment of the invention. The software power sets and each represent one of the software power sets . For example the software power set may reference a minimal kernel set of mobile personal computer operating system software components. Each software power set and may reference additional computer software components such as device drivers application programs and dynamic link libraries DLL . The computer software components referenced by software power sets may correspond to computer hardware components reference by hardware power sets . For example software power set may reference device driver software for the network interface referenced by hardware power set . However software power sets and software power set organization may be independent of hardware power sets and hardware power set organization.

Rather than software power sets being turned on e.g. loaded into fast access system memory of or turned off e.g. unloaded from fast access system memory with each intermittent computing sub state transition software power sets may be better understood as being turned on or off for the intermittent computing system state as a whole i.e. across power cycles. Each computer software component referenced by software power sets may provide functionality to the mobile personal computer user if the computer software component is executable e.g. located in storage volatile or non volatile to which the processing unit has access. Different types of storage may have different levels of power consumption and high power storage hardware may not be supplied power during low power sub states of the intermittent computing system state . As a result computer software components located in high power storage e.g. the hard drive may not be executable during low power sub states of the intermittent computing system state .

Computer software components referenced by software power sets . that are turned on e.g. by being registered with the intermittent computing module may be loaded for example by the intermittent computing module from high power storage into low power storage during one of the system states when power is supplied to the high power storage. Mobile personal computers may incorporate sophisticated caching mechanisms to manage the transfer of computer software components between storage types for example between plentiful but relatively slow access storage e.g. the hard disk of and relatively scarce but faster access storage e.g. the RAM . Such caching mechanisms may be adapted for the transfer of computer software components between storage that is plentiful but has a relatively high level of power consumption and storage that is relatively scarce but has a lower level of power consumption. Rather than guaranteeing the transfer of computer software components to a particular storage with certainty such mechanisms typically make it likely or at least more likely that designated software components end up in the desired storage. Details of a suitable caching mechanism may be found in co pending U.S. patent application Ser. No. 10 325591 entitled METHODS AND MECHANISMS FOR PROACTIVE MEMORY MANAGEMENT filed on Dec. 20 2002.

Each sub state of the intermittent computing system state may be associated with one or more hardware power sets and or one or more software power sets . illustrates an intermittent computing system state that includes three example sub states. The intermittent computing system state of includes a high power system sub state an intermediate power system sub state and a low power system sub state .

The low power system sub state may be associated with hardware power set and software power set . The low power system sub state may provide only basic mobile personal computer operating system functionality including for example intermittent computing module functionality. The intermediate power system sub state may be associated with hardware power set and software power set . The intermediate power system sub state may provide basic network communications and mobile personal computer user alert functionality. The high power system sub state may be associated with hardware power sets and and with software power sets and . The high power system sub state may provide a restricted execution environment for a calendaring and messaging application including for example hard drive access but not full video e.g. monitor .

In the low power system sub state the hardware power set may be turned on and during one of the system states in which the hard drive was powered the software power set may have been loaded into low power storage for example into RAM . In the intermediate power system sub state the hardware power set may be turned on and again during one of the system states in which the hard drive was powered the software power set may have been loaded into RAM . In transitioning between the low power system sub state and the intermediate power system sub state the computer hardware components referenced by the difference between the hardware power set and the hardware power set may have power supplied or removed. However the computer software components loaded into RAM may remain unaffected.

In the high power system sub state the hardware power sets and may be turned on and as the high power system sub state is one of the system states in which the hard drive is powered unloaded computer software components referenced by software power sets and may be loaded into RAM . In transitioning from the high power system sub state to the intermediate power system sub state the hardware power set may be turned off. The software components referenced by software power set may be unloaded from RAM although this may be unnecessary if there is sufficient RAM . In transitioning from the high power system sub state to the low power system sub state the hardware power sets and may be turned off. The software components referenced by software power set may be unloaded from RAM.

The software components associated with software power sets and may remain loaded in RAM even thought they are not associated with the low power system sub state because the low power system sub state may next transition to the intermediate power system sub state with which system state they are associated and which is not a system state in which the hard drive is powered. The power cycle engine of the intermittent computing module may determine which computer hardware components to power and to remove power from in accord with the configured hardware power sets . The power cycle engine may also determine which computer software components to load and unload from low power storage in accord with the configured software power sets . Alternatively the intermittent computing module may configure the caching mechanism of the mobile personal computer to load and unload from low power storage in accord with the configured software power sets .

More complex power cycle graphs are possible than the power cycle graph shown in . In particular as the number of sub states of the intermittent computing system state and increases the intermittent computing schedule that generates the power cycle graph may become more complex. shows a more complex example of a power cycle graph in accordance with an embodiment of the invention. The example power cycle graph may be generated by mobile personal computers incorporating the intermittent computing system state with three sub states as shown in .

Referring to the mobile personal computer begins in the working system state and then transitions to the intermittent computing system state at time T. The mobile personal computer remains in the intermittent computing system state until time Tand then transitions back to the working system state . When the mobile personal computer is in the working system state it consumes power at level P. When in the intermittent computing system state the power consumption of the mobile personal computer varies depending on the intermittent computing sub state or . In sub state the mobile personal computer consumes a high level Pof power. In sub state the mobile personal computer consumes an intermediate level Pof power. In sub state the mobile personal computer consumes a low level Pof power.

After transitioning to the intermittent computing system state the mobile personal computer remains in the low power system sub state for a time and then transitions to the intermediate power system sub state . The mobile personal computer cycles from the intermediate power system sub state to the low power system sub state twice before transitioning from the low power system sub state to the high power system sub state . Each intermediate to low power cycle is the same. The mobile personal computer remains in the intermediate power system sub state for a wake time and then in the low power system sub state for a sleep time . While in the intermediate power system sub state the mobile personal computer may check for the presence of wireless networks and communicate with remote computers if wireless network service is present. The mobile personal computer may alert the mobile personal computer user to incoming messages with for example the auxiliary display . However the mobile personal computer may have to wait until it transitions to the high power system sub state before the incoming message may be processed by for example the calendaring and messaging application which may not be available in the intermediate power system sub state .

The mobile personal computer remains in the high power system sub state for a high power wake time and then returns to the low power system sub state for a post high power sleep time . The post high power sleep time may be different for example from the sleep time . After another two intermediate to low power cycles the mobile personal computer returns to the high power system sub state . This time instead of returning to the low power system sub state the mobile personal computer returns to the working system state . For example this may be because one of the messages processed by the messaging application during the last high power system sub state resulted in the messaging application triggering an intermittent computing system state exit because the calendaring application was configured to present a reminder shortly after time T or because the mobile computer user pressed a key on the keyboard .

More complex intermittent computing schedules may result in lower average power consumption without the mobile computer user perceiving a loss of functionality. The intermittent computing schedule with the power cycle graph consumes an average power of level P. The average power consumption of more complex intermittent computing schedules may be more difficult to calculate precisely than for simpler intermittent computing schedules.

Computer software components may configure and interact with the intermittent computing module through the intermittent computing application programming interface . depicts an example intermittent computing application programming interface in accordance with an embodiment of the invention. The intermittent computing application programming interface may include an Edit Power Set element a Subscribe to Cycle Event element an Enter Intermittent Computing State element an Exit Intermittent Computing State element a Get Set Intermittent Computing Schedule element a Postpone Cycle Transition element and a Be Awake At element . Each application programming interface element and may include one or more interface specifications that specify the manner in which computer software components may interact with the intermittent computing module . As will be apparent to one of skill in the art the interface specifications may include function call specifications program object specifications message specifications such as request response message pairs and or any suitable programming interface specification.

The Edit Power Set application programming interface element may enable computer software components to create read update and delete hardware power sets and software power sets of the intermittent computing module . Interface specification parameters may include one or more hardware power sets one or more software power sets and power set names. Each hardware power set may reference one or more computer hardware components and one or more hardware power sets . Each software power set may reference one or more computer software components and one or more software power sets . For example each computer hardware component reference may be a simple identifier a data structure characterizing the computer hardware component or a program object providing access to aspects of the computer hardware component. A power set name may be a character string labeling the power set.

The Subscribe to Cycle Event application programming interface element may enable computer software components to subscribe to power cycle events generated by the power cycle event publisher of the intermittent computing module . Examples of power cycle events include entering intermittent computing system state exiting intermittent computing system state entering intermittent computing sub state and exiting intermittent computing sub state. For example the power cycle event publisher may publish a power cycle event by calling a callback function or by sending a power cycle event message. The power cycle event subscription may specify a set of power cycle events to which to subscribe a set of hardware power sets to be turned on a set of software power sets to be loaded and a set of conditions to be satisfied before notifying the subscriber of the power cycle events. Examples of conditions to be satisfied may include simple flags time of day specifications event notify rate limits and the like.

The Enter Intermittent Computing State application programming interface element may enable computer software components to cause the mobile personal computer to enter the intermittent computing system state and . Interface specification parameters may include one of the intermittent computing sub states to which to initially transition. The Exit Intermittent Computing State application programming interface element may enable computer software components to cause the mobile personal computer to exit the intermittent computing system state . Access to these interface elements and may be restricted to privileged software components e.g. mobile personal computer operating system software components.

The Get Set Intermittent Computing Schedule application programming interface element may enable computer software components to read and configure the intermittent computing schedule of the power cycle engine of the intermittent computing module . For a simple bi level power cycle such as the power cycle illustrated in interface specification parameters may include a sleep time and wake time pair a power cycle rate and wake time pair a power cycle rate alone assuming wake time is minimized by software components responding to power cycle events and a power cycle rate curve and control variable specification. Both the power cycle rate curve specification and the control variable specification may be references to functions or the like. More complex intermittent computing schedules that result in power cycle graphs such as the one illustrated in may be built up from bi level power cycle specifications. For example interface specification parameters may include an ordered set of 3 tuples where each 3 tuple specifies a power cycle rate a lower power system sub state and a higher power system sub state. As will be apparent to one of skill in the art more generalized intermittent computing schedule specifications are possible such as an ordered list of intermittent computing sub states with times to reside in each sub state to be repeated as necessary.

The Postpone Cycle Transition application programming interface element may enable computer software components to temporarily vary the intermittent computing schedule of the power cycle engine of the intermittent computing module by postponing the transition from the current intermittent computing sub state. For example one of the application programs may postpone transition from the high power system sub state to the low power system sub state in order to fully receive a large incoming message from the wireless network. Interface specification parameters may include an amount of time for which to postpone the transition.

The Be Awake At application programming interface element may enable computer software components to vary the intermittent computing schedule of the power cycle engine of the intermittent computing module by specifying particular future times at which the mobile personal computer should attempt to be in particular intermittent computing sub states. For example the calendaring application may specify that the mobile personal computer should be in the high power system sub state at a particular date and time because a mobile personal computer user appointment reminder is due shortly thereafter. Interface specification parameters may include one or more date and time specifications and or one or more date and time range specifications as well as the intermittent computing sub states to be in at during those times.

The power cycle engine may trigger intermittent computing sub state transitions according to the intermittent computing schedule. depicts example steps that may be performed by the power cycle engine in accordance with an embodiment of the invention. The power cycle engine may utilize real time clock timers. In an embodiment of the invention the power. cycle engine sets real time clock timers to generate up alarms and down alarms. Up alarms signal the power cycle engine that it may be time to transition from a lower power system sub state e.g. the low power system sub state of to a higher power system sub state e.g. the intermediate power system sub state . Down alarms signal the power cycle engine that it may be time to transition from for example the high power system sub state to the low power system sub state .

At step an up alarm is received by the power cycle engine and the power cycle engine services e.g. stops the real time clock timer that generated the up alarm. This assumes that the real time clock has previously been set by the power cycle engine to generate the up alarm e.g. that the mobile personal computer is in the intermittent computing system state . If the mobile personal computer is newly entering the intermittent computing system state the up alarm may not be pending and step may be skipped.

At step a down timer may be set by the power cycle engine to generate a down alarm at the time dictated by the intermittent computing schedule for the next transition to one of the lower power system sub states. This assumes that the next transition will be to one of the lower power system sub states. If the next transition will be to one of the higher power system sub states then step may also be skipped.

At step the hardware power sets associated with the current intermittent computing sub state may be turned on. At step the computer software components associated with the current intermittent computing sub state may be loaded. At step subscribers to power cycle events may be notified for example by the power cycle event publisher that an entering intermittent computing system state or sub state power cycle event has occurred. Step is described in more detail with reference to below.

At step the procedure may wait for one of at least two events. First some subscribers to power cycle events may be associated for example with a semaphore that the subscriber notifies when the subscriber has finished any work it wanted to do in response to the power cycle event. If each such subscriber indicates that it has finished responding to the power cycle event then the procedure may progress to step . The procedure may also progress to step if a wait timeout occurs. Second the down timer that was set in step may generate a down alarm. If the down alarm is generated the procedure progresses to step of the service interrupt routine .

At step the real time clock timer that generated the down alarm may be serviced. At step it may be determined if for example any power cycle event subscribers have requested that the down transition be postponed for example by utilizing the Postpone Cycle Transition application programming interface element of the application programming interface . If postponement has been requested then the procedure progresses to step . Otherwise the service interrupt routine exits to step . At step the down timer may be set to the requested postponement time and the service interrupt routine may return to step to wait.

At step it may be determined if for examples any power cycle event subscribers have requested that the mobile personal computer exit the intermittent computing system state for example by utilizing the Exit Intermittent Computing State application programming interface element . If intermittent computing system state exit has been requested the procedure depicted by may exit without setting an up timer. Otherwise the procedure progresses to step .

At step an up timer may be set by the power cycle engine to generate an up alarm at the time dictated by the intermittent computing schedule for the next transition to one of the higher power system sub states. When the up alarm occurs at that later time the procedure may begin again at step . In the meantime the procedure progresses to step . At step the mobile personal computer transitions from the current power system sub state to one of the lower power system sub states for example with steps similar to steps and described above. Following step the processing unit may no longer be powered but it may be powered up again for example by the next alarm generated by the real time clock .

At step it may be determined if the computer hardware components referenced by the hardware power set have been supplied with power e.g. at step of . If the referenced hardware components have not been supplied with power then the procedure progresses to step and the subscriber is not notified of the event on the assumption that the subscriber requires the hardware power set turned on in order to properly respond alternative embodiments need not make this assumption . Otherwise the procedure progresses to step .

At step the subscription may be checked for an associated software power set. If the subscription is associated with one of the software power sets then the procedure progresses to step . Otherwise the procedure progresses to step . At step it may be determined if the computer software components referenced by the software power set have been loaded into storage accessible to the processing unit e.g. RAM that is supplied with power. If the referenced software components have not been loaded then the procedure progresses to step and the subscriber is not notified of the event on the assumption that the subscriber requires the referenced software components loaded in order to properly respond again alternative embodiments need not make this assumption . Otherwise the procedure progresses to step .

At step the subscription may be checked for an associated set of conditions. If the subscription is associated with a set of conditions then the procedure progresses to step . Otherwise the procedure progresses to step . At step each of the associated conditions may be checked for satisfaction. If each of the associated conditions is satisfied then the procedure progresses to step . Otherwise the procedure progresses to step .

At step the subscriber may be notified of the power cycle event. For example the subscriber may be called at a registered callback function or a notification message may be sent to the subscriber at a notification address of the subscription. The procedure then progresses to step . At step it may be determined if there are more subscriptions. If there are more subscriptions then the procedure returns to step . Otherwise the present procedure exits.

All references including publications patent applications and patents cited herein are hereby incorporated by reference to the same extent as if each reference were individually and specifically indicated to be incorporated by reference and were set forth in its entirety herein.

The use of the terms a and an and the and similar referents in the context of describing the invention especially in the context of the following claims are to be construed to cover both the singular and the plural unless otherwise indicated herein or clearly contradicted by context. The terms comprising having including and containing are to be construed as open ended terms i.e. meaning including but not limited to unless otherwise noted. Recitation of ranges of values herein are merely intended to serve as a shorthand method of referring individually to each separate value falling within the range unless otherwise indicated herein and each separate value is incorporated into the specification as if it were individually recited herein. All methods described herein can be performed in any suitable order unless otherwise indicated herein or otherwise clearly contradicted by context. The use of any and all examples or exemplary language e.g. such as provided herein is intended merely to better illuminate the invention and does not pose a limitation on the scope of the invention unless otherwise claimed. No language in the specification should be construed as indicating any non claimed element as essential to the practice of the invention.

Preferred embodiments of this invention are described herein including the best mode known to the inventors for carrying out the invention. Variations of those preferred embodiments may become apparent to those of ordinary skill in the art upon reading the foregoing description. The inventors expect skilled artisans to employ such variations as appropriate and the inventors intend for the invention to be practiced otherwise than as specifically described herein. Accordingly this invention includes all modifications and equivalents of the subject matter recited in the claims appended hereto as permitted by applicable law. Moreover any combination of the above described elements in all possible variations thereof is encompassed by the invention unless otherwise indicated herein or otherwise clearly contradicted by context.

