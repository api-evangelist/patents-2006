---

title: Multimedia middleware apparatus using metadata, method for controlling multimedia middleware, and storage medium thereof
abstract: A multimedia middleware apparatus using metadata, a control method and a storage medium are provided which can receive metadata in multimedia middleware provided in a terminal, easily add/delete/change a service, and effectively maintain and manage middleware components. When an open multimedia terminal processes multimedia contents, a multimedia middleware service structure for expressing information of a name, configuration, version and application programming interface (API) update is configured in the form of metadata. Lists of standard and non-standard services of multimedia middleware are then generated and managed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08775620&OS=08775620&RS=08775620
owner: Information and Communications University, Research and Industrial Cooperation Group
number: 08775620
owner_city: Daejeon
owner_country: KR
publication_date: 20061012
---
This application claims the benefit under 35 U.S.C. 119 a of a Korean Patent Application filed in the Korean Intellectual Property Office on Oct. 12 2005 and assigned Serial No. 2005 96297 the entire disclosure of which is hereby incorporated by reference.

The present invention generally relates to a middleware technology for interworking between a physical network and a higher application in a wired wireless communication network. More particularly the present invention relates to a multimedia middleware apparatus using metadata a control method and a storage medium that can easily maintain and manage multimedia middleware service components.

Middleware is a software layer for use in interworking for a data exchange and the like between applications or between an application and a network for providing the services of identification authentication security control multimedia and the like related to devices thereon. That is when a network connects to an application or applications directly connect to each other codes should be added to all related applications for communicating with network devices or other applications. Because the middleware supports interworking between a network and an application or between applications a difficult work for adding codes to the related applications can be omitted.

Among various middleware technologies a multimedia middleware technology supports for example on line content Internet broadcast or digital data broadcast reception. For example a communication network using the multimedia middleware may be a mobile communication network for providing various packet services to mobile terminals like mobile phones and the like.

The conventional mobile terminal manufacturers have designed manufactured and sold mobile terminals with hardware and software considering functions and services requested by users. However because a design change is required at every time with the rapid development of mobile communication markets and various requests of the users a conventional method for designing mobile terminals does not provide sufficient flexibility that can satisfy market requests.

Thus the mobile terminal manufacturers have proposed a middleware technology for interfacing between a platform of a mobile terminal and a higher application while considering limitations in the conventional mobile terminal design method. Whenever a new application is embedded using the middleware technology various middleware applications can be supported without largely changing a design of the mobile terminal.

In an example of the mobile communication network the conventional multimedia middleware technology is provided in the form of a binary executable file or a binary library file in which middleware service components are simply implemented. Thus the conventional multimedia middleware is used by calling an associated binary executable file or an associated binary library file while a multimedia application runs. A multimedia processing function of middleware is managed by reconfiguring service components and replacing an existing service component file when a new function is added to the service components.

Because the conventional multimedia middleware should reconfigure service components whenever a new function is added to the service components it is difficult to maintain the service components. Further because the existing service components should be replaced for a new multimedia application there is a significant inconvenience in managing middleware.

Accordingly there is a need for an improved multimedia middleware apparatus and method that maintains the multimedia middleware service components and manages the multimedia middleware.

An aspect of exemplary embodiments of the present invention is to address at least the problems and or disadvantages and to provide at least the advantages described below. Accordingly an aspect of exemplary embodiments of the present invention is to provide a multimedia middleware apparatus using metadata a control method and a storage medium that can easily maintain and manage multimedia middleware service components.

Moreover an aspect of exemplary embodiments of the present invention provides a multimedia middleware apparatus using metadata a control method and a storage medium that can easily add delete change a service by managing a list of multimedia middleware services.

In accordance with an aspect of exemplary embodiments of the present invention there is provided a multimedia middleware apparatus of a terminal for supporting a multimedia application in which a service metadata reception section receives metadata comprising middleware application programming interface API information as structural information of at least one multimedia middleware service to run a multimedia application a service implementation code acquisition section acquires a service implementation code related to the metadata needed for the at least one multimedia middleware service and a service management section identifies the service implementation code needed for the at least one multimedia middleware service from the received metadata and controlling an operation for applying the service implementation code acquired by the service implementation code acquisition section to an associated multimedia middleware service.

In accordance with another aspect of exemplary embodiments of the present invention there is provided a method for controlling multimedia middleware of a terminal for supporting a multimedia application in which metadata comprising middleware application programming interface API information is received as structural information of at least one multimedia middleware service to run a multimedia application a service implementation code related to the metadata required for the at least one multimedia middleware service is acquired and the acquired service implementation code is applied to an associated multimedia middleware service.

In accordance with yet another aspect of exemplary embodiments of the present invention there is provided a storage medium for recording multimedia middleware for supporting a multimedia application in which a service metadata reception section receives metadata comprising middleware application programming interface API information as structural information of at least one multimedia middleware service to run a multimedia application a service implementation code acquisition section acquires a service implementation code related to the metadata required for the at least one multimedia middleware service and a service management section identifies the service implementation code required for the at least one multimedia middleware service from the received metadata and controls an operation for applying the service implementation code acquired by the service implementation code acquisition section to an associated multimedia middleware service.

Throughout the drawings the same drawing reference numerals will be understood to refer to the same elements features and structures.

The matters defined in the description such as a detailed construction and elements are provided to assist in a comprehensive understanding of exemplary embodiments of the invention. Accordingly those of ordinary skill in the art will recognize that various changes and modifications of the embodiments described herein can be made without departing from the scope and spirit of the invention. Also descriptions of well known functions and constructions are omitted for clarity and conciseness.

Exemplary embodiments of the present invention express a middleware service of a terminal requiring a multimedia application in the form of metadata. In general the metadata is structured data used to describe other data and is data assigned to contents in a regular rule such that desired information is efficiently retrieved and used from among a large amount of information. In the exemplary embodiments of present invention the metadata includes structural information of a multimedia middleware service.

Further exemplary embodiments of the present invention propose an installation of a module for implementing a new standard or non standard service in multimedia middleware by generating and managing metadata of a structure of standard and non standard services and open multimedia middleware for deleting and changing a service implementation module by referring to structural lists of the standard and non standard services such that a module for implementing the existing standard and non standard services can be easily deleted and changed.

To model the multimedia middleware service the exemplary embodiments of the present invention expresses name configuration version and application programming interface API update information in the form of an extensible markup language XML schema. Herein the XML is one of the universal languages for employing data on the web. The exemplary embodiments of the present invention generate metadata for a multimedia middleware service structure based on a model of the XML schema form and manage the metadata on the service structure information in multimedia middleware. Herein it is assumed that a service or multimedia service is a multimedia middleware service. illustrates a metadata or Moving Pictures Experts Group MPEG multimedia middleware logical service MWLS structure for expressing a list of middleware services in accordance with an exemplary embodiment of the present invention.

Metadata MWLS defined in an exemplary embodiment of the present invention includes elements of a multimedia middleware service container or MM services and a change history of a multimedia middleware application programming interface API as illustrated in . Although not illustrated in the metadata MWLS of includes attributes of version information for managing a multimedia middleware service an issue date of multimedia middleware and position information or documentationRef for referring to an associated service document.

An XML description for expressing a metadata structure of the multimedia middleware service in the present invention is as follows.

In the XML description for expressing the metadata structure of the multimedia middleware service container is a set of multimedia middleware services to be supported in multimedia middleware. As indicated by a dotted line in the change history of the multimedia middleware API is a container for describing addition modification and deletion of an item within the multimedia middleware. For example the item includes at least one of a multimedia middleware parameter class type a MM service and a multimedia middleware service method as described below.

In the XML description the version is version information of the associated metadata MWLS the date is an issue date of the associated metadata MWLS and the documentationRef is a reference position of a document related to the associated metadata MWLS .

In the multimedia middleware service container or MM services can include multimedia middleware parameter class types and MM services . First the multimedia middleware parameter class types will be described in detail with reference to . The MM services include attributes of a service identifier ID and name of each multimedia middleware service and MW standard service information and include element values of multimedia middleware service methods and a description of each multimedia middleware service method. In this case each multimedia middleware service method includes elements of parameters . Further each multimedia middleware service method includes attributes of its name and a result or output type of the associated method that is API . The multimedia middleware service method describes the associated API. The parameters include name type and optional attributes. The parameters are parameters of the associated API.

In the change history of the multimedia middleware API includes addition information modification information and deletion information . For example data or object to be added modified or deleted includes at least one of the multimedia middleware parameter class type the MM service and the multimedia middleware service method as described in the following XML description.

First the addition information has an attribute of a name of added data or object for indicating which data or object has been added among the multimedia middleware parameter class type the MM service and the multimedia middleware service method for describing the multimedia middleware API. Similarly the modification information has an attribute of a name of modified data or object for indicating which data or object has been modified among the multimedia middleware parameter class type the MM service and the multimedia middleware service method for describing the multimedia middleware API. Further the deletion information has an attribute of a name of deleted data or object for indicating which data or object has been deleted among the multimedia middleware parameter class type the multimedia middleware service and the multimedia middleware service method for describing the multimedia middleware API.

In the terminal is a wired terminal for example a computer with a network access means or a wireless terminal for example a cellular phone personal communications service PCS phone personal digital assistant PDA an international mobile telecommunications 2000 IMT 2000 phone PDA phone or smart phone . The network can serve as various wired wireless communication networks. Further the multimedia application provider may be a server for providing a multimedia application or a storage medium containing the multimedia application. The application is executable codes of contents metadata or multimedia middleware services that is service implementation codes. The terminal includes a multimedia service application processing block for running an application in a higher layer a multimedia middleware block for processing the metadata and service implementation codes received through the network or the storage medium and a platform block in which a basic operating system OS for supporting the multimedia service of the terminal is embedded.

Referring to the multimedia middleware block of the terminal connects to the multimedia service application block through an application layer interface and connects to the platform block through a platform layer interface .

A service management section corresponding to a controller of the multimedia middleware block manages metadata of a multimedia middleware service in accordance with an exemplary embodiment of the present invention. The metadata required to run a multimedia application transmitted through the network is received in a metadata transmission and reception section . A service metadata parser parses the received metadata and then outputs the parsed metadata to the service management section . The service management section identifies a service implementation code required for the associated multimedia middleware service from the parsed metadata and acquires the associated service implementation code through a service implementation code acquisition section . In this case the associated service implementation code may be downloaded or copied through a storage medium. The service implementation code acquired by the service implementation code acquisition section is installed deleted updated or changed in a service implementation code layer through a service implementation code installation deletion update or change section .

The change of the service implementation code has the generic meaning for installation deletion and update operations. In a process for installing the acquired service implementation code the service management section determines whether the acquired service implementation code is related to a standard or non standard service. If the acquired service implementation code is related to the standard service as a determination result the service management section verifies validity of the code by comparing the acquired service implementation code with metadata of the standard service. If the acquired service implementation code is valid as a verification result the service management section enables the acquired service implementation code to be installed in the service implementation code layer . After the acquired service implementation code is installed the service management section registers metadata of the associated standard service in an available service list.

Further if the multimedia application is related to the non standard service the service management section receives metadata of the non standard service through the service metadata transmission and reception section acquires a service implementation code of the associated non standard service through the service implementation acquisition section applies the acquired service implementation code to the service implementation code layer and registers the metadata of the associated non standard service in an available service list.

When a partial multimedia API of the multimedia middleware service is added deleted updated the service management section adds deletes updates or changes the associated multimedia API in the service metadata. The service management section acquires a service implementation code of the changed multimedia API through the service implementation acquisition section and applies the acquired service implementation code to the service implementation code layer through the service implementation code change section . The multimedia middleware block initializes and prepares a multimedia middleware service required to run a multimedia application through a service preparation section . When the multimedia application runs the multimedia middleware service can be called.

The multimedia middleware block of an exemplary embodiment of the present invention can add metadata of the multimedia middleware service and can add a new service to a service list. Alternatively the multimedia middleware block can change and delete an existing service.

In step the service management section of the multimedia middleware block identifies a type of externally received data. In step when the received data is metadata for a multimedia application the service metadata transmission and reception section receives the associated metadata. In step the service management section parses the received metadata through the service metadata parser . In step the service management section determines whether the received metadata is related to a standard or non standard service and identifies a service implementation code needed for the associated service. If the received metadata is related to the standard service the service management section registers the metadata of the associated standard service in an available service list in step . On the other hand if the received metadata is related to the non standard service the service management section registers the metadata of the associated non standard service in an available service list in step .

On the other hand the service management section of the multimedia middleware block identifies a type of externally received data in step . When the received data is a service implementation code of metadata MWLS needed for an associated service the service management section acquires the associated service implementation code through the service implementation code acquisition section in step . In this case the associated service implementation code is downloaded or copied through a storage medium. In step the service management section verifies the validity of the code by comparing the service implementation code with the associated metadata. If the service implementation code is related to a standard service as a verification result in step the validity of the code is verified by comparing the code with the standard service metadata in step . If the code is a valid service implementation code suitable for the standard in step the service management section enables the code to be installed in the service implementation code layer in step . After the acquired service implementation code is installed the service management section registers metadata of the associated standard service in an available service list in step . On the other hand if the service implementation code is related to a non standard service as the determination result in step the service management section omits a validity check. In step the associated service implementation code is installed in the service implementation code layer . The metadata of the associated non standard service is registered in the available service list.

Step in which the validity verification is performed and step in which the service implementation code is compared with the metadata of the standard service can be selectively performed or integrated into one step.

As described above an open multimedia middleware structure expresses name configuration version and API update information in the form of an XML schema such that a multimedia middleware service can be modeled. Metadata for the multimedia middleware service structure based on a model of an XML schema form is generated. A multimedia middleware block manages metadata of service structure information. The associated service metadata and the associated service list can be referred to and updated when an implementation module or service implementation code of a new standard or non standard service is installed to run a multimedia application in a terminal or when a service implementation code of an existing standard or non standard service is deleted and changed.

Further exemplary embodiments of the present invention can record and use a program or algorithm capable of providing an open middleware structure in a storage medium capable of being embedded in a particular device such that the implementation of a standard or non standard service can be effectively managed in multimedia middleware. The storage medium can be read by a device such as a computer and the like.

As is apparent from the above description the exemplary embodiments of the present invention can easily add delete or change a service and can effectively maintain and manage middleware components by modeling an information structure of a name configuration version and API update of a multimedia middleware service in the form of metadata.

Exemplary embodiments of the present invention can also be embodied as computer readable codes on a computer readable recording medium. The computer readable recording medium is any data storage device that can store data which can thereafter be read by a computer system. Examples of the computer readable recording medium include but are not limited to read only memory ROM random access memory RAM CD ROMs magnetic tapes floppy disks optical data storage devices and carrier waves such as data transmission through the Internet via wired or wireless transmission paths . The computer readable recording medium can also be distributed over network coupled computer systems so that the computer readable code is stored and executed in a distributed fashion. Also function programs codes and code segments for accomplishing the present invention can be easily construed as within the scope of the invention by programmers skilled in the art to which the present invention pertains.

While the invention has been shown and described with reference to certain exemplary embodiments of the present invention thereof it will be understood by those skilled in the art that various changes in form and details may be made therein without departing from the spirit and scope of the present invention as defined by the appended claims and their equivalents.

