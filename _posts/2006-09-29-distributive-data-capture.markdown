---

title: Distributive data capture
abstract: Included are systems and methods for capturing screen data. At least one embodiment of a method includes receiving an indication of a communications session, wherein the communication session is associated with screen data and determining screen data to capture. Some embodiments include capturing data related to the screen data and uploading the captured data to a remote location.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07966397&OS=07966397&RS=07966397
owner: Verint Americas Inc.
number: 07966397
owner_city: Melville
owner_country: US
publication_date: 20060929
---
This application claims the benefit of U.S. Provisional Application No. 60 817 910 filed Jun. 30 2006 which is hereby incorporated by reference in its entirety.

In many network configurations there exists a desire to capture data from one or more computing devices within that network. More specifically many network configurations can include Voice over Internet Protocol VoIP communications. In such a configuration users may communicate via a VoIP telephone a softphone and or other communications devices. While users of the communications devices may send and receive audio data depending on the particular configuration the users may also desire to send other types of data in the form of text files pictures video files audio files etc. Additionally while the users of communications devices may desire to send and receive the various types of data the users system administrators and others may also desire to record at least a portion of the data being communicated. Additionally these parties may also desire the ability to record other data presented to a user of a communications and or computing device.

Additionally in highly distributed branch networks telephony connections can be centralized via a small number of hub sites or can be distributed to many or all of the leaf nodes of the network. The latter approach may be used for high street or retail operations where each location has a few telephone circuits from its local central office terminating on equipment at that site. There is therefore an increasing desire to provide recording systems in communications and or data networks that are well suited to all the supported topologies. The challenge in recording data in such networks that are distributed across multiple branches is that much of the data traffic carried is entirely local to that branch. The audio packets associated with the communication do not generally leave the branch. Additionally it is generally not desirable for the audio packets to leave the branch because there is often only limited bandwidth between the branch and corporate headquarters data center.

Many existing IP recording solutions can require a recording device to be located at each branch so as to tap into the data at that branch. Where the number of branches is large this becomes very expensive. When the total number of calls to be recorded is low such a network configuration can become uneconomic as the costs of the hardware and related support are spread across only a few recordings per day.

Additionally using existing IP conferencing service observe type solutions in which conference bridges are located at the central site generally requires that the audio data be tromboned from the receiving site to the conference bridge and back again. In this approach two legs of a 3 way conference caller agent and recorder port will generally be transmitted between the branch site and the central equipment. In addition to using scarce bandwidth over this link such a configuration can use expensive resources at the central site and can impact the quality of the communication.

Included are systems and methods for capturing screen data. At least one embodiment of a method includes receiving an indication of a communications session wherein the communication session is associated with screen data and determining screen data to capture. Some embodiments include capturing data related to the screen data and uploading the captured data to a remote location.

Also included are embodiments of a computer readable medium for capturing screen data. At least one embodiment of a computer readable medium includes receiving logic configured to receive an indication of a communications session wherein the communication session is associated with screen data and first determining logic configured to determine screen data to capture. Some embodiments include capturing logic configured to capture data related to the screen data and uploading logic configured to upload the captured data to a remote location.

Also included are embodiments of a system for capturing screen data. At least one embodiment of a system includes a receiving component configured to receive an indication of a communications session wherein the communication session is associated with screen data and a first determining component configured to determine screen data to capture. Some embodiments include a capturing component configured to in response to determining screen data to capture capture data related to the screen data and an uploading component configured to upload the captured data to a remote location.

Other systems methods features and advantages of this disclosure will be or become apparent to one with skill in the art upon examination of the following drawings and detailed description. It is intended that all such additional systems methods features and advantages be included within this description be within the scope of the present disclosure.

The present disclosure makes references to a communications network with multiple outlets. Customers generally desire a selective quality system to record data associated with their in store agents. The agents can use a heavily distributed Intelligent Contact Management ICM IP telephony switch with stations spread over several of a multitude of sites. This disclosure also outlines embodiments of a plug compatible replacement for the voice capture component that can allow an application server to work in an ICM environment.

ICM generally lacks a Service Observation capability so an alternate voice capture capability is generally desired. In such a topology port spanning is also generally not available. Because of the lack of a service observation capability passive tap recording at each site could be implemented however such a solution can be very costly. The service observation capability can also be simulated by an on demand targeted capture of a single IP telephone station. The result can be delivered as one or more data files to a server such as an application server.

In many network environments a computer is associated with many of the telephones at a branch office. The computer hardware can be separate from the telephone hardware however this is not a requirement. More specifically in an exemplary embodiment the computer can include telecommunications capabilities and act as a telephone without additional hardware. Other configurations can include telecommunications hardware that is distinct from the computing device . In such a configuration the computer and telephone hardware may be communicatively coupled however this is not a requirement. Regardless of the configuration there is generally a computing device or computing logic associated with a telephone or telecommunications logic in many communications networks. Indeed in an increasing number of scenarios the telephone includes a software application residing on a computing device a softphone rather than a physical device in its own right.

In many cases the computing device being used proximate to a Voice over Internet Protocol VoIP telephone is already or can be connected to receive audio packets sent to and from the telephone. The computing device can therefore be used to record audio and or other data from that telephone. Additionally other data output from the computing device can also be recorded. By installing a recording application on the computing device alongside the VoIP phone recordings can be made from that phone and or from the computing device . The recordings can then be transmitted to a central site immediately or buffered locally and sent at a time of reduced network traffic.

Similarly communications device as well as communications device are coupled to computing device . Communications device is also coupled to local network via recording device . Communications device is coupled to local network via recording device . Local network is coupled to communications network . Additionally coupled to communications network is an application server . As discussed above the application server can perform any of a plurality of operations. Additionally while application server is illustrated as being coupled to communications network one or more application servers can be configured to service specific portions of the overall network illustrated in . More specifically one can conceive an application server coupled to local network as well as an application server coupled to local . Other configurations can also be considered as part of this disclosure.

As discussed above in many networking environments a computing device is coupled either directly or indirectly to at least one communications device. While the exemplary embodiment of illustrates two communications devices and being coupled to one computing device this is a nonlimiting example as other configurations can include one or more communications devices coupled to one or more computing devices. Similarly while the computing devices are illustrated as being separate from communications devices this is a nonlimiting example. As one of ordinary skill in the art will understand computing logic can be implemented in a communications device . Other configurations can include communications logic in the computing devices . Other configurations are also contemplated.

As illustrated in recording devices and are coupled to communications devices and respectively. Recording device is coupled to local network . In either configuration one or more recording device is implemented at a branch that is coupled to communications network . As discussed above increased expense and network complexity can result from such a configuration.

One should also note that local networks and referred to collectively as local network can include any of a plurality of different networks. More specifically one or more network or network types can be implemented including but not limited to a Local Area Network LAN . Similarly communications network can include one or more different networks and or types of networks. As a nonlimiting example communications network can include a Wide Area Network WAN the Internet and or other network.

Local network is coupled to communications network . Similarly local network is coupled to communications network . Also coupled to communications network are application server capture control server and data storage . One should note that while data storage application server central recording system and capture control server are coupled to communications network these devices and or logic can physically be located together at a remote site or separately at a plurality of remote sites regardless of the physical location of this logic the functionality associated with these components can be configured to serve one or more branch that is coupled to communications network . Additionally while data storage application server central recording system and capture control server are depicted as separate devices this is also a nonlimiting example. In at least one embodiment one or more of these may be combined. Similarly the functionality of these devices may also be embodied through software firmware and or hardware depending on the configuration. As such illustration of this functionality as devices is a nonlimiting example.

Additionally included in the nonlimiting example of is a local routing component . Local routing component can be configured to facilitate communications from communications device and when communications network is unavailable. More specifically if a connection between the communications network and local network is severed the local routing component which can operate using Survivable Remote Site Telephone SRST and or other technologies can be configured to facilitate communication of the communications data to the recorder and or storage of the communications data. Such a configuration can facilitate a local protocol based recording which can be implemented for a primary recording mechanism and or to provide fail over recording protection.

Also coupled to local network is data storage as well as capture control server . Coupled to local network is central recording system and application server . More specifically illustrates that the functionality embodied in data storage capture control server application server and central recording system can be coupled to the communications network via a local network. These devices need not be remotely situated from any branch office and may be physically located at the same or different locations.

The processor can be any custom made or commercially available processor a central processing unit CPU an auxiliary processor among several processors associated with the computing device a semiconductor based microprocessor in the form of a microchip or chip set a macroprocessor or generally any device for executing software instructions.

The volatile and nonvolatile memory can include any one or combination of volatile memory elements e.g. random access memory RAM such as DRAM SRAM SDRAM VRAM etc. and nonvolatile memory elements e.g. ROM hard drive tape CD ROM etc. . Moreover the memory may incorporate electronic magnetic optical and or other types of storage media. Note that the volatile and nonvolatile memory can also have a distributed architecture where various components are situated remotely from one another but can be accessed by the processor .

The software in volatile and nonvolatile memory may include one or more separate programs each of which includes an ordered listing of executable instructions for implementing logical functions. In the example of the software in the volatile and nonvolatile memory may include communications client software as well as an operating system and a recording cache e.g. buffer . Communications client software can include a screen capture daemon a capture control daemon a voice capture daemon recording logic voice recognition logic and or other logic. Additionally while communications client software is illustrated in this nonlimiting example as a single piece of logic as one of ordinary skill in the art will understand communications logic can include one or more separate software hardware or firmware modules. Additionally recording cache may be configured to receive and store one or more pieces of data accessed by computing device . The data may be part of a communication session however this is not a requirement.

The operating system may be configured to control the execution of other computer programs and may be configured to provide scheduling input output control file and data management memory management and communication control and related services.

A system component embodied as software may also be construed as a source program executable program object code script or any other entity comprising a set of instructions to be performed. When constructed as a source program the program is translated via a compiler assembler interpreter or the like which may or may not be included within the volatile and nonvolatile memory so as to operate properly in connection with the Operating System .

The Input Output devices that may be coupled to system I O Interface s may include input devices for example but not limited to a keyboard mouse scanner microphone camera proximity device etc. Further the Input Output devices may also include output devices for example but not limited to a printer display etc. Finally the Input Output devices may further include devices that communicate both as inputs and outputs for instance but not limited to a modulator demodulator modem for accessing another device system or network a radio frequency RF or other transceiver a telephonic interface a bridge a router etc. Similarly network interface which is coupled to local interface can be configured to communication with a communications network such as the network from . While this communication may be facilitated via a communications device such as communications device this is not a requirement.

If the computing device is a personal computer workstation or the like the software in the volatile and nonvolatile memory may further include a basic input output system BIOS omitted for simplicity . The BIOS is a set of software routines that initialize and test hardware at startup start the Operating System and support the transfer of data among the hardware devices. The BIOS is stored in ROM so that the BIOS can be executed when the computing device is activated.

When the computing device is in operation the processor can be configured to execute software stored within the volatile and nonvolatile memory to communicate data to and from the volatile and nonvolatile memory and to generally control operations of the computing device pursuant to the software. Software in memory in whole or in part is read by the processor perhaps buffered within the processor and then executed. Additionally one should note that while the above description is directed to a computing device other devices such as application server capture control server and central recording system can also include the components described in .

One should note that communications device can be configured with one or more of the components and or logic described above with respect to computing device . Additionally communications device and or computing device can include voice recognition logic voice to text logic text to voice logic etc. or any permutation thereof as well as other components and or logic for facilitating a communication. Additionally in some exemplary embodiments the communications device can include the computing functionality described with respect to computing device . Similarly in some exemplary embodiments the computing device can include the communications functionality described with respect to communications device . While reference to various components and or logic is directed to the computing device or the communications device as one of ordinary skill in the art will understand these are nonlimiting examples as such functionality can be implemented on the computing device the communications device or both.

One should also note that in at least one nonlimiting example the computing device and communications device are configured to act as independent devices but because the hub switch can be physically located inside the communications device the communications device can be configured to control the packet flow and copy the associated Real Time Protocol RTP streams so that the desired data can be seen on the computing device s network interface. As RTP streams are addressed to the communications device or the communications device s counterparty the RTP streams can be ignored at the hardware level in the network interface . However if the network interface is configured to receive data in a promiscuous mode the network interface can be configured to snoop the RTP streams flowing to and from an adjacent communications device .

As indicated above embodiments of the computing device include a screen capture daemon. Screen capture of various data related to a communication can be implemented such that the application server will contact the screen capture daemon and obtain screen frames associated with a communication. Similarly for voice capture many communications devices such as IP telephones generally include a small switching hub and can be wired in between the local network infrastructure and the computing device proximate the communications device . Physically the communications device can include two RJ 45 connections. One connection is connected via the building cabling back to the local network . The computing device can be connected to the other connection via a short hook up cable.

In operation the screen capture daemon can be configured to capture data that is accessed by a user on computing device . More specifically referring back to in a communications session between computing device and voice data and or other data may be communicated between the parties of the communication. The user of computing device may desire that the user of computing device view a picture video text file audio file and or other data that may be distinct from the voice data communicated between the parties. As the users desire communication of this data there also may be a desire to capture the data for recording purposes. To facilitate this desire the screen capture daemon may be configured to capture screen data which may include pictures video files audio files text files etc. that is being sent to the other party or parties of the communication and or otherwise associated with one of the parties.

Additionally depending on the particular configuration the screen capture daemon can be configured to capture data that is sent to a recipient as well as data that is simply being displayed during a communications session. Similarly the screen capture daemon can be configured to capture data that is distinct from a communications session all together.

A voice capture daemon can also reside and execute on computing device . The voice capture daemon may be under control of the application server and may start and stop RTP packet capture. The voice capture daemon can detect and isolate the two RTP streams one directed towards the communications device and one directed away from the communications device . Where the call is handled locally the audio data can be encoded in G.711 protocol but other protocols can also be utilized such as but not limited to the more heavily compressed G.729A protocol often used when calls traverse communications network .

Referring to capture control the application server is configured to communicate with a capture control process over a TCP IP connection. The capture control process which can run on the application server or a capture control server announces itself to the application server which can then request a desired number of record and replay ports according to settings in a data file associated with the application server . Even though in some embodiments there is generally no concept of record ports the capture control process can accept requests for an arbitrary number of record ports and the application server can reply with the number of replay ports requested. If telephone replay is supported the capture control process can then attempt to instantiate that number of communications devices for replay.

The action commands that flow from the application server to the capture control process can include Service Observe ON OFF commands that specify the station and Capture ON OFF commands that specify a filename exposed by the application server . Similarly other commands for dialing and playing back recordings can be sent from application server to the capture control process.

On receipt of a service observe command the capture control process can look up the IP address of the desired computing device from a station number supplied in a lookup table that is already being maintained for screen capture. The capture control process can then arm the voice capture daemon on the computing device . When the capture control process receives a capture control command the capture control process can instruct the capture control daemon to begin assembling RTP packets into audio streams.

While any encoding protocol can be used if an RTP codec is in use under G.729A protocol the capture control daemon can assemble 2 kilobits of audio data each second after the capture control daemon has removed the RTP headers. The capture control daemon can repair the RTP stream in real time by removing duplicate packets reversing out of order packets and filling any gaps with G.729A silence. The capture control daemon can assemble a stereo pair of files one file for transmit and one file for receive.

If the audio is received in a G.711 protocol the data can optionally be compressed locally at the computing device to conform with the G.726 protocol and mixed into a single stream so as to reduce its bandwidth from 2 by 64 kilobits per second kbps to 16 kbps. In general any audio input format can be supported with a user configurable determination of the format for conversion to and whether or not the data should be mixed into a single stream or kept as two independent streams. One should note that while the above description refers to G.729A protocol G.711 protocol and G.726 protocol any encoding protocol can be used.

One should also note that any of a plurality of different encryption techniques may be used to encrypt data between a computing device and or communications device and a network see as well as encrypt data locally within computing device and or communications device . As a nonlimiting example communications between the recorder and the daemons associated with a communications device can be configured for encryption and decryption to provide a more secure network environment.

The capture control daemon can be configured to transfer the captured audio to the capture control process for further processing. The RTP streams captured by the capture control daemon can be disjoint. Additionally the application server can operate in a timed mode and ask for capture when no call is in progress. At other times the application server can put calls on hold. The capture control daemon can use a 250 millisecond ms or other gap in RTP to indicate breaks between calls. Each of these call segments can be given an incrementing segment number.

Uploading can be accomplished in any of a plurality of ways. As a nonlimiting example uploading can occur during a call segment at the end of a call segment at the end of recording etc. or any permutation . The first option of near real time optimizes the network traffic by sending blocks of audio stripped of the onerous RTP headers over elastic reliable TCP IP pipes without requiring the capture control daemon to maintain temporary files on the hard disk of the computing device . The capture control daemon can use Hypertext Transfer Protocol HTTP Server Message Block SMB a proprietary Transmission Control Protocol Internet Protocol TCP IP based protocol or other protocol or any permutation therein to complete the transfer. The choice of protocol can depend on the choice of upload timing.

After receiving a complete stereo pair the capture control process can copy a complete stereo pair to the portion of file share exposed by the application server . Before the capture control process can process the complete stereo pair the capture control process converts the audio to a single mono audio file such as a wav file or other audio file . The capture control process can then convert this data by decompressing the two halves from the G.729A or other protocol to a linear format summing the two halves and then converting the mixed signal back to the G.711 mu law protocol or G.711 A law or other protocol depending on the particular configuration . This operation can be CPU intensive so some embodiments include facilitating at least one daemon to process this data in a distributed fashion. Such an implementation could however lead to a four fold increase in the amount of audio data copied from the daemon to the central server s . In the more common case however where the audio is received in the G.711 mu law protocol the local workstation can mix and compress the data before transmission. Additionally the capture control process can run co resident with the application server but when collecting data predominantly in the G.729A protocol the decompression and mixing load that can be imposed on the capture control process mean that the capture control process can run on a separate server in many environments.

Instead of transmitting data during the communication the recording of audio and or screen data can be buffered in recording cache of volatile and nonvolatile memory on data storage or otherwise stored and or accessible to the computing device . Additionally transmission of the recorded audio and or screen content from computing device back to a central recording system can then be scheduled to occur at quiet periods e.g. overnight or other times of reduced network traffic . Additional processing of the data may be completed by the computing device prior to and or after transmission of the data. When used for speech recognition the computing device may tune its speech analysis algorithms to those speakers from whom the computing device normally received voice data.

Additionally for increased efficiency of data transfer the audio and screen data may be combined over a single connection. Since screen data and or audio data can be recorded at the computing device either together or independently the system clock associated with the computing device can be used to timestamp audio packets and on screen changes such that the precise relationship between these is known. Other embodiments can facilitate capture of the screen data separately from the audio data. More specifically in at least one embodiment screen data can be captured by a first computing device while the audio data is captured by a second computing device or not captured at all .

Other embodiments can combine commands to start and stop screen and audio recording giving more efficient simpler and more synchronized control over the recording. Similarly the deployment of screen and audio recording components on the computing device can be combined into a single installation package such that deploying the audio recording component provides negligible additional overhead if screen capture is being deployed. If screen and or audio data is buffered via a rolling buffer or otherwise at the workstation 100 recording can be turned on at the computing device with minimal realized impact on the bandwidth or load on the rest of the overall network.

The central processing system can then instruct the computing device to delete or forward each recording at a later time. This option allows the system to make decisions based on factors that could not be known at the start of the call such as call duration and call outcome. Although described herein as operating under the control of a centralized quality management system with connection to a central Computer Telephony Integration CTI feed the system can also be deployed with local call detection. By interpreting call setup and control information passing to and from the communications device a computing device can apply local rules or record some or all calls and annotate these recordings with details gleaned from the communications device e.g. ANI agent ID as well as others . These details can then be passed back to the central recording system along with the audio content.

For added security of recordings in at least one exemplary embodiment computing devices may copy recording content to other computing devices so as to provide fallback storage in the event of failure of the computing device or its hard disk or attempts to tamper with the recordings.

To detect tampering and failure of the recording components embodiments of the central recording system may heartbeat the software on one or more computing device on a regular basis to confirm that a particular computing device is still operational and has not failed or been disabled. To ensure that unauthorized parties do not take control of the computing device by spoofing the quality system the computing device may be configured with security devices such as a public key encoding system not shown so that only the authorized server can communicate with the computing device . The computing device may also alert the user should the IP address of the quality server controlling the computing device change. This alert can give the user an option to accept or reject this new connection.

In at least one exemplary embodiment computing devices can be configured to transmit recordings to multiple destinations if requested and or central equipment can be configured to copy from one system to another if bandwidth between the central hubs is more readily available than between remote sites and hubs.

The embodiments disclosed herein can be implemented in hardware software firmware or a combination thereof. At least one embodiment disclosed herein is implemented in software and or firmware that is stored in a memory and that is executed by a suitable instruction execution system. If implemented in hardware as in an alternative embodiment embodiments disclosed herein can be implemented with any or a combination of the following technologies a discrete logic circuit s having logic gates for implementing logic functions upon data signals an application specific integrated circuit ASIC having appropriate combinational logic gates a programmable gate array s PGA a field programmable gate array FPGA etc. Additional description of one or more components of this disclosure may also be found in U.S. application Ser. No. 11 394 408 filed Mar. 31 2006 which is incorporated by reference in its entirety as well as ContactStore for Call Manager which is also incorporated by reference in its entirety as well as U.S. patent application entitled Distributive Network Control accorded Ser. No. 11 772 440 which is also hereby incorporated by reference in its entirety.

One should note that depending on the particular configuration at least a portion of the user interface display may or may not be accessible to a party of the communication. More specifically in at least one embodiment one or more of the parties of the conversation may not be aware that the communication is being recorded. As such at least a portion of the information in may not be displayed to all the parties of the communication. Conversely depending on the particular embodiment at least a portion of the information displayed in may be provided to a system administrator and or other party that desires recording of the communication.

One should note that in the configuration of the send data window is in focus while user interface display is out of focus. Depending on the particular configuration screen capture daemon can be configured to capture data based on the focus of one or more applications. More specifically while in some embodiments the screen capture daemon is configured to capture data that is sent between parties of a communications session this is not a requirement. Embodiments of the screen capture daemon can be configured to determine the focus of an application and capture data from the in focus application or portion of application . With reference to the nonlimiting example of the screen capture daemon can be configured to capture an image related to send data window and or one or more of the files being displayed in send data window whether selected or not for transmission in the communications session .

One should note that in the nonlimiting example of the recorded data can be sent to a server or related data storage upon a determination that network traffic is sparse. In such a configuration the entire recorded file need not be sent at one time. In at least one configuration portions of the recorded data can be sent to the server as network resources are available. This determination can be based on a predetermined threshold of network activity a predicted determination of network activity or other determination.

As the flowchart from illustrates an embodiment where a recording is sent to a server when network activity is low the nonlimiting example of illustrates an embodiment where the recording is sent to the server as the recording is taking place. This embodiment may be desirable when local storage of the recorded data is desired due to current network traffic. As discussed above an option can be provided to a user to determine whether the recording is immediately stored at a server or whether the recording is queued for subsequent delivery.

Additionally other exemplary embodiments can provide for the precise relative time stamping of audio and screen content e.g. speech recognition can take cues from the screen activity immediately following the audio . More specifically if the user selects John Doe from the list and the speech recognizers interprets voice input as either John Doe or Don t know because of the more likely scenario the speech recognizers can infer that the former is more likely and hence gain higher accuracy.

The computing device and or communications device can then capture at least a portion of the data block and send the captured data to recording cache block . The computing device and or communications device can then upload at least a portion of the cached data to a remote server block . As discussed above the data can be buffered such that the data can be uploaded at a time of recording and or at a time of reduced network traffic.

The computing device and or communications device can then determine at least one aspect of the captured data block . More specifically depending on one or more criteria of the captured data the computing device and or communications device can compress the captured data in one or more different ways. More specifically in at least one nonlimiting example the computing device and or communications device can determine if the captured data includes video data. As the clarity of text data can be compromised without significantly reducing the data being conveyed compression of the text portions of the captured data may be implemented. Conversely if the captured data includes video data the video portion of the captured file s may not be compressed since the clarity of video may be important understand the data that is captured.

The screen capture daemon can be configured to determine the data that is desired to be compressed as opposed to the data that is not desired to be compressed. This determination can be made based on one or more factors that could include analysis of the file name file extension size embedded objects and or other criteria. Upon determination of the at least one aspect of the captured data block the computing device and or communications device can compress at least a portion of the captured data based on at least one predetermined compression technique block . More specifically the computing device and or communications device can be configured to execute one or more compression algorithm based on the data being compressed. As a determination of whether compression is desired was made based on the substance of data captured the type of compression may vary based on similar criteria. As a nonlimiting example if the captured data includes a video file and text data the video file may be compressed using a different compression algorithm than the text portion of the captured data. Once the captured data is compressed the computing device and or communications device can upload the compressed data block .

Additionally other embodiments can be configured to compress the captured data based on predicted network traffic at the time of upload. More specifically if the computing device and or communications device is configured to upload the captured data immediately compression of the captured data may depend on the current network traffic. If the current network traffic is high a more thorough compression of the captured data may be performed. If the current network traffic is low compression may not be necessary to conserve network resources and thus compression may be limited.

Similarly if the computing device and or communications device is configured to buffer the captured data for uploading at a time of reduced network traffic compression can be based at least in part on a prediction of network traffic at the time of scheduled upload. More specifically depending on the particular configuration the computing device and or communications device can be scheduled to upload data at 2 00 AM when network traffic is reduced. The computing device and or communications device can monitor network usage at that time and based on the monitored data determine a predicted network usage for compression. Other embodiments can be configured to upload when it is determined that network usage has fallen below a certain threshold. Such configurations can utilize this threshold to determine the desired compression.

One should note that although illustrated compression as occurring subsequent to buffer this is a nonlimiting example. As with other blocks in the flowcharts of this disclosure block and can occur at a time different than illustrated in . As a nonlimiting example depending on the particular embodiment blocks and can occur prior to buffer such that the buffered data takes up a reduced amount of space in cache. Additionally other embodiments can include a determination of whether and or when to upload the data. More specifically in at least one embodiment an upload request can be sent to one or more components of the communications network. The data can be uploaded in response to an indication from one or more network components.

As a nonlimiting example depending on the particular configuration upon a determination of the sensitive data the sensitive data can be encrypted locally on the computing device and or communications device . Other configurations can include removing the sensitive data from the captured data such that the sensitive data is not recorded. Still other configurations can include capturing of the sensitive data but blocking of the sensitive data from transmission to a remote location. Other configurations are also considered. The computing device and or communications device can then upload the captured data block . Additional description related to encryption of sensitive data is provided in U.S. application Ser. No. 11 395 514 filed Mar. 31 2006 which is hereby incorporated by reference in its entirety.

One should note that the flowcharts included herein show the architecture functionality and operation of a possible implementation of software. In this regard each block can be interpreted to represent a module segment or portion of code which comprises one or more executable instructions for implementing the specified logical function s . It should also be noted that in some alternative implementations the functions noted in the blocks may occur out of the order and or not at all. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved.

One should note that any of the programs listed herein which can include an ordered listing of executable instructions for implementing logical functions can be embodied in any computer readable medium for use by or in connection with an instruction execution system apparatus or device such as a computer based system processor containing system or other system that can fetch the instructions from the instruction execution system apparatus or device and execute the instructions. In the context of this document a computer readable medium can be any means that can contain store communicate propagate or transport the program for use by or in connection with the instruction execution system apparatus or device. The computer readable medium can be for example but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus or device. More specific examples a nonexhaustive list of the computer readable medium could include an electrical connection electronic having one or more wires a portable computer diskette magnetic a random access memory RAM electronic a read only memory ROM electronic an erasable programmable read only memory EPROM or Flash memory electronic an optical fiber optical and a portable compact disc read only memory CDROM optical . In addition the scope of the certain embodiments of this disclosure can include embodying the functionality described in logic embodied in hardware or software configured mediums.

One should also note that conditional language such as among others can could might or may unless specifically stated otherwise or otherwise understood within the context as used is generally intended to convey that certain embodiments include while other embodiments do not include certain features elements and or steps. Thus such conditional language is not generally intended to imply that features elements and or steps are in any way required for one or more particular embodiments or that one or more particular embodiments necessarily include logic for deciding with or without user input or prompting whether these features elements and or steps are included or are to be performed in any particular embodiment.

It should be emphasized that the above described embodiments are merely possible examples of implementations merely set forth for a clear understanding of the principles of this disclosure. Many variations and modifications may be made to the above described embodiment s without departing substantially from the spirit and principles of the disclosure. All such modifications and variations are intended to be included herein within the scope of this disclosure.

