---

title: Analysis error detection for a CAD model
abstract: Methods and apparatus, including computer program products, for identifying an analytical representation of a plurality of physical elements in a computer aided design (CAD) model, the analytical representation comprising a plurality of analytical elements. one or more of the plurality of analytical elements corresponds to one or more of the plurality physical elements. An association is identified between corresponding analytical and physical elements such that a modification to one element can be applied to modify a corresponding other. An error is automatically detected in the analytical representation.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08099260&OS=08099260&RS=08099260
owner: Autodesk, Inc.
number: 08099260
owner_city: San Rafael
owner_country: US
publication_date: 20060727
---
Computer aided design CAD software tools are often used to prepare a CAD model or models representing a structure such as a building. A CAD model can include a physical model i.e. representations of physical elements such as columns beams and the like that will be included in the structure. Drawings prepared from such a CAD model can be used in the actual physical construction of the corresponding structure. The CAD model may be prepared and edited by various individuals including architects and structural engineers. As part of a design stage a structural analysis is typically performed on components that will be included in the structure for example to ensure that there is sufficient load bearing capacity.

Structural analysis software is available to facilitate an analysis phase of a project. Conventional structural analysis software receives as input an analytical representation of a structure. An analytical representation of a structure is different than a representation of the physical elements e.g. columns beams etc. It is an idealized mathematical model that may represent only a portion of a building such as one floor of a building. For example an analytical representation may be a wire frame representation of the physical elements and the wire frame elements can include or be associated with properties e.g. weight moment of inertia cross sectional area member connectivity and or end conditions e.g. pinned free fixed . Typically the analytical representation is prepared separately and is used for the structural analysis and perhaps other types of analyses that are performed in the design stage.

The analytical representation can be subjected to load simulation in a structural analysis program for example to identify stress levels in the various physical elements. On the basis of the analysis analytical elements may be modified e.g. resized or other properties changed and the analytical representation reanalyzed in an iterative fashion. The results of the analysis can be used to update corresponding physical elements in the CAD model.

Analytical representations can be automatically generated from a CAD model. Users commonly simplify such analytical representations to reduce the amount of analytical noise generated in the analysis results. Sometimes users also manipulate the analytical representation to capture eccentricities such as a torque or turning not manifest in the physical model. These and other changes to an analytical representation can lead to errors in the analysis however. For example an analytical element in the analytical representation can be accidentally moved too far from a corresponding physical element in the CAD model. Other errors may be related to the CAD model itself. If a physical element s end conditions are not supported correctly for instance the analysis may be indeterminate and mathematically unsolvable.

For users to find out that an analytical representation is invalid they commonly are required to export an analytical representation of a CAD model to a structural analysis program. The nature of typical structural analysis methods is such that once an error has been discovered the analysis terminates without producing meaningful results. Users must go back and remedy the problem in the analytical representation export the analytical representation and perform the analysis again. Sometimes an analysis may run for a long time before another error in the analytical representation is discovered. This frustrating time consuming process can be repeated many times.

In general in one aspect embodiments of the invention feature identifying an analytical representation of a plurality of physical elements in a computer aided design CAD model the analytical representation comprising a plurality of analytical elements. One or more of the plurality of analytical elements correspond to one or more of the plurality physical elements. An association is identified between corresponding analytical and physical elements such that a modification to one element can be applied to modify a corresponding other. An error is automatically detected in the analytical representation.

These and other embodiments can optionally include one or more of the following features. Automatically detecting an error based on a comparison of an analytical element in the plurality of analytical elements to a corresponding physical element in the plurality of physical elements. Notifying a user of an error through a user interface. The detecting can be in response to user input modifying the CAD model or the analytical representation. Detecting can also be in response to the identification of an association between corresponding analytical and physical elements. An error is one of a support distance error an analytical element to a physical element distance error an analytical adjustment distance error a circular reference error a zero member volume error or a release condition error. A structural analysis of the analytical representation can be performed. User input can be received to modify a physical element or an analytical element and modify a corresponding other to reflect the first modification. An error can be caused by a user moving an analytical element away from a corresponding physical element.

In general in another aspect embodiments of the invention feature identifying an analytical representation of a plurality of physical elements in a computer aided design CAD model the analytical representation comprising a plurality of analytical elements. One or more of the plurality of analytical elements correspond to one or more of the plurality of physical elements. User input is received to modify a physical element in the plurality of physical elements or an analytical element in the plurality of analytical elements and modify a corresponding other to reflect the first modification. In response to the user input an error can be automatically detected in the analytical representation.

These and other embodiments can optionally include one or more of the following features. User input changes a location of an analytical element in the plurality of analytical elements or a physical element in the plurality of physical elements. Determining if the location of the moved element is within a distance tolerance. Determining if a circular reference exists in the analytical representation. Determining if an analytical element has zero length. And determining if instabilities exist in the analytical representation.

Particular embodiments of the invention can be implemented to realize one or more of the following advantages. A system and method are proposed that allow users to discover potential errors in an analytical representation before exporting the analytical representation to a structural analysis program. This can save users a great deal of time. Potential errors can be detected as they are introduced through user interaction with a CAD model. By comparing the physical model to an analytical representation of the physical model potential errors can be quickly located and remedied. Suspected errors that can be evaluated may include an inconsistency in location between analytical and corresponding physical elements a circular reference of a support structure a zero volume element a release condition instability an analytical element to physical element adjustment condition or a seemingly disconnected or improperly supported element. Checking for errors can occur on demand i.e. at a user s discretion or automatically as changes are made to the physical model or the analytical representation. Users may be alerted regarding the type of error and the location of the problem. The notification can take the form of for example a text message a view of the CAD model or analytical representation with a close up of the problem area a separate report screen or a pop up and arrow to the offending element s .

The details of one or more embodiments of the invention are set forth in the accompanying drawings and the description below. Other features aspects and advantages of the invention will become apparent from the description the drawings and the claims.

An analytical representation is derived from the physical model step and can be incorporated into the CAD model. The analytical representation is an idealized mathematical model of a physical model and is used for analyzing the structural integrity of the physical model. An analytical representation of a CAD model includes one or more analytical elements. An analytical element can correspond to one or more physical elements in the CAD model or no physical elements. Properties can be associated with analytical elements and can detail the structural properties of the physical elements e.g. weight moment of inertia etc. and other suitable information. In one implementation the analytical representation is generated automatically when the CAD tool imports a physical CAD model as a physical model is created or modified using a CAD tool or when a user selects an option to generate an analytical representation of an existing physical model.

The analytical representation is checked for configurations that can cause errors during structure analysis step . This step saves the time and effort of exporting the analytical representation to a structural analysis application to perform a potentially lengthy analysis just to learn that there is a flaw within the analytical representation or the physical model. By comparing the physical model to an analytical representation of the physical model or by analyzing the analytical representation potential errors can be quickly located and remedied. Suspected errors that are evaluated may include but are not limited to an inconsistency in location between analytical and corresponding physical elements a circular reference of a support structure a zero volume element a release condition instability an analytical element to physical element adjustment condition or a seemingly disconnected or improperly supported element. Checking for errors can occur on demand i.e. at a user s discretion or automatically for example as changes are made to the physical model or the analytical representation. If potential errors are found within the physical model or the analytical representation step users may be alerted regarding the type of error and the location of the problem step . The notification can take the form of for example a text message a view of the CAD model or analytical representation with a close up of the problem area a separate report screen or a pop up and arrow to the offending element s .

An error check of the analytical representation is then performed step . The error check allows for early detection of potential structural analysis problems before structural analysis is performed. Without error detection by the time a potential problem is caught the error messages may have compounded to the point of the initial problem being obscured. For example a number of physical elements may be structurally dependent on an improperly supported physical element. Without early discovery a large number of support errors can be generated by a structural analysis program. If a one or more errors are detected step a user notification is provided step . In one implementation the user is not required to correct the error since some inconsistencies or potential concerns may be anticipated or even desirable in an overall design. Instead the user may choose to ignore suppress or delete the notification rather than modify the analytical representation or the physical model.

User selection of checkbox enables checking for circular references in the analytical representation by automatically verifying for example whether or not one analytical element supports another analytical element in a circular fashion e.g. without a solid base support .

User selection of checkbox enables checking for support distance errors. Users can specify a support distance tolerance customizable within a set of tolerance values . The support distance tolerance indicates how far an analytical element in the analytical representation may be located from another analytical element in the analytical representation in order to be considered connected to that element.

User selection of checkbox enables checking for analytical element to physical element distance errors. If an analytical element is moved a distance greater than a tolerance distance from the analytical element s corresponding one or more physical elements if any an error is generated. Users can specify the tolerance distance by modifying the value of tolerance distance

User selection of checkbox enables checking for distance errors related to how far an analytical beam element is from an analytical slab element on a given level. If an analytical element representing a beam is moved a distance greater than a tolerance distance from its corresponding analytical element representing a slab or vice versa an error is generated.

User selection of checkbox enables checking for analytical elements that have zero area or zero length. An analytical element may empirically exist while no physical or analytical element appears in a visual rendering of the model because there is no size associated with the element. For example a stray element which has a start point and an end point sharing the same location may be introduced when importing structural analysis results.

User selection of checkbox enables checking for possible instabilities based on release conditions. An analytical model may contain structural instabilities based on estimated torque and lateral forces on one or more analytical elements depending upon the manner in which it is connected to the surrounding elements.

User selection of checkbox enables checking for errors related to the distance between an analytical element and a default location. The default location of the analytical element may be in the center of the physical beam or column element or along the planar surface of a slab element for example. In one implementation a user may choose to move an analytical element from its default location to allow the analytical elements of two abutting physical elements of different thicknesses to align properly. Users can specify an analytical adjustment distance by modifying the value of the adjustment distance

Selection of menu item causes the manual activation of the analytical representation error detection functionality in relation to the synchronicity of the analytical and physical models. This will verify that there are no inconsistencies between the elements within the analytical representation and their corresponding elements within the physical model. An inconsistency may be due to an analytical element being in a different location than the corresponding physical element for example.

The values provided in sections and each describe how an end of a physical beam element will connect to another physical element i.e. release conditions . A set of checkboxes allows users to define lateral forces Fn and torques Mn in the x y and z direction for one end of the beam. In this illustration checkbox has been selected signifying that the user has modified the connection to override the torque value along the x axis. On the other end of the beam connectivity is detailed similarly within a section . Section contains a set of checkboxes pertaining to the lateral forces Fn and torques Mn in the x y and z directions. In this example these checkboxes have all been selected indicating that the user will specify these values.

User modification of release conditions can result in release condition errors when a physical element s method of connection leaves it vulnerable to being twisted pulled or otherwise moved out of position due to the forces applied to the physical element during structural analysis. In this case a user may need to modify the release conditions to compensate for the forces upon the physical element in question.

An error detection module performs structural analysis error checking of the analytical representation based on the analytical representation and the physical model . An analytical representation is created so that a model may be analyzed for any problems with its structural integrity. The analytical elements comprising the analytical representation identify a physical element s material composition e.g. weight stress tolerance etc. . This information may be exported into a structural analysis tool to validate a physical model s structural integrity. The error detection module attempts to verify the analytical representation s potential for being useful as input to a structural analysis application. If the error detection module detects a problem either automatically or in response to a user request for error detection a notification is propagated back to the user interface to inform the user of such.

When a user opts to modify the analytical representation or the physical model the user interface invokes a change engine to apply the corresponding change to the complementary element. For instance if a physical element is added or modified its coordinating analytical element if any will be created or adjusted accordingly via the change engine to synchronize the analytical representation and the physical model . Conversely if an analytical element is modified its corresponding physical element s if any may also be updated via the change engine . The error detection module can then be invoked to verify that there are no potential error conditions created because of the modification. If a potential error condition is detected a warning can be propagated to the user interface .

A user can select to analyze the existing physical model . The user interface invokes an analysis module . The analysis module exports the analytical representation of the CAD model to one or more structural analysis applications i.e. or via an Application Programming Interface API or other suitable mechanism. The API may cause the structural analysis program to present a GUI to the user for interfacing with the analysis engine. The API may otherwise allow the structural analysis program to directly write and or read information to from the CAD model . The results of the structural analysis run by for instance structural analyzer will be returned to the analysis module through the API . These results may include suggested modifications of the physical and or analytical elements of the CAD model . For example a beam s overall size may be increased to accommodate a load. The test results for individual elements may be stored within each element s properties. If the user has opted for automatic update the changes made by the structural analyzer will be sent from the analysis module to the change engine . The change engine will implement alterations to the physical and or analytical elements and also synchronize the changes with their corresponding elements physical or analytical of the CAD model . The change engine can then invoke the error detection module to determine whether the changes have incurred potential errors in the analytical representation of CAD model . If a potential error is found a warning message can be propagated to the user interface .

The system may have fewer or more components than those illustrated in . A given component can execute on one or more communicably coupled computer devices. For instance computing devices can be connected by a wired network a wireless network the Internet shared memory an inter processor communication channel or combinations of these.

Embodiments of the invention and all of the functional operations described in this specification can be implemented in digital electronic circuitry or in computer software firmware or hardware including the structures disclosed in this specification and their structural equivalents or in combinations of one or more of them. Embodiments of the invention can be implemented as one or more computer program products i.e. one or more modules of computer program instructions encoded on a computer readable medium for execution by or to control the operation of data processing apparatus. The computer readable medium can be a machine readable storage device a machine readable storage substrate a memory device a composition of matter effecting a machine readable propagated signal or a combination of one or more them. The term data processing apparatus encompasses all apparatus devices and machines for processing data including by way of example a programmable processor a computer or multiple processors or computers. The apparatus can include in addition to hardware code that creates an execution environment for the computer program in question e.g. code that constitutes processor firmware a protocol stack a database management system an operating system or a combination of one or more of them. A propagated signal is an artificially generated signal e.g. a machine generated electrical optical or electromagnetic signal that is generated to encode information for transmission to suitable receiver apparatus.

A computer program also known as a program software software application script or code can be written in any form of programming language including compiled or interpreted languages and it can be deployed in any form including as a stand alone program or as a module component subroutine or other unit suitable for use in a computing environment. A computer program does not necessarily correspond to a file in a file system. A program can be stored in a portion of a file that holds other programs or data e.g. one or more scripts stored in a markup language document in a single file dedicated to the program in question or in multiple coordinated files e.g. files that store one or more modules sub programs or portions of code . A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.

The processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform functions by operating on input data and generating output. The processes and logic flows can also be performed by and apparatus can also be implemented as special purpose logic circuitry e.g. an FPGA field programmable gate array or an ASIC application specific integrated circuit .

Processors suitable for the execution of a computer program include by way of example both general and special purpose microprocessors and any one or more processors of any kind of digital computer. Generally a processor will receive instructions and data from a read only memory or a random access memory or both. The essential elements of a computer are a processor for performing instructions and one or more memory devices for storing instructions and data. Generally a computer will also include or be operatively coupled to receive data from or transfer data to or both one or more mass storage devices for storing data e.g. magnetic magneto optical disks or optical disks. However a computer need not have such devices. Moreover a computer can be embedded in another device e.g. a mobile telephone a personal digital assistant PDA a mobile audio player a Global Positioning System GPS receiver to name just a few. Computer readable media suitable for storing computer program instructions and data include all forms of non volatile memory media and memory devices including by way of example semiconductor memory devices e.g. EPROM EEPROM and flash memory devices magnetic disks e.g. internal hard disks or removable disks magneto optical disks and CD ROM and DVD ROM disks. The processor and the memory can be supplemented by or incorporated in special purpose logic circuitry.

To provide for interaction with a user embodiments of the invention can be implemented on a computer having a display device e.g. a CRT cathode ray tube or LCD liquid crystal display monitor for displaying information to the user and a keyboard and a pointing device e.g. a mouse or a trackball by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well for example feedback provided to the user can be any form of sensory feedback e.g. visual feedback auditory feedback or tactile feedback and input from the user can be received in any form including acoustic speech or tactile input.

Embodiments of the invention can be implemented in a computing system that includes a back end component e.g. as a data server or that includes a middleware component e.g. an application server or that includes a front end component e.g. a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the invention or any combination of one or more such back end middleware or front end components. The components of the system can be interconnected by any form or medium of digital data communication e.g. a communication network. Examples of communication networks include a local area network LAN and a wide area network WAN e.g. the Internet.

The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client server relationship to each other.

While this specification contains many specifics these should not be construed as limitations on the scope of the invention or of what may be claimed but rather as descriptions of features specific to particular embodiments of the invention. Certain features that are described in this specification in the context of separate embodiments can also be implemented in combination in a single embodiment. Conversely various features that are described in the context of a single embodiment can also be implemented in multiple embodiments separately or in any suitable subcombination. Moreover although features may be described above as acting in certain combinations and even initially claimed as such one or more features from a claimed combination can in some cases be excised from the combination and the claimed combination may be directed to a subcombination or variation of a subcombination.

Similarly while operations are depicted in the drawings in a particular order this should not be understand as requiring that such operations be performed in the particular order shown or in sequential order or that all illustrated operations be performed to achieve desirable results. In certain circumstances multitasking and parallel processing may be advantageous. Moreover the separation of various system components in the embodiments described above should not be understood as requiring such separation in all embodiments and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products.

Thus particular embodiments of the invention have been described. Other embodiments are within the scope of the following claims. For example the actions recited in the claims can be performed in a different order and still achieve desirable results.

