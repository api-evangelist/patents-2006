---

title: Environment modification using system and usage data
abstract: Environment modification using system and usage data is described, including receiving environmental data from one or more sources, the environmental data being associated with an environment, determining a change in the environmental data by comparing a current value for the environmental data to a mean value for the environmental data, the change being expressed as a delta value, and applying the delta value to the environmental data to evolve the environment.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08005729&OS=08005729&RS=08005729
owner: Adobe Systems Incorporated
number: 08005729
owner_city: San Jose
owner_country: US
publication_date: 20060330
---
The present invention relates generally to software architecture. More specifically environment modification using system and usage data is described.

Graphical user interfaces UI display information and data in a graphical manner assigning icons images and other graphics to represent types and amounts of information. Rich Internet Applications RIA and other architectural schemas may be used to provide applications that are rich or developed using extensive and comprehensive visual and aural effects. For example conventional UIs use icons shaped like sealed envelopes on a cell mobile or smart phone display to represent messages e.g. voicemail text instant received. However conventional UIs are limited with regard to the type and manner of presenting information in a UI that provides individual context and relevance for a user.

Conventional solutions do not accurately or efficiently present individually tailored information associated with a user or device e.g. mobile phone smart phone camera phone mobile computing device notebook computer desktop computer server and other types of computing devices . Context and relevancy to an individual user are sacrificed in order to convey information using general techniques that are applicable to a user population at large. In other words an envelope icon may be used to represent messages received for every user of a mobile phone regardless of the type of device software running on the device network or other environmental conditions. Different icons or presentation formats do not need to be developed for individual users. This technique is efficient for a network provider to use for an entire subscriber population but individual users suffer from degraded user experiences which also reduce the commercial attraction and value of the network service devices applications service plans and other aspects of device and system usage.

Further conventional techniques that attempt to provider further customization for individual users rely upon the use of one to one correlations e.g. one icon represents one voicemail message two icons represent two messages and so on to present information and data graphically. While this technique may provide more detail it is also inefficient because general one to one correlations do not account for differences in individual user behavior preferences characteristics time or system parameters.

Thus presenting data and information on UIs without the limitations of conventional techniques is needed.

Various embodiments or examples may be implemented in numerous ways including as a system a process an apparatus or a series of program instructions on a computer readable medium such as a computer readable storage medium or a computer network where the program instructions are sent over optical electronic or wireless communication links. In general operations of disclosed processes may be performed in an arbitrary order unless otherwise provided in the claims.

A detailed description of one or more examples is provided below along with accompanying figures. The detailed description is provided in connection with such examples but is not limited to any particular example. The scope is limited only by the claims and numerous alternatives modifications and equivalents are encompassed. Numerous specific details are set forth in the following description in order to provide a thorough understanding. These details are provided as examples and the described techniques may be practiced according to the claims without some or all of the accompanying details. For clarity technical material that is known in the technical fields related to the embodiments has not been described in detail to avoid unnecessarily obscuring the description.

Techniques for environment modification using system and usage data are described. Computer programs software or applications applications used to create or modify visual graphic audio video or other types of media content presentations and UIs e.g. Flash by Adobe Systems Incorporated of San Jose Calif. may be used to provide display environments environments on devices that may be modified with usage data e.g. user behavior user preferences historical performance profile information and characteristics device usage data e.g. how many calls are made or received how many messages are sent or received types of applications used or launched by a given user and the like and system data i.e. data and information about a given user s device including battery level signal strength network conditions affecting the device available memory power management settings type of installed browser or microbrowser operating system other applications available on the device and other conditions parameters characteristics or attributes of a given user s device . An environment may be evolved i.e. changed over time by modifying an environment and its included elements e.g. visual audio video text graphical image or other types of content or functionality included in an environment . Various types of themed environments are also described including numerous examples for evolving an environment based on individual user behavior system parameters and conditions and other factors.

In some examples applications developed for performing the described techniques for environment modification using system and usage data may be implemented on devices . System and usage data may be stored or retrieved from storage repository . In some examples system data may include data information and parameters related to a given device. For example system data associated with set top box may include signal strength data representing the types of content available number of channels available due to network condition or subscription and others. As another example system data associated with mobile computing device or mobile cell phone may include signal strength network availability or conditions battery power level available services and others. In some examples usage data may be collected from devices and stored either locally on the device or remotely on for example storage repository . Alternatively storage repository may also be implemented as local storage on devices . Storage repository may be implemented using one or more storage devices databases data warehouses datamarts arrays e.g. redundant array of independent disks RAID storage networks e.g. storage array network SAN and the like and others. In other examples system and the illustrated elements e.g. network devices and storage repository may be implemented differently and are not limited to the examples shown.

In some examples logic module provides control logic that directs application to modify environments using system data and usage data. Logic module may initiate calls of other applications not shown using application programming interface to retrieve system and or usage data. System and usage data may also be called from a device using device interface module . System and usage data may be stored in or retrieved from storage . Examples of processes performed by application and logic module are described in greater detail below in connection with .

Referring back to system and usage data may also be used to implement or download an environment. In other words an environment may be configured as a system or set of system files that when downloaded to a device may be implemented. For example a garden environment may be configured as a set of system files e.g. system data that may be downloaded by application and stored to storage . When logic module retrieves the set of system files rendering engine media module and device interface module generate a garden environment on the display of a device. Users may also download additional system and usage data i.e. from a server or other remote source to add elements to the environment allowing users to customize an environment for their personal tastes and preferences. For example if a user wishes to add a particular type of hydrangea or shrub to the environment application may be used to download additional system data i.e. set of system files that would be used to modify the environment on her device. As another example if a landscape themed environment is presented and a user wants to add the Sydney Opera House to an urban environment application may be used to download and add the desired element to the environment of his device. Further application may be used to configure evolve or further modify elements e.g. downloaded default factory installed shared beamed transferred or other types of elements in response to usage data.

For example a downloaded hydrangea element may be configured to represent voice messages from a recognized caller. As the number of messages changes i.e. are received from the recognized caller deleted stored archived added modified and the like the hydrangea element may be configured to grow expand or contract. As another example as messages are received from a recognized caller in the above example involving the Sydney Opera House foot traffic or pedestrians milling about the Sydney Opera House may increase. As messages are deleted or store elsewhere i.e. archived the foot traffic may diminish. Likewise other aspects including audio and video related aspects may also be configured to change or evolve with time as activity occurs e.g. noise emanating from a downloaded element may change in volume tone rhythm and the like . By downloading system files new content and functionality may be added to environments or new environments may be installed or used to replace other environments. Elements may be configured to react to further system and usage data that is received over time. In other examples downloaded system data may be configured differently and is not limited to the examples described above.

Here logic module may also include rules or parameters i.e. user and or system specified that may be used to evaluate system and usage data. System and usage data may be accumulated for evaluation to identify trends associated with an individual user. In some examples rules or parameters may also change with system or usage data changes. For example if a user turns her phone off a rule may specify that usage data levels are reset and when the phone is turned on data begins to accumulate from a zero balance. Examples of rules or parameters may include determining how much a device is used device performance the ratio of talk time to callers e.g. total talk time minutes total callers current values for battery power level and signal strength i.e. based on ranges within a wireless or telecommunications network general usage range e.g. average initial usage minutes general usability minutes expressed as a ratio or real number an individual usage profile in relation to an overall usage population how to incorporate changes with artwork rendered for a UI and others. Rules may also be randomized used to indicate combinations of current or mean system or usage data values described in greater detail below or other guidance for application .

Logic module calls for system and usage data from a device that application may be running on locally. When system and usage data are returned they are evaluated to determine what and how an environment on a device should be modified. When changes have been determined as described in greater detail below logic module directs rendering engine to modify elements e.g. graphics images photos video audio avatars icons and other UI displayed elements based on the changes. Changes are based on the system and usage data of an individual user and device not a mobile phone population at large. Environment modification by application may be performed based on the individual user characteristics and behavior of a given user. For example if a user receives 20 calls in a month on average then icons or graphics that indicate his call volume may be modified to reflect his actual call volume i.e. current usage value in relation to his mean call volume i.e. mean usage value . Thus a caller with a 20 call monthly volume may have an environment that is different from another caller with a 500 call monthly volume each of which has an environment that has been modified based on their individual system and usage data. Examples of modified elements are discussed in greater detail below in connection with .

Here environments may be implemented and modified on a device display e.g. devices using information in files stored in or retrieved from storage . Presentation of environments and elements within the environment e.g. graphics images video audio and others may be performed by rendering engine and media module which handles device displays UIs sounds text and appearance or presentation of various types of media on a device. Data may be output using device interface module which directs the presentation of an environment and its associated elements modified or otherwise on a device. Files may be compilations or collections of data that when loaded and run provide parameters characteristics formatting values and other information for rendering an environment i.e. using rendering engine . In other examples application and the elements shown may be implemented using more fewer or different modules and are not limited to the examples described.

In some examples base environment file may also include logic that guides and directs the use of data stored in environment files . When base environment file is extracted logic stored in the file directs the retrieval of data from environment files that rendering engine may use to determine what elements of an environment are displayed and the manner in which the elements are displayed. For example a landscape environment may be presented on a device using base environment file and environment files . When base environment file is extracted from storage it directs the retrieval of environment files that provide for example the background or backdrop appearance background of the environment elements within the environment e.g. trees bushes flowers birds clouds sun and the like and formatting for the environment in relation to a given device in use. Base environment file and environment files may also include information that is used to determine how the elements and background are coupled to functionality presented in the environment e.g. selecting a bird icon to retrieve a message sizing or re sizing the sun based on the battery power level of a device and the like . Environment files may also be configured to store personalization data for an individual user that enables customization of the environment for an individual user. Backgrounds may be implemented to provide a base environment and application may use system and usage data to implement the techniques described herein for environment modification. In other examples base environment file and environment files may be implemented differently and are not limited to the examples shown.

Here display shows message element which appears as an image of a building. In some examples message element may be configured to appear like a building in a cityscape. Cityscapes may be used as themes for environment and configured to represent cities such as Paris Rome London Tokyo New York San Francisco and others. Environment may be used with cityscapes representing other cities and types of urban or rural settings and are not limited to the examples listed above. Here message element represents a single message received from a caller whose telephone number is shown. In other examples message element may represent more than one caller if for example the individual user receives numerous messages and it would be more appropriate to use message element to represent a group collection or archive of messages.

In some examples message element may be configured to represent a voicemail message and the height of the building may also be used to represent the size or length of the voicemail message. As message element ages i.e. the amount of time the message remains in an individual user s message inbox the building may also be moved further into the background appear to age e.g. overgrowth begins growing on the building brightness of lights in the building are adjusted message element appears dimmer or eventually fades and the like or shrink in size as newer messages are received. In other examples message element may be modified in various dimensions including size shape height age i.e. date and time received and others to customize environment for an individual user. In other words message element may be evolved or modified over a given time period based on the system and usage data of an individual user. Here a single building may be used to represent a single voicemail in a user s inbox with callout displaying the number of the caller who left the message. In other examples callout may include a caller identity text associated with the message or the caller or other information about the message. Environment and the elements shown may be varied and are not limited to the example described. Further environment may be modified such that elements e.g. message element appear to evolve over time.

Here message elements may be graphical icons avatars symbols or other types of elements used to represent messages received by a mobile phone user. Buildings in the foreground e.g. message elements and may be used to represent recently received messages and those in the background e.g. message elements and may represent older messages. Further different shapes may also be used to represent different types of messages. Here text message element may be used to represent a text message received from another user. In other examples different shapes of buildings may also be used to represent different types of messages e.g. text audio pictures images video streaming musical messages with attachments and others . Messages may be identified by callout which may indicate whether a message is a voicemail message i.e. a telephone number is displayed a text message some of the introductory text or the identification of the sender i.e. sender s handle or username is shown a picture or the like. In other examples portions of a message may be displayed or rendered audible if audio based. In still other examples different types of message elements may be used instead of those shown. For example billboards may be used to represent messages displaying senders names numbers usernames and the like. Environment and the elements shown may be varied and are not limited to the examples described above.

As another example text message element is shaped like a cloud. Callout displays some information about text message element indicating the sender of the text message. Text message element may be varied in size and shape to account for the size of the message attachments or other parameters.

Yet another example graphical element may be used to convey other information about an individual user and device. For example graphical element may be displayed as a lake configured to represent a group or pool of messages resident in the user s inbox. In some examples graphical element i.e. the lake may contract or expand as messages are received or deleted from the user s inbox. Further by using system and usage data graphical element may be customized for an individual user to represent her user behavior call usage quantity of messages received saved or deleted.

System and usage data may be compared against mean data i.e. mean usage value mean system value and graphical element may be sized accordingly. In some examples mean usage values may refer to mean values determined by evaluating an individual user s behavior preferences or history over a period of time to yield an average value that may be assigned or applied to individual data points in a set of usage data. Likewise mean system values may refer to mean values assigned to means values determined by evaluating system parameters characteristics and other operating data over a period of time. A mean system value may then be applied to individual data points within a set of system data. By using mean usage values and mean system values an individual user s behavior may be reflected in modified elements i.e. text message element voice message element graphical element to evolve environment and the other environments described herein e.g. environment . In other examples environment may be described differently with more fewer or different elements and is not limited to the examples described above.

In some examples voice message element may be displayed to represent a voice message received by a user. As additional voice messages are received the sizes of voice message elements may be modified to graphically represent when voice messages are received. Further the size of each of voice message elements may be modified based on when voice messages are received the size of each voice message and aging of each voice message. In some examples aging may refer to the length of time that passes before a voice message is reviewed by a user. Voice message element may grow or expand in size as the amount of time between reception and review grows. In other words voice messages may be represented by elements that appear to grow or change over time i.e. evolve . For example voice message element appears larger than other voice message elements . Alternatively age may be based on the relative length of time that a message has been received but not reviewed. In other examples elements may be modified differently and are not limited to the examples shown and described. In still other examples environment may be implemented differently using different themes contexts backgrounds and other elements.

For example if a user receives a call from a number associated with avatar environment may be modified to reflect a change to the appearance of avatar . In other examples e mails text messages voicemails attachments images and the like may be used instead of calls. Here when the call is first received avatar may be modified to reflect a smile on her facial appearance. However as each subsequent ring on device occurs the facial appearance on avatar is modified to reflect a diminishing smile until the call is routed to the user s voicemail inbox. When routed to the user s voicemail inbox system data may be used to modify the appearance of avatar to provide an unhappy unsatisfied grimacing or otherwise unhappy countenance. As a further example if additional unanswered calls are received avatar may be further modified to reflect an angry appearance or other elements on environment may be further modified e.g. avatar breaks background items e.g. dishes cups windows and the like presents a distressed appearance or the like . Other modifications to avatar and other elements in environment may be made and are not limited to those described above.

As another example other callers may have other avatars stored in memory locally and when calls are received from other callers avatar is modified to show a different avatar or image. Usage data reflecting user specified preferences as to which avatar or image is associated with callers stored in memory on device may be created modified stored or deleted by the user. Still further system data and usage data may be combined to further modify elements of environment e.g. avatar by determining mean values e.g. a mean system value for the voicemail inbox data size or capacity a mean usage value for the number of received calls accumulated by the user on a monthly basis or the like and current values e.g. the actual or current amount of voicemail inbox data i.e. actual amount of voicemails stored actual number of received calls accumulated by the user for the given month actual number of received calls from a given number or recognized caller or the like . By dividing current values by mean values actual values may be determined and applied to modify data that when rendered by application causes changes to elements in for example environment . In other examples different sources or types of system and usage data may be used and the techniques described herein are not limited to the examples shown. Further examples of environments that may be implemented and modified using the techniques described above are shown.

For example the above described processes may be used to determine whether system or usage data changed when a call e.g. telephone call call from a wireless caller and the like is received and if so how an environment may be modified to reflect an evolutionary change to the environment. When a call is received a change in system value may be determined using the above described process if battery power level is reduced signal strength changes the call was dropped or not answered or other device conditions are changed. A change in usage data may be determined by incrementing an actual call count updating a mean usage value for the number of calls received on a monthly basis by a user increasing the amount of storage space used by a user if the call or message was not answered but stored to voicemail or a message inbox and others. In other examples different system and usage data changes may occur and the above described techniques may be used to determine delta values that are used to modify elements in an environment to present an evolved display. In other examples the above described processes may be varied and are not limited to the example shown and described.

According to some examples computer system performs specific operations by processor executing one or more sequences of one or more instructions stored in system memory . Such instructions may be read into system memory from another computer readable medium such as static storage device or disk drive . In some examples hard wired circuitry may be used in place of or in combination with software instructions for implementation.

The term computer readable medium refers to any medium that participates in providing instructions to processor for execution. Such a medium may take many forms including but not limited to non volatile media volatile media and transmission media. Non volatile media includes for example optical or magnetic disks such as disk drive . Volatile media includes dynamic memory such as system memory . Transmission media includes coaxial cables copper wire and fiber optics including wires that comprise bus . Transmission media can also take the form of acoustic or light waves such as those generated during radio wave and infrared data communications.

Common forms of computer readable media includes for example floppy disk flexible disk hard disk magnetic tape any other magnetic medium CD ROM any other optical medium punch cards paper tape any other physical medium with patterns of holes RAM PROM EPROM FLASH EPROM any other memory chip or cartridge carrier wave or any other medium from which a computer can read.

In some examples execution of the sequences of instructions may be performed by a single computer system . According to some examples two or more computer systems coupled by communication link e.g. LAN PSTN or wireless network may perform the sequence of instructions in coordination with one another. Computer system may transmit and receive messages data and instructions including program i.e. application code through communication link and communication interface . Received program code may be executed by processor as it is received and or stored in disk drive or other non volatile storage for later execution.

The foregoing examples have been described in some detail for purposes of clarity of understanding but are not limited to the details provided. There are many alternative ways and techniques for implementation. The disclosed examples are illustrative and not restrictive.

