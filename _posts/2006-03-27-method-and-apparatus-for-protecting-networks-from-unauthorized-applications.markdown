---

title: Method and apparatus for protecting networks from unauthorized applications
abstract: A traffic controller is provided which integrates black-box tests of unauthorized applications to extract application characteristics from associated Internet traffic, exploits the networking information learned by host clients, actively scans and controls hosts on the corporate network, and dynamically configures a corporate firewall to block traffic to and from critical application network elements. As a result, the traffic controller effectively manages unauthorized applications and their associated traffic in a corporate environment.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07996895&OS=07996895&RS=07996895
owner: Avaya Inc.
number: 07996895
owner_city: Basking Ridge
owner_country: US
publication_date: 20060327
---
This invention related generally to the field of networking and more particularly to network security.

In a client server architecture a server controls the distribution of content to and among connected client devices. The hierarchical nature of the client server architecture has many advantages. For example because the server controls distribution of content to clients the server can police the distribution of content to and between clients thereby ensuring that appropriate level of protection is afforded to sensitive or copyrighted material. In addition the server as a centralized point of communication can more easily detect intrusive or troublesome clients before network performance is affected. Many applications which execute on client server networks are written as client server applications. In a manner consistent with the client server architecture the server application controls the protection and distribution of content to the client applications.

In contrast in a Peer to peer P2P network each participating peer device has equivalent capabilities and responsibilities. As a result P2P networks have a flat distributed architecture. The lack of hierarchy in the P2P network makes it difficult to control the participating peers in the P2P network.

A problem exists when unauthorized P2P applications are introduced into traditional client server environments such as corporate networks. Unauthorized P2P applications may be introduced into a corporate network by the employees or other clients with access to the corporate network. Certain models of P2P software seeks out other Internet users using the same program and informs them of a peer online presence building a large network of computers as more users install and use the software. One example of such a P2P application is an Instant Messaging IM application.

Unauthorized P2P applications impose new challenges to network security and occupy a significant amount of network bandwidth computer processing power and storage space that are critical to the normal operation of the corporation. Certain P2P applications may involve the illegal exchange of copyrighted materials by clients in the corporate network thereby exposing the corporation to potential legal disputes related to such activities. In addition the secretive nature of P2P applications makes it difficult to control the applications activities and concomitantly the flow of information between the corporate network and the public internet. Confidential and critical corporate information may be exposed without any means of detecting the loss.

P2P applications may be intentionally designed to evade corporate networks protected by conventional firewalls and Network Address Translation NAT devices. For example certain P2P applications may use random port numbers for P2P communication encrypt messages to prevent high layer analysis of traffic use debugging prohibit technologies to prevent low level analysis of the application use special technologies such as Simple Traversal of UDP though NAT STUN and Traversal Using Relay NAT TURN to penetrate NAT devices or attempt to connect using TCP over port and to disguise P2P traffic as legitimate HTTP HTTPS traffic to deceive the firewall or use multiple dynamic hosts as proxies for P2P communications.

Attempts to defend corporate networks from unauthorized P2P applications have included attempts to block or otherwise control access to firewall ports block the download of P2P executables or block access to known central P2P registration servers. However the currently available solutions have not proven sufficient to defend the corporate network from unauthorized P2P applications.

According to one aspect of the invention a method of detecting unauthorized applications executing in a computer network includes the steps of identifying potential unauthorized applications and modeling the potential unauthorized applications to identify application configuration information including application peer contacts and resources used by the potential unauthorized application. The method also includes the steps of monitoring traffic in the computer network to detect communications with the peer contacts and requests for access to the resources used by the application and selectively blocking the communications and the requests for access to the resources.

According to another aspect of the invention an apparatus for controlling application traffic in a computer network includes a client device for modeling the operation of a potential unauthorized application and a traffic analyzer. The traffic analyzer is coupled to the client device and operable to monitor traffic associated with the potential unauthorized application to extract application configuration information including addresses of devices communicating with the potential unauthorized application and resources accessed by the potential unauthorized application. The application configuration information is used to generate rules for selectively blocking the communications associated with the application configuration information.

With such an arrangement application configuration information is made available for use by corporations and other enterprises to permit the enterprises to have greater control over the execution of unauthorized applications in their network.

Referring now to a network is shown to include several components for supporting peer to peer P2P applications. A P2P application is a piece of software that may be installed on any computer host and is distributed to interested parties usually via a Wide Area Network WAN such as the Internet. The P2P applications typically provide content sharing capabilities between the coupled peer hosts executing the same P2P application. One well known example of a peer to peer application is Napster which allows peer to peer music sharing. Another well known example is the Skype Voice over Internet Protocol VoIP application. The Skype VoIP application provides both Internet bounded free PC to PC communication facilities such as voice conversation instant messaging file transfer and other digital sharing and voice communication between PCs on the Internet and phones on the Public Switched Telephony Network PSTN .

The ability to freely share content has increased the popularity of use of P2P applications by Internet users. However the use of P2P applications by individuals within corporate or other enterprises disrupts the corporate network using a significant amount of network bandwidth processing and storage resources that are critical to the operation of the corporation. In addition because P2P applications are typically designed to circumvent corporate firewalls or Network Address Translation NAT devices it is difficult to control the inflow and outflow of content thus compromising the security and integrity of corporate content. Thus although enterprises such as enterprise in have typically positioned firewalls between the enterprise network and the internet to control the flow and exposure of content the prior art firewalls and NAT devices have been ineffective at detecting use of peer to peer applications by the hosts and .

To overcome this problem the present invention provides an unauthorized application detection mechanism that may be included within a firewall such as firewall . The unauthorized application detection mechanism includes an analysis tool for identifying and analyzing potential unauthorized applications to identify characteristics of the application and a detection tool which uses the characteristic information provided by the analysis tool when monitoring network traffic to detect execution of the unauthorized applications by hosts in the network.

Both the analysis tool and detection tool will be described below with regards to a particular P2P application architecture. However it should be understood that the present invention is not limited to use with peer to peer applications but rather the concepts may be extended to assist in the analysis and detection of any type of unauthorized application.

A general problem with unauthorized applications is that characteristics of the application are not made publicly available. The analysis tool of the present invention thus seeks to collect application characteristic information to enable detection of the application by a firewall or other traffic monitoring device. However in order to collect application characteristics some knowledge regarding the architecture of the application is first garnered. Once the architecture of a particular application is known an application data structure or overlay is provided. The application data structure includes a number of fields associated with the particular application architecture with each of the fields storing one or more application characteristic. An example of how an application data structure would be populated with application characteristic information will now be provided with regard to the P2P application architecture of .

Each root super node is different from ordinary super nodes in several respects. First the root nodes are dedicated hosts that are maintained by the P2P network operator. Second the number of root nodes is limited unlike the number of ordinary super nodes that may grow as more hosts join the P2P network. Third the root super nodes are typically only be used if the ordinary super nodes are not available. The super nodes thus form the backbone of the P2P network that performs other essential functions such as directory search and locality services in addition to the basic proxy service.

Application gateway is a special purpose server that interconnects the P2P host clients and central servers to other networks. For example application gateway links P2P hosts communicating over the Internet to VoIP network . A voice gateway may be used to interconnect P2P clients to a Public Switched Telephone Network PSTN .

Thus each P2P client is a software entity that resides in a computer as an installed the P2P application and receives service from other elements of the P2P network. The P2P client may traverse existing enterprise networks for P2P network communication. It is the communication between the P2P clients in the enterprise network that is addressed by modified firewall .

The identifiers may be fixed during the lifecycle of the P2P application for example root super node identifiers may be semi fixed such as application gateways or may change dynamically during the lifetime of the P2P application such as the ordinary super node identifiers . The fixed configuration information is either embedded in the P2P software executables or may be obtained manually. The semi fixed and dynamically changeable configuration information may be embedded in the P2P software installer and initialized when the application is first installed on the P2P client host. Changes to this information occur during subsequent execution of the P2P application.

Other characteristics that may be stored in the AS DS include a feature list . Each application may include a set of features or functions that use network element resources during its execution. Often a set of the features can be determined by analysis of the Application Programming Interface API . Often API s are unpublished however making it difficult to directly determine the affected network resources. As will be described in more detail below the present application indirectly determines network element utilization through a combination of traffic monitoring and other techniques. The feature list and affected network resources are stored in the AC DS .

In one embodiment there is a separate AC DS for each known unauthorized P2P application. In some embodiments there may be multiple different AC DS s for example for different versions of the same P2P applications that provide different feature sets or utilize different contacts. The present invention is not limited to any particular manner of representing the stored application characteristic information.

In general P2P applications are designed to enable each P2P host to learn as much about the P2P network as possible in order to improve the performance of the P2P application. However P2P applications are also designed for survival purposes to ensure that the wealth of information about the P2P network is not readily humanly discernable. By obfuscating this information the P2P application seeks to maximize its probability of communicating with other P2P hosts through firewalls and other NAT devices.

The present invention takes advantage of the wealth of knowledge incorporated in the P2P application by installing the P2P application on a controlled client device and systematically adjusting application parameters while monitoring traffic flow to glean application characteristic information for population of the AC DS. The P2P application is treated as a black box by monitoring only the interfaces of the application to obtain application characteristic information.

Referring now to a block diagram of an improved firewall is shown to include a traffic controller of the present invention in conjunction with an external corporate firewall . The corporate firewall may be any firewall or NAT device. The traffic controller may input rules to the firewall to assist the firewall in controlling the traffic flow into and out of a corporation or other enterprise.

The traffic controller includes a P2P Traffic Analyzer PTA and one or more Controlled P2P Clients CC such as CC . The PTA collects and stores P2P application characteristic information both from the CCs as well as from any P2P host clients in the corporate network such as P2P hosts and . The PTA includes functionality for testing P2P applications that are loaded on the CCs and the Hosts and to obtain the application characteristic information for population of the AC DS .

The Controlled Clients CCs are hosts that run various versions of the P2P applications. The CCs are exercised by the PTA to perform known P2P application functions. Various versions covering all known releases of a particular P2P application may be instantiated in different CCs to cover as many conditions as possible and to expose the connectivity and resource utilization information of the application.

In addition to receiving P2P application information from the CCs the PTA is also coupled to hosts and . The PTA may include or be coupled to configuration control logic which scans coupled hosts to detect the operation of an unauthorized P2P application at either of the Host devices and . Upon detection of the unauthorized P2P application at either of the Host devices the configuration control logic of the PTA may augment the AC DS associated with the P2P application by extracting data from the P2P host device. For example the PTA may similarly exercise the host P2P s application within the corporate network to extract additional application configuration information or alternatively may collect the P2P specific system information such as a Host Cache of P2P host or in order to expand the list of the super nodes maintained in the AC DS . The Host Cache includes a stored list of super nodes that are either predetermined for or learned from the P2P network.

A tap is disposed between the corporate firewall and the CCs . The tap forwards information received from other P2P hosts in the Internet and targeted to the CCs and actual P2P host devices to the PTA. Thus the PTA is situated to receive application characteristic information from a black box analysis of a controlled P2P client via CCs from actual P2P host devices via network connection and also from any P2P hosts connected via the Internet. In such a manner the PTA gains both an initial database of P2P application characteristics as well as being able to monitor and update the database as it dynamically changes during the lifetime of the P2P application.

Using the knowledge about the P2P application characteristics allows the traffic controller to have an increased control over execution of P2P applications. Depending upon corporate policy the traffic controller may enforce the removal quarantine of the P2P application from the hosts. This can be done directly by the traffic controller or indirectly by adding a specific virus definition to an existing virus protection program which targets the P2P application. The traffic controller can also prohibit the P2P application from running on the corporate network by adding a target P2P signature or finger print to a system demon running on each host so that the unauthorized P2P application is recognized and forced to stop each time it is started. Alternatively the traffic controller may add the list of P2P network elements identified in the feature list of the AC DS to a corporate firewall blocking list so that the P2P application will not be able to initialize or start. For example a P2P application may have to connect to some Bootstrap Super Nodes in order to initialize and this information may be stored in the Host Cache blocking access to these Bootstrap Super Nodes will prevent an application from starting up. The traffic controller may also shut down an actively running P2P application if communication with the Bootstrap Super Node application gateway central server or any other super node is detected and the hosts running the P2P application are identified.

By integrating black box tests that link application characteristics to Internet traffic exploiting the P2P networking information learned by host P2P clients continually actively scanning and controlling hosts on the corporate network and dynamically configuring the corporate firewall to block traffic to and from critical P2P application network elements the traffic controller effectively manages P2P applications and their associated traffic in a corporate environment.

Many different methods may be used to garner the application characteristics using the black box approach of exercising a P2P application monitoring the resultant traffic and identifying relevant application information. In particular the exact methods or steps used to collect this information may vary depending upon the type of architecture of a P2P application. For example obtaining configuration regarding a flat or pure P2P architecture would involve different steps than the one described below as it would not attempt to locate root node or central server information. Accordingly while illustrate exemplary steps that may be performed to obtain this information in a hybrid P2P network such as that illustrated in these steps are presented as exemplary only. It will be readily appreciated that the present invention is not limited to any particular method of obtaining the application characteristic information and that equivalents to those illustrated adapted due to different architectures or other considerations are included in the breadth and scope of the present invention.

Once the modified files have been identified at step the process continues to step and step where the CC is exercised to populate the AC DS. Various steps that may be performed during the exercising of the CC are illustrated in . At step it is determined whether the application configuration information is humanly readable. If so then at step the AC DS for that application is populated with whatever information is obtainable from the configuration files. If not then the configuration information may be either encrypted or embedded within the executable files and it should be determined where the information is stored. Several methods can be used to determine where the information is stored. For example if the configuration information is stored locally but is not readable then the modified files can be selectively deleted and the application executed to monitor the exchange of information between the CC and any external hosts. If the configuration information is located in the executable file then renaming or removing all the other modified files will not affect the application s communication with external hosts.

The process then proceeds to step to initiate the collection of locally available application data. Several constants of the P2P application are exploited by the current invention when obtaining application characteristic information. First among the constants is the fact that a P2P client must connect to one of the super nodes or other peers in a flat P2P network to join the network and initiate operation. Thus there will always be at least some fixed configuration information in the CC application even if the configuration information is not readily discernable by the PTA. The communication between the P2P hosts is critical to the normal operation of the P2P application and is always observable by the network administrator. By observing these communications the AC DS can be easily populated with node identifiers in the following manner. At step the CC is controlled to generate an external P2P communication. Under the typical P2P protocol this communication will be to a known super node. At step the super node identifier is obtained by the network administrator. If the node identifier is a duplicate of one of the identifier collected so far then potentially all known locally available application characteristic information has been collected. If not at step the identifier is stored in the AC DS and at step the host identifier is forwarded to a block list at the firewall to prevent further accesses.

The process returns to step where another communication is generated at the CC. If the previous identifier is blocked then the CC will attempt to forward the communication to the next known host identifier. The process of gathering locally known identifiers continues until all are identified as determined at step .

Once all locally known identifiers are determined the process continues to step to expose network wide configuration information. One method of doing so is to delete the locally stored super node configuration which is known as the Host Cache. The Host Cache contains the host information e.g. IP address and port number that the client can attempt to connect as super nodes in later operations. Therefore the Host Cache contains the critical information for the normal operation of the P2P application. If the host cache is corrupted the P2P host falls back on any known root super node information embedded in the executables. That is the P2P host will attempt to connect to the fixed root super nodes to join the P2P network and re populate the Host Cache again using the information obtained by the Root Super Nodes.

Thus at step the process flushes the Host Cache causing the Host Cache contents to be refreshed at step with the contents of Super Node information from a Root Super Node. As a result by intentional corruption of the local Host Cache the complete network wide configuration information about all ordinary super nodes currently in the P2P network is obtained.

At step application features are identified. Some P2P networking applications may offer multiple features or different levels of service such as Instant Messaging Voice Conversation and File Exchange. Each feature has its own feature characteristics such as which hosts or servers to contact and which type of lower level communication to use such as Transmission Control Protocol TCP or User Datagram Protocol UDP . Identifying the particular characteristics associated with each of the features may assist the network administrator to apply corporate policies over the specific features. For example a corporation may allow occasional instant messages or brief voice conversations but prohibit file transfer for security reasons. At step each of the features is individually invoked and the characteristics and effected network elements are determined and stored in the AC DS associated with the application.

The process then returns to step of where the AC DS is populated with the information obtained during the exercise of the CC. At step the traffic controller uses the collected application characteristic information to generate rules which are forwarded to the firewall or NAT device of the enterprise network. At step the host devices in the network are scanned for instances of P2P applications. Should an application be detected at the host device at step the traffic controller can take steps to retrieve application characteristic information from the host device for example by extracting the super node identifiers from the Host Cache by flushing the cache as shown at step or though the use of other methods described with regard to .

The process of exercising the CCs and scanning the Host devices repeats periodically to ensure that an accurate representation of P2P application characteristic information is maintained and thus to thereby ensure that appropriate policies are put in place at the firewall to protect the enterprise network.

Accordingly a method and apparatus has been shown and described which allows P2P applications to be profiled thereby facilitating collection of host information that is critical for the operation of the P2P application. Once this information is collected a corporate policy that controls or restricts the operation of the application may be accurately enforced. By integrating black box tests that link application characteristics to Internet traffic exploiting the P2P networking information learned by host P2P clients continually actively scanning and controlling hosts on the corporate network and dynamically configuring the corporate firewall to block traffic to and from critical P2P application network elements the traffic controller effectively manages P2P applications and their associated traffic in a corporate environment.

Having described several embodiments of the invention it will be appreciated that the above description and figures are merely illustrative of features and functions of the present invention. Although certain components and steps have been described it is understood that the descriptions are representative only other functional delineations or additional steps and components can be added by one of skill in the art and thus the present invention should not be limited to the specific embodiments disclosed. In addition it is understood that the various representational elements may be implemented in hardware software running on a computer or a combination thereof. For example although has shown the use of the present invention for managing P2P application use in a single site enterprise network the present invention is not limited to use by single site enterprises. Rather the concepts may also be used to manage P2P applications in distributed multi site enterprise networks such as that illustrated in . illustrates an exemplary embodiment of a distributed multi site enterprise network where the enterprise network includes geographically distributed sites and which are connected to the Internet via respective firewalls and . Host computers at the distributed enterprise sites communicate using secure channels such as Virtual Private Networks. One or more of the firewalls and at the enterprise sites would include improved firewall technology of the present invention which incorporates the above described P2P application detection and control functionality. Each enterprise site would communicate known potential unauthorized P2P application information to the other sites to ensure consistent operation of all firewalls in the system. Thus it can be seen that the technology of the present invention may easily be incorporated into legacy systems with known P2P information being shared among legacy and updated firewalls in a distributed multi site enterprise.

Many of the above figures are flowchart illustrations of methods apparatus systems and computer program products according to an embodiment of the invention. It will be understood that each block of the flowchart illustrations and combinations of blocks in the flowchart illustrations can be implemented by computer program instructions. These computer program instructions may be loaded onto a computer or other programmable data processing apparatus to produce a machine such that the instructions which execute on the computer or other programmable data processing apparatus create means for implementing the functions specified in the flowchart block or blocks. These computer program instructions may also be stored in a computer readable memory that can direct a computer or other programmable data processing apparatus to function in a particular manner such that the instructions stored in the computer readable memory produce an article of manufacture including instruction means which implement the function specified in the flowchart block or blocks. The computer program instructions may also be loaded onto a computer or other programmable data processing apparatus to cause a series of operational steps to be performed on the computer or other programmable apparatus to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide steps for implementing the functions specified in the flowchart block or blocks.

Those skilled in the art should readily appreciate that programs defining the functions of the present invention can be delivered to a computer in many forms including but not limited to a information permanently stored on non writable storage media e.g. read only memory devices within a computer such as ROM or CD ROM disks readable by a computer I O attachment b information alterably stored on writable storage media e.g. floppy disks and hard drives or c information conveyed to a computer through communication media for example using baseband signaling or broadband signaling techniques including carrier wave signaling techniques such as over computer or telephone networks via a modem.

In summation while the invention is described through the above exemplary embodiments it will be understood by those of ordinary skill in the art that modification to and variation of the illustrated embodiments may be made without departing from the inventive concepts herein disclosed. Accordingly the invention should not be viewed as limited except by the scope and spirit of the appended claims.

