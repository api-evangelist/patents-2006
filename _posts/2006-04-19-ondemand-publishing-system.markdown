---

title: On-demand publishing system
abstract: According to the present invention an information processing apparatus comprises: a loading unit which loads function information representing a function of the post-printing processing device; an identification unit which identifies a printing function processible by the printing device and a post-processing function processible after printing by the post-printing processing device; a display control unit which displays a setting window for setting the printing function and post-processing function; a data generation unit which generates printing data to be printed by the printing device; a setting information generation unit which generates post-processing setting information subjected to post-printing processing by the post-printing processing device; and wherein the printing data is transmitted to the printing device, and the post-processing setting information is transmitted to the post-printing processing device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08139236&OS=08139236&RS=08139236
owner: Canon Kabushiki Kaisha
number: 08139236
owner_city: Tokyo
owner_country: JP
publication_date: 20060419
---
The present invention relates to an information processing apparatus which outputs printing information to a printing apparatus and post processing information to a post processing apparatus in a printing system configured by connecting by a network an image forming apparatus e.g. a digital copying machine a post processing apparatus e.g. an in line finisher near line finisher or off line finisher and a client computer in which a printer driver for controlling the image forming apparatus is installed and a control method therefor.

Terms will be explained. A finisher means a post printing processing apparatus and is also called a post press process apparatus or simply a post processing apparatus. The finisher executes various processes such as bookbinding cutting stapling punching and collate. Some finishers have multiple functions and some have single functions.

Feature information of an apparatus is information representing the specifications of the apparatus describes the features e.g. functions of the apparatus and is also called property information. Feature information of the finisher contains information representing the functions of the apparatus and the feeding order and direction of paper sheets. In the following embodiments feature information is synonymous with function information.

Printing attributes are information for specifying how to print and contain designation of double single face printing designation of face up face down the number of print copies the paper size and the layout. In the following embodiments the printing attributes are synonymous with printing setting information. The printing attributes can be changed by the user within the range of functions of a printing apparatus from a user interface window provided by an application program or printer driver.

Conventionally when a printing apparatus and finisher are separated in performing post printing processing of a printed product using a finisher the operator must set the printout product on the finisher. In order to facilitate this work the printing apparatus desirably discharges a printed product in accordance with the specifications feature information of the finisher. There has conventionally been proposed a method of controlling printing attributes in printing by using feature information of the finisher. This method is implemented by the first method of controlling printing attributes in accordance with feature information of the finisher in printing or the second method of controlling the function items of the user interface of the printer driver in accordance with feature information of the finisher. The function items are items for setting printing attributes by the user.

As the first method of controlling printing attributes in printing the printer driver automatically sets printing attributes in generating a printing job in accordance with feature information of the finisher. In a printing system described in patent reference 1 the controller of a printing apparatus acquires information on the following two items associated with a bookbinding apparatus connected to the printing apparatus 

 1 information representing whether to pick up a paper sheet from the top of a set document stack or from the bottom and

Based on these two pieces of information the controller automatically sets the page output order ascending descending order and the page output face face up face down so as to allow the operator to directly set a discharged printout product on the bookbinding apparatus and bind the product. Since this control is performed by the controller the user need not consider information on these two items in imposition.

As the second method of controlling the function items of the user interface of the printer driver the type of finisher mounted in a printer is identified manually or automatically and the function items of the user interface are controlled in accordance with the identified type. For example when a finisher capable of stapling is connected to a printing apparatus the staple setting item of the user interface of the printer driver is validated so that the user can set the staple.

Patent reference 2 describes a method of preventing bookbinding with contents different between the cover and the paper bundle in bookbinding processing. According to this method printing information containing identification information of a cover and that of a paper bundle is printed by a printing apparatus. A bookbinding control apparatus loads the printed identification information and if the identification information of the cover and that of the paper bundle coincide with each other performs bookbinding processing.

When an in line finisher is connected to a printing apparatus a computer using the printing apparatus can control the printing apparatus including post processing by the finisher.

In a system called i2i available from Horizon setting information of a finisher is input by the user in accordance with the type and functions of the finisher and the like and the setting information is saved in a control server which manages a printing job. An ID which links a loaded printed product to the setting information of the finisher is issued printed and attached to the printed product. The finisher reads the ID attached to the printed product by a reading device such as a barcode reader and loads setting information corresponding to the ID from the control server. The finisher is automatically set in accordance with the loaded setting information.

However in patent reference 1 described above the bookbinding apparatus is a so called in line finisher connected to a printing apparatus the in line finisher is a bookbinding apparatus which is mounted as an optional device in a printer and connected to the printer via a paper convey path extending from the printer . The method in patent reference 1 cannot be applied to a bookbinding apparatus which is not connected to a printing apparatus via physically the same paper convey path. In patent reference 2 described above the bookbinding apparatus is a so called off line finisher bookbinding apparatus not connected to any network which cannot communicate with a printing apparatus. The user must separately issue an instruction on printing contents from the server an instruction to print an ID and an instruction to the finisher and various kinds of information cannot be unitarily managed. In the i2i system available from Horizon a printed product is associated with finisher setting information but no finisher feature information can be reflected in printing data.

In other words in either of the above mentioned systems when a product printed by a printing apparatus undergoes post processing by a finisher which is not connected to the printing apparatus via physically the same paper convey path the printing apparatus and finisher must be individually set. In particular no system is proposed which unitarily sets a finisher and printing apparatus by an information processing apparatus such as a computer for controlling the printing apparatus. It imposes a burden on the operator to maintain matching between the settings of the printing apparatus and finisher decreasing the productivity of printing processing and generating a setting error.

The present invention has been made in consideration of the above situation and has as its object to provide an information processing apparatus capable along with a control method therefor and a printing system of automatically making settings which match printing attributes by the information processing apparatus for a finisher which is communicably connected to the information processing apparatus and is independent of a printing apparatus thereby increasing the productivity of printing processing and preventing generation of any setting error.

An information processing apparatus which generates printing data to be printed by a printing device and generates post processing setting information subjected to post printing processing by an independently communicable post printing processing device comprises

a loading unit which loads function information representing a function of the post printing processing device 

an identification unit which identifies a printing function processible by the printing device and a post processing function processible after printing by the post printing processing device on the basis of the function information loaded by the loading unit 

a display control unit which displays a setting window for setting the printing function and post processing function that are identified by the identification unit.

a printing data generation unit which generates printing data to be printed by the printing device on the basis of the printing function input via the setting window displayed by the display control unit and

a post processing setting information generation unit which generates post processing setting information subjected to post printing processing by the post printing processing device on the basis of the post processing function input via the setting window displayed by the display control unit 

wherein the printing data generated by the printing data generation unit is transmitted to the printing device and the post processing setting information generated by the post processing setting information generation unit is transmitted to the post printing processing device.

An information processing apparatus which is connected by communication to a printing device and a post printing processing device comprises

a printing information generation unit which generates printing information on the basis of printing setting information 

a post processing setting information generation unit which generates on the basis of the printing setting information and function information that describes a function of the post printing processing device post processing setting information that describes a post processing content of the post printing processing device and identification information of the post printing processing device and

a transmission unit which transmits to the printing device both the printing information generated by the printing information generation unit and the post processing setting information generated by the post processing setting information generation unit.

a reception unit which receives post processing setting information set for a post printing processing device and

a transfer unit which extracts from the post processing setting information information to be set for a post printing processing device connected via the network and transfers the information to the post printing processing device.

According to the present invention settings which match printing attributes are automatically made for a post printing processing device which is connected by communication to an information processing apparatus. The productivity of printing processing can be increased and generation of any setting error can be prevented.

Further the labor of inputting information on a newly connected post printing processing device can be saved.

Since post processing setting information issued from the information processing apparatus is transferred to the post printing processing device via the printing device the information processing apparatus need neither particularly generate nor transmit post processing setting information for the post printing processing device. Hence programming of the information processing apparatus can be simplified which contributes to reduction of program codes and a decrease in errors.

When a plurality of post printing processing devices are available a post printing processing device designated on the basis of priority can be preferentially adopted. By changing the priority the user can explicitly designate a post printing processing device for use.

By preferentially using a post printing processing device connected in line to the printing device convey work of a printed product from the printing device to the post processing device can be reduced which contributes to savings in labor and an increase in productivity.

Other features and advantages of the present invention will be apparent from the following description taken in conjunction with the accompanying drawings in which like reference characters designate the same or similar parts throughout the figures thereof.

An in line finisher off line finisher and near line finisher will be explained in terms of the finisher control method.

An in line finisher is a finisher which cannot singly communicate with a host computer and is connected to e.g. an image forming apparatus via the same paper convey path. The contents of processing by the in line finisher for a printed product conveyed from the image forming apparatus are set from the image forming apparatus. The processing contents are designated by post processing setting information. A printing job containing designated processing contents e.g. bookbinding processing by the in line finisher can be generated by setting the in line finisher as an optional unit of the image forming apparatus by a printer driver which runs on the information processing apparatus.

An off line finisher does not have any means for communicating with an external apparatus offline and the contents of processing by the finisher are set in the finisher irrespective of another apparatus. For example the processing contents are set by the user from the operation unit of the off line finisher or by reading by the reader of the finisher printing information such as a barcode printed on paper subjected to post processing.

A near line finisher comprises a means for communicating with an external apparatus such as an image forming apparatus. The contents of processing by the finisher can be input from its operation unit and also input as e.g. a job ticket from another device such as a host computer via a network.

The features of each finisher will be described in terms of the convey path paper path of a printout product. These features are general ones and are described for easy understanding of the present invention so the present invention is not limited to the following description. The in line finisher is physically connected to an image forming apparatus to define one paper convey path. Paper printed out from the image forming apparatus is quickly sent to the finisher via the convey path paper path . The off line finisher is not physically connected to the image forming apparatus. Paper printed out from the image forming apparatus is temporarily stacked on a truck tray belt conveyor or the like and then set at the input portion of the finisher. As for the near line finisher similar to the off line finisher printed paper is temporarily stacked and then set at the input portion of the near line finisher. As described above the near line finisher can receive processing contents job ticket via the communication means. The in line finisher can also be equipped with a communication unit for communicating with an external device host computer can receive a post processing instruction job ticket via the communication unit and operate as a near line finisher.

As described above the image forming apparatus can set the in line finisher and near line finisher so as to use their functions. Finisher profiles to be described later which describe the functions of the finishers are profile information held in the image forming apparatus and are transmitted to the computer so as to set functions for use by the computer on the basis of the profile information. The setting operation is done by the computer which reads out a finisher profile. The image forming apparatus acquires the finisher profile by saving in the image forming apparatus the profiles of all types of finishers which may be connected in shipping the image forming apparatus. When there is a near line finisher which is newly supported by the image forming apparatus after shipping the image forming apparatus the image forming apparatus acquires profile information near line finisher profile in the near line finisher after the new near line finisher is connected to the network. Further when no profile information is held in a finisher or profile information is updated by changing or adding a function after installation the profile information can be acquired from the Web page of the finisher manufacturer or the like. Hence even if no finisher profile is held in shipping the profile can be acquired in use. Note that profile information is information which describes the functional feature of a corresponding apparatus and can also be called function information or feature information.

The image forming apparatus holds the finisher profile acquired by the above method in a common DB unit . Then the acquired finisher profile is registered in the image forming apparatus so that the profile can be used from another device such as a printer driver. Details of registration will be described in the following chapter . After the end of registration another device can utilize the finisher profile registered in the image forming apparatus via the NIC unit.

The processing unit comprises an HDD controller which interfaces an HDD device a keyboard controller which interfaces a keyboard and a communication I F serving as an interface with the network at the physical level and link level.

The display device in this example a CRT which displays graphic information and the like for the operator is connected to the processing unit via the graphic adaptor . Further the keyboard and the hard disk drive HDD device serving as a large capacity storage device which stores programs and data are connected to the processing unit via controllers respectively.

The HDD saves program files e.g. an operating system application and printer driver and data files e.g. printer driver setting information and profile information . The printer driver setting information saves values representing the current settings of a printer available by the computer . The profile information saves the profile of an available peripheral device in the first embodiment profile information of a printer near line finisher and the like. The profile information is information representing the features of a device such as the function of the device. More specifically the profile information represents the functions e.g. bookbinding function and cutting function and capability of a near line finisher. For example as for the bookbinding function the profile shows capabilities e.g. the bindable position and size the load weight and the interval between staples accompanying the bookbinding function. As for the cutting function the profile shows capabilities e.g. the cuttable paper size maximum and minimum and thickness accompanying the cutting function.

The MPU executes a device driver application program and the like including the operating system and printer driver program. These programs sometimes display on the display UI windows for requesting the operator to intervene in processing for example set parameters or designate execution. The printer driver is prepared in accordance with the model of printer including an MFP . The printer driver provides the operating system with information on the functions and configurations of a printer and the like and executes processing for implementing a function unique to the printer model.

Finishers are classified into various types by their functions. The first embodiment employs a bookbinding apparatus with the saddle stitch function as an example of an in line finisher a cutting apparatus in as an example of an off line finisher and a bookbinding apparatus with the casing in function in as an example of a near line finisher.

The controller comprises a processor which has both a control program execution function and peripheral device control function and controls the whole finisher a system bus which connects building components in the controller a ROM which stores a control program executed by the processor various data and the like and a RAM which saves a job ticket and the like. Profile information is saved in a ROM or the storage device such as a hard disk and in this example saved in the hard disk. The profile information is read or written by the image forming apparatus to allow the image forming apparatus to use the near line finisher.

The printer driver is formed from a user I F driver which displays a user I F and saves settings and a graphic driver which converts a printing rendering instruction issued from the application via the OS into a code interpretable by the image forming apparatus. The user I F driver displays printing setting dialogs and property sheets shown in when the application permits the user via the OS to set printing.

Note that the setting save area for saving setting information set by the printer driver is ensured in a save area managed by the OS . Setting information containing printing attributes and post processing instruction information which are set by the user via the user I F driver is saved in the printer driver setting save area. The profile information on available devices such as the MFP printer is also saved. The user I F driver graphic driver and application software can access the printer driver setting save area via the OS to read printing attributes and post processing instruction information which are set by the user.

The client computer is connected by connecting a communication I F on the client computer side and a communication I F on the printer side via a communication medium such as a network. The client computer is also similarly connected to another network device such as a finisher. The graphic driver can transmit printing data to the image forming apparatus via the OS and can also acquire the configuration information and status of the image forming apparatus and the like via the OS .

In the first embodiment a finisher profile finisher profile information is described in the XML format. Finishers vary in type such as a bookbinding apparatus cutting apparatus and folding apparatus and the functions of respective types are different from each other. Information greatly changes upon e.g. adding a new function. In order to properly cope with various functions and changes the profile is described using XML in a tag format. As a matter of course the profile can be described in any format as far as addition of a new function and the like can be adaptively described. The finisher profile is prepared for each finisher device.

For example the Booklet tag of the bookbinding apparatus in defines type names saddle stitching fold flat stitching corner stitching half fold flat stitching fold and corner stitching fold . The Medium tag defines medium types Plain and Fine and medium weights 60 kg as a minimum value and 120 kg as a maximum value. The StapleSpaceInterval tag defines that the staple interval cannot be adjusted False and the interval is 100 mm.

In the Cutting tag describes that the maximum input dimensions MaxInputDimensions are 360 mm in breadth and length X Y . Also the Cutting tag describes that the maximum output dimensions MaxOutputDimensions are 310 mm in breadth and length X Y the minimum output dimensions MinOutputDimensions are 80 mm in breadth X and 150 mm in length Y . Further the Cutting tag describes that the maximum thickness MaxThickness is 70 mm.

In this way finisher profile information defines the type of function the manufacturer name the model name and the performance e.g. dimensions and binding position of each function. The profile information may be saved in e.g. the storage device of the finisher and read out and collected by the image forming apparatus or directly collected from the near line finisher under the control of the printer driver of an information processing apparatus serving as a host computer.

In step S the user inputs the IP address of a near line finisher via the operation unit . The IP address may be an IP address directly assigned to the near line finisher or the IP address of a predetermined subnet. In step S on the basis of the input IP address a finisher is specified from a finisher list stored in advance in the finisher profile save area of the image forming apparatus and a list of finishers connectable to the specified image processing apparatus is displayed. The user is prompted to select a corresponding finisher from a list of the manufacturers and models of near line finishers in the displayed list and designate a corresponding profile.

In step S a display for prompting the user to confirm whether the finisher is correct is output. If a message that the user confirms that the finisher is correct is input to the display profile information is requested of the finisher at the input address and received and saved in step S. The finisher corresponding to the saved finisher profile is added to the finisher management table . The changed finisher management table is stored in a secondary storage device or nonvolatile memory.

As another example when an ID representing a manufacturer and model can be acquired from a near line finisher an ID acquisition request is issued to an IP address after the user inputs the IP address of the near line finisher. Then the ID is acquired from the near line finisher and displayed. If the user selects one of the displayed IDs of near line finishers profile information is requested of a finisher corresponding to the selected ID. Profile information can be acquired from a near line finisher to rewrite the finisher management table. A finisher whose profile information can be acquired is one which is connected to a network and is available. In this fashion a finisher profile is requested of a finisher at an input IP address and acquired. The IP address of the finisher and profile information acquired from the IP address are saved in association with each other.

Procedures of allowing the image forming apparatus to use a registered near line finisher will be explained with reference to the flowchart of . A near line finisher which is made available is Finisher Y available from XYZ. The user installs a new near line finisher and connects it to the image forming apparatus via a predetermined communication medium such as a LAN cable. The procedures in are executed by the finisher profile control unit of the image forming apparatus i.e. by the processor of the image forming apparatus .

In step S the image forming apparatus displays a user interface window on the operation unit for the purpose of a connection operation by the user. In this window the user performs a connection operation to a near line finisher on the network and issues an instruction to use the near line finisher. If it is determined that the near line finisher responds to this operation and is available the connection state of the connected finisher is changed to connected true in the finisher management table in step S. This operation will be explained with reference to . show operation windows in step S.

A method step S of of updating the finisher management table by the image forming apparatus will be explained. Since the user connects and registers Finisher Y available from XYZ in the finisher connection setting window of the image forming apparatus updates the finisher management table . In the example of the connection state column of management number 6 is rewritten from false to true . shows the finisher management table after this update. As shown in a column of the connection state of Finisher Y in 6 is changed into true .

By the above procedures connection registration of the near line finisher in the image forming apparatus is completed. In the first embodiment connection of a near line finisher is set by the user on the operation panel of the image forming apparatus after the near line finisher is connected. However connection can also be registered by another method as far as the finisher management table can be updated. For example since the image forming apparatus and near line finisher are connected via a communication medium the protocol in connection is defined. The image forming apparatus and near line finisher communicate with each other on the basis of this protocol and the image forming apparatus automatically registers connection of the near line finisher.

The image forming apparatus further executes steps of transmitting a finisher profile acquisition request to a connected near line finisher and receiving a finisher profile transmitted by the near line finisher in response to the request. The received finisher profile is saved in the finisher profile save area . The name of the received finisher profile is registered in the finisher profile name of the finisher management table . The address of the finisher is registered in association with the finisher profile.

Note that profile information of a near line finisher is read from a registered near line finisher by the image forming apparatus and then acquired by the computer. Alternatively profile information can also be acquired directly from a near line finisher by the computer as shown in to be described later .

As for an in line finisher its finisher profile is initially stored in the image forming apparatus. If the in line finisher is actually connected a signal representing that the in line finisher is connected is input to the control unit. This signal functions as a trigger and for example a flag representing that the in line finisher is connected is set. In other words according to the first embodiment an operation representing that an in line finisher is registered or connected is not necessary for an in line finisher.

Procedures of acquiring the finisher profile of a near line finisher by the printer driver from the image forming apparatus and saving the finisher profile will be explained.

In the configuration of the storage area is a storage area profile save area in the OS where a finisher profile acquired by the printer driver from the image forming apparatus is saved. The printer driver activates a profile acquisition module via the API Application Programming Interface of the OS uses the profile acquisition module to acquire a finisher profile from the image forming apparatus and saves the acquired finisher profile in the profile save area . The profile acquisition module may be formed as one of the modules of the printer driver or provided as one of the functions of the OS . In order to request and transmit a finisher profile a communication medium is used between the communication I F on the host computer side and the communication I F on the image forming apparatus side. Note that the protocol used for communication is not particularly designated as far as acquisition of a finisher profile can be requested from the printer driver and the entity of the finisher profile can be transmitted. A method of acquiring a finisher profile by the printer driver from the image forming apparatus will be explained with reference to a flowchart. is a flowchart showing this procedure. Processing in is executed for example when the computer is powered on when the user designates printing processing or in accordance with an explicit instruction by the user.

In step S the printer driver requests the image forming apparatus to acquire the profile of a finisher which is connected to the image forming apparatus and registered. In response to the acquisition request from the printer driver the image forming apparatus transmits a finisher profile saved in the finisher profile save area to the host computer in which the printer driver runs.

Upon reception of the request in step S the image forming apparatus MFP in sequentially browses the finisher management table from the top and confirms the connection state of each finisher i.e. determines whether each finisher is connected. shows a finisher management table held in the image forming apparatus. In the first step the image forming apparatus confirms the connection state of Finisher A on the top row. In this table the connection state of the finisher is false representing that the finisher is unavailable. In step S the condition of the connection state is determined. Since the connection state of Finisher A is false the flow advances to step S. In step S it is determined whether all finishers have been determined. If all finishers have not been determined the flow returns to step S. This step is similarly repeated for Finisher B Finisher C and Binder ABC .

In step S the connection state of Finisher X serving as the next entry is determined. Since the connection state of Finisher X is true representing that Finisher X is available the flow advances to step S after condition determination in step S. In step S the image forming apparatus transmits to the printer driver the finisher profile of each finisher i.e. finisher of interest in the finisher management table which is managed in an available status. For this purpose the image forming apparatus reads a corresponding finisher profile name finisher x of xyz.xml from the finisher management table . A file of this file name is extracted from a finisher profile save area and transmitted to the printer driver S . In step S it is determined whether all finishers have been determined. If all finishers have not been determined the flow returns to step S. For the next Finisher Y the same steps as those for Finisher X are done. Since the connection state is true in step S the profile name finisher y of xyz.xml of the finisher is loaded in step S. The image forming apparatus extracts a finisher profile of this name from the finisher profile save area and transmits the finisher profile to the printer driver S . This step is repeated for all finishers registered in the finisher management table. After the final finisher in the finisher management table is determined the image forming apparatus transmits to the printer driver in step S information representing that all finishers have been determined. Then the processing in the flowchart of ends.

The printer driver receives a response from the image forming apparatus S and determines whether the response contents represent end S . If the response contents do not represent end the received data is a finisher profile and is saved in the save area S . In this way the printer driver acquires the finisher profile of a connected available near line finisher from the image forming apparatus.

Note that the profile of an in line finisher can be acquired similarly to a near line finisher. Since in line finishers connectable to the image forming apparatus are limited the profiles of all in line finishers may also be saved in advance in the image forming apparatus. In this case an activation flag or the like is associated with the profile of an actually connected in line finisher and the connection is presented. In processing for finisher setting or the like an activated in line finisher is an available finisher.

On the GUIs of the user can perform an operation to set desired setting parameters printout processing condition data . In accordance with input printing setting information the printer driver generates from designated data such as an image printing data corresponding to a transmission destination also called an output destination such as a printer. The generated printing data is transmitted as a printing job by the operating system to the destination device via a network or the like.

In reference numeral denotes a printer driver window. Among setting items in the printer driver window reference numeral denotes a transmission destination selection box for selecting a target output destination. The user can select a desired output destination device of the system via the selection box displayed in the window.

Reference numeral denotes a page setting field for selecting an output page from a printing job. In the field it is set which page is output among data of a plurality of pages that are created by application software running on the client computer and are to be printed. The user can select a page to be printed out by a device such as the image forming apparatus of the system via the page setting field displayed in the window. The user can print all pages or specific pages without printing all pages.

Reference numeral denotes a copy count setting box for designating the number of output copies of a job to be printed out by the image forming apparatus of the system. The cursor is moved to the position of the box and an arrow arrow of the scrollbar shown in is clicked to increment decrement the number of copies. Reference numeral denotes a property button for making detailed settings of a transmission destination device selected in the transmission destination selection box . In response to the button input by the user the printer driver controls to display various detailed windows shown in on the computer display.

If the user clicks an OK button after making desired settings via various operation windows in printing can start in accordance with settings desired by the user. In order to cancel the processing the user clicks a cancel button . In response to this the control unit cancels printing and ends display of the window .

This window has sheets page setting . finishing paper feeding and print quality and tabs for selecting the respective sheets. The user clicks these tabs with the operation unit e.g. pointing device not shown of the client computer and can make settings of various detailed different printout conditions such as settings associated with page setting settings associated with finishing settings associated with paper feeding and settings associated with print quality .

When the finishing tab is selected by a key operation by the user and a plurality of finisher profiles are held the printer driver i.e. control unit displays a finisher selection window not shown in order to select one of finishers. When a finisher is selected from the finisher selection window the printer driver loads profile information of the selected finisher and displays an operation window as shown in on the display unit in accordance with the loaded profile information. This window is used to set setting information unique to a device selected by the user in the operation window of from devices of the system. The setting information includes settings for sheet processing and the settings for sheet processing include setting of stapling processing that of sorting processing that of punching processing and that of bookbinding processing. In addition the setting of which of single or double face printing is executed and the setting of finer adjustment associated with image processing for changing parameters such as the color tint by a printer and the like can also be done. These detailed settings can be made by the user via a plurality of setting windows setting fields executable by the user. Assume that a double face printing mode is set by the client via a printing method setting box in the operation window of and long edge binding is set via a binding direction setting box . In this case the image forming apparatus is controlled by the printer driver so that an image forming apparatus selected by the user in the operation window of is controlled to execute double face printing processing in accordance with the settings double face printing and long edge binding . When post processing e.g. casing in bookbinding by a near line finisher is designated as post processing for a printed product the post processing is done by two processing methods. According to the first processing method the printer driver transmits to the image forming apparatus a printing job containing job control information which describes the contents of post processing by the near line finisher and the ID of the near line finisher. According to the second processing method the printer driver generates a job ticket which describes the contents of post processing by the near line finisher and a job ID identifier and outputs the job ticket to the near line finisher separately from job control information. When the user operates a default button in the operation window of the printer driver controls to restore detailed printing settings in the operation window of to default values.

Although not shown the print quality tab similarly makes it possible to select the resolution halftone setting and the like.

If an OK button is clicked designated property settings are validated and the window returns to the window of . If a cancel button is clicked designated property settings are invalidated and the window returns to the window of .

Of printing processing conditions including various detailed settings the client sends printing condition data set via various printing setting windows of together with a job output request and image data of the job from the client computer. As a result an image forming apparatus selected by the client can be controlled to output data selected by the client in accordance with output settings made by the client.

Note that items displayed on the finishing sheet after a finisher is selected are based on the printer profile of the image forming apparatus itself and a finisher profile selected from finisher profiles acquired from the image forming apparatus by the procedures of . More specifically the finishing sheet shows items corresponding to the functions of a finisher which is selected from a selected near line finisher and an in line finisher connected to the image forming apparatus. These items are given predetermined default values. For example when the finisher profile in is held a designate staple position button on the user interface of is activated. When the button is clicked by the operator a selection menu field for selecting the binding method is displayed. In this menu field six binding methods defined in the BookletType tab in the profile of are provided as selection candidates. The cutting size and the like contained in the profile of can be set by clicking e.g. a details of finishing button in and displaying the size after cutting.

The flow of setting printing attributes by the user on the printer driver and printing out will be explained with reference to the flowcharts of and the user interface windows of . is a flowchart showing procedures of inputting printing setting information by the user and is a flowchart up to printing after the user designates printing.

In setting printing an input to select a printing setting menu from the menu of application software is accepted from the user in step S. In step S the application program calls the API Application Programming Interface of the OS and instructs the printer driver to display a printing setting property sheet. In response to this instruction the OS instructs the printer driver to display the printing setting property sheet. In step S the printer driver especially a user I F driver serving as part of the printer driver accepts this instruction and displays the printing setting property sheet shown in . Subsequently in step S the user makes desired printing settings on the above described property sheets in . The printer driver temporarily saves setting values in accordance with a setting operation. If the user clicks the OK button of the property sheet in the printer driver finalizes the set printing setting information. In response to the click of the OK button in step S the printer driver user I F driver calls the API of the OS and saves the printing setting information values set by the user in the printer driver setting save area in the OS. As a result input and saving of the printing setting information are completed.

In order to print a document the user selects a printing menu from the menu of the application software. In response to the selection instruction in step S the application software calls the API of the OS and instructs the printer driver to start printing. In response to the printing instruction the OS instructs the printer driver to start printing. In step S the graphic driver which forms the printer driver reads out the saved printing setting information from the printer driver setting save area of the OS and generates job control information to the image forming apparatus and job control information for designating finishing settings to a selected finisher. The printer driver generates a printing job containing the generated job control information and transmits the job to the image forming apparatus first processing method or transmits the printing job and a job ticket of the job control information to the image forming apparatus and selected finisher respectively second processing method . The job control information contains e.g. a JDF Job Definition Format command PJL Print Job Language command and PDL Page Description Language command. The JDF is an abbreviation of an XML based file format which is defined to comprehensively define describe manage and control all steps of creating and forming a printed product. In the first embodiment data of the JDF format will be simply called a job ticket. The PJL is a general language for processing data described in the PDL as a printing job. In this example the JDF is used as job control information. When a selected finisher is a near line finisher a job ticket is transmitted as job control information to the near line finisher. When a selected finisher is an in line finisher the PJL in the printing job or job control information described in the PDL is transmitted to an image forming apparatus connected to the in line finisher. When a selected finisher is an off line finisher a printing job is generated by converting the contents of job control information into a format which can be read by the user and can be input to the off line finisher. Then the printing job is transmitted to the image forming apparatus. When the transmission destination is a near line finisher the destination address is an IP address which is saved in association with the finisher profile.

In step S the application program performs printing rendering via the OS on the basis of document data. In step S the printing rendering instruction issued to the OS is transferred as a printing rendering instruction to the graphic driver. The graphic driver converts the received printing rendering instruction into rendering information which can be interpreted by the image forming apparatus and transmits the rendering information to the image forming apparatus as data to be also simply referred a printing job which forms the printing job.

Upon reception of the rendering information in step S the image forming apparatus executes rendering and prints on the basis of the received rendering information. Examples of the page description language representing rendering information are LIPS PCL and PS. By the above described procedures the user can obtain a desired printed product.

Note that the address of a near line finisher is made to correspond to a finisher profile by the image forming apparatus and is read together with the finisher profile. The address of the near line finisher may also be registered in the host computer in advance. Post processing setting information which combines pieces of setting information of the near line finisher is generated in correspondence with a selected finisher. For example the functions and setting items of a selected near line finisher are specified by its profile. As shown in the setting items of a specified function are displayed in a detailed setting user interface window and input values are combined to generate job control information. The generated job control information is transmitted to a corresponding near line finisher as described above.

The user creates data to be printed by using an application and calls the driver to print step S . After the property button in is clicked in order to set a finisher the driver displays detailed setting windows step S . In order to permit the user to set finishing processing a detailed setting window is displayed in response to a click of the details of finishing button or the like step S . If a finisher is selected in the details of finishing setting window from supported near line finishers held as information by the printer driver a setting window corresponding to a finishing function provided by the finisher is displayed step S . This processing is repeated until all settings are made step S . If settings are completed and the OK button is clicked printing processing is executed step S . In printing processing the printer driver outputs job control information which describes the contents of post processing to an in line finisher as needed and a rendering instruction contents of a printing job to the image forming apparatus step S . The printer driver outputs to the near line finisher job control information which describes the contents of post processing. A method of generating job control information to the near line finisher is the same as that described in .

In this manner job control information describes the procedures of post printing processing post press processing which is to be performed by an apparatus at the destination of the job control information and is transmitted to the destination. The procedures are parameters which are set to designate details of the operation of a finisher. For example the procedures are parameters which define the staple position and interval the number of pages to be stapled the number of pages to be bound the number of copies the cutting size and the like. The finisher saves parameters specified by the tag of job control information in a predetermined memory area corresponding to the tag and executes post processing in accordance with the parameter values. Alternatively job control information may be directly saved to read necessary parameters using a tag as a key.

For example job control information is described in accordance with finishing processing settings set in the user interface window particularly finishing sheet of the printer driver. If saddle stitching is designated on the user interface the tag in is described. This also applies to other post printing processing settings and these settings are described in accordance with the JDF definition. For this purpose a correspondence table is prepared which describes the correspondence between tags described in profile information the identifiers of setting items and tags described in job control information and can be looked up by the printer driver. Fields settable by the user are displayed on the user interface in accordance with tags contained in the profile information. After settings are completed tags corresponding to the set items identifiers of items are added to job control information forming the job control information. The attribute value of each tag is transmitted to a finisher read and set as an operation parameter. This is merely an example and any method can be adopted as far as set parameters and tags can be associated with each other.

A processing flow executed by the image forming apparatus in accordance with a description of finishing processing in job control information will be explained with reference to . In this case the printer driver employs the first processing method sets in a printing job job control information describing the contents of post processing to a near line finisher and transmits the printing job to the image forming apparatus. Then the image forming apparatus receives the job control information. In step S job control information as described with reference to is received from the printer driver or the like. The job control information is interpreted in step S and it is determined in step S from profile information managed in the image forming apparatus whether a finisher capable of processing the received job control information has been registered. For this purpose for example a correspondence table is prepared which describes the correspondence between tags described in profile information and tags described in job control information and can be looked up by the control unit of the image forming apparatus. The finisher profile collected by the image forming apparatus is scanned for tags corresponding to tags described in the job control information. If the finisher profile is hit for all function tags the job control information can be processed i.e. designated finishing processing can be executed . In the first embodiment step S may be skipped because the printer driver generates job control information corresponding to a finisher profile.

If there is no process capable of performing processing described in a tag which is described in the job control information and represents a function the processing ends. If even one process is detected it is determined in step S which type of finisher has been registered. If an in line finisher has been registered the flow advances to step S. In step S a job to the in line finisher is controlled in accordance with settings designated by the job control information. The determination in step S can be achieved on the basis of an IP address associated with profile information which is hit by scanning in step S. If the finisher is associated with an IP address it is a near line finisher. An off line finisher does not have any profile information and can be determined from a job ID or the like. For example the job ID of job control information to an off line finisher may have a code capable of determining the off line finisher. In this case in step S job control information to an off line finisher is excluded from determination targets.

If a process by a near line finisher is detected the image forming apparatus transmits the job control information and job ID to the near line finisher in step S. The transmission destination is an IP address input upon connecting the near line finisher. When the finisher is an off line one an instruction to prepare for printing of a job ID and designated finisher name is issued in step S.

In the first embodiment when the printer driver adopts the second processing method it directly transmits job control information to a destination finisher and the printer receives only the job control information to the near line finisher. Thus step S may be performed immediately after step S. In this case the printer receives a printing job in addition to the job control information and executes the printing job to perform printing processing.

In step S it is determined whether all processes post processes have ended. If a process to be executed remains the flow returns to step S to continue the processing for the next process. If it is determined in step S that all processes have ended the flow ends.

In the above fashion post processing is executed by the in line finisher of the printer. Even if job control information of a near line finisher is transmitted to the printer the job control information can be transferred to the near line finisher at the destination.

After a job ID is input in step S the job control unit acquires corresponding job control information from the storage device sets it in the device control unit and causes the post processing device to perform designated processing in accordance with settings.

As another method a server or MFP which stores job control information may be added onto a network. In this case the address of a job control information server is registered in a finisher. When a job ID is input from the operation unit the finisher is connected to the job control information server. Job control information corresponding to the input job ID is acquired from the job control information server and interpreted to control a post processing device.

By the above procedures the client computer can prompt the user to set post printing processing using a near line finisher on the basis of an acquired finisher profile. The printer driver generates and transmits job control information to the near line finisher and can execute post printing processing by the near line finisher. On the user interface of the printer driver the user can exploit the near line finisher without any consciousness that the finisher is a near line one.

In this modification the finisher waits for a job ID input by the user from the operation unit step S . In step S the processor of the job control unit determines whether the job ID has been input. If the user has input the job ID the processor requests job control information corresponding to the job ID of the host client PC and acquires the job control information corresponding to the job ID step S . If the printer driver receives from the near line finisher the request for the job control information whose job ID is designated it searches a storage area where the job control information job ticket corresponding to the designated job ID is saved and sends back the searched job control information to the near line finisher.

If no job ID is input the near line finisher keeps waiting for input of the job ID. In step S the finisher automatically sets parameters and the like e.g. paper width which have conventionally been set manually by the operator on the basis of an output manual. In step S the user is prompted to confirm the set contents. The user inputs whether the settings are incorrect or correct. On the basis of the user input the near line finisher determines whether the current settings are incorrect step S . If the settings are correct finishing processing is done on the basis of the set contents if the settings are incorrect the user is prompted in step S to perform manual setting in order to correct incorrect contents. Finishing processing is done on the basis of the set contents. When a plurality of finishers are connected the same processing is repeated for the next finisher.

In the first embodiment the profile of a near line finisher is collected by the printer and acquired by the printer driver. However in the second processing method of transmitting job control information from the printer driver to a near line finisher the printer need not always collect profile information of the near line finisher. A configuration in which the printer driver directly acquires the profile of a near line finisher from the near line finisher will be explained with reference to .

The printer driver specifies a finisher selected by the user. For example the user selects a finisher for use by inputting the IP address of the finisher or from a list of finishers on the network or a list of available finishers. The printer driver specifies the selected finisher in step S for example the address or the like is written in a predetermined memory area . The printer driver inquires the selected finisher of whether the finisher has a profile step S . If the finisher holds a profile the printer driver directly requests the profile of the finisher step S . If the finisher does not hold any profile the printer driver requests the profile of the image forming apparatus step S and receives it step S similar to the first embodiment.

By the above described method the user can utilize even a finisher which is not registered in the image forming apparatus. Also the image forming apparatus need not collect any finisher profile.

In the first embodiment a finisher for use is selected on the user interface of the printer driver. To the contrary in this modification no finisher is selected but the setting fields of functions provided by available finishers are displayed on the user interface without discriminating finishers. A near line finisher for use is specified from set items. First the printer driver displays the functions of available in and near line finishers on the detailed setting sheet so that these functions can be set. Then a finisher associated with a set function is specified. If the specified finisher is a near line one job control information to the near line finisher is generated and transmitted. The finisher can be specified by storing in the RAM or the like finisher function link information which links a function selection button or setting box or field on the user interface to an identifier for specifying a finisher. The link information can be created by referring to the finisher profile when the detailed setting sheet of the user interface is created. However this is merely an example and another method of associating a function and finisher can be employed. After finishing settings are made job control information which combines functions set for each finisher is generated and transmitted to the finisher. When available functions overlap each other between a plurality of finishers a finisher for use is determined in accordance with assigned priority which will be described in the second embodiment. For example the priority is set in the order of an in line finisher a near line finisher an in line finisher of another image forming apparatus an off line finisher and the like.

In some cases the user can use a plurality of finishers. For example the user can utilize an in line finisher connected in line to a printer a near line finisher which is independent of the printer but is connected via a network and an off line finisher which is not connected even by communication. In this case according to the first embodiment the user is prompted to select a finisher for use on the user interface of the printer driver. The user can make settings of the selected finisher.

To the contrary a purpose of the second embodiment is to provide an information processing apparatus which automatically selects a finisher and allows the user to make settings without being aware of the presence of the finisher on the user interface of the printer driver.

The second embodiment will be explained with reference to and following drawings. is a view showing an example of a system configuration according to the present invention. As shown in this system comprises a client PC an image forming apparatus printer a bookbinding apparatus with the saddle stitch function serving as an example of an in line finisher connected in line to the image forming apparatus and a bookbinding apparatus with the saddle stitch function serving as an example of a near line finisher connected to a network. These apparatuses can communicate with each other via a network. A bookbinding apparatus with the saddle stitch function serving as an off line finisher not connected to the network is also a building component of the system. According to the second embodiment a plurality of finishers having the same function are contained in the system. In the second embodiment a difference from the first embodiment will be explained. An undescribed part of the second embodiment is the same as the first embodiment.

The user creates data to be printed by using an application and calls a driver. In response to this the driver is activated S . In order to set a finisher the driver displays a detailed setting window when the property button in is clicked S . In order to permit the user to set finishing processing for data to be printed the driver further displays a detailed setting window S . If a necessary function i.e. the saddle stitch bookbinding function in the second embodiment is selected in this detailed setting window from a list of supported post processing functions held as information by the driver the setting window is displayed S . The user can perform various settings in the window. This processing is repeated until all settings are made S . If settings are completed an OK button is clicked to execute a printing instruction S . In this case a printing job to cause the image forming apparatus to print is generated. The driver determines whether there are a plurality of finishers having the saddle stitch bookbinding function S . If there are a plurality of finishers the number of printing sheets for use in the job is counted S . The number of printing sheets can be counted for example by receiving the number of pages counted by the application program by reading designation of the number of pages by the user or from document data to be printed and printing settings. It is determined whether the number of printing sheets is equal to or smaller than a predetermined value in the second embodiment 20 printing sheets shown in which is the limit of an in line bookbinding apparatus S . If the number of printing sheets is equal to or smaller than the limit value the in line bookbinding apparatus is automatically selected S . A printing job containing printing data and the like and job control information containing a post processing instruction are output from the host to the image forming apparatus S .

If the number of printing sheets is larger than the limit value the current job cannot be processed by the in line bookbinding apparatus . For this reason a near line bookbinding apparatus is instructed to perform the processing S . The instruction is job control information. Similar to the first embodiment if a corresponding near line finisher can be specified settings values serving as parameters of the finisher this also applies to the first embodiment of post printing processing in this example saddle stitch bookbinding to be executed by the near line finisher are transmitted. The printing job is transmitted to the MFP S . In S only one finisher has the saddle stitch bookbinding function so job control information is generated and output to the bookbinding apparatus S . Upon reception of the job control information the finisher sets operation parameters in accordance with setting values contained in the job control information and performs post processing.

As described above according to the second embodiment when a client computer can use a plurality of finishers which provide the same function it is determined whether an in line finisher has the necessary performance. If the in line finisher has the necessary performance a finisher which uses the in line finisher is determined and job control information which describes post processing parameters is issued to the in line finisher. If the in line finisher neither exists nor has any necessary performance job control information which describes post processing parameters is issued to a near line finisher. In this manner a finisher for use can be determined in accordance with the necessary performance.

The first modification to the second embodiment will be explained. shows an example of some of the contents of a finisher management table . This table stores information on a finisher connectable to the image forming apparatus as shown in . In this modification priority is stored in addition to the items in so as to allow the user to change the priority. The flow of printing processing by the host in this modification will be described with reference to .

The user creates data to be printed by using an application and calls the driver to print. In response to this the driver is activated S . If the property button in is clicked in the setting window the driver displays a detailed setting window in order to set a finisher S . In order to permit the user to set finishing processing for the data to be printed the driver further displays a detailed setting window finishing sheet S . If a necessary function i.e. the saddle stitch bookbinding function in this modification is selected in the detailed setting window from a list of supported post processing functions held as information by the driver S various settings are made. This processing is repeated until all settings are made for the saddle stitch bookbinding function S . If settings are completed the OK button is clicked to execute a printing instruction S . The driver determines whether there are a plurality of finishers having the saddle stitch bookbinding function S . If there are a plurality of finishers the priority is read from the finisher management table shown in S . A finisher having the highest priority is searched for and if the finisher is a near line bookbinding apparatus bookbinding setting is performed for the near line bookbinding apparatus S . To perform bookbinding setting is to generate and transmit job control information in accordance with settings. If the finisher having the highest priority is an in line bookbinding apparatus bookbinding setting is performed for the in line bookbinding apparatus S . Thereafter the host outputs a job to the MFP S . If only one finisher has the saddle stitch bookbinding function in step S setting is done for the bookbinding apparatus S . Then the processing ends.

As described above according to the first modification when a client computer can use a plurality of finishers which provide the same function priorities set to the respective finishers are determined. A finisher having the highest priority is determined as a finisher for use and job control information which describes post processing parameters is issued to the finisher. A finisher for use can be determined in advance and when the finisher fails can be changed by changing priority. In this way a finisher for use can be determined in accordance with the user s will.

The second modification to the second embodiment will be explained with reference to . When there are a plurality of finishers having the same performance in the second embodiment a system according to the second modification prompts the user to select one of the finishers.

The user creates data to be printed by using an application and calls the driver. In response to this the driver is activated S . If the property button in is clicked the driver displays a detailed setting window in order to permit the user to set a finisher S . In order to permit the user to set finishing processing for the data to be printed the driver further displays a detailed setting window S . If a necessary function i.e. the saddle stitch bookbinding function in this modification is selected in the detailed setting window from a list of supported post processing functions held as information by the driver a setting window for the saddle stitch bookbinding function is displayed S . The user can make various settings in this window. This processing is repeated until all settings are made S . If settings are completed the OK button is clicked to execute a printing instruction S . At this time a printing job to cause the image forming apparatus to print is generated. The driver determines whether there are a plurality of finishers having the saddle stitch bookbinding function S . If there are a plurality of finishers the number of printing sheets for use in the Job is counted S . The number of printing sheets can be counted for example by receiving the number of pages counted by the application program by reading designation of the number of pages by the user or from document data to be printed and printing settings. It is determined whether the number of printing sheets is equal to or smaller than a predetermined value in the second modification 20 printing sheets shown in serving as the limit of an in line bookbinding apparatus S . If the number of printing sheets is equal to or smaller than the limit value post processing can be done by an in line finisher and near line finisher. Hence for example a list of available finishers including in and near line finishers is displayed to prompt the user to select a finisher S . If the user selects one of the finishers job control information to be transmitted to the selected finisher is generated and transmitted to the selected finisher S . A printing job containing printing data and the like is output from the host to the image forming apparatus S .

If the number of printing sheets is larger than the limit value the current job cannot be processed by the in line bookbinding apparatus . For this reason a near line bookbinding apparatus is instructed to perform the processing S . The instruction is job control information. Similar to the first embodiment if a corresponding near line finisher can be specified settings values serving as parameters of the finisher this also applies to the first embodiment of post printing processing in this example saddle stitch bookbinding to be executed by the near line finisher are transmitted. The printing job is transmitted to the MFP S . In S only one finisher has the saddle stitch bookbinding function so job control information is generated and output to the bookbinding apparatus S . Upon reception of the job control information the finisher sets operation parameters in accordance with setting values contained in the job control information and performs post processing.

As described above according to the second modification when a client computer can use a plurality of finishers which provide the same function it is determined whether an in line finisher has necessary performance. If the in line finisher has necessary performance the user is prompted to select one of available in and near line finishers and the selected finisher is determined as a finisher for use. Then job control information which describes post processing parameters is issued to the selected finisher. If the in line finisher neither exists nor has any necessary performance job control information which describes post processing parameters is issued to a near line finisher. As a result a finisher for use can be determined in accordance with necessary performance. Also the user can select a proper one of finishers having necessary performance.

In step S of the user is prompted to select a finisher. Alternatively a finisher having the highest priority can also be selected by looking up the priority table in . In this configuration a finisher having the highest priority can be selected from available finishers without unconditionally obeying priority.

The present invention may be applied to a system including a plurality of devices e.g. a host computer interface device reader and printer or an apparatus including a single device e.g. a copying machine or facsimile apparatus . The object of the present invention is achieved even by supplying a storage medium or recording medium which records software program codes to implement the functions of the above described embodiments to the system or apparatus and causing the computer or CPU or MPU of the system or apparatus to read out and execute the program codes stored in the storage medium. In this case the program codes read out from the storage medium implement the functions of the above described embodiments by themselves and the program codes and the storage medium which stores the program codes constitute the present invention.

The functions of the above described embodiments are implemented not only when the readout program codes are executed by the computer but also when the operating system OS or the like running on the computer performs part or all of actual processing on the basis of the instructions of the program codes. The functions of the above described embodiments are also implemented when the program codes read out from the storage medium are written in the memory of a function expansion card inserted into the computer or a function expansion unit connected to the computer and the CPU of the function expansion card or function expansion unit performs part or all of actual processing on the basis of the instructions of the program codes.

In an image forming apparatus saves function information corresponding to a profile . The function information may also contain function information of a post processing apparatus corresponding to a finisher . This corresponds to a case wherein the MFP corresponding to an image forming apparatus saves a profile as shown in .

An information processing apparatus transmits printing data to the image forming apparatus. At this time a loading unit loads function information representing the function of the post printing processing apparatus . Based on the function information an identification unit identifies a printing function processible by the printing apparatus and a post processing function processible after printing by the post printing processing apparatus. A display control unit displays on a display unit a setting window for setting a printing function and post processing function. A setting information generation unit generates setting information post processing setting information of post printing processing to be executed by the post printing processing apparatus and saves the information in setting information . On the basis of printing setting information input via the displayed setting window a data generation unit generates printing data to be printed by the image forming apparatus . At this time printing data is generated by referring to post processing setting information and printing setting information . The printing data generated by the data generation unit is transmitted to the image forming apparatus . The post processing setting information generated by the setting information generation unit is transmitted to the post printing processing apparatus or the image forming apparatus .

Note that the loading unit is implemented by steps S S and S in . The identification unit and display control unit are implemented by executing step S in . The setting information generation unit and data generation unit correspond to a graphic driver. The graphic driver reads out saved printing setting information from the printer driver setting save area of the OS in accordance with a printing start instruction. The graphic driver generates printing data which is job control information to the image forming apparatus and post processing setting information which is job control information for designating finishing settings for a selected finisher.

According to the above described embodiments and modifications the printer driver can generate and transmit job control information for even a near line finisher for use similar to the printer. A finisher can be set without manually setting the finisher by the user. Thus the productivity of the post printing processing step can be increased and any setting error can be prevented. The near line finisher itself has profile information and the client computer collects the profile information directly or via the printer. This can save the labor of inputting information on a newly connected near line finisher.

Since job control information issued from the printer driver is transferred to a near line finisher via the printer the printer driver need neither particularly generate nor transmit job control information for the near line finisher. Programming work of the printer driver can be simplified which contributes to reduction of the code amount and a decrease in program errors.

When a plurality of finishers are available a finisher designated on the basis of priority can be preferentially adopted. By changing the priority the user can designate a finisher for use.

By preferentially using an in line finisher convey work of a printed product from a printing apparatus to a post processing apparatus can be reduced which contributes to savings in labor and an increase in productivity.

As many apparently widely different embodiments of the present invention can be made without departing from the spirit and scope thereof it is to be understood that the invention is not limited to the specific embodiments thereof except as defined in the appended claims.

This application claims the benefit of Japanese Application No. 2005 128619 filed Apr. 26 2005 which is hereby incorporated by reference herein in its entirety.

