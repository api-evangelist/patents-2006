---

title: Method and system for developing post-layout electronic data automation (EDA) applications
abstract: A method and system for processing geometrical layout design data to manufacture an electronic circuit is provided. The method includes extracting the geometrical layout design data from one or more data-format files. The method further includes segregating the geometrical layout design data extracted from one or more data-format files into each of a structural data, a spatial data, and a raw-geometry data. Thereafter, one or more predefined operations are performed on one or more of the structural data, the spatial data, and the raw-geometry data.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07818708&OS=07818708&RS=07818708
owner: SoftJin Technologies Private Limited
number: 07818708
owner_city: Bangalore, Karnataka
owner_country: IN
publication_date: 20061110
---
This application is a complete patent application in relation of Indian Patent Application Serial No. 975 CHE 2005 filed on Jul. 21 2005 entitled Methodology for post layout EDA application development toolkit.

The invention generally relates to Electronic Design Automation EDA . More specifically the invention relates to development of post layout EDA applications.

The design and manufacturing process of an electronic circuit can be broadly divided into two stages i.e. a pre layout design stage and a post layout design stage. Examples of the design and manufacturing process of electronic circuit may include but are not limited to design of manufacturing processes of Integrated Circuits IC Printed circuit Boards PCB Micro Electro Mechanical Systems MEMS and Multi Chip Modules MCM . In the pre layout design stage a circuit design is transformed into a physical layout data. The physical layout data includes details of physical locations of the circuit elements which are used in the design of an electronic circuit on the electronic circuit. Thereafter in the post layout design stage the physical layout data is converted into geometric layout design data which is used for manufacturing the electronic circuit. The geometric layout design data is generated and stored in a number of data format files. Examples of the input and output data format files may include but are not limited to Graphic Data System II GDSII data format file Open Artwork System Interchange Standard OASIS MEBES JEOL VSB 11 12 OASIS VSB Gerber Library Exchange Format Design Exchange Format LEF DEF and a proprietary data format file which describes the geometric layout design data.

At post layout design stage large geometric layout design data is processed. Additionally as post layout design stage is the last stage before fabrication of the electronic circuit therefore it is essential that accurate and efficient operations are performed on geometric layout design data. The post layout EDA applications are used to process geometric layout design data. A post layout EDA application includes a plurality of components to process the geometrical layout design data. The plurality of components may include but are not limited to data structures operations and external interfaces. A post layout EDA application may be custom designed based on data format file and target application usage by writing a new code for each component of the post layout EDA application. Examples of the target application usage may include but are not limited to Mask Data Preparation MDP Design Rule Checker DRC Optical Proximity Collection OPC Resolution Enhancement Techniques RET Critical Area Analysis CAA Dummy Metal Filling Mask Inspection Mask Manufacturing Rule Checker MRC Silicon Debugging Compute Aided Design CAD Navigation Layout Viewers Layout Analysis and Failure Analysis. This enables efficient performance of a post layout EDA application for the data format file and the target application of the post layout EDA application. Additionally a post layout EDA application may be developed using one or more components of existing post layout EDA applications. This enables development of a stable post layout EDA application at a reduced cost both in terms of effort and achieving stability and performance. However a long time period is required to develop a stable post layout EDA application that can processes the geometric layout design data efficiently with good performance without using one or more components of the existing post layout EDA applications.

Some design databases for example OpenAccess and MilkyWay provide interoperability with a plurality of post layout EDA applications through Application Programming Interfaces APIs . These design databases enable the post layout EDA application developers to write APIs for integration of a design database with one or more custom design post layout EDA applications.

Further the design databases and data format files store the geometric layout design data in one or more of a flat representation and a hierarchical representation. The flat representation lists each geometrical figure of the geometrical layout design data. This requires large run time memory for carrying out operations and on disk memory for storage. The hierarchical representation includes a plurality of cells. A cell in the hierarchical representation includes references to zero or more cells and zero or more geometrical figures. The use of the hierarchical representation reduces the memory space required to store the geometric layout design data. However implementing or performing some operation such as but not limited to spatial operations on the hierarchical representation may be complex to implement and may be computationally expensive.

There is therefore a need of a stable and efficient post layout EDA application EDA Application development platform toolkit that can interface with read write a plurality of data format files. Further there is a need for a data representation of geometric layout design data that requires less memory and is suitable for performing various operations such as but not limited to spatial operations efficiently so that different target applications can be developed efficiently and quickly.

An object of the invention is to provide a method and system for developing a post layout EDA application.

Another object of the invention is to provide a method and system for processing geometrical layout design data in accordance with an embodiment of the invention.

Yet another object of the invention is to provide a method and system to segregate the geometric layout design data into each of a structural data a spatial data and a raw geometry data.

Another object of the invention is to provide a method and system that provides representation methods for representing the structural data that use less memory space and enable efficient performance of operations.

The above listed objectives are achieved by providing a method and system for processing geometrical layout design data to manufacture an electronic circuit. The method includes extracting the geometrical layout design data from one or more data format files. The method further includes segregating the geometrical layout design data extracted from one or more data format files into each of a structural data a spatial data and a raw geometry data. Thereafter one or more predefined operations are performed on one or more of the structural data the spatial data and the raw geometry data.

Before describing in detail embodiments that are in accordance with the present invention it should be observed that the embodiments reside primarily in combinations of method steps and system components for developing post layout Electronic Data Automation EDA application. Accordingly the system components and method steps have been represented where appropriate by conventional symbols in the drawings showing only those specific details that are pertinent to understanding the embodiments of the present invention so as not to obscure the disclosure with details that will be readily apparent to those of ordinary skill in the art having the benefit of the description herein. Thus it will be appreciated that for simplicity and clarity of illustration common and well understood elements that are useful or necessary in a commercially feasible embodiment may not be depicted in order to facilitate a less obstructed view of these various embodiments.

Relative terms such as first and second top and bottom and the like may be used solely to distinguish one entity or action from another entity or action without necessarily requiring or implying any actual such relationship or order between such entities or actions. The terms comprises comprising has having includes including contains containing or any other variation thereof are intended to cover a non exclusive inclusion such that a process method article or apparatus that comprises has includes contains a list of elements does not include only those elements but may include other elements not expressly listed or inherent to such process method article or apparatus. An element proceeded by comprises . . . a has . . . a includes . . . a contains . . . a does not without more constraints preclude the existence of additional identical elements in the process method article or apparatus that comprises has includes contains the element. The terms a and an are defined as one or more unless explicitly stated otherwise herein. A device or structure that is configured in a certain way is configured in at least that way but may also be configured in ways that are not listed.

Various embodiments of the present invention provide a method and system for developing post layout EDA applications. In this method a geometrical layout design data is extracted from one or more input data format files. Thereafter the geometrical layout design data is segregated into one or more of a structural data a spatial data and a raw geometry data. One or more predefined operations are then performed on one or more of the structural data the spatial data and the raw geometry data. One or more predefined operations may include but are not limited to Boolean operations for example AND OR XOR SUBTRACT and NOT. Thereafter a result of one or more predefined operations performed on one or more of the structural data the spatial data and the raw geometry data may be stored in one or more output data format files.

After segregating the geometrical layout design data the structural data is stored in a structural component of a database. The spatial data is stored in a spatial component of the database. The raw geometry data is stored in a raw geometry component of the database. This is further explained in detail in conjunction with .

The structural data is represented as one or more of a hierarchical representation a hybrid hierarchical representation a hybrid flat representation and a flat representation. Each of the hierarchical representation the hybrid hierarchical representation and the hybrid flat representation comprises a plurality of cells. The plurality of cells includes a top cell. In each of the hybrid hierarchical and the hybrid flat representations the top cell is a parent of each cell in the plurality of cells. However in the hierarchical representation the top cell is one of a parent and an ancestor of each cell in the plurality of cells. In an embodiment of the invention the plurality of cell may additionally include a top dummy cell. The top dummy cell does not include geometrical figures corresponding to it. Further the top dummy cell includes address of one instance of the top cell. In this case top cell may be a child cell of the top dummy cell in one of the hierarchical representation the hybrid hierarchical representation the hybrid flat representation.

A cell in the hierarchical representation of the structural data includes a first pointer to the raw geometry database component of the database. The first pointer may be a link or a reference to the raw geometry component. The raw geometry component of the database includes zero or more geometric figures. The first pointer includes address of geometrical figures corresponding to the cell stored in the raw geometry component of the database. Therefore the first pointer is used to access geometrical figures corresponding to the cell. The cell further includes zero or more child cells. Additionally the cell may include address of each instance of each child cell. Address of each instance is used to traverse from the cell to each instance of each child cell. In an embodiment of the invention addresses of instances of each child cell that have a repetitive pattern may be stored as a one dimensional or a two dimensional array of addresses. In another embodiment of the invention addresses of instances of each child cell may be stored as a list of addresses in the cell. The hierarchical relationships among one or more cells may be represented by a Directed Acyclic Graph DAG data structure.

The hierarchical representation of the structural data is converted into the hybrid hierarchical representation of the structural data using a first predefined algorithm. A cell in hybrid hierarchical representation includes a second pointer to the raw geometry component of the database. The second pointer includes the address of zero or more geometrical figures corresponding to the cell in the raw geometry component. The cell further includes an enumeration data structure. The enumeration data structure includes information that is used to generate the address of each instance of the cell in the top cell. In an embodiment of the invention the enumeration data structure of a cell is a Partial DAG PDAG . A PDAG of a cell is a subset of a DAG and includes each ancestor of the cell each existing link between each pair of ancestors in the DAG and each existing link between the cell and each parent of the cell in the DAG. This is further explained in detail in conjunction with . In another embodiment of the invention the enumeration data structure is a list of addresses of each instance of the cell relative to the top cell and is implemented as a List LIST data structure.

The hybrid hierarchical representation further includes an iterator algorithm. The iterator algorithm performs iterations on the enumeration data structure of a cell to generate the address of each instance of the cell. The iterator algorithm depends on the representation of the enumeration data structure. For example if the enumeration data structure corresponding to a cell stores a list of addresses of each instance of the cell in a LIST data structure then the corresponding iterator algorithm may traverse the LIST data structure sequentially to generate address of each instance of the cell. Similarly in another example if the enumeration data structure corresponding to a cell stores the addresses of each instance of the cell through a PDAG data structure then the corresponding iterator algorithm may traverse the PDAG data structure hierarchically to generate address of each instance of the cell.

The hierarchical representation of the structural data may be converted into the hybrid flat representation using a second predefined algorithm. In an embodiment of the invention the hybrid hierarchical representation may be converted into the hybrid flat representation using a third predefined algorithm. A cell in hybrid flat representation includes a third pointer to the raw geometry component of the database. The third pointer includes the address of zero or more geometrical figures corresponding to the cell in the raw geometry component. The top cell in hybrid flat representation includes information corresponding to a bounding box corresponding to each instance of each cell in a set of cells. The third pointer of each cell in the set of cells includes address of one or more geometrical figures corresponding to the cell in the raw geometry component.

A bounding box corresponding to an instance of a cell is a smallest rectangle that encloses each geometrical figure corresponding to the cell. The bounding box of an instance of the cell may be represented in the top cell by coordinates of endpoints of a diagonal of the bounding box. The spatial information of each geometrical figure in the bounding box is stored relative to coordinates of an endpoint of the diagonal in the spatial component of the database. Therefore the coordinates of the endpoints of the diagonal may be used to determine spatial information of each geometrical figure corresponding to an instance of the cell. This is further explained in detail in conjunction with .

The hybrid flat representation may be converted into the flat representation of the structural data using a fourth predefined algorithm. The flat representation of the structural data includes the top cell. The top cell includes a fourth pointer to the raw geometry component of the database. The fourth pointer includes address of each geometrical figure in the raw geometry component of the database. In an embodiment of the invention each of the hierarchical representation and the hybrid hierarchical representation may be converted directly into the flat representation of the structural data.

The spatial data stores the spatial information of each geometrical figure within the cells. The spatial data is represented using one or more spatial representations from a set of spatial representations. The set of spatial representations may include but is not limited to X Y sorted edge representation Voronoi diagrams Quad trees and Oct trees. This is further explained in conjunction with . Further the raw geometry data stores the geometrical figures used in the geometrical layout design. The raw geometry data is represented using each of a plurality of geometrical figures coordinate representation methods and a plurality of user defined properties. The plurality of geometrical figures may include but are not limited to squares rectangles triangle Manhattan polygons any angle polygons islands and trapezoids. The coordinates of the plurality of geometrical figures may be represented using one of data types from a set of data types. The data types may include but are not limited to short integer long and double. A plurality of user defined property may be added to the geometrical figures to include user defined data in the representation of the raw geometry data. Examples of the plurality of user defined properties include but are limed to color layer net name and electrical properties. This is farther explained in detail in conjunction with .

Thereafter at step one or more predefined operations are performed on one or more of structural data spatial data and raw geometry data. Examples of operations may include but are not limited to Boolean operations for example AND OR XOR SUBTRACT and NOT window query on the geometrical layout design and neighborhood query on the geometrical layout design. The segregated data is represented based on the operation to be performed on one or more of the structural data the spatial data and the raw geometry data. For example the structural data is represented using hybrid hierarchical representation for cell wise operations. Similarly spatial data is represented using X Y sorted edge representation for line sweep operations. Alternatively spatial data is represented using Voronoi diagrams representation for neighborhood query operation. The raw geometry data is represented using trapezoidal representation for the Boolean operations. Alternatively the raw geometry data is represented using island representation for sizing operations. After performing one or more predefined operations on the one or more of the structural data the spatial data and the raw geometry data one or more results of one or more predefined operations performed on one or more of one or more of the structural data the spatial data and the raw geometry data is aggregated to generate an aggregated result. The aggregated result may thereafter be stored in one or more output data format files. This is further explained in conjunction with .

After segregating the geometrical layout design data at step the structural data is stored in the structural component of the database. The structural data is stored using one or more of the hierarchical representation the hybrid hierarchical representation the flat representation and the hybrid flat representation. This has been explained in detail in conjunction with . In an embodiment of the invention the structural data is stored in a structural database. At step the spatial data is stored in the spatial component of the database. The spatial data is stored using one or more of the X Y sorted edge representation the Voronoi diagrams the Quad trees and the Oct trees. Those of the skilled in the art will appreciate that the invention is not limited to the above listed examples of data structures for storing the spatial data. In an embodiment of the invention the spatial data is stored in a spatial database. At step the raw geometry data is stored in the raw geometry component of the database. The raw geometry data is stored using one or more of the plurality of geometrical figures the coordinate representation methods and the plurality of user defined properties. This has been explained in conjunction with . In an embodiment of the invention the raw geometry data is stored in a raw geometry database.

Thereafter at step one or more predefined operations are performed on one or more of the structural data the spatial data and the raw geometry data. This has been explained in detail in conjunction with . At step one or more results of one or more predefined operations performed on one or more of one or more of the structural data the spatial data and the raw geometry data is aggregated to generate an aggregated result. The structural data the spatial data and the raw geometry data may be aggregated to generate the aggregated result. Thereafter at step the aggregated result is stored in one or more output data format files.

Further each instance of cell includes a pointer to zero or more geometrical figures corresponding to cell stored in the raw geometry component. Additionally each instance of cell includes a pointer to zero or more geometrical figures corresponding to cell in the raw geometry component.

Cell further includes an enumeration data structure in hybrid hierarchical representation . Enumeration data structure includes a list and a list . List includes the origin of cell i.e. 100 100 . Further list includes origin of each instance of cell relative to cell . Therefore list includes the origin of the first instance of cell as 50 50 and the origin of the second instance of cell as 70 70 which are relative to the origin of cell .

Further each of the first instance of cell and the second instance of cell has two instances of cell and an instance of cell . Therefore each of the first instance of cell and the second instance of cell include a first instance of cell and a second instance of cell . An absolute coordinate of the origin of the first instance of cell in the first instance of cell is 160 160 and an absolute coordinate of the origin of the second instance of cell in the first instance of cell is 170 170 . Further an absolute coordinate of the origin of the first instance of cell in the second instance of cell is 180 180 and an absolute coordinate of the origin of the second instance of cell in the second instance of cell is 190 190 .

Cell further includes an enumeration data structure in hybrid hierarchical representation . Enumeration data structure includes a list a list and a list . List includes the origin of cell i.e. 100 100 . Further list includes origin of each instance of cell relative to cell . Therefore list includes the origin of the first instance of cell as 50 50 and the origin of second instance of cell as 70 70 . Further list includes the origin of the first instance of cell and the second instance of cell relative to cell . Therefore list includes the origin of the first instance of cell as 10 10 and the origin of the second instance of cell as 20 20 .

Further each of the first instance of cell and the second instance of cell includes an instance of cell . An absolute coordinate of the origin of the instance of cell in the first instance of cell is 195 195 and an absolute coordinate of the origin of the instance of cell in the second instance of cell is 215 215 .

Cell further includes an enumeration data structure in hybrid hierarchical representation . Enumeration data structure includes a list a list and a list . List includes the origin of cell i.e. 100 100 . Further list includes origin of each instance of cell relative to cell . Therefore list includes the origin of the first instance of cell as 50 50 and the origin of the second instance of cell as 70 70 . Further list includes the origin of the instance of cell relative to cell . Therefore list includes the origin of the instance of cell as 45 45 .

In this exemplary embodiment a cell wise operation is performed on hybrid hierarchical representation . When cell wise operation has to be performed on cell then the iterator algorithm operates on enumeration data structure and computes an absolute coordinate of the origin of the instance of cell using list list and list . In case of the instance of cell in the first instance of cell the iterator algorithm adds the origin of the instance of cell stored in the list i.e. 100 100 the origin of the first instance of cell stored in list i.e. 50 50 and the origin of the instance of cell stored in list i.e. 45 45 to generate the absolute coordinates of the instance of cell in the first instance of cell as 195 195 . Similarly in case of the instance of cell in the second instance of cell the iterator algorithm adds the origin of the instance of cell stored in the list i.e. 100 100 the origin of the second instance of cell stored in list i.e. 70 70 and the origin of the instance of cell stored in list i.e. 45 45 to generate the absolute coordinates of the instance of cell in the second instance of cell as 215 215 .

In the hybrid flat representation as a bounding box of an instance of the cell is represented in the top cell by coordinates of endpoints of a diagonal of the bounding box. Therefore bounding box corresponds to the top cell. Bounding box is represented in the top cell as an absolute coordinate of a point i.e. 110 110 and an absolute coordinate of a point i.e. 135 135 . Similarly bounding box is represented in the top cell as an absolute coordinate of a point i.e. 111 111 and an absolute coordinate of a point i.e. 120 120 . Additionally bounding box is represented in the top cell as an absolute coordinate of a point i.e. 121 121 and an absolute coordinate of a point i.e. 130 130 . Further the spatial information of each geometrical figure in a bounding box is stored relative to coordinates of an endpoint of the diagonal of the bounding box in the spatial component of the database. Therefore spatial information of geometrical and geometric is stored relative to point and point in the spatial component of the database. An absolute coordinate of a point is represented as 110 131 is stored relative to bounding box as 0 21 . Similarly an absolute coordinate of a point represented as 129 110 of coordinate is stored relative to bounding box as 19 0 .

In this exemplary embodiment a window query operation is performed on geometrical layout design data. When a query window of the window query operation overlaps geometrical then point is retrieved by adding the absolute coordinate of point and relative coordinate of point . Therefore point is retrieved as 110 131 .

For each representation of the structural data structural component communicates with each of spatial component and raw geometry component through a first Application Programming Interface API . Similarly for each representation of spatial data spatial component communicates with each of structural component and raw geometry component through a second API. Further for each representation of raw geometry data raw geometry component communicates with each of structural component and spatial component through a third API. This enables modularity of application .

In an embodiment of the invention each of the first API the second API and the third API enable database module and database to maintain consistency in one or more representations of each of structural data spatial data and raw geometry data. For example spatial data is represented using each of Voronoi diagrams and Quad tree. In this case if one or more modifications are made in the Voronoi diagrams representation of spatial data then database module modifies the Quad tree representation of the spatial data component in database to maintain consistency of the spatial data.

After storing the segregated geometrical layout design data the post layout EDA application performs one or more predefined operations on one or more structural data the spatial data and the raw geometry data. The post layout EDA application performs one or more predefined operations by loading one or more libraries from set of libraries . A library in set of libraries corresponds to one or more predefined operations. Each library in set of libraries is a pre compiled object code library. This has been explained in conjunction with . In an embodiment of the invention a library which is compatible with set of libraries developed by a user may be added to set of libraries .

After performing one or more predefined operations an aggregating module aggregates one or more results of one or more predefined operations performed on one or more of the structural data the spatial data and the raw geometry data to generate an aggregated result. Aggregating module may aggregate the structural data the spatial data and the raw geometry data to generate the aggregated result. Thereafter aggregating module communicates with a writer . Writer writes the aggregated result to one or more output data format files.

Various embodiments of the invention provide methods and systems for developing post layout EDA application. The post EDA application so developed segregates the geometric layout design data into each of the structural data the spatial data and the raw geometry data. This enables efficient post layout operation on the geometric layout design data as each of the structural data the spatial data and the raw geometry data is readily available. Additionally one or more representations of each of the structural data the spatial data and the raw geometry data may be used depending on the operations to be performed. The representation to be used to represent each of the structural data the spatial data and the raw geometry data may be selected at run time or at the compile time. Additionally data consistency between one or more data representations is maintained. Further various embodiments of the invention provide data representation methods that use less memory space and enable efficient performance of operations.

In the foregoing specification specific embodiments of the present invention have been described. However one of ordinary skill in the art appreciates that various modifications and changes can be made without departing from the scope of the present invention as set forth in the claims below. Accordingly the specification and figures are to be regarded in an illustrative rather than a restrictive sense and all such modifications are intended to be included within the scope of present invention. The benefits advantages solutions to problems and any element s that may cause any benefit advantage or solution to occur or become more pronounced are not to be construed as a critical required or essential features or elements of any or all the claims.

