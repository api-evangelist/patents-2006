---

title: Booth multiplier with enhanced reduction tree circuitry
abstract: Techniques for the design and use of a digital signal processor, including processing transmissions in a communications (e.g., CDMA) system. A modified Booth multiplication system and process determine a multiplicand, A, and a multiplier, B. Radix-m, (e.g., radix-4) Booth recoding on B generates “n” multiplication factors, where “n,” an integer, is approximating one half of the number of the multiplier bits. “n” partial products are generated using the “n” multiplication factors as multipliers of A. Then, a multiplication tree is formed using radix-m Booth encoding. The multiplication tree includes multiplier bits associated to generate a multiplication factors. In the event of a negative multiplication factor, a two's complement of A is formed by inverting the bits of A and associating a sticky “1” to complete the two's complementation. Furthermore, multiplication factors are reduced in multiple stages to a form sum and carry components of a pre-determined length. The additive inverse of A×B is formed by using novel techniques to calculate the product of A and −B.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07809783&OS=07809783&RS=07809783
owner: QUALCOMM Incorporated
number: 07809783
owner_city: San Diego
owner_country: US
publication_date: 20060215
---
This application is related to U.S. patent application Ser. No. 11 356 359 filed Feb. 15 2006 and entitled POWER EFFICIENT SIGN EXTENSION FOR BOOTH MULTIPLICATION METHODS AND SYSTEMS. 

The present invention relates to the field of math processors in digital signal processors and more particularly to Booth multipliers used in math processors to perform high speed multiplication of numbers. More specifically the present invention relates to a multiplier circuit capable of performing operations on operands of various data types and also for signed and un signed binary values.

Increasingly electronic equipment and supporting software applications involve digital signal processing. Home theatre computer graphics medical imaging and telecommunications all rely on digital signal processing technology. Digital signal processing requires fast math in complex but repetitive algorithms. Many applications require computations in real time i.e. the signal is a continuous function of time which must be sampled and converted to digital for numerical processing. The processor must execute algorithms performing discrete computations on the samples as they arrive. The architecture of a digital signal processor or DSP is optimized to handle such algorithms. The characteristics of a good signal processing engine include fast flexible arithmetic computation units unconstrained data flow to and from the computation units extended precision and dynamic range in the computation units dual address generators efficient program sequencing and ease of programming.

One promising application of DSP technology includes communications systems such as a code division multiple access CDMA system that supports voice and data communication between users over a satellite or terrestrial link. The use of CDMA processes in a multiple access communication system is disclosed in U.S. Pat. No. 4 901 307 entitled SPREAD SPECTRUM MULTIPLE ACCESS COMMUNICATION SYSTEM USING SATELLITE OR TERRESTRIAL REPEATERS and U.S. Pat. No. 5 103 459 entitled SYSTEM AND METHOD FOR GENERATING WAVEFORMS IN A CDMA CELLULAR TELEHANDSET SYSTEM both assigned to the assignee of the claimed subject matter.

A CDMA system is typically designed to conform to one or more telecommunications and now streaming video standards. One such first generation standard is the TIA EIA IS 95 Terminal Base Station Compatibility Standard for Dual mode Wideband Spread Spectrum Cellular System hereinafter referred to as the IS 95 standard. The IS 95 CDMA systems are able to transmit voice data and packet data. A newer generation standard that can more efficiently transmit packet data is offered by a consortium named 3Generation Partnership Project 3GPP and embodied in a set of documents including Document Nos. 3G TS 25.211 3G TS 25.212 3G TS 25.213 and 3G TS 25.214 which are readily available to the public. The 3GPP standard is hereinafter referred to as the W CDMA standard. There are also video compression standards such as MPEG 1 MPEG 2 MPEG 4 H.263 and WMV Windows Media Video as well as many others that such wireless handsets will increasingly employ.

In order to accomplish fast and flexible arithmetic computation units there is the need to perform high speed multiplication operations. One process for performing such operations is known as Booth multiplication. Booth multiplication is a process that allows for smaller faster multiplication circuits by recoding the numbers that are multiplied. Multiplication using the Booth process is typically performed by the generation of partial products. The partial products are then added to obtain the final result. With the Booth multiplication process the number of partial products equals the number of rows in a multiplier matrix. The term partial product refers to a row in the multiplication tree.

There exist numerous modifications to the original Booth s algorithm but the fundamental principle is to generate fewer partial products using the Booth encoding process. It is possible to reduce the number of partial products by approximately half by using the process of radix 4 Booth recoding. Radix 4 Booth recoding maps the bits of multiplier B which are originally represented in binary values of 0 and 1 into a set of multiplication factors which can take the values of 2 1 0 1 or 2. This method provides the benefit of approximately halving the number of partial products that would otherwise occur. This is important in circuit design as it relates to the propagation delay in the running of the circuit and the complexity and power consumption of its implementation.

Once the partial products have been generated using the process of Booth encoding they are added together by employing reduction techniques. The process of reduction involves summing the multiple rows of partial product bits in a parallel process using half adders full adders and multi operand adders. This reduction results in two rows of bits said to be in the redundant format whose sum when resolved using a carry propagate adder represents the final product. One of these rows is called the Sum S and the other row is called Carry C. In multiply accumulate MAC operations the Z term in Z A B is typically included in the reduction tree prior to the final CPA. This process saves on employing CPAs both for the resolution of the multiplication product in the redundant format and for the subsequent accumulation.

Since some partial products may be negative the hardware required for two s complementation is an aspect of the Booth multiplier. With such hardware there is a need to provide a Booth multiplier capable of generating the additive inverse of the multiplication product. Presently no known method or system exists which is capable of generating A B efficiently for DSP applications. Accordingly a need exists for a method and system capable of using the Booth multiplication process for generating the additive inverse of the product A B in DSP applications.

Once such a product is generated however there is the problem that if the value to be accumulated Z to the product of a multiplication A B is of a higher bit width than the product A B then both the sum and carry components of the redundant product need to be sign extended appropriately. Sometimes it may be necessary to perform sign extension over a wide range of bits. There is accordingly the need for a process of appropriate sign extension during Booth multiplication processes in a DSP.

Techniques for providing a booth multiplier with enhanced reduction tree circuitry are disclosed which processes improve both the operation of a digital signal processor and the efficient use of digital signal processor instructions for processing increasingly robust software applications for personal computers personal digital assistants wireless handsets and similar electronic devices as well as increasing the associated digital signal processor speed and service quality.

Accordingly the disclosed subject matter provides processes for the design and use of a digital signal processor including processing transmissions in a communications e.g. CDMA system. The disclosed method and system perform improved Booth multiplication in a digital signal processor. The method and system determine a multiplicand A that includes a first plurality of bits and a multiplier B having a second plurality of bits. The disclosed subject matter performs radix m e.g. radix 4 Booth recoding on B to generate a first predetermined integer number n of multiplication factors. The n multiplication factors approximate a ratio e.g. one half for radix 4 multiplication of the number of the second plurality of bits. The method and system further generate n partial products using the n multiplication factors as multipliers of A. Then a multiplication tree is formed using radix m Booth encoding. In the event of a negative multiplication factor the disclosure includes forming a two s complement of A by inverting the first plurality of bits of A and associating a sticky 1 to complete the two s complementation. Furthermore the process involves reducing the multiplication factors in multiple stages of reduction to a set of sum and carry components of a pre determined length.

These and other advantages of the disclosed subject matter as well as additional novel features will be apparent from the description provided herein. The intent of this summary is not to be a comprehensive description of the claimed subject matter but rather to provide a short overview of some of the subject matter s functionality. Other systems methods features and advantages here provided will become apparent to one with skill in the art upon examination of the following FIGUREs and detailed description. It is intended that all such additional systems methods features and advantages be included within this description be within the scope of the accompanying claims.

The disclosed subject matter for the modified Booth multiplier here presented has use in a very wide variety of digital signal processing applications including those involving multi threaded processing. One such application appears in telecommunications and in particular in wireless handsets that employ one or more digital signal processing circuits. Consequently the following describe a telecommunications DSP within which the present teachings may be useful. sets forth a data path for multiplication processing within which the present disclosure of an enhanced Booth multiplication operation may operate. Remember however that the implementation here described provides but one of a virtually limitless set of applications to which the disclosed subject matter may apply.

For the purpose of explaining how such a wireless handset may be used provides a simplified block diagram of a communications system that can implement the presented embodiments of the disclosed interrupt processing method and system. At a transmitter unit data is sent typically in blocks from a data source to a transmit TX data processor that formats codes and processes the data to generate one or more analog signals. The analog signals are then provided to a transmitter TMTR that modulates filters amplifies and up converts the baseband signals to generate a modulated signal. The modulated signal is then transmitted via an antenna to one or more receiver units.

At a receiver unit the transmitted signal is received by an antenna and provided to a receiver RCVR . Within receiver the received signal is amplified filtered down converted demodulated and digitized to generate in phase I and Q samples. The samples are then decoded and processed by a receive RX data processor to recover the transmitted data. The encoding and processing at receiver unit are performed in a manner complementary to the coding and processing performed at transmitter unit . The recovered data is then provided to a data sink .

The signal processing described above supports transmissions of voice video packet data messaging and other types of communication in one direction. A bi directional communications system supports two way data transmission. However the signal processing for the other direction is not shown in for simplicity. Communications system can be a code division multiple access CDMA system a time division multiple access TDMA communications system e.g. a GSM system a frequency division multiple access FDMA communications system or other multiple access communications system that supports voice and data communication between users over a terrestrial link. In a specific embodiment communications system is a CDMA system that conforms to the W CDMA standard.

Output from execution data paths goes to register file write circuit also configured to accommodate individual threads T T for returning the results from the operations of DSP . Thus the data path from circuit and before to register file write circuit being portioned according to the various threads forms a processing pipeline .

The present embodiment may employ a hybrid of a heterogeneous element processor HEP system using a single microprocessor with up to six threads T T. Processor pipeline has six stages matching the minimum number of processor cycles necessary to fetch a data item from circuit to registers and . DSP concurrently executes instructions of different threads T T within a processor pipeline . That is DSP provides six independent program counters an internal tagging mechanism to distinguish instructions of threads T T within processor pipeline and a mechanism that triggers a thread switch. Thread switch overhead varies from zero to only a few cycles.

DSP therefore provides a general purpose digital signal processor designed for high performance and low power across a wide variety of signal image and video processing applications. provides a brief overview of the DSP architecture including some aspects of the associated instruction set architecture for one manifestation of the disclosed subject matter. Implementations of the DSP architecture support interleaved multithreading IMT . In this execution model the hardware supports concurrent execution of multiple hardware threads T T by interleaving instructions from different threads in the pipeline. This feature allows DSP to include an aggressive clock frequency while still maintaining high core and memory utilization. IMT provides high throughput without the need for expensive compensation mechanisms such as out of order execution extensive forwarding networks and so on.

Within the architecture of the single thread processing as presented in M pipe of high speed mathematical processing occurs. The timing of multiplication within multiplication block is important to assure that operations of M pipe properly take place. Similar timing considerations are very likely to exist in any application to which the disclosed subject matter may be applied. Accordingly the speed with which the Booth multiplication process occurs provides a distinctively novel aspect of the material here disclosed.

In order to satisfy these time constraints the disclosed subject matter uses Booth multiplication capable of performing the product of two numbers A B or the additive inverse of the product of two numbers A B. In addition the present disclosure includes a method for including a rounding constant in the booth reduction tree and a sign extension process which reduces power and area. Moreover the Booth multiplication processes of the present disclosure may require the partial products to be signed numbers even if the multiplication is performed on unsigned operands. Since some partial products may be negative the two s complementation circuitry for performing Booth multiplication allows modification to a conventional Booth multiplier so as to generate the negative value of the multiplication product. The ability to generate A B efficiently has a great impact on many DSP applications including operations of the form Z A B . These multiply accumulate operations or MAC operations are enabled by the present disclosure.

Multiplier block therefore performs the multiplication related instructions for M pipe . These instructions may be treated as compound instructions which use a 16 16 multiplication process as a basis. The multiplier block consists of four 16 16 multiplier units M M. Each multiplier unit M M is capable of functioning in several modes to support the wide variety of M type instructions. Signed and unsigned modes are supported. The multipliers can also generate the two s complement of their products in the case when subtraction needs to be performed on the products.

With the disclosed subject matter M M multipliers through use radix 4 Booth encoding. In the unsigned mode they resemble a 17 17 multiplier with the extra 17th bit acting as the sign bit. Except for double precision multiplication i.e. 32 32 multiplication all the other multiply instructions are signed signed or unsigned unsigned . Computing double precision 32 32 multiplications and 32 16 multiplies using 16 16 multipliers requires signed unsigned and unsigned signed multiplications as well. All of these modes are supported by controlling the sign bits of the multiplicand and the multiplier operands of M M multipliers through .

Output from shift sign extension unit goes to multi operand adder and may be parsed into R R input. Multi operand adder receives these R R inputs and ultimately after a set of compression and accumulation stages provides Rdd outputs .

Data path may be understood as divisible into four phases. First of all in the data routing phase data from the Rs and Rt source registers are fed to multiplication block . Within multiplication block 16 bit half words from the source operands are routed to four M M multiplier units through based on the instruction. Next partial product generation and reduction vector addition or subtraction occurs wherein M M multiplier units through generate partial products using radix 4 Booth encoding and reduce them using reduction to a redundant pair of outputs.

During the multi operand reduction phase the redundant outputs from multiplication block are input to the multi operand adder which reduces these inputs and an optional accumulator round value into two pairs of redundant outputs. Finally in the addition saturation phase redundant outputs are resolved using carry propagate addition and saturation is performed when applicable.

The disclosed subject matter therefore provides for the modified Booth multiplication of such values. With such complex values the inputs have a real 16 bit value in the low halfword and an imaginary 16 bit value in the high halfword. The multiplier results are optionally scaled by 0 1 bits. A rounding constant is added to each real and imaginary sum. The real and imaginary parts are individually saturated to 32 bits. The upper 16 bits of each of the 32 bit results are packed in a 32 bit destination register.

In this example S S and C C are 33 bits wide. Even though the output of a 16 16 multiplication can be represented in 32 bits some instructions operate in an unsigned mode and the extra bit is used in this case as the sign bit to facilitate sign extension. S S and C C are passed through shift sign extension unit . S S and C C contribute to the lower order 32 bits of the final result before packing. This forms the real part of the result. These four numbers are optionally scaled by a left shift of 1 bit if specified in the instruction.

The shifted version of these numbers are labeled R R. R R are passed through multi operand adder . Output from multi operand adder flows to saturation addition unit .

Referring further to each partial product row through is a multiple of the multiplicand bits shown horizontally. Column numbers have been indicated on the top of . The multiplier bits are shown vertically and these bits are recoded to generate the multiplication factors to form the partial product rows through . The signals n through n shown in indicate sticky 1 s which are added to partial product rows through which receive a negative weight. These are sufficient for dealing with multiplication which does not require a final inversion of the product. For handling the case of A B implicitly in the multiplier an additional signal n is provided.

The signals s through s handle sign extension when the product of a multiply operation is subtracted implicitly within the multiplier tree. If A and B are assumed to be the multiplicand and the multiplier respectively a radix 4 Booth encoding proceeds by encoding groups of three bits of the multiplier operand B and using this encoding to select partial products from the set 2A A 0 A 2A. Now if the final product A B needs to be subtracted then it is equivalent to adding A B . The multiplier is modified now from B to B .

The two s complementation of the product utilizes the fact that A B is equivalent to A B . In this instance the operand B is treated as the multiplier. The Booth multiplication factors generated using B as the multiplier are the additive inverses of the corresponding multiplication factors generated using B as the multiplier operand. The Booth multiplication hardware structure used for calculating the product A B can be reused for calculating A B by inverting the signs of each of the Booth multiplication factors. This sign is determined by the neg signal of Booth recoder circuit which is a modification to the recoding hardware for generating the neg signal in negating the product.

Note that in Booth recoder circuit XOR gate is on a non critical path and does not contribute to the critical path. Instead the critical path includes the multiplier bits for producing the signals A and 2A. This process of inverting the sign of the multiplication factors for partial products introduces cases in which the sign of the last partial product row may be negative. Hence the signal n may be added to the multiplication tree as appears in above. Adding a row may be reduced by modifying the reduction stage to accommodate an additional row. This however may infer an additional delay and associated hardware.

The process presented here does not involve an additional row in the reduction stage but instead focuses on absorbing the n signal into the existing nine rows of partial products by making logical modifications to the multiplication tree. The delay added to the multiplication tree is minimal.

Notation that refers to each dot of the form PPaids in obtaining an understanding of this aspect of the disclosed subject matter. Referring to each binary bit dot in the multiplication tree has its unique weight and position in the matrix. All bits in the same column have the same weight and may be reduced in any order as long as the weights are maintained. The rows are numbered from top to bottom starting at 0 and the columns are numbered from right to left starting at 0. Using this notation n is equivalent to PP. PP PP PPand PPare generated using scaling and sign extension processes known with radix 4 Booth encoding. With such an approach it is possible to absorb n into the multiplication tree. Thus by analyzing all the possible bit values for PP PP PPand PPin both signed and unsigned multiplication modes the position into which n may be inserted is determinable for all possible Booth multiplication factors.

The first stage of reduction reduces nine 9 rows to six 6 rows using three 3 rows of full adders. The second stage of reduction reduces six 6 rows to four 4 rows using two 2 rows of full adders. The third and final stage of reduction employs a row of 4 2 multi operand adders to reduce four 4 rows to the final redundant sum and carry rows. Though 32 bits of sum and carry are sufficient to represent the 16 16 product an additional bit ensures sign extension is handled correctly for unsigned multiplication.

The final product is formed by adding the carry out to the one extension from column upwards. The effect is to sign extend the sum component of the final product with as the sign while zero extending the carry component of the final product. These steps eliminate the need to sign extend both the sum and carry components. For example if 16 16 multiplication were part of a MAC operation which required an accumulation of a 64 bit value to the 32 bit product then it would be required to sign extend the 32 bit product to 64 bits before adding it to the 64 bit number. If the intermediate 32 bit product was left in the redundant form and the sign extension process here presented is applied significant power savings may arise because of the possibility of eliminating the MUXes used to sign extend the carry component over 31 bits.

Referring again to the present disclosure further provides the ability to add a rounding constant to the multiplier B. A rounding constant typical to 16 16 multiplications in DSP operations is 0 8000. Rounding the product of a 16 16 multiplication is a common operation which is typically performed as a two step operation wherein the multiplier is first used to generate the product and then the rounding constant is added to the product.

Using the notation explained above note in that PPis 0. By inserting a 1 in this bit position in the multiplication matrix it is possible to generate the same result that would have been obtained by first generating the product and then adding to the product the value 0 8000. This process also does not add any latency to the critical path.

If the hardware in multiplication block is limited to the capability of just being able to add one accumulate operand to the product of a multiplication then it is common to MUX the rounding constant with the accumulate operand when the product of a multiplication is required to be rounded. This makes it difficult to perform in a single step both rounding and accumulation operations on the product of a multiplication. But using the process here described eliminates such limitations.

In summary the disclosed subject matter provides processes for the design and use of a digital signal processor including processing transmissions in a communications e.g. CDMA system. The disclosed method and system includes a booth multiplier with enhanced reduction tree circuitry for performing Booth multiplication in a digital signal processor. The method and system determine a multiplicand A that includes a first plurality of bits and a multiplier B having a second plurality of bits. The disclosed subject matter performs radix m e.g. radix 4 Booth recoding on B to generate a first predetermined integer number n of multiplication factors. The n multiplication factors approximate one half of the number of the second plurality of bits. The method and system further generate n partial products using the n multiplication factors as multipliers of A. Then a multiplication tree is formed using radix m Booth encoding. In the event of a negative multiplication factor the disclosure includes forming a two s complement of A by inverting the first plurality of bits of A and associating a sticky 1 to complete the two s complementation. Furthermore the process involves reducing the multiplication factors in multiple stages of reduction to a set of sum and carry components of a pre determined length.

The present disclosure further provides the technical advantages of a modified Booth multiplier that is capable of being used in MAC operations of the form Z A B rounding constant . This multiplier minimizes delay power and hardware by a negating the booth multiplication factors and absorbing an extra sticky bit into the reduction tree b finding a place to stuff a rounding constant into the reduction tree and c using a sign extension process that only requires the sign extension of the redundant sum.

The processing features and functions described herein moreover may be implemented in various manners. For example not only may DSP perform the above described operations but also the present embodiments may be implemented in an application specific integrated circuit ASIC a microcontroller a microprocessor or other electronic circuits designed to perform the functions described herein. The foregoing description of the preferred embodiments therefore is provided to enable any person skilled in the art to make or use the claimed subject matter. Various modifications to these embodiments will be readily apparent to those skilled in the art and the generic principles defined herein may be applied to other embodiments without the use of the innovative faculty. Thus the claimed subject matter is not intended to be limited to the embodiments shown herein but is to be accorded the widest scope consistent with the principles and novel features disclosed herein.

