---

title: Providing supplier relationship management software application as enterprise services
abstract: Methods and apparatus, including systems and computer program products, for a services architecture design that provides enterprise services having supplier relationship management functionality at the level of an enterprise application. The design includes a set of service operations, process components, and optionally deployment units. Suitable business objects are also described.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08326702&OS=08326702&RS=08326702
owner: SAP AG
number: 08326702
owner_city: Walldorf
owner_country: DE
publication_date: 20060330
---
This specification relates to data processing systems implemented on computers and more particular to data processing systems providing services in the nature of web services.

Enterprise software systems are generally large and complex. Such systems can require many different components distributed across many different hardware platforms possibly in several different geographical locations. Thus the architecture of a large software application i.e. what its components are and how they fit together is an important aspect of its design for a successful implementation.

Web services are one technology for making the functionality of software applications available to other software including other applications. A web service is a standards based way of encapsulating the functionality of an application that other applications can locate and access. A service oriented architecture is a distributed software model within which functionality is defined as independent web services. Within a service oriented architecture web services can be used in defined sequences according to business logic to form applications that enable business processes.

This specification describes a services architecture design that provides enterprise services having supplier relationship management functionality at the level of an enterprise application. Enterprise services are web services that have an enterprise level business value.

In its various aspects the invention can be embodied in systems methods and computer program products. For example a system in one embodiment implements a services architecture design that provides enterprise services having supplier relationship management functionality at the level of an enterprise application. The design includes a set of service operations process components and optionally deployment units. Suitable business objects are also described.

The subject matter described in this specification can be implemented to realize one or more of the following advantages. Effective use is made of process components as units of software reuse to provide a design that can be implemented reliably in a cost effective way. Effective use is made of deployment units each of which is deployable on a separate computer hardware platform independent of every other deployment unit to provide a scalable design. Service interfaces of the process components define a pair wise interaction between pairs of process components that are in different deployment units in a scalable way.

Details of one or more implementations of the subject matter described in this specification are set forth in the accompanying drawings and in the description below. Further features aspects and advantages of the subject matter will become apparent from the description the drawings and the claims.

The elements of the architecture include the business object the process component the service operation or simply the operation the service interface the message and the deployment unit. The elements can also include process agents and reuse service components. These will be generally described below.

In one implementation the software is implemented to be deployed on an application platform that includes a foundation layer that contains all fundamental entities that can used from multiple deployment units. These entities can be process components business objects or reuse service components. A reuse service component is a piece of software that is reused in different transactions. A reuse service component is used by its defined interfaces which can be e.g. local APIs Application Programming Interfaces or service interfaces.

The architectural design is a specification of a computer software application and elements of the architectural design can be implemented to realize a software application that implements enterprise application service interfaces. The elements of the architecture are at times described in this specification as being contained or included in other elements for example a process component is described as being contained in a deployment unit. It should be understood however that such operational inclusion can be realized in a variety of ways and is not limited to a physical inclusion of the entirety of one element in another.

The architectural elements include the business object. A business object is a representation of a type of a uniquely identifiable business entity an object instance described by a structural model. Processes operate on business objects.

A business object represents a specific view on some well defined business content. A business object represents content and instances of business objects include content which a typical business user would expect and understand with little explanation. Whether an object as a type or an instance of an object is intended by the term is generally clear from the context so the distinction will be made explicitly only when necessary. Properly implemented business objects are implemented free of redundancies.

Business objects are further categorized as business process objects and master data objects mass data run objects dependent objects and transformed objects. A master data object is an object that encapsulates master data i.e. data that is valid for a period of time . A business process object which is the kind of business object generally found in a process component is an object that encapsulates transactional data i.e. data that is valid for a point in time . A mass data run object is an application object that executes an algorithm for a particular mass data run. An instance of a mass data run object contains a particular set of selections and parameters. A mass data run object implements an algorithm that modifies manages and or processes a large amount of data in multiple transactions possibly but not necessarily with parallel processing. A dependent object is a business object used as a reuse part in another business object. A dependent object represents a concept that cannot stand by itself from a business point of view. Instances of dependent objects only occur in the context of a non dependent business object. A transformed object is a transformation of multiple business objects for a well defined purpose. It transforms the structure of multiple business objects into a common structure. A transformed object does not have its own persistency. The term business object will be used generically to refer to a business process object and a master data object unless the context requires otherwise. Properly implemented business objects are implemented free of redundancies.

The architectural elements also include the process component. A process component is a software package that realizes a business process and generally exposes its functionality as services. The functionality contains business transactions. A process component contains one or more semantically related business objects. Any business object belongs to no more than one process component.

Process components are modular and context independent. That they are context independent means that a process component is not specific to any specific application and is reusable. The process component is the smallest most granular element of reuse in the architecture.

The architectural elements also include the operation. An operation belongs to exactly one process component. A process component generally has multiple operations. Operations can be synchronous or asynchronous corresponding to synchronous or asynchronous process agents which will be described below. An operation is the smallest separately callable function described by a set of data types used as input output and fault parameters or some combination of them serving as a signature. For convenience in supporting use of the operations supported by a system implementing elements of the design such a system can optionally include a repository of service descriptions that includes a standards based description of each of the supported service operations.

The architectural elements also include the service interface which may be referred to simply as an interface. An interface is a named group of operations. Each operation belongs to exactly one interface. An interface belongs to exactly one process component. A process component might contain multiple interfaces. In one implementation an interface contains only inbound or outbound operations but not a mixture of both. One interface can contain both synchronous and asynchronous operations. All operations of the same type either inbound or outbound which belong to the same message choreography will preferably belong to the same interface. Thus generally all outbound operations to the same other process component are in one interface.

The architectural elements also include the message. Operations transmit and receive messages. Any convenient messaging infrastructure can be used. A message is information conveyed from one process component instance to another with the expectation that activity will ensue. An operation can use multiple message types for inbound outbound or error messages. When two process components are in different deployment units invocation of an operation of one process component by the other process component is accomplished by an operation on the other process component sending a message to the first process component.

The architectural elements also include the process agent. Process agents do business processing that involves the sending or receiving of messages. Each operation will generally have at least one associated process agent. A process agent can be associated with one or more operations. Process agents can be either inbound or outbound and either synchronous or asynchronous.

Asynchronous outbound process agents are called after a business object changes e.g. after a create update or delete of a business object instance.

An output process agent will generally perform some processing of the data of the business object instance whose change triggered the event. An outbound agent triggers subsequent business process steps by sending messages using well defined outbound services to another process component which generally will be in another deployment unit or to an external system. An outbound process agent is linked to the one business object that triggers the agent but it is sent not to another business object but rather to another process component. Thus the outbound process agent can be implemented without knowledge of the exact business object design of the recipient process component.

Inbound process agents are called after a message has been received. Inbound process agents are used for the inbound part of a message based communication. An inbound process agent starts the execution of the business process step requested in a message by creating or updating one or multiple business object instances. An inbound process agent is not the agent of a business object but of its process component. An inbound process agent can act on multiple business objects in a process component.

Synchronous agents are used when a process component requires a more or less immediate response from another process component and is waiting for that response to continue its work.

Operations and process components are described in this specification in terms of process agents. However in alternative implementations process components and operations can be implemented without use of agents using other conventional techniques to perform the functions described in this specification.

The architectural elements also include the deployment unit. A deployment unit includes one or more process components and optionally one or more business objects that are deployed together on a single computer system platform. Conversely separate deployment units can be deployed on separate physical computing systems. For this reason a deployment unit boundary defines the limits of an application defined transaction i.e. a set of actions that have the ACID properties of atomicity consistency isolation and durability. To make use of database manager facilities the architecture requires that all operations of such a transaction be performed on one physical database as a consequence the processes of such a transaction must be performed by the process components of one instance of one deployment unit.

The process components of one deployment unit interact with those of another deployment unit using messages passed through one or more data communication networks or other suitable communication channels. Thus a deployment unit deployed on a platform belonging one business can interact with a deployment unit software entity deployed on a separate platform belonging to a different and unrelated business allowing for business to business communication. More than one instance of a given deployment unit can execute at the same time on the same computing system or on separate physical computing systems. This arrangement allows the functionality offered by a deployment unit to be scaled to meet demand by creating as many instances as needed.

Since interaction between deployment units is through service operations a deployment unit can be replaced by other another deployment unit as long as the new deployment unit supports the operations depended upon by other deployment units. Thus while deployment units can depend on the external interfaces of process components in other deployment units deployment units are not dependent on process component interactions i.e. interactions between process components involving their respective business objects operations interfaces and messages within other deployment units. Similarly process components that interact with other process components or external systems only through messages e.g. as sent and received by operations can also be replaced as long as the replacement supports the operations of the original.

Interactions between process components that occur only within a deployment unit are not constrained to using service operations. These can be implemented in any convenient fashion.

In contrast to a deployment unit the foundation layer does not define a limit for application defined transactions. Deployment units communicate directly with entities in the foundation layer which communication is typically not message based. The foundation layer is active in every system instance on which the application is deployed. Business objects in the foundation layer will generally be master data objects. In addition the foundation layer will include some business process objects that are used by multiple deployment units. Master data objects and business process objects that should be specific to a deployment unit are preferably assigned to their respective deployment unit.

As shown in a Purchasing deployment unit includes a Purchase Order Processing process component that includes a Purchase Order business object and a Purchase Order Confirmation business object a Purchase Request Processing process component that includes a Purchase Request business object a Purchasing Contract Processing process component that includes a Purchasing Contract business object and a Goods and Service Acknowledgement process component that includes a Goods and Service Acknowledgement business object .

As shown in a Supplier Invoicing deployment unit includes a Supplier Invoice Processing process component a Supplier Invoice Request business object an Evaluated Receipt Settlement Run business object a Supplier Invoice business object and a Supplier Invoice Verification Exception business object .

Additionally an RFQ Processing deployment unit includes an RFQ Processing process component a Request for Quote business object and a Supplier Quote business object .

Additionally a Requisitioning deployment unit includes an Internal Request Processing process component and an Internal Request business object .

A Create Purchase Order based on Winning Quote operation sends a purchase order request using a Maintain Purchase Order based on Winning Quote asynchronous inbound process agent to update the Purchase Order business object . For example the operation can send a purchase order request to update the Purchase Order business object if input is received from the RFQ Processing process component .

A Change Purchase Order based on Delivery Values operation sends a purchase order change request using a Change Purchase Order based on Delivery Values asynchronous inbound process agent to update the Purchase Order business object . For example the operation can send a purchase order change request to update the Purchase Order business object if input is received from the External Procurement Trigger and Response process component .

The Create Purchase Order based on Winning Quote operation and the Change Purchase Order based on Delivery Values operation are included in a Purchasing In interface .

A Change Purchase Order based on Invoiced Values operation sends a purchase order change request using a Change Purchase Order based on Invoiced Values asynchronous inbound process agent to update the Purchase Order business object . For example the operation can send a purchase order change request to update the Purchase Order business object if input is received from the Supplier Invoice Processing process component . The Change Purchase Order based on Invoiced Values operation is included in an Invoice Verification In interface .

A Create Purchase Order Confirmation operation sends a purchase order confirmation using a Purchase Order Confirmation asynchronous inbound process agent to update the Purchase Order Confirmation business object . For example the operation can send a purchase order confirmation to update the Purchase Order Confirmation business object if input is received from the Sales Order Processing at Supplier process component . The Create Purchase Order Confirmation operation is included in an Ordering In interface .

The Purchase Order business object can receive updated information and send the update into other components to perform further operations. As shown in multiple outbound process agents can receive information from the Purchase Order business object .

A Notify of Invoicing Due from Purchase Order to Supplier Invoice Processing asynchronous outbound process agent can invoke a Notify of Invoicing Due operation . For example the outbound process agent can send a notification that an invoice is due to a specific supplier. The notification can be sent to the Supplier Invoice Processing process component . The Notify of Invoicing Due operation is included in an Invoice Verification Out interface .

A Request Purchase Order to Supplier asynchronous outbound process agent can invoke a Request Purchase Order Change operation . For example the outbound process agent can send a request to change an existing purchase order. The notification can be sent to the Sales Order Processing at Supplier process component . The Request Purchase Order to Supplier asynchronous outbound process agent can also invoke a Request Purchase Order Cancellation operation . For example the outbound process agent can send a request to cancel an existing purchase order. The notification can be sent to the Sales Order Processing at Supplier process component . The Request Purchase Order to Supplier asynchronous outbound process agent can also invoke a Request Purchase Order Creation operation . For example the outbound process agent can send a request to create a new purchase order. The notification can be sent to the Sales Order Processing at Supplier process component . The Request Purchase Order Change operation the Request Purchase Order Cancellation operation and the Request Purchase Order Creation operation are included in an Ordering Out interface .

A Notify of Purchase Order to External Procurement Trigger and Response asynchronous outbound process agent can invoke a Notify of Purchase Order operation . For example the outbound process agent can send a notification of the purchase order to the External Procurement Trigger and Response process component . The Notify of Purchase Order operation is included in a Purchasing Out interface .

A Notify of Purchase Order to Project Processing asynchronous outbound process agent can also invoke the Notify of Purchase Order operation . For example the outbound process agent can send a notification of the purchase order to the Project Processing process component .

A Notify of Purchase Order to Time and Labor Management asynchronous outbound process agent can also invoke the Notify of Purchase Order operation . For example the outbound process agent can send a notification of the purchase order to the Time and Labor Management process component .

A Notify of Purchase Order to Accounting asynchronous outbound process agent can invoke a Notify of Purchase Order operation . For example the outbound process agent can send a notification of the purchase order to the Accounting process component . The Notify of Purchase Order operation is included in an Order Accounting Out interface .

A Change Purchase Request operation can send a request to a Change Purchase Request based on Request for Quote asynchronous inbound process agent to update the Purchase Request business object . For example the operation can send a request to update the Purchase Request business object if input is received from the RFQ Processing process component . The Change Purchase Request operation is included in a Request for Quote In interface .

A Maintain Purchase Request operation can send a request to a Maintain Purchase Request asynchronous inbound process agent to update the Purchase Request business object . For example the operation can send the request to update the Purchase Request business object if input is received from the Internal Request Processing process component the External Procurement Trigger and Response process component or the Project Processing process component . The Maintain Purchase Request operation is included in a Purchasing In interface .

The Purchase Request business object can receive updated information and send the update into other components to perform further operations. As shown in multiple outbound process agents can receive information from the Purchase Request business object .

A Request Request for Quote Execution from Purchase Request to RFQ Processing asynchronous outbound process agent can invoke a Request Request for Quote Execution operation . For example the outbound process agent can invoke the operation to update the RFQ Processing process component . The Request Request for Quote Execution operation is included in a Request for Quote Out interface .

A Confirm Purchase Request asynchronous outbound process agent can invoke a Confirm Purchase Request operation . For example the outbound process agent can invoke the operation to update the Internal Request Processing process component the External Procurement Trigger and Response process component or the Project Processing process component . The Confirm Purchase Request operation is included in a Purchasing Out interface .

A Maintain Purchasing Contract operation can send a message to a Maintain Purchasing Contract asynchronous inbound process agent to update the Purchasing Contract business object . For example the operation can send a message to update the Purchasing Contract business object if input is received from the RFQ Processing process component . The Maintain Purchasing Contract operation is included in a Contract Maintenance In interface .

A Confirm Request for Quote operation can send a message to a Maintain Purchasing Contract Relations asynchronous inbound process agent to update the Purchasing Contract business object . For example the operation can send a message to update the Purchasing Contract business object if input is received from the RFQ Processing process component . The Confirm Request for Quote operation is included in a Request for Quote In interface .

A Maintain Purchasing Contract Release operation can send a message to a Maintain Purchasing Contract Release asynchronous inbound process agent to update the Purchasing Contract business object . For example the operation can send a message to update the Purchasing Contract business object if input is received from the Supplier Invoice Processing process component . The Maintain Purchasing Contract Release operation is included in a Contract Release In interface .

The Purchasing Contract business object can receive updated information and send the update into other components to perform further operations. As shown in multiple outbound process agents can receive information from the Purchasing Contract business object .

A Request Request for Quote Execution from Purchasing Contract to RFQ Processing asynchronous outbound process agent can invoke a Request Request for Quote Execution operation . For example the outbound process agent can invoke the operation to send a message to the RFQ Processing process component . The outbound process agent can also invoke a Request Request for Quote Cancellation operation . For example the outbound process agent can invoke the operation to send a message to the RFQ Processing process component . The Request Request for Quote Execution operation and the Request Request for Quote Cancellation operation are included in a Request for Quote Out interface .

A Notify of Product from Purchasing Contract to Product Catalog Authoring asynchronous outbound process agent can invoke a Notify of Product Catalog operation . For example the outbound process agent can invoke the operation to send a message to the Product Catalog Authoring process component . The Notify of Product Catalog operation is included in a Product Catalog Authoring Out interface .

A Notify of Invoicing Due from Purchasing Contract to Supplier Invoice Processing asynchronous outbound process agent can invoke a Notify of Invoicing Due operation . For example the outbound process agent can invoke the operation to send a message to the Supplier Invoice Processing process component . The Notify of Invoicing Due operation is included in an Invoice Verification Out interface .

A Confirm Purchasing Contract to RFQ Processing asynchronous outbound process agent can invoke a Confirm Purchasing Contract operation . For example the outbound process agent can invoke the operation to send a message to the RFQ Processing process component . The Confirm Purchasing Contract operation is included in a Purchasing Contract Out interface .

A Cancel Goods and Service Acknowledgement operation can send an acknowledgement using a Maintain Goods and Service Acknowledgement GSA based on Internal Acknowledgement asynchronous inbound process agent to update the Goods and Service Acknowledgement business object . For example the operation can send an acknowledgement to update the Goods and Service Acknowledgement business object if input is received from the Time and Labor Management process component . A Create Goods and Service Acknowledgement operation can also send an acknowledgement using the Maintain GSA based on Internal Acknowledgement asynchronous inbound process agent to update the Goods and Service Acknowledgement business object . For example the operation can send an acknowledgement to update the Goods and Service Acknowledgement business object if input is received from the Time and Labor Management process component or the Internal Request Processing process component . The Cancel Goods and Service Acknowledgement operation and the Create Goods and Service Acknowledgement operation are included in an Internal Acknowledgement In interface .

The Goods and Service Acknowledgement business object can receive updated information and send the update into other components to perform further operations. As shown in multiple outbound process agents can receive information from the Goods and Service Acknowledgement business object .

A Notify of Invoicing Due from GSA to Supplier Invoice Processing asynchronous outbound process agent can invoke a Notify of Invoicing Due operation . For example the outbound process agent can send a notification of an invoice due for items in a purchase order. The notification can be sent to the Supplier Invoice Processing process component . The Notify of Invoicing Due operation is included in an Invoice Verification Out interface .

A Notify of Goods and Service Acknowledgement to Accounting asynchronous outbound process agent can invoke a Notify of Goods and Service Acknowledgement operation . For example the outbound process agent can send a notification that goods or services were received. The notification can be sent to the Accounting process component . The Notify of Goods and Service Acknowledgement to Accounting asynchronous outbound process agent can also invoke a Notify of Goods and Service Acknowledgement Cancellation operation . For example the outbound process agent can cancel a notification that goods or services were received. The notification can be sent to the Accounting process component . The Notify of Goods and Service Acknowledgement operation and the Notify of Goods and Service Acknowledgement Cancellation operation are included in a Goods and Service Accounting Out interface .

A Maintain Invoice Request operation can send a request using a Maintain Supplier Invoice Request asynchronous inbound process agent to update the Supplier Invoice Request business object . For example the operation can send a request to update the Supplier Invoice Request business object if input is received from the Purchase Order Processing process component the Inbound Delivery Processing process component the Goods and Service Acknowledgement process component or the Purchasing Contract Processing process component . The Maintain Invoice Request operation is included in an Invoice Verification In interface .

A Create Invoice operation can send a request using a Create Supplier Invoice based on Supplier Invoice Request asynchronous inbound process agent to update the Supplier Invoice business object . For example the operation can send a supplier invoice request to update the Supplier Invoice business object if input is received from the Internal Request Processing process component . The Create Invoice operation is included in an Internal Invoicing In interface .

A Create Invoice operation can send a request using a Create Supplier Invoice based on Invoice Request asynchronous inbound process agent to update the Supplier Invoice business object . For example the operation can send a supplier invoice request to update the Supplier Invoice business object if input is received from the Customer Invoice Processing at Supplier process component . The Create Invoice operation is included in an Invoicing In interface .

The Supplier Invoice Request business object can receive updated information and send the update into other components to perform further operations. As shown in multiple outbound process agents can receive information from the Supplier Invoice Request business object .

A Notify of Contract Release from Supplier Invoice Request SIR to Purchasing Contract Processing asynchronous outbound process agent can invoke a Notify of Contract Release operation . For example the outbound process agent can send a notification of a released contract. The notification can be sent to the Purchasing Contract Processing process component . The Notify of Contract Release operation is included in a Contract Release Out interface .

A Notify of Invoiced Values from SIR to Purchase Order Processing asynchronous outbound process agent can invoke a Notify of Invoiced Values operation . For example the outbound process agent can send a notification of invoiced values for a purchase order. The notification can be sent to the Purchase Order Processing process component . The Notify of Invoiced Values operation is included in an Invoice Verification Out interface .

The Supplier Invoice business object can receive updated information and send the update into other components to perform further operations. As shown in multiple outbound process agents can receive information from the Supplier Invoice business object .

A Notify of Supplier Invoice to Accounting asynchronous outbound process agent can invoke a Notify of Invoice operation . For example the outbound process agent can send a notification of an invoice that was created for a particular supplier. The notification can be sent to the Accounting process component . The Notify of Supplier Invoice to Accounting asynchronous outbound process agent can also invoke a Notify of Invoice Cancellation operation . For example the outbound process agent can send a notification of the cancellation of an invoice for a supplier. The notification can be sent to the Accounting process component . The Notify of Invoice operation and the Notify of Invoice Cancellation operation are included in an Invoice Accounting Out interface .

A Notify of Supplier Invoice to Due Item Processing asynchronous outbound process agent can invoke a Notify of Invoice operation . For example the outbound process agent can send a notification of an invoice that was created for a particular supplier. The notification can be sent to the Due Item Processing process component . The Notify of Supplier Invoice to Due Item Processing asynchronous outbound process agent can also invoke a Notify of Invoice Cancellation operation . For example the outbound process agent can send a notification of the cancellation of an invoice for a supplier. The notification can be sent to the Due Item Processing process component . The Notify of Invoice operation and the Notify of Invoice Cancellation operation are included in a Receivables Payables Out interface .

A Confirm Invoice to Supplier asynchronous outbound process agent can invoke a Confirm Invoice operation . For example the outbound process agent can send a notification to confirm an invoice to a supplier. The notification can be sent to the Customer Invoice Processing at Supplier process component . The Confirm Invoice operation is included in an Invoicing Out interface .

A Request Evaluated Receipt Settlement ERS Invoice to Supplier asynchronous outbound process agent can invoke a Request ERS Invoice operation . For example the outbound process agent can send a notification of an ERS invoice. The notification can be sent to the Customer Invoice Processing at Supplier process component . The Request ERS Invoice operation is included in an ERS Invoicing Out interface .

A Maintain Request for Quote operation can send a request for quote using a Maintain Request for Quote asynchronous inbound process agent to update the Request for Quote business object . For example the operation can send a request for quote to update the Request for Quote business object if input is received from the Purchase Request Processing process component . A Cancel Request for Quote operation can send a cancellation request using the Maintain Request for Quote asynchronous inbound process agent to update the Request for Quote business object . For example the operation can send a cancellation request to update the Request for Quote business object if input is received from the Purchase Request Processing process component or the Purchasing Contract Processing process component . The Maintain Request for Quote operation and the Cancel Request for Quote operation are included in a Request for Quote In interface .

A Maintain Supplier Quote Relations operation can send a supplier quote using a Maintain Supplier Quote Relations based on Purchasing Contract asynchronous inbound process agent to update the Supplier Quote business object . For example the operation can send a supplier quote to update the Supplier Quote business object if input is received from the Purchasing Contract Processing process component . The Maintain Supplier Quote Relations operation is included in a Purchasing Contract In interface .

A Maintain Supplier Quote operation can send a supplier quote using a Maintain Supplier Quote asynchronous inbound process agent to update the Supplier Quote business object . For example the operation can send a supplier quote to update the Supplier Quote business object if input is received from the Opportunity Customer Quote Processing at Supplier process component . The Maintain Supplier Quote operation is included in a Supplier Quote Processing In interface .

The Request for Quote business object can receive updated information and send the update into other components to perform further operations. As shown in multiple outbound process agents can receive information from the Request for Quote business object .

A Confirm Request for Quote asynchronous outbound process agent can invoke a Confirm Request for Quote operation . For example the outbound process agent can send a notification to confirm a request for quote. The notification can be sent to the Purchase Request Processing process component or the Purchasing Contract Processing process component . The Confirm Request for Quote operation is included in a Request for Quote Out interface .

A Request Quote Maintenance from Request for Quote to Supplier asynchronous outbound process agent can invoke a Request Quote Creation operation . For example the outbound process agent can send a notification of a request to create a quote. The notification can be sent to the Opportunity Customer Quote Processing at Supplier process component . The Request Quote Maintenance from Request for Quote to Supplier asynchronous outbound process agent can also invoke a Notify of Request for Quote Cancellation operation . For example the outbound process agent can send a notification of a quote cancellation. The notification can be sent to the Opportunity Customer Quote Processing at Supplier process component . The Request Quote Maintenance from Request for Quote to Supplier asynchronous outbound process agent can also invoke a Notify of Request for Quote Change operation . For example the outbound process agent can send a notification of a quote change. The notification can be sent to the Opportunity Customer Quote Processing at Supplier process component . The Request Quote Creation operation the Notify of Request for Quote Cancellation operation and the Notify of Request for Quote Change operation are included in a Request Quote Processing Out interface .

The Supplier Quote business object can receive updated information and send the update into other components to perform further operations. As shown in multiple outbound process agents can receive information from the Supplier Quote business object .

A Request Purchase Order from Supplier Quote to Purchase Order Processing asynchronous outbound process agent can invoke a Request Purchase Order from Winning Quote operation . For example the outbound process agent can send a notification of purchase order based on a winning quote. The notification can be sent to the Purchase Order Processing process component . The Request Purchase Order from Winning Quote operation is included in a Purchasing Out interface .

A Request Contract from Supplier Quote to Purchasing Contract Processing asynchronous outbound process agent can invoke a Request Contract from Winning Quote operation . For example the outbound process agent can send a contract maintenance request based on a winning quote associated with the contract. The notification can be sent to the Purchasing Contract Processing process component . The Request Contract from Winning Quote operation is included in a Purchasing Contract Out interface .

A Request Quote Maintenance from Supplier Quote to Supplier asynchronous outbound process agent can invoke a Request Quote Change operation . For example the outbound process agent can send a notification of a quote change request. The notification can be sent to the Opportunity Customer Quote Processing at Supplier process component . The Request Quote Change operation is included in a Supplier Quote Processing Out interface .

A Notify of Quote Award from Supplier Quote to Supplier asynchronous outbound process agent can invoke a Notify of Quote Award operation . For example the outbound process agent can send a notification of the quote award. The notification can be sent to the Opportunity Customer Quote Processing at Supplier process component . The Notify of Quote Award operation is included in the Supplier Quote Processing Out interface .

A Change Internal Request based on Procurement Progress operation can send a request using a Change Internal Request based on Procurement Progress asynchronous inbound process agent to update the Internal Request business object . For example the operation can send a request to update the Internal Request business object if input is received from the Purchase Request Processing process component . The Change Internal Request based on Procurement Progress operation is included in a Purchasing In interface .

The Internal Request business object can receive updated information and send the update into other components to perform further operations. As shown in multiple outbound process agents can receive information from the Internal Request business object .

A Request Purchasing from Internal Request to Purchase Request Processing asynchronous outbound process agent can invoke a Request Purchasing operation . For example the outbound process agent can send a request purchasing notification. The notification can be sent to the Purchase Request Processing process component . The Request Purchasing operation is included in a Purchasing Out interface .

A Request GSA from Internal Request to Goods and Service Acknowledgement asynchronous outbound process agent can invoke a Request GSA based on Delivery Confirmation operation . For example the outbound process agent can send a notification of a request for a goods and service acknowledgement once the delivery of goods has occurred. The notification can be sent to the Goods and Service Acknowledgement process component . The Request GSA based on Delivery Confirmation operation is included in an Internal Acknowledgement Out interface .

A Request Invoicing from Internal Request to Supplier Invoice Processing asynchronous outbound process agent can invoke a Request Invoicing based on Invoice Acceptance operation . For example the outbound process agent can send a notification of a request for an invoice after acceptance of the invoice. The notification can be sent to the Supplier Invoice Processing process component . The Request Invoicing based on Invoice Acceptance operation is included in an Internal Invoicing Out interface .

The subject matter described in this specification and all of the functional operations described in this specification can be implemented in digital electronic circuitry or in computer software firmware or hardware including the structural means disclosed in this specification and structural equivalents thereof or in combinations of them. The subject matter described in this specification can be implemented as one or more computer program products i.e. one or more computer programs tangibly embodied in an information carrier e.g. in a machine readable storage device or in a propagated signal for execution by or to control the operation of data processing apparatus e.g. a programmable processor a computer or multiple computers. A computer program also known as a program software software application or code can be written in any form of programming language including compiled or interpreted languages and it can be deployed in any form including as a stand alone program or as a module component subroutine or other unit suitable for use in a computing environment. A computer program does not necessarily correspond to a file. A program can be stored in a portion of a file that holds other programs or data in a single file dedicated to the program in question or in multiple coordinated files e.g. files that store one or more modules sub programs or portions of code . A computer program can be deployed to be executed on one computer or on multiple computers at one site or distributed across multiple sites and interconnected by a communication network.

The processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform functions by operating on input data and generating output. The processes and logic flows can also be performed by and apparatus can also be implemented as special purpose logic circuitry e.g. an FPGA field programmable gate array or an ASIC application specific integrated circuit .

Processors suitable for the execution of a computer program include by way of example both general and special purpose microprocessors and any one or more processors of any kind of digital computer. Generally a processor will receive instructions and data from a read only memory or a random access memory or both. The essential elements of a computer are a processor for executing instructions and one or more memory devices for storing instructions and data. Generally a computer will also include or be operatively coupled to receive data from or transfer data to or both one or more mass storage devices for storing data e.g. magnetic magneto optical disks or optical disks. Information carriers suitable for embodying computer program instructions and data include all forms of non volatile memory including by way of example semiconductor memory devices e.g. EPROM EEPROM and flash memory devices magnetic disks e.g. internal hard disks or removable disks magneto optical disks and CD ROM and DVD ROM disks. The processor and the memory can be supplemented by or incorporated in special purpose logic circuitry.

To provide for interaction with a user the subject matter described in this specification can be implemented on a computer having a display device e.g. a CRT cathode ray tube or LCD liquid crystal display monitor for displaying information to the user and a keyboard and a pointing device e.g. a mouse or a trackball by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well for example feedback provided to the user can be any form of sensory feedback e.g. visual feedback auditory feedback or tactile feedback and input from the user can be received in any form including acoustic speech or tactile input.

The subject matter described in this specification can be implemented in a computing system that includes a back end component e.g. a data server a middleware component e.g. an application server or a front end component e.g. a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described herein or any combination of such back end middleware and front end components. The components of the system can be interconnected by any form or medium of digital data communication e.g. a communication network. Examples of communication networks include a local area network LAN and a wide area network WAN e.g. the Internet.

The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client server relationship to each other.

While this specification contains many specifics these should not be construed as limitations on the scope of the invention or of what may be claimed but rather as an exemplification of preferred embodiments of the invention. Certain features that are described in this specification in the context of separate embodiments may also be provided in combination in a single embodiment. Conversely various features that are described in the context of a single embodiment may also be provided in multiple embodiments separately or in any suitable subcombination. Moreover although features may be described above as acting in certain combinations and even initially claimed as such one or more features from a claimed combination can in some cases be excised from the combination and the claimed combination may be directed to a subcombination or variation of a subcombination.

The subject matter has been described in terms of particular variations but other variations can be implemented and are within the scope of the following claims. For example the actions recited in the claims can be performed in a different order and still achieve desirable results. As one example the processes depicted in the accompanying figures do not necessarily require the particular order shown or sequential order to achieve desirable results. In certain implementations multitasking and parallel processing may be advantageous. Other variations are within the scope of the following claims.

