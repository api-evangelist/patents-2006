---

title: Auditing application activities
abstract: A compiled application may be audited by analyzing the compiled application to identify methods that may be called during execution of the compiled application. The identified methods may be correlated with controllable activities, i.e., those activities facilitated by public APIs. An audit report may be used to report to a user or administrator indications that the compiled application may attempt certain activities.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08990929&OS=08990929&RS=08990929
owner: BlackBerry Limited
number: 08990929
owner_city: Waterloo
owner_country: CA
publication_date: 20060821
---
The present application relates generally to control of application activities on a computing device and more specifically to auditing an application to determine potential activities.

Mobile communication devices such as cellular phones and personal digital assistants with wireless data communication capabilities continue to proliferate. Application software from myriad sources allows the usefulness of these devices to be expanded beyond the usefulness represented by the application suite provided with the devices when provided by the manufacturer.

Many of the applications available may be compiled specifically for a particular mobile device platform. The mobile device platform may be defined by operating system and or processor and may be proprietary. Alternatively applications may be compiled specifically for a virtual machine. To allow for a wide range of applications to execute on a device having a given platform manufacturers typically develop a virtual machine for their particular platform. The virtual machine is developed for a predetermined universal language such as Java or one of the variations of Java .

For security purposes a user may want to limit the activities an application may perform and thereby limit the resources to which the application has access while executed on a mobile device.

A compiled application may be audited by analyzing the compiled application to identify methods that may be called during execution of the compiled application. The identified methods may be correlated with controllable activities i.e. those activities facilitated by public APIs. An audit report may be used to report to a user or administrator indications that the compiled application may attempt certain activities.

In one aspect of the present application there is provided a method of auditing a compiled application. The method includes analyzing the compiled application to identify a method that may be called during execution of the compiled application selecting a stored reference where the stored reference relates to a predetermined method and the predetermined method is associated with an activity determining whether the predetermined method matches the method that may be called during execution of the compiled application and where the predetermined method matches the method that may be called during execution of the compiled application indicating that the compiled application may attempt the activity. In other aspects of the application a computing apparatus is provided adapted to audit a compiled application according to this method and a computer readable medium is provided to allow a processor to carry out this method.

Other aspects and features of the application will become apparent to those of ordinary skill in the art upon review of the following description of specific embodiments in conjunction with the accompanying figures.

Exemplary activities in the Connections group include accessing a Universal Serial Bus USB connection accessing a Bluetooth connection accessing a Phone voice telephony connection accessing a connection over the Company network and accessing a connection over the Internet as provided to the mobile device by the entity supplying the wireless network i.e. the Carrier .

Exemplary activities in the Interactions group include performing interprocess communication performing keystroke injection browser filtering and accessing theme data.

Exemplary activities in the User Data group include accessing e mail messages accessing personal information manager PIM data accessing key store data and accessing medium security key store data

While it is useful to set access permissions thereby limiting application activities there remains a possibility that the access permissions may be subjectively considered to be set either at a level that is not stringent enough or set at a level so stringent as to restrict proper operation of a trusted application.

It may not be immediately clear to a user which access restriction is causing the problem with the proper operation of the trusted application. As such the user may be forced into a time consuming trial and error strategy to locate the access control that is restricting the proper operation of the trusted application. Clearly information regarding the potential activities of the trusted application would allow a determination of which of the access permissions to lessen to allow the proper operation of the trusted application.

It has heretofore been unknown to review ahead of time the potential activities of an application. Clearly the developer of the application will have considered the application activities but such information is not normally available to an end user or to an administrator of the device in use by the end user.

In overview an audit of a compiled application can identify calls to predetermined methods. Given a known relationship between the predetermined methods and known activities e.g. accessing elements of the mobile device on which the application is to be executed a report may be presented to the user the report indicating potential activities of the application. In one embodiment the report is presented in a user interface structure consistent with the user interface structure used on the device to review and change permissions for applications.

For the following it is considered that the exemplary auditing method is executed by a processor without consideration whether the processor is in a portable handheld computing device e.g. a mobile communication device in a PC or in a server. It is further considered that in a first embodiment the execution of the exemplary auditing method is triggered by a user of the device that houses the processor and in a second embodiment the auditing method is triggered automatically upon the downloading of a new application.

In the first embodiment the user may for example indicate the application to be considered by selecting the application causing a menu to be displayed and then selecting a menu item from the displayed menu which menu item specifies that the potential activities of the selected application are to be identified. The processor may then initialize execution of the exemplary auditing method.

In the second embodiment upon downloading to the handheld computing device a new compiled application the processor of the handheld computing device may initialize execution of the exemplary auditing method. Upon completion of execution of the auditing method results may be presented to the user immediately or stored so that the results may be accessed by the user in the future.

Initially the processor receives step the indication of the application to be audited. The processor then generates step a document containing references to methods that may be called during execution of the application. In particular the document generation step step involves creating a document analyzing the application to identify methods that may be called during execution of the application and writing to the document a reference to each method identified during the analyzing.

To analyze the application to identify the methods the processor executes a compiler of the type used to compile the application with an option that triggers analysis of the application to identify each method that may be called during execution of the application. Where the compiler is generically represented as compiler.exe obtaining the references may involve using a customized option in the following example dumpmethodrefs .

It is expected to be well within the capabilities of a person of ordinary skill in the art of object oriented compiler design to modify an existing compiler to add an option that allows the existing compiler to identify for a given compiled application a method that may be called.

Each written reference may include a significant yet predictable amount of extraneous text. For example a reference to a method may be output as follows.

The above output indicates that the application calls a method named write from a class named net.device.api.system.USBPort . The term API is a well known acronym for Application Programming Interface. An API is an interface provided by a computer system library or application in order to allow requests for services to be made of the provider of the API by other computer programs and or to allow data to be exchanged between the provider of the API and the other computer programs. Many of the potential activities of an application may be identified through the identification of calls to methods in classes that are provided by various APIs.

Standard searching and stream editing tools may be used to strip the extraneous information out of the written references and store the stripped references in a document as follows.

The searching and stream editing can reduce the previously presented line of output from the compiler to the following line of stripped output.

The stripped references in the document e.g. calls.tmp may then be arranged to only include a single reference to each distinct method.

Once the latter document e.g. calls.txt has been created and contains references to methods potentially called that document can be searched for references to a particular method that is known to be related to a given activity. To that end a database may be provided which stores a list of references to methods and an association between the references and known activities to which the methods referred to relate.

The processor then selects step a stored reference where the stored reference relates to a method and the method is associated with a given activity. Once the stored reference has been selected the processor searches step the latter document for a candidate reference where the candidate reference is a match for the selected stored reference.

Responsive to the processor determining step that the candidate reference has been found the processor indicates step that the application will possibly perform the given activity. The search and indication may be implemented as follows.

After indicating step or determining step that the candidate reference has not been found the processor determines step whether all stored references have been selected. If all stored references have been selected the method is complete. However if there are more stored references left to select the processor returns to step to select another stored reference.

The indication step that the application may perform certain given activities may be implemented in a number of ways. For instance a complete output may take the form of a list which list may be output to the display of the device as follows.

Alternatively as illustrated in a UI window of indication that the application may perform given activities may be presented in conjunction with an indication of the current permission settings. Advantageously in this latter indication implementation a user may quickly ascertain a source of conflict between activities the application may attempt and the current permission settings. For example as indicated in the UI window of the application may attempt to access the Carrier Internet for which the current permission is set at Prompt . The user may wish to maintain this permission setting to control the access of the application to the Carrier Internet or if the access becomes frequent and annoying and would always be allowed the user may change the permission setting to Allow .

The housing may be elongated vertically or may take on other sizes and shapes including clamshell housing structures . The keyboard may include a mode selection key or other hardware or software for switching between text entry and telephony entry.

In addition to the microprocessor other parts of the mobile device are shown schematically in . These include a long range communications subsystem a short range communications subsystem the keyboard and the display along with other input output devices including a set of auxiliary I O devices a serial port a speaker and a microphone as well as memory devices including a flash memory and a Random Access Memory RAM and various other device subsystems . The mobile device is preferably a two way radio frequency RF communication device having voice and data communication capabilities. In addition the mobile device preferably has the capability to communicate with other computer systems via the Internet.

Operating system software executed by the microprocessor is preferably stored in a computer readable medium such as the flash memory but may be stored in other types of memory devices such as a read only memory ROM persistent memory or similar storage element. In addition system software and device specific applications or parts thereof may be temporarily loaded into a volatile store such as the RAM . Communication signals received by the mobile device may also be stored to the RAM .

The microprocessor in addition to its operating system functions enables execution of software applications on the mobile device . A predetermined set of software applications that control basic device operations such as a voice communications module A and a data communications module B may be installed on the mobile device during manufacture. An application activity auditing module C may also be installed on the mobile device during manufacture to implement aspects of the present application. As well additional software modules illustrated as another software module N which may be for instance a PIM application may be installed during manufacture.

The PIM application is preferably capable of organizing and managing data items such as e mail messages calendar events voice mail messages appointments contact information and task items. The PIM application is also preferably capable of sending and receiving data items via a wireless carrier network . Preferably the data items managed by the PIM application are seamlessly integrated synchronized and updated via the wireless carrier network with the device user s corresponding data items stored or associated with a host computer system.

Communication functions including data and voice communications are performed through the long range communication subsystem and possibly through the short range communications subsystem . The long range communication subsystem includes a receiver a transmitter and one or more antennas illustrated as a receive antenna and a transmit antenna . In addition the long range communication subsystem also includes a processing module such as a digital signal processor DSP and local oscillators LOs . The specific design and implementation of the long range communication subsystem is dependent upon the communication network in which the mobile device is intended to operate. For example the long range communication subsystem of the mobile device may be designed to operate with the Mobitex DataTAC or General Packet Radio Service GPRS mobile data communication networks and also designed to operate with any of a variety of voice communication networks such as Advanced Mobile Phone Service AMPS Time Division Multiple Access TDMA Code Division Multiple Access CDMA Personal Communications Service PCS Global System for Mobile Communications GSM etc. Other types of data and voice networks both separate and integrated may also be utilized with the mobile device .

Network access requirements vary depending upon the type of communication system. Typically an identifier is associated with each mobile device that uniquely identifies the mobile device or subscriber to which the mobile device has been assigned. The identifier is unique within a specific network or network technology. For example in Mobitex networks mobile devices are registered on the network using a Mobitex Access Number MAN associated with each device and in DataTAC networks mobile devices are registered on the network using a Logical Link Identifier LLI associated with each device. In GPRS networks however network access is associated with a subscriber or user of a device. A GPRS device therefore requires a subscriber identity module commonly referred to as a Subscriber Identity Module SIM card in order to operate on a GPRS network. Despite identifying a subscriber by SIM mobile devices within GSM GPRS networks are uniquely identified using an International Mobile Subscriber Identify IMSI number.

When required network registration or activation procedures have been completed the mobile device may send and receive communication signals over the wireless carrier network . Signals received from the wireless carrier network by the receive antenna are routed to the receiver which provides for signal amplification frequency down conversion filtering channel selection etc. and may also provide analog to digital conversion. Analog to digital conversion of the received signal allows the DSP to perform more complex communication functions such as demodulation and decoding. In a similar manner signals to be transmitted to the wireless carrier network are processed e.g. modulated and encoded by the DSP and are then provided to the transmitter for digital to analog conversion frequency up conversion filtering amplification and transmission to the wireless carrier network or networks via the transmit antenna .

In addition to processing communication signals the DSP provides for control of the receiver and the transmitter . For example gains applied to communication signals in the receiver and the transmitter may be adaptively controlled through automatic gain control algorithms implemented in the DSP .

In a data communication mode a received signal such as a text message or web page download is processed by the long range communication subsystem and is input to the microprocessor . The received signal is then further processed by the microprocessor for output to the display or alternatively to some auxiliary I O devices . A device user may also compose data items such as e mail messages using the keyboard and or some other auxiliary I O device such as a touchpad a rocker switch a thumb wheel or some other type of input device. The composed data items may then be transmitted over the wireless carrier network via the long range communication subsystem .

In a voice communication mode overall operation of the device is substantially similar to the data communication mode except that received signals are output to the speaker and signals for transmission are generated by the microphone . Alternative voice or audio I O subsystems such as a voice message recording subsystem may also be implemented on the device . In addition the display may also be utilized in voice communication mode for example to display the identity of a calling party the duration of a voice call or other voice call related information.

The short range communications subsystem enables communication between the mobile device and other proximate systems or devices which need not necessarily be similar devices. For example the short range communications subsystem may include an infrared device and associated circuits and components or a Bluetooth communication module to provide for communication with similarly enabled systems and devices.

While setting of access permissions by a user has been discussed it should also be considered that the access permissions may be provided with default values by an administrator. The administrator may also set minimum access permissions to maintain a minimum level of security system wide.

An administrator at the administration terminal may transmit indications of minimum permissions for the mobile communication device and transmit new applications to the mobile communication device . However before transmitting a given application to the mobile communication device the administrator may wish to audit the given application to determine the activities that may be attempted.

From the point of view of an administrator maintaining an up to date version of an audit tool which may be employed to audit applications for activities may be considered time consuming and unnecessarily complex. For this reason an audit tool may be executed remotely say at a site related to the supplier of the hardware of the mobile communication device the compiler of the given application or both. The audit tool may be accessible through a World Wide Web portal that is a web page see provided by a Hyper Text Transport Protocol HTTP server which is also connected to the wide area network . The web page may have active components that allow an administrator to browse storage local to the administration terminal to select a compiled application for uploading. Elements related to the page may then upload the compiled application from the administration terminal to an audit server associated with the HTTP server .

The audit server may then execute an up to date audit tool to carry out the audit method of with the uploaded compiled application as input. The output of the audit tool may then be served to the administration terminal by the HTTP server as a further web page see .

In review an audit method is proposed which audit method provides to a user or to an administrator information regarding the activities an application may attempt when executed. With that information the user or administrator can make informed decisions on which application control permission settings to apply and whether it is desirable to use the application at all. For example if a user downloads a board game application to the mobile device and through the application of the auditing tool discovers that the board game application may access the telephone API and the PIM API it may be that the user will elect not to execute the board game application.

The above described embodiments of the present application are intended to be examples only. Alterations modifications and variations may be effected to the particular embodiments by those skilled in the art without departing from the scope of the application which is defined by the claims appended hereto.

