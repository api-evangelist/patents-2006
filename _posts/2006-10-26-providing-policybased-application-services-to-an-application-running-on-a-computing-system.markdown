---

title: Providing policy-based application services to an application running on a computing system
abstract: Methods, apparatus, products are disclosed for providing policy-based application services to an application running on a computing system. The computing system includes at least one compute node. The compute node includes an application and a plurality of application services of a service type. Providing policy-based application services to an application running on a computing system includes establishing, on the compute node, a service policy specifying one of the application services of the service type for use by the application, establishing a performance ruleset, the performance ruleset specifying rules for analyzing the performance of the computing system, measuring performance of the computing system, and adjusting the service policy in dependence upon the performance ruleset and the measured performance. Providing policy-based application services to an application running on a computing system may also include accessing, by the application, the specified application service.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08656448&OS=08656448&RS=08656448
owner: International Business Machines Corporation
number: 08656448
owner_city: Armonk
owner_country: US
publication_date: 20061026
---
This application is related to U.S. patent application Ser. No. 11 553 040 entitled PROVIDING POLICY BASED OPERATING SYSTEM SERVICES IN AN OPERATING SYSTEM ON A COMPUTING SYSTEM filed on Oct. 26 2006 U.S. patent application Ser. No. 11 553 077 entitled PROVIDING POLICY BASED OPERATING SYSTEM SERVICES IN A HYPERVISOR ON A COMPUTING SYSTEM filed on Oct. 26 2006 and U.S. patent application Ser. No. 11 553 095 entitled PROVIDING POLICY BASED OPERATING SYSTEM SERVICES IN AN OPERATING SYSTEM ON A COMPUTING SYSTEM filed on Oct. 26 2006 all of which are incorporated by reference herein.

The field of the invention is data processing or more specifically methods apparatus and products for providing policy based application services to an application running on a computing system.

The development of the EDVAC computer system of 1948 is often cited as the beginning of the computer era. Since that time computer systems have evolved into extremely complicated devices. Today s computers are much more sophisticated than early systems such as the EDVAC. Computer systems typically include a combination of hardware and software components application programs operating systems processors buses memory input output devices and so on. As advances in semiconductor processing and computer architecture push the performance of the computer higher and higher more sophisticated computer software has evolved to take advantage of the higher performance of the hardware resulting in computer systems today that are much more powerful than just a few years ago.

Although software applications have evolved significantly over the last few years some facets of application architecture have remained the same. In particular software architects still design applications to use a fixed set of application services after the application is installed. That is the application utilizes the same algorithm to provide each type of service used by the application. In an application that utilizes application services to perform various computational algorithms on matrices for example the application may utilize the same algorithm to perform single precision matrix multiplication the same algorithm to perform double precision matrix multiplication the same algorithm to perform complex single precision matrix multiplication the same algorithm to perform complex double precision matrix multiplication and so on. Often however one application service utilizes computer resources in one environment more efficiently than another application service of the same service type. Continuing with the example above one application service that performs double precision matrix multiplication may utilize computer resources more efficiently in a computing system with large amounts of free memory than another application service that performs double precision matrix multiplication. Because current applications use the same application services without regard to computer resource utilization overall application performance and system performance often suffer. Readers will therefore appreciate that room for improvement exists in the manner in which applications use application services.

Methods apparatus products are disclosed for providing policy based application services to an application running on a computing system. The computing system includes at least one compute node. The compute node includes an application and a plurality of application services of a service type. Providing policy based application services to an application running on a computing system includes establishing on the compute node a service policy specifying one of the application services of the service type for use by the application establishing a performance ruleset the performance ruleset specifying rules for analyzing the performance of the computing system measuring performance of the computing system and adjusting the service policy in dependence upon the performance ruleset and the measured performance. Providing policy based application services to an application running on a computing system may also include accessing by the application the specified application service.

In addition each application service may be characterized by operating parameters. Providing policy based application services to an application running on a computing system may include adjusting the operating parameters of the specified application service in dependence upon the performance ruleset and the measured performance.

The computing system may also be implemented as a distributed computing system that includes one or more application service nodes. One or more of the application services may be distributed among the application service nodes. The service policy also specifies an application service node that is to provide the specified application service. Providing policy based application services to an application running on a computing system may include administering the application service nodes in dependence upon the performance ruleset and the measured performance.

The foregoing and other objects features and advantages of the invention will be apparent from the following more particular descriptions of exemplary embodiments of the invention as illustrated in the accompanying drawings wherein like reference numbers generally represent like parts of exemplary embodiments of the invention.

Exemplary methods apparatus and products for providing policy based application services to an application running on a computing system according to embodiments of the present invention are described with reference to the accompanying drawings beginning with . sets forth a network diagram illustrating an exemplary computing system for providing policy based application services to an application according to embodiments of the present invention. The exemplary computing system of includes a compute node . The compute node includes an application and a plurality of application services of a service type. The exemplary computing system of operates generally to provide policy based application services to an application by establishing on the compute node a service policy specifying one of the application services of the service type for use by the application and accessing by the application the specified application service. The exemplary computing system of operates generally to provide policy based application services to an application according to embodiments of the present invention by establishing on the compute node a service policy specifying one of the application services of the service type for use by the application establishing a performance ruleset the performance ruleset specifying rules for analyzing the performance of the computing system measuring performance of the computing system and adjusting the service policy in dependence upon the performance ruleset and the measured performance.

In the example of the exemplary computing system is implemented as a distributed computing system. A distributed computing system is a computing system that uses two or more network connected computing devices to accomplish a common task. The distributed computer system of includes the compute node application service nodes and an administration node connected together for data communications through network . The compute node connects to network through wireline connection . The application service node connects to network through wireline connection . The application service node connects to network through wireline connection . The application service node connects to network through wireline connection . The administration node connects to network through wireline connection . The common task in the distributed computing system of includes providing a policy based application services to an application according to embodiments of the present invention.

In the example of the compute node is implemented using one of the nodes installed in a computer rack . Each node of is a processing device that executes computer program instructions. Each node includes one or more computer processors and computer memory operatively coupled to the computer processors. The nodes of are implemented as blade servers installed in server chassis that are in turn mounted on the computer rack . Readers will note however that implementing the nodes as blade servers is for explanation and not for limitation. In fact the nodes of may be implemented as network connected workstations computers connected together to form a computer cluster computing devices in a parallel computer or any other implementation as will occur to those of skill in the art.

In the example of the compute node is a node configured with the application the application services and the service policy useful in providing policy based application services to an application running on a computing system according to embodiments of the present invention. Typically the service policy is established on the compute node to optimize the utilization of node resources by the application configured for execution on the node. The application is a set of computer program instructions implementing user level data processing using the application services specified in the service policy . The application may be a stand alone application in which all the computer program instructions of the application are executed on a single compute node or the application may be a distributed application in which portions of the computer program instructions are executed serially or in parallel with other portions of the computer program instructions being executed on other compute nodes.

To control the execution of the application on the compute node the compute node of is also configured with the operating system . The operating system of is system software that manages the hardware and software resources of a processing device such as the compute node . The operating system performs basic tasks such as for example controlling and allocating memory prioritizing the processing of instructions controlling input and output devices facilitating networking and managing files.

In the exemplary system of each application service is a application level software component that either implements a type of service not implemented in the operating system not implemented in the application itself or that is a specialized version of a type of service already provided by the application . For explanation consider for example that the application of does not implement any application level services that perform complex double precision matrix multiplication. In such an example if several of the application services implement a complex double precision matrix multiplication service then the application uses the complex double precision matrix multiplication service specified in the in the service policy . Consider further for example that the application of implements a generic single precision matrix multiplication service. In such an example if one of the application services also implements a specialized single precision matrix multiplication service tailored for a particular computing environment then the application may use either the generic or the specialize single precision matrix multiplication service depending on the configuration of the service policy .

Each application service of provides an application service of a particular service type. The types of services provided by the application services may include for example mathematical computation services security services communications services and any other types of application level services useful to an application program as will occur to those of skill in the art.

To allow the application to use application services of the same service type interchangeably the application services for services of the same service type have the same application programming interface. That is the service API for each service of a particular service type have the same set of member methods and parameters that the application may use to access the application services . Because the services of each service type have the same service API the application may access the application service specified in the service policy using the same application programming interface regardless of which application service is specified in the service policy for the particular service type.

In the exemplary system of one or more of the application services are distributed among the application service nodes . That is the computer program instructions for implementing one or more of the application services reside on the application service nodes . The corresponding application services for each of the services may be implemented as copies of the computer program instructions implementing each of the services . The corresponding application services for each of the services may also be implemented using a data communications subsystem that accesses the application services on the application service nodes . Examples of such a data communication subsystem may include a web services engine a CORBA object on the compute node that accesses the application services on the application service nodes using remote procedure calls use of an MPI library or any other implementation as will occur to those of skill in the art.

 CORBA refers to the Common Object Request Broker Architecture a computer industry specifications for interoperable enterprise applications produced by the Object Management Group OMG . CORBA is a standard for remote procedure invocation first published by the OMG in 1991. CORBA can be considered a kind of object oriented way of making remote procedure calls although CORBA supports features that do not exist in conventional remote procedure calls. CORBA uses a declarative language the Interface Definition Language IDL to describe an object s interface. Interface descriptions in IDL are compiled to generate stubs for the client side and skeletons on the server side. Using this generated code remote method invocations effected in object oriented programming languages such as C or Java look like invocations of local member methods in local objects.

 MPI refers to Message Passing Interface a prior art parallel communications library a module of computer program instructions for data communications on parallel computers. Examples of prior art parallel communications libraries that may be useful for providing policy based application services to an application running on a computing system according to embodiments of the present invention include MPI and the Parallel Virtual Machine PVM library. PVM was developed by the University of Tennessee The Oak Ridge National Laboratory and Emory University. MPI is promulgated by the MPI Forum an open group with representatives from many organizations that define and maintain the MPI standard. MPI at the time of this writing is a de facto standard for communication among nodes running a parallel program on a distributed memory parallel computer. This specification sometimes uses MPI terminology for ease of explanation although the use of MPI as such is not a requirement or limitation of the present invention.

In the example of the application service nodes are implemented using the nodes installed in the computer rack . Each application service node is a node that provides application services to an application installed on a compute node. Each application service node may provide one or more application services to one or more application running on one or more compute nodes. In distributed computing systems having many nodes however each application service node typically provides only one application service due to the abundance of nodes in the system. In the example of the application service node provides application service to the application the application service node provides application service to the application and the application service node provides application service to the application .

To provide application services to the application each application service node of has installed upon it an service server. The application service node includes service server the application service node includes service server and the application service node includes service server . Each service server is a software component that provides an application service to an application in response to a request sent by an application or in response to receiving an instruction from a system administrator. Each application service server may provide an application service to an application by transmitting the computer program instructions implementing the requested application service to the application and allowing the compute node on which the application is installed to execute the computer program instructions. Each application service server may also provide an application service by instructing the application service node of the server to execute the computer program instructions implementing the requested application service. The application may communicate with the application service servers using web services calling member methods of a CORBA object use of an MPI library or any other data communications implementation as will occur to those of skill in the art.

As mentioned above the compute node includes two or more application services for a particular service type. For example the compute node may include two different implementations of a single precision matrix multiplication service for use by the application depending on the configuration of the exemplary system . In another example the compute node may include two different implementations of a security data decryption service depending on the availability of free computer memory. Having more than one application service for a particular service type advantageously provides the flexibility to optimize the application s service algorithms according to the hardware and software environment in which the application runs.

The service policy of is a table that maps one of the application services to a type of application service used by the application . The application uses the service policy to identify which application service to use for a particular service type. Regardless of whether the application services reside locally on the compute node or are distributed on other nodes such as application service nodes the service policy specifies one of the application services of a particular service type for use in the application . When the application service specified in the service policy is distributed on one of the application service nodes the service policy also specifies an application service node that is to provide the specified application service. Using the service policy the application provides policy based application services to an application running on a computing system according to embodiments of the present invention by accessing the application service specified in the policy .

Often the service policy will not specify an application service for one of the service types used in the application or the application will be unable to access the application service specified in the policy . In the example of the compute node therefore includes a default application service . The default application service is an application service of a particular service type that the application may use when the service policy does not specify an application service for the particular service type or the application is unable to access the application service specified in the policy . Consider for example that the service policy does not specify a matrix multiplication service for use by the application that the application does not implement a matrix multiplication service itself and that the default application service implements a matrix multiplication service. Because the application does not implement a matrix multiplication service and no matrix multiplication service is specified in the service policy the application in such an example will use the default application service implementing the matrix multiplication service. The application may access the default application service using inter process communication or the default application service API .

In the exemplary of each node includes a performance measurement module. The compute node of includes a performance measurement module . The application service node of includes a performance measurement module . The application service node of includes a performance measurement module . The application service node of includes a performance measurement module .

In the example of each performance measurement module is a software component for providing policy based application services to an application running on a computing system according to embodiments of the present invention. Each performance measurement module includes a set of computer program instructions for measuring performance of the computing system . In the example of more particularly the performance measurement module measures the performance of compute node and the software executing on compute node . The performance measurement module measures the performance of application service node and the software executing on the node . The performance measurement module measures the performance of application service node and the software executing on the node . The performance measurement module measures the performance of application service node and the software executing on the node .

Examples of the performance measured may include the percentage of processor utilization used by each process being executed by the processors in the computing system the percentage of available processing time for each processor in the computing system the number of page faults that occur on each processor in the computing system the amount of available memory accessible by each processor in the computing system the amount of memory occupied by the software components executing on each processor and so on. Such performance measurements may be used to adjust the service policy to optimize the configuration of the computing system .

In the example of the distributed computing system is configured by a system administrator through an administration node . The administration node of is a computing device that administers the configuration of the computing system of . The administration node may be implemented as one of the nodes installed in the rack a workstation network connected to the nodes or any other computer as will occur to those of skill in the art.

In the exemplary system of the administration module has installed upon it an administration module . The administration module is a software component through which a system administrator configures the exemplary computer system . The administration module allows a system administrator to configure the exemplary computer system by providing a user interface for the system administrator to interact with the administration module and by configuring the application and the application provided by the system administrator on one or more compute nodes such as for example the compute node . The administration module includes a set of computer program instructions for providing policy based application services to an application running on a computing system according to embodiments of the present invention by establishing on the compute node the service policy specifying one of the application services of the service type for use by the application.

The administration module of also includes a set of computer program instructions for providing policy based application services to an application running on a computing system by establishing a performance ruleset . In the example of the performance ruleset is a table that specifies rules for analyzing the performance of the computing system . To obtain the performance of the computing system the administrative module may poll each node for their measured performance or each node may periodically transmit their measured performance to the administration mode .

The administration module of also includes a set of computer program instructions for providing policy based application services to an application running on a computing system by adjusting the service policy in dependence upon the performance ruleset and the measured performance adjusting the operating parameters of the application services in dependence upon the performance ruleset and the measured performance and administering the application service nodes in dependence upon the performance ruleset and the measured performance. After adjusting the operating parameters of the application services distributed on the nodes the administration node may transmit a message to the application indicating that the application needs to obtain the latest version of the application service distributed on the nodes . The administrative module may communicate with the nodes through a data communication connection implemented using shared memory space a CORBA framework a JTAG network web services a MPI library or any other data communication implementation as will occur to those of skill in the art.

 JTAG is the usual name used for the IEEE 1149.1 standard entitled Standard Test Access Port and Boundary Scan Architecture for test access ports used for testing printed circuit boards using boundary scan. JTAG is so widely adapted that at this time boundary scan is more or less synonymous with JTAG. JTAG is used not only for printed circuit boards but also for conducting boundary scans of integrated circuits and is also useful as a mechanism for debugging embedded systems providing a convenient back door into the system. Using a JTAG network the administration module may efficiently configure processor registers and memory in the nodes for use in providing policy based application services to an application running on a computing system according to embodiments of the present invention.

The arrangement of servers and other devices making up the exemplary system illustrated in are for explanation not for limitation. Data processing systems useful according to various embodiments of the present invention may include additional servers routers other devices and peer to peer architectures not shown in as will occur to those of skill in the art. Networks in such data processing systems may support many data communications protocols including for example Transmission Control Protocol TCP Internet Protocol IP HyperText Transfer Protocol HTTP Wireless Access Protocol WAP Handheld Device Transport Protocol HDTP the MPI protocol and others as will occur to those of skill in the art. Various embodiments of the present invention may be implemented on a variety of hardware platforms in addition to those illustrated in . For example the computing system useful for providing policy based application services to an application according to embodiments of the present invention may also be implemented as a parallel computer such as for example IBM s BlueGene L.

Providing policy based application system services to an application running on a computing system in accordance with the present invention is generally implemented with computers that is with automated computing machinery. In the system of for example all the nodes are implemented to some extent at least as computers. For further explanation therefore sets forth a block diagram of automated computing machinery comprising an exemplary compute node useful in providing policy based application services to an application running on a computing system according to embodiments of the present invention. The compute node of includes at least one computer processor or CPU as well as random access memory RAM which is connected through a high speed memory bus and bus adapter to processor and to other components of the compute node.

Stored in RAM are an application a service policy application services a default application service a performance measurement module and an operating system . As mentioned above the application is a set of computer program instructions implementing user level data processing using the application services specified in the service policy . The service policy of is a table that maps one of the application services to a type of application service used by the application . The performance measurement module the application services and the default application service illustrated in are software components that is computer program instructions that operate as described above with reference to regarding the compute node. Operating systems that may be improved for providing policy based application services to an application running on a computing system in accordance with the present invention may include UNIX Linux Microsoft NT IBM s AIX IBM s i5 OS and others as will occur to those of skill in the art. The application the service policy the application services the default application service the performance measurement module and the operating system in the example of are shown in RAM but many components of such software typically are stored in non volatile memory also for example on a disk drive .

The exemplary compute node of includes bus adapter a computer hardware component that contains drive electronics for high speed buses the front side bus and the memory bus as well as drive electronics for the slower expansion bus . Examples of bus adapters useful in compute nodes useful according to embodiments of the present invention include the Intel Northbridge the Intel Memory Controller Hub the Intel Southbridge and the Intel I O Controller Hub. Examples of expansion buses useful in compute nodes useful according to embodiments of the present invention may include Peripheral Component Interconnect PCI buses and PCI Express PCIe buses.

Although not depicted in the exemplary compute node of the bus adapter may also include drive electronics for a video bus that supports data communication between a video adapter and the other components of the compute node . does not depict such video components because a compute node is typically implemented as a blade server installed in a server chassis or a node in a parallel computer with no dedicated video support. Readers will note however that a compute node useful in embodiments of the present invention may include such video components.

The exemplary compute node of also includes disk drive adapter coupled through expansion bus and bus adapter to processor and other components of the exemplary compute node . Disk drive adapter connects non volatile data storage to the exemplary compute node in the form of disk drive . Disk drive adapters useful in compute nodes include Integrated Drive Electronics IDE adapters Small Computer System Interface SCSI adapters and others as will occur to those of skill in the art. In addition non volatile computer memory may be implemented for a compute node as an optical disk drive electrically erasable programmable read only memory so called EEPROM or Flash memory RAM drives and so on as will occur to those of skill in the art.

The exemplary compute node of includes one or more input output I O adapters . I O adapters in compute node implement user oriented input output through for example software drivers and computer hardware for controlling output to display devices such as computer display screens as well as user input from user input devices such as keyboards and mice. Although not depicted in the example of compute nodes in other embodiments of the present invention may include a video adapter which is an example of an I O adapter specially designed for graphic output to a display device such as a display screen or computer monitor. A video adapter is typically connected to processor through a high speed video bus bus adapter and the front side bus which is also a high speed bus.

The exemplary compute node of includes a communications adapter for data communications with other computers and for data communications with a data communications network . Such data communications may be carried out serially through RS 232 connections through external buses such as a Universal Serial Bus USB through data communications networks such as IP data communications networks and in other ways as will occur to those of skill in the art. Communications adapters implement the hardware level of data communications through which one computer sends data communications to another computer directly or through a data communications network. Examples of communications adapters useful for providing policy based application services to an application running on a computing system according to embodiments of the present invention include modems for wired dial up communications IEEE 802.3 Ethernet adapters for wired data communications network communications and IEEE 802.11b adapters for wireless data communications network communications.

Although is discussed with reference to an exemplary compute node readers will note that automated computing machinery comprising exemplary application service nodes and exemplary administration nodes useful in providing policy based application services to an application running on a computing system according to embodiments of the present invention are similar to the exemplary compute node of . That is such exemplary application service nodes and exemplary administration nodes include one or more processors bus adapters buses RAM communications adapters I O adapters disk drive adapters and other components similar to the exemplary compute node of as will occur to those of skill in the art.

For further explanation sets forth a flow chart illustrating an exemplary method for providing policy based application services to an application running on a computing system according to embodiments of the present invention. The computing system includes at least one compute node . The compute node includes an application and a plurality of application services of a service type.

The method of includes establishing on the compute node a service policy specifying one of the application services of the service type for use by the application. The service policy of is a table that maps one of the application services to a type of application service used by the application . In the example of each record of the service policy identifies which application service the application uses for a particular service type. To identify which application service the application uses for a particular service type each record of the service policy includes an application service identifier and a service type . Examples types of application services that may be specified in the service policy may include mathematical computation services security services communications services and any other types of services useful to an application as will occur to those of skill in the art. For an example of a service policy useful in providing policy based application services to an application running on a computing system according to embodiments of the present invention consider the following table 

In the method of establishing on the compute node a service policy specifying one of the application services of the service type for use by the application may be carried out by receiving in an administration module from a system administrator a mapping between the application services and the service types and creating by the administration module the service policy on the compute node according to the mappings. The administration module is a software component that the system administration may use to configure the computing system that includes the compute node. The particular compute node on which the administration module creates the service policy is typically specified by the system administrator through a user interface provided by the administration module. The administration module may be installed directly on the compute node or any other computer network connected to the compute node. The administration module may create the service policy on the compute node through a data communication connection implemented using shared memory space a CORBA framework a JTAG network web services a MPI library or any other data communication implementation as will occur to those of skill in the art.

The method of also includes establishing a performance ruleset . The performance ruleset is a table that specifies rules for analyzing the performance of the computing system. In the example of each record of the performance ruleset identifies an action to be performed when the performance of the computing system satisfies predetermined criteria. To identify an action to be performed when the performance of the computing system satisfies predetermined criteria each record of the performance ruleset includes a rule identifier criteria and an action . For an example of a performance ruleset useful in providing policy based application services to an application running on a computing system according to embodiments of the present invention consider the following table 

The exemplary rules 3 and 4 of the performance ruleset of Table 2 demonstrate exemplary rules that may be useful when one or more of the application services are distributed among one or more application service nodes. In exemplary rule 3 associating the value ASN1.ServerProcess 95 for the criteria with the value ASN1.Add Node for the action specifies allocating an additional application service node that provides the same application services as the application service node ASN1 when the process of the service server on the application service node ASN1 consumes on average more than ninety five percent of the processor utilization of the application service node ASN1 s processors. In exemplary rule 4 associating the value ASN1.ServerProcess

Establishing a performance ruleset according to the method of may be carried out by receiving in an administration module from a system administrator a set of actions and corresponding criteria that specify when the actions are to be performed based on the performance of the computing system and creating the performance ruleset according to the received actions and corresponding criteria. The administration module is a software component that the system administration may use to configure the computing system that includes the compute node. The particular compute node on which the administration module creates the performance ruleset is typically specified by the system administrator through a user interface provided by the administration module. The administration module may be installed directly on the compute node or any other computer network connected to the compute node. The administration module may create the performance ruleset on the compute node through a data communication connection implemented using shared memory space a CORBA framework a JTAG network web services a MPI library or any other data communication implementation as will occur to those of skill in the art.

The method of includes measuring performance of the computing system. The measured performance of represents the performance of the nodes and the software running on the nodes of the computing system. Examples of measured performance may include the percentage of processor utilization used by each process being executed by the processors in the computing system the percentage of idle time for each processor in the computing system the number of page faults that occur on each processor in the computing system the amount of available memory accessible by each processor in the computing system the amount of memory occupied by the software components executing on each processor and so on. The performance of the computing system may be measured by a performance measurement module that runs as a process on each node of the computing system. The performance measurement module may measure the performance of the computing system by measuring the performance of the compute node or by measuring performance of one or more application service nodes. The performance measurement module may measure the performance of the computing system according to the method of by taking a plurality of measurements for a predetermined performance metric for a node of the computing system over a period of time and averaging the measured values.

The method of also includes adjusting the service policy in dependence upon the performance ruleset and the measured performance . Adjusting the service policy in dependence upon the performance ruleset and the measured performance according to the method of may be carried out by the administration module mentioned above. The administration module may adjust the service policy according to the method of by comparing the measured performance with the criteria for each record in the performance ruleset . If the measured performance satisfies the criteria of one of the records then the administration module may execute the action associated with the criteria satisfied by the measured performance . The action associated with the criteria satisfied by the measured performance may identify computer program instructions for carrying out adjustments to the service policy . Such adjustments advantageously operate to reconfigure the application services used by the application an effort to optimize the performance of the computing system or adapt the computing system to a changing environment.

The method of also includes specifying by the application a service type for use. The application may specify a service type for use according to the method of by including an instruction that contains the service type in the computer program instructions implementing the application at a particular point along the flow of execution. For example at a particular point along the flow of execution for the application the computer program instructions implementing the application may contain machine code representing the following instruction 

In the exemplary instruction above the function Execute Service is a function that instructs the application to execute the application service specified in the service policy for the service type having a value of Single Prec Matrix Mult. Including such an exemplary instruction in the computer program instructions implementing the application specifies that the application use a single precision matrix multiplication type of service. Readers will note that the exemplary instruction above is for explanation and not for limitation. Other instructions as will occur to those of skill in the art may also be useful in providing policy based application services to an application running on a computing system according to embodiments of the present invention.

The method of includes retrieving by the application the specified application service from the service policy in dependence upon the specified service type . Retrieving by the application the specified application service from the service policy in dependence upon the specified service type according to the method of may be carried out by looking up in the service policy the application service identifier associated with the service type having the same value as the specified service type .

The method of Figure also includes accessing by the application the specified application service . Accessing by the application the specified application service according to the method of may be carried out by calling a function of the API for the specified application service . Calling a function of the API for the specified application service however is for explanation only. In another embodiment an administration module may modify according to the service policy entry and exit hooks in the application s code so that processor control is transferred from the application to the application services at the proper points in the application s code during the flow of execution. In such an example accessing the specified application service for a service type may be carried out simply by executing the computer program instructions implementing the application.

As mentioned above application services may be distributed among one or more application service nodes in a distributed computing system. When the application services are distributed among one or more application service nodes accessing by the application the specified application service may be carried out by retrieving from the application service node computer program instructions implementing the specified application service and executing by the compute node the computer program instructions implementing the specified application service. Accessing by the application the specified application service may also be carried out by requesting by the application that the application service node perform the specified application service and executing by the application service node computer program instructions implementing the specified application service.

In addition to adjusting the service policy in dependence upon the performance ruleset and the measured performance the operating parameters of an application service specified in a service policy for use by an application may also be adjusted in dependence upon the performance ruleset and the measured performance. Adjusting the operating parameters of an application service specified in a service policy may be advantageous when the performance of the current application service can be adjusted more efficiently than switching to a different application service of the same type. For further explanation therefore sets forth a flow chart illustrating a further exemplary method for providing policy based application services to an application running on a computing system according to embodiments of the present invention that includes adjusting the operating parameters of the specified application service in dependence upon the performance ruleset and the measured performance . In the example of the computing system includes at least one compute node . The compute node includes an application and a plurality of application services of a service type.

The method of is similar to the method of in that the method of includes establishing on the compute node a service policy specifying one of the application services of the service type for use by the application establishing a performance ruleset the performance ruleset specifying rules for analyzing the performance of the computing system measuring performance of the computing system adjusting the service policy in dependence upon the performance ruleset and the measured performance specifying by the application a service type for use and retrieving by the application the specified application service from the service policy in dependence upon the specified service type . The example of is also similar to the example of in that the service policy of includes an application service identifier and a service type . The example of is also similar to the example of in that the performance ruleset includes rule identifier criteria and an action .

The method of includes adjusting the operating parameters of the specified application service in dependence upon the performance ruleset and the measured performance . The operating parameters of represent values used by the computer program instructions implementing the specified application service to perform the specified application service . For example in a double precision matrix multiplication service the operating parameters may include a value that indicates the amount of cache memory available to the process implementing the service. Adjusting the operating parameters of the specified application service according to the method of may be carried out by the application or the administration module mentioned above. The administration module may adjust the operating parameters of the specified application service according to the method of by comparing the measured performance with the criteria for each record in the performance ruleset . If the measured performance satisfies the criteria of one of the records then the administration module may execute the action associated with the criteria satisfied by the measured performance . The action associated with the criteria satisfied by the measured performance may identify computer program instructions for carrying out adjustments to the operating parameters . Such adjustments advantageously operate to reconfigure the application services used by the application in an effort to optimize the performance of the computing system or adapt the computing system to a changing environment.

In addition to adjusting the service policy or the operating parameters of an application service specified in a service policy in dependence upon a performance ruleset and measured performance of the computing system the application service nodes of a computing system may administered in dependence upon the performance ruleset and the measured performance. For further explanation therefore sets forth a flow chart illustrating a further exemplary method for providing policy based application services to an application running on a computing system according to embodiments of the present invention that includes administering the application service nodes in dependence upon the performance ruleset and the measured performance . The computing system is implemented as a distributed computing system that includes at least one compute node and one or more application service nodes. The compute node includes an application and a plurality of application services of a service type. One or more of the application services are distributed among the application service nodes.

The method of is similar to the method of in that the method of includes establishing on the compute node a service policy specifying one of the application services of the service type for use by the application establishing a performance ruleset the performance ruleset specifying rules for analyzing the performance of the computing system measuring performance of the computing system and adjusting the service policy in dependence upon the performance ruleset and the measured performance . The example of is also similar to the example of in that the service policy includes an application service identifier and a service type . In the example of however the service policy also specifies an application service node that is to provide each specified application service by including an application service node identifier in each record. The example of is also similar to the example of in that the performance ruleset includes rule identifier criteria and an action .

The method of also includes administering the application service nodes in dependence upon the performance ruleset and the measured performance . Administering the application service nodes in dependence upon the performance ruleset and the measured performance according to the method of includes determining whether one of the application service nodes is over utilized in dependence upon the performance ruleset and the measured performance . An over utilized application service node is a node whose available processor utilization for providing application services is less than a predetermined portion of the total processor utilization of the node s processors. The predetermined portion of the total processor utilization of the node s processors used to identify an over utilized application service node may be specified in the criteria of the performance ruleset. Determining whether one of the application service nodes is over utilized according to the method of therefore may be carried out by retrieving the measured performance from one of the application service nodes and comparing the measured performance of the node with the criteria for each record in the performance ruleset specifying an over utilized node condition. If the measured performance of a node satisfies the criteria of one of the records then the administration module determines that the node whose measured performance satisfies the criteria is an over utilized application service node. If the measured performance of a node does not satisfy the criteria of one of the records then the administration module retrieves the measured performance from the node at a later time and again determines at the later time whether the node is over utilized.

Administering the application service nodes in dependence upon the performance ruleset and the measured performance according to the method of also includes allocating an additional application service node to provide the application services provided by the over utilized application service node. Allocating an additional application service node to provide the application services provided by the over utilized application service node according to the method of may be carried out by executing by the administration module the action associated with the criteria used to determine that the node was over utilized. The action associated with the criteria used to determine that the node was over utilized may identify computer program instructions for carrying out the allocation of an additional application service node. Such an allocation may include configuring an available node with application services and a service server that enable the node to provide application services to a compute node. Such an allocation may also include updating the service policy established on one or more compute nodes to enable the applications of these compute nodes to utilize the application services provided by the newly allocated application service node.

Instead of allocating an additional application service node to provide the application services provided by the over utilized application service node administering the application service nodes in dependence upon a performance ruleset and measured performance may also include reconfiguring an under utilized application service node. For further explanation therefore sets forth a flow chart illustrating a further exemplary method for providing policy based application services to an application running on a computing system according to embodiments of the present invention that includes reconfiguring an under utilized application service node. The computing system is implemented as a distributed computing system that includes at least one compute node and one or more application service nodes. The compute node includes an application and a plurality of application services of a service type. One or more of the application services are distributed among the application service nodes.

The method of is similar to the method of in that the method of includes establishing on the compute node a service policy specifying one of the application services of the service type for use by the application establishing a performance ruleset the performance ruleset specifying rules for analyzing the performance of the computing system measuring performance of the computing system and adjusting the service policy in dependence upon the performance ruleset and the measured performance . The example of is also similar to the example of in that the service policy includes an application service identifier and a service type . In the example of however the service policy also specifies an application service node that is to provide each specified application service by including an application service node identifier in each record. The example of is also similar to the example of in that the performance ruleset includes rule identifier criteria and an action .

The method of also includes administering the application service nodes in dependence upon the performance ruleset and the measured performance . Administering the application service nodes in dependence upon the performance ruleset and the measured performance according to the method of includes determining whether one of the application service nodes is under utilized in dependence upon the performance ruleset and the measured performance. An under utilized application service node is a node whose available processor utilization for providing application services is more than a predetermined portion of the total processor utilization of the node s processors. The predetermined portion of the total processor utilization of the node s processors used to identify an under utilized application service node may be specified in the criteria of the performance ruleset. Determining whether one of the application service nodes is under utilized according to the method of therefore may be carried out by retrieving the measured performance from one of the application service nodes and comparing the measured performance of the node with the criteria for each record in the performance ruleset specifying an under utilized node condition. If the measured performance of a node satisfies the criteria of one of the records then the administration module determines that the node whose measured performance satisfies the criteria is an under utilized application service node. If the measured performance of a node does not satisfy the criteria of one of the records then the administration module retrieves the measured performance from the node at a later time and again determines at the later time whether the node is under utilized.

Administering the application service nodes in dependence upon the performance ruleset and the measured performance according to the method of also includes reconfiguring the under utilized application service node. In the method of reconfiguring the under utilized application service node may be carried out by executing by the administration module the action associated with the criteria used to determine that the node was under utilized. The action associated with the criteria used to determine that the node was under utilized may identify computer program instructions for carrying out the reconfiguration of the under utilized application service node. Such a reconfiguration may include reconfiguring the under utilized node to provide additional application services to utilize the currently available processing bandwidth. Such a reconfiguration may also include reconfiguring the under utilized node to provide the same application services to a larger number of compute nodes to utilize the currently available processing bandwidth. Such a reconfiguration may also include de allocating the under utilized application service node if more than one application service node provides the same application services as the under utilized application service node. Such a reconfiguration may further include updating the service policy established on one or more compute nodes to enable the applications of these compute nodes to utilize the application services in a manner that reflects the reconfiguration of the under utilized application service node.

In view of the explanations set forth above readers will recognize that the benefits of providing policy based application services to an application running on a computing system according to embodiments of the present invention include 

Exemplary embodiments of the present invention are described largely in the context of a fully functional computing system for providing policy based application services to an application running on a computing system. Readers of skill in the art will recognize however that the present invention also may be embodied in a computer program product disposed on signal bearing media for use with any suitable data processing system. Such signal bearing media may be transmission media or recordable media for machine readable information including magnetic media optical media or other suitable media. Examples of recordable media include magnetic disks in hard drives or diskettes compact disks for optical drives magnetic tape and others as will occur to those of skill in the art. Examples of transmission media include telephone networks for voice communications and digital data communications networks such as for example Ethernets and networks that communicate with the Internet Protocol and the World Wide Web as well as wireless transmission media such as for example networks implemented according to the IEEE 802.11 family of specifications. Persons skilled in the art will immediately recognize that any computer system having suitable programming means will be capable of executing the steps of the method of the invention as embodied in a program product. Persons skilled in the art will recognize immediately that although some of the exemplary embodiments described in this specification are oriented to software installed and executing on computer hardware nevertheless alternative embodiments implemented as firmware or as hardware are well within the scope of the present invention.

It will be understood from the foregoing description that modifications and changes may be made in various embodiments of the present invention without departing from its true spirit. The descriptions in this specification are for purposes of illustration only and are not to be construed in a limiting sense. The scope of the present invention is limited only by the language of the following claims.

