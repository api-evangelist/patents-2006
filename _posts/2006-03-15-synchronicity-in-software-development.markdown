---

title: Synchronicity in software development
abstract: Systems and methods that facilitate software development projects via employing a synchronization component, which enables synchronization among a state for a specification, a product and an associated documentation. A project manager responsible for preparing the specification can enter and/or store the definition of the specification in a specification database, in form of a Structured Query Language (SQL), for example. A differentiator component compares state of the specification with the product (e.g., build of SQL server) at desired intervals, and further identifies any discrepancies therebetween. As such, a centralized location is provided for comparison of the specification and the product, and for enabling synchronization among the specification, the product and the associated documentation.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07707549&OS=07707549&RS=07707549
owner: Microsoft Corporation
number: 07707549
owner_city: Redmond
owner_country: US
publication_date: 20060315
---
Rapid development of information and communication systems in recent years has increased demand for quality improvement of software products and for efficiency in software development. As more efforts are directed to meeting such demands employing software design aid devices is increasing. In general advantages for use of software design aiding devices include facilitating standardization through an exclusion of individuality by providing standard formats template figure components and the like.

Moreover effective management is an important objective for project managers wherein choosing an appropriate development lifecycle process for the software project becomes crucial. For example all other activities in software development can be derived from such lifecycle process. At the same time continuously changing design or specification requirements of the development cycle poses difficulties and major problems. A great number of software applications fail to meet user requirements and hence result in unacceptable maintenance costs due to such changes.

Typically for modern software development projects gathering and agreeing on design requirements is fundamental to a successful project. Such does not necessarily imply that all requirements need to be fixed before any architecture design and coding is done yet it is important for the development team to understand what needs to be built. Accordingly clear communications between various team members become essential for the development team to realize the desired outcome and proper basis for the specifications and requirements.

The cyclical interaction among team members for developing a computer software product can become a complex process that requires significant expenditure of time on part of various contributing teams. For example software products are increasingly being developed by a plurality of teams working concurrently and these teams are often distributed between different locations and organizations. Such teams can include project management software development team developer and documentation team that work concurrently on the design of a product. In practice the division of tasks and activities is carried out by generating documents items that need to be timely shared among the various team members at various stages of software development.

Such items can include a specification a product and associated documentation and help files that accompany the product. Nonetheless maintaining synchronization among such entities has proven to be a demanding and complex task. For example due to cyclical nature of software projects maintaining synchronization among the project management team the development team and the documentation team can typically become a futile exercise. Often the specification and the documentation are updated to synchronize with the product only after the product has been developed and not during product development.

In particular during development it is difficult to identify what is the proper version of the specification and or product requirement that should drive the design process. Accordingly the teams involved can squander resources to determine a proper documentation state for a project and or product. Without a proper and unique source for product documentation identification confusion and misunderstandings occur that can lead to lost productivity and poor customer experience.

The following presents a simplified summary in order to provide a basic understanding of some aspects of the claimed subject matter. This summary is not an extensive overview. It is not intended to identify key critical elements or to delineate the scope of the claimed subject matter. Its sole purpose is to present some concepts in a simplified form as a prelude to the more detailed description that is presented later.

The subject innovation facilitates software development projects via employing a synchronization component that enables synchronization among state of a specification a product and a documentation that are associated with software development. Such synchronization component further includes a differentiator component that can compare state of the specification with the product e.g. build of a Structured Query Language server at desired time intervals and further identify any discrepancies therebetween e.g. by employing the specification as the standard . Hence each team member can update a respective file and or activity that requires modifications due to the identified discrepancies. In a related aspect a specification database is provided wherein a project manager responsible for preparing the specification can enter and or store the definition of the specification in the specification database in form of a Structured Query Language SQL for example. The specification database can further store definitions of Dynamic Management Views DMVs wherein such views expose a state e.g. a current state of the SQL server and contain metadata that is typically not persisted on disk and stored in memory only. For example the DMV s can present a view of session information including the session default execution environment. A report and or log record can also contain a description of files for state of the database before and after modification of the specification by the project manager and further include list of members for each team that are affected thereby. As such a centralized location is created for maintaining updates of the specification and the product and for enabling synchronization among the specification the product and the associated documentation.

According to a further aspect of the subject innovation a specification data entry form component can assist populating the specification database by the project manager. Moreover the program manager can designate various views e.g. rows and columns that define the specification and employ such views for populating the specification database. Furthermore an XML eXtensible Markup Language generator component can generate relevant schema files from the specification database. Such schema files are uploaded to a documentation repository database that is accessible to the documentation team e.g. to develop Help files and the like for customers. 

In accordance with a further aspect of the subject innovation the differentiator component can operate upon the specification database at predetermined intervals or as required by the project manager developer or the documentation team. A report can then be generated that identifies changes performed on the specification as compared to the product and sent to various members of the design development and documentation team. In a related aspect the subject innovation can employ artificial intelligence AI components to facilitate synchronization among the specification the product and the specification.

According to a methodology of the subject innovation a specification database can initially receive a set of changes to the specification from a project manager. Subsequently the specification database avails itself to the differentiator component for a comparison of the specification to the product while it is being developed by the developer. Next a report can be generated and submitted to members of the project management development and the documentation team. Based on such report various team members can then update the respective files e.g. the developer produce code to satisfy modifications by the project manager to the specification and the documentation team revise the help files for customer use. 

To the accomplishment of the foregoing and related ends certain illustrative aspects of the claimed subject matter are described herein in connection with the following description and the annexed drawings. These aspects are indicative of various ways in which the subject matter may be practiced all of which are intended to be within the scope of the claimed subject matter. Other advantages and novel features may become apparent from the following detailed description when considered in conjunction with the drawings.

The various aspects of the subject innovation are now described with reference to the annexed drawings wherein like numerals refer to like or corresponding elements throughout. It should be understood however that the drawings and detailed description relating thereto are not intended to limit the claimed subject matter to the particular form disclosed. Rather the intention is to cover all modifications equivalents and alternatives falling within the spirit and scope of the claimed subject matter.

As used herein the terms component system and the like are intended to refer to a computer related entity either hardware a combination of hardware and software software or software in execution. For example a component may be but is not limited to being a process running on a processor a processor an object an executable a thread of execution a program and or a computer. By way of illustration both an application running on computer and the computer can be a component. One or more components may reside within a process and or thread of execution and a component may be localized on one computer and or distributed between two or more computers. Also the word exemplary is used herein to mean serving as an example instance or illustration. Any aspect or design described herein as exemplary is not necessarily to be construed as preferred or advantageous over other aspects or designs.

Furthermore the disclosed subject matter may be implemented as a system method apparatus or article of manufacture using standard programming and or engineering techniques to produce software firmware hardware or any combination thereof to control a computer or processor based device to implement aspects detailed herein. The term computer program as used herein is intended to encompass a computer program accessible from any computer readable device carrier or media. For example computer readable media can include but are not limited to magnetic storage devices e.g. hard disk floppy disk magnetic strips . . . optical disks e.g. compact disk CD digital versatile disk DVD . . . smart cards and flash memory devices e.g. card stick . Additionally it should be appreciated that a carrier wave can be employed to carry computer readable electronic data such as those used in transmitting and receiving electronic mail or in accessing a network such as the Internet or a local area network LAN . Of course those skilled in the art will recognize many modifications can be made to this configuration without departing from the scope or spirit of the claimed subject matter.

Turning initially to a software development environment is illustrated wherein a synchronization component can facilitate synchronization among the parties involved namely the project manager the developer and the documentation team . Typically the project manager supplies the specification within the software development cycle. In general the developer is responsible for ensuring that suitable code is implemented to produce requirements of the specification. Likewise the documentation team supplies the custom help files associated with the product to the customers. Such documentation can include books on line BOL interactive help documents and the like.

As illustrated in the synchronization component can enable synchronization among a state for a specification a product and an associated documentation. For example a state of specification can be employed as an initial standard for the synchronizing component and for comparing the product thereto as will be described in detail infra. Upon such synchronization supplied among the various participants a notification can be provided to members in the project management development and the documentation team for example.

In general relational database s store data in tables wherein each table in such database can be uniquely identified by its name for example. Furthermore each table can contain a multitude of columns and rows. Each column has a name and data type associated with it while rows are records of column information. Queries for such tables can be constructed in accordance to a standard query language e.g. structured query language SQL to access content of a table in the database. For example in order for queries to be executed against SQL tables information representing the tables typically exist in a form such that a compiler can reference the information at compile time. Such relational query expression select can include support for projection filtering sorting grouping and joining operations.

The select statement can be employed to query against SQL specific types in the specification database . For example such types can represent the SQL database schema wherein for each table or view declared in a database a structural type can exists that describes column metadata. Each of these types is known as a tuple type or row. In general tuple types are information utilized to describe a single row of data from a table with a matching schema. Moreover a linkage between a plurality of tables can be defined via SQL data definition statements DDL in accordance with implementations of a relational item store. The specification data base can itself comprise a plurality of other distributed storage medium units and configurations.

As illustrated in the specification database is operatively connected to and accessible by a differentiator component which can compare state of the specification with the product at any instance to identify any discrepancies therebetween e.g. by employing the specification as the standard . In a related aspect the differentiator component can initially access content of the specification database having an object hierarchy for example.

The object and its properties can be further broken down into segments that are stored into different data records and other distributed database configurations not shown . Each of the data records can store the same number of bytes with logical elements stored in multiple data records. Accordingly there can be different record types. For example there can exist records that contain object information object records records that contain property attributes property records records that contain information related to the association of partitions and replicas partition records and the like. Also objects can be stored as a blob or raw piece of data for faster retrieval and storage. The differentiator component can compare contents of various records for the specification database with that of the product e.g. SQL server product built and determine a difference of content therebetween. Updated information related to modifications performed on the specification database can then be transmitted to other team members e.g. members of the developer team that are affected by such modifications . Accordingly a consistency of transaction can be maintained after modifications to the specification and the project manager the developer and the documentation team do not observe inconsistencies in their view of the final product requirements. Thus each party can update and synchronize associated tasks and files according to the modified state of the specification database. In addition a customized view of the specification database can be provided to the developer and documentation team . Such view can be customized based on version computer configuration user s preference and or other suitable information.

It is to be appreciated that the differentiator component can run and operate upon the specification database at predetermined intervals or as required by the project manager developer or the documentation team. A report can then be generated that identifies changes performed on the specification as compared to the product and sent to various members of the design development and documentation team. illustrates a notification component that can supply a visual and or audible notification of members of the software development upon modifications to the specification as stored in the specification database . The notification component can send a message e.g. e mail fax voice message pager and the like to members of the development and documentation team to notify such members of a change to the specification as identified by the differentiator component . Accordingly a centralized location is provided for notification and comparison of the specification and the product and for enabling synchronization among the specification the product and the associated documentation.

In a related aspect artificial intelligence AI components can be employed to facilitate synchronization among the specification the product and the specification. As used herein the term inference refers generally to the process of reasoning about or inferring states of the system environment and or user from a set of observations as captured via events and or data. Inference can be employed to identify a specific context or action or can generate a probability distribution over states for example. The inference can be probabilistic that is the computation of a probability distribution over states of interest based on a consideration of data and events. Inference can also refer to techniques employed for composing higher level events from a set of events and or data. Such inference results in the construction of new events or actions from a set of observed events and or stored event data whether or not the events are correlated in close temporal proximity and whether the events and data come from one or several event and data sources.

A support vector machine SVM is an example of a classifier that can be employed. The SVM operates by finding a hypersurface in the space of possible inputs which hypersurface attempts to split the triggering criteria from the non triggering events. Intuitively this makes the classification correct for testing data that is near but not identical to training data. Other directed and undirected model classification approaches include e.g. na ve Bayes Bayesian networks decision trees neural networks fuzzy logic models and probabilistic classification models providing different patterns of independence can be employed. Classification as used herein also is inclusive of statistical regression that is utilized to develop models of priority.

As will be readily appreciated from the subject specification the subject innovation can employ classifiers that are explicitly trained e.g. via a generic training data as well as implicitly trained e.g. via observing user behavior receiving extrinsic information . For example SVM s are configured via a learning or training phase within a classifier constructor and feature selection module. Thus the classifier s can be used to automatically learn and perform a number of functions including but not limited to determining according to a predetermined criteria when to update or refine the previously inferred schema tighten the criteria on the inferring algorithm based upon the kind of data being processed e.g. financial versus non financial personal versus non personal . . . and at what time of day to implement tighter criteria controls e.g. in the evening when system performance would be less impacted .

A documentation repository database can act as a repository for all the documentation files to store converted XML and WordML files. As such raw data can be transferred from the specification database to the documentation repository database . Based on modifications performed earlier on the specification database a writer can then check a file associated with such modification and respectively modify contents for code of the product. Modifications to the file can then be uploaded to the documentation repository database .

Moreover an editor can subsequently access such modified file in the documentation repository database for editing and checking. A build process can take over and extract XML files to create books on line . In addition a report file can also be generated to include a log record that contains a description of the files for the specification database and the documentation file database before and after modification of the specification by the project manager and or product or codes by the developer. Moreover list of members of each team that are affected by the modifications can be included in the report. As such a centralized location is provided for comparison of the specification and the product and for enabling synchronization among the specification the product and the associated documentation.

In order to provide a context for the various aspects of the disclosed subject matter as well as the following discussion are intended to provide a brief general description of a suitable environment in which the various aspects of the disclosed subject matter may be implemented. While the subject matter has been described above in the general context of computer executable instructions of a computer program that runs on a computer and or computers those skilled in the art will recognize that the innovation also may be implemented in combination with other program modules. Generally program modules include routines programs components data structures etc. that perform particular tasks and or implement particular abstract data types. Moreover those skilled in the art will appreciate that the innovative methods can be practiced with other computer system configurations including single processor or multiprocessor computer systems mini computing devices mainframe computers as well as personal computers hand held computing devices e.g. personal digital assistant PDA phone watch . . . microprocessor based or programmable consumer or industrial electronics and the like. The illustrated aspects may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. However some if not all aspects of the innovation can be practiced on stand alone computers. In a distributed computing environment program modules may be located in both local and remote memory storage devices.

With reference to an exemplary environment for implementing various aspects of the subject innovation is described that includes a computer . The computer includes a processing unit a system memory and a system bus . The system bus couples system components including but not limited to the system memory to the processing unit . The processing unit can be any of various available processors. Dual microprocessors and other multiprocessor architectures also can be employed as the processing unit .

The system bus can be any of several types of bus structure s including the memory bus or memory controller a peripheral bus or external bus and or a local bus using any variety of available bus architectures including but not limited to 11 bit bus Industrial Standard Architecture ISA Micro Channel Architecture MSA Extended ISA EISA Intelligent Drive Electronics IDE VESA Local Bus VLB Peripheral Component Interconnect PCI Universal Serial Bus USB Advanced Graphics Port AGP Personal Computer Memory Card International Association bus PCMCIA and Small Computer Systems Interface SCSI .

The system memory includes volatile memory and nonvolatile memory . The basic input output system BIOS containing the basic routines to transfer information between elements within the computer such as during start up is stored in nonvolatile memory . By way of illustration and not limitation nonvolatile memory can include read only memory ROM programmable ROM PROM electrically programmable ROM EPROM electrically erasable ROM EEPROM or flash memory. Volatile memory includes random access memory RAM which acts as external cache memory. By way of illustration and not limitation RAM is available in many forms such as synchronous RAM SRAM dynamic RAM DRAM synchronous DRAM SDRAM double data rate SDRAM DDR SDRAM enhanced SDRAM ESDRAM Synchlink DRAM SLDRAM and direct Rambus RAM DRRAM .

Computer also includes removable non removable volatile non volatile computer storage media. illustrates for example a disk storage . Disk storage includes but is not limited to devices like a magnetic disk drive floppy disk drive tape drive Jaz drive Zip drive LS 60 drive flash memory card or memory stick. In addition disk storage can include storage media separately or in combination with other storage media including but not limited to an optical disk drive such as a compact disk ROM device CD ROM CD recordable drive CD R Drive CD rewritable drive CD RW Drive or a digital versatile disk ROM drive DVD ROM . To facilitate connection of the disk storage devices to the system bus a removable or non removable interface is typically used such as interface .

It is to be appreciated that describes software that acts as an intermediary between users and the basic computer resources described in suitable operating environment . Such software includes an operating system . Operating system which can be stored on disk storage acts to control and allocate resources of the computer system . System applications take advantage of the management of resources by operating system through program modules and program data stored either in system memory or on disk storage . It is to be appreciated that various components described herein can be implemented with various operating systems or combinations of operating systems.

A user enters commands or information into the computer through input device s . Input devices include but are not limited to a pointing device such as a mouse trackball stylus touch pad keyboard microphone joystick game pad satellite dish scanner TV tuner card digital camera digital video camera web camera and the like. These and other input devices connect to the processing unit through the system bus via interface port s . Interface port s include for example a serial port a parallel port a game port and a universal serial bus USB . Output device s use some of the same type of ports as input device s . Thus for example a USB port may be used to provide input to computer and to output information from computer to an output device . Output adapter is provided to illustrate that there are some output devices like monitors speakers and printers among other output devices that require special adapters. The output adapters include by way of illustration and not limitation video and sound cards that provide a means of connection between the output device and the system bus . It should be noted that other devices and or systems of devices provide both input and output capabilities such as remote computer s .

Computer can operate in a networked environment using logical connections to one or more remote computers such as remote computer s . The remote computer s can be a personal computer a server a router a network PC a workstation a microprocessor based appliance a peer device or other common network node and the like and typically includes many or all of the elements described relative to computer . For purposes of brevity only a memory storage device is illustrated with remote computer s . Remote computer s is logically connected to computer through a network interface and then physically connected via communication connection . Network interface encompasses communication networks such as local area networks LAN and wide area networks WAN . LAN technologies include Fiber Distributed Data Interface FDDI Copper Distributed Data Interface CDDI Ethernet IEEE 802.3 Token Ring IEEE 802.5 and the like. WAN technologies include but are not limited to point to point links circuit switching networks like Integrated Services Digital Networks ISDN and variations thereon packet switching networks and Digital Subscriber Lines DSL .

Communication connection s refers to the hardware software employed to connect the network interface to the bus . While communication connection is shown for illustrative clarity inside computer it can also be external to computer . The hardware software necessary for connection to the network interface includes for exemplary purposes only internal and external technologies such as modems including regular telephone grade modems cable modems and DSL modems ISDN adapters and Ethernet cards.

What has been described above includes various exemplary aspects. It is of course not possible to describe every conceivable combination of components or methodologies for purposes of describing these aspects but one of ordinary skill in the art may recognize that many further combinations and permutations are possible. Accordingly the aspects described herein are intended to embrace all such alterations modifications and variations that fall within the spirit and scope of the appended claims.

Furthermore to the extent that the term includes is used in either the detailed description or the claims such term is intended to be inclusive in a manner similar to the term comprising as comprising is interpreted when employed as a transitional word in a claim.

