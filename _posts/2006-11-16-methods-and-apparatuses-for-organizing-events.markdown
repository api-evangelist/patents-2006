---

title: Methods and apparatuses for organizing events
abstract: Techniques for organizing events via an electronic organizer are described herein. In one embodiment, an example of a process includes, but is not limited to, dynamically accessing a first event organization system over a network to retrieve a first event data representing one or more events scheduled by the first event organization system, and presenting the first event data in a second event organization system as if the first event data is scheduled by the second event organization system, wherein the first and second event organization systems are incompatible. Other methods and apparatuses are also described.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07774224&OS=07774224&RS=07774224
owner: SAP AG
number: 07774224
owner_city: Walldorf
owner_country: DE
publication_date: 20061116
---
A portion of the disclosure of this patent document contains material which is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure as it appears in the Patent and Trademark Office patent file or records but otherwise reserves all copyright rights whatsoever.

The present invention relates generally to data processing. More particularly this invention relates to event organization and processing.

In today s workplace timing is everything. Improving time management in an organization or in certain groups begins with coordinating the date time of all contacts in specified environments such as a company a department a team or business partners etc. which greatly improves collaboration efforts saves time and saves money by increasing the information efficiency within a group.

The most commonly used time management tools for the today s computer users are Microsoft Outlook IBM Lotus organizer and Google calendar etc. Those tools give users a structure or protocol for scheduling time creating tasks and contacts. Those calendar tools also provide a platform for group sharing and exchange of information. With these tools a user can establish multiple private e.g. mailbox and public e.g. group folders. Using these folders the user can create calendar appointments e.g. public or private create contacts and create personal tasks.

However many users have to copy their appointments or transfer calendar data from one calendar to another. Those main calendar tools do not have the technical capability to synchronize with each other automatically. There is no automatic centralized calendar which would enable users to view an entire organizational calendar or business partners calendar at a glance.

In addition with the progress of telecom and transportation techniques the world has grown to be more of a global community. As such business partners or customers may be distributed all over the world and located in different time zones. For example 10 00 AM is a good time for one person to hold a meeting but maybe its business partners or customers are out of their offices. Currently most of main calendar tools do not display the attendee s local time when scheduling a meeting or an appointment. One has to convert the time zones manually.

Further most calendar tools provide a reminder function which is designed to keep track and remind a user of an event before the event occurs. Usually a reminder will pop up a window on the attendee s desktop certain period of time before the event. Currently the reminder time is fixed when an organizer or sender drafts the event.

Techniques for organizing events via an electronic organizer are described herein. In one aspect of the invention an example of a process includes but is not limited to dynamically accessing a first event organization system over a network to retrieve a first event data representing one or more events scheduled by the first event organization system and presenting the first event data in a second event organization system as if the first event data is scheduled by the second event organization system wherein the first and second event organization systems are incompatible.

According to another aspect of the invention an example of a process includes but is not limited to displaying an event in a first timeline according to a first locality associated with a first user participating the event and displaying the event in a second timeline according to a second locality associated with a second user participating the event wherein the first locality is different than the second locality.

According to a further aspect of the invention an example of a process includes but is not limited to in response to an event held at a predetermined time of a predetermined location and scheduled via an electronic event organizer dynamically determining a real time extrinsic factor affecting traveling time from a location of the electronic event organizer to the predetermined location and configuring a reminder of the event via the electronic event organizer the reminder having an amount of time with respect to the predetermined time based on the determined real time extrinsic factor.

Other features of the present invention will be apparent from the accompanying drawings and from the detailed description which follows.

Techniques for organizing events via an electronic organizer are described herein. In the following description numerous details are set forth to provide a more thorough explanation of embodiments of the present invention. It will be apparent however to one skilled in the art that embodiments of the present invention may be practiced without these specific details. In other instances well known structures and devices are shown in block diagram form rather than in detail in order to avoid obscuring embodiments of the present invention.

Reference in the specification to one embodiment or an embodiment means that a particular feature structure or characteristic described in connection with the embodiment is included in at least one embodiment of the invention. The appearances of the phrase in one embodiment in various places in the specification do not necessarily all refer to the same embodiment.

Globalization is a trend in the current business environments. It provides more and more opportunities to organizations. Many organizations have their subsidiary organizations employees business partners and customers all over the world. At the same time globalization also addresses challenges to the tradition routines. It requires that we take a global point of view to manage our work and time. According to certain embodiments of the invention an electronic organizer such as electronic calendar may include at least one of the following functionalities 

For illustration purposes only an electronic calendar is used as an example of an electronic organizer or event organizer. However it is not so limited other types of electronic organizers may also be applied.

Usually a company uses the same calendar tool inside company all over the world and calendar data may be stored in a server. So calendar data synchronized inside company is generally not a problem also referred to as internal calendar data or event data unless users within the same company use different incompatible calendar tools. However not all the business partners and customers use the same calendar tool as an Enterprise so their calendar data formats are different and may be incompatible with each other. When one organizer creates an event whose attendees include external customers the organizer needs to know the free time of all attendees. But the data formats of external attendees are different so the organizer cannot utilize the calendar tools to directly read an external attendee s free time. In this case according to one embodiment a calendar tool has the capability to read business partners or customers calendar data and then transform the calendar data to a data format the organizer s calendar tool can recognize. The transformed calendar data can be presented within a user interface of an organizer as if the transformed calendar data is generated locally.

In one embodiment network may be a local area network LAN e.g. Intranet or a wide area network WAN e.g. Internet . Network may include multiple networks or sub networks. Platforms may communicate with each other in a client server configuration or alternatively platforms may communicate with each other in a peer to peer configuration. Platforms may communicate with each other via a variety of communication protocols such as for example TCP IP transport control protocol Internet protocol or Ethernet protocols. Although only two computing platforms are shown for the purposes of illustration more or fewer computing platforms may be applied.

Referring back to computing platform includes but is not limited to an electronic organizer user interface and a synchronizer . Electronic organizer may be a calendar application or tool available from a variety of vendors such as Outlook from Microsoft or electronic organizer from IBM Lotus or electronic organizer from Google. Electronic organizer may includes some or all of the necessary or well known components that are normally available in a standard electronic organizer. User interface may be used to present or display the data or information provided by the electronic organizer including for example scheduled events or meetings etc.

In addition according to one embodiment synchronizer is coupled to the organizer and or user interface to synchronize other event data or calendar data from a remote organizer of a remote platform such as organizer of platform over a network. Synchronizer may be implemented as a part of organizer . Alternatively synchronizer may be implemented as a stand alone application communicatively coupled to the organizer e.g. via an API or a plug in interface .

Further according to one embodiment computing platform may be communicatively coupled one or more databases or storages for storing data or information utilized by the organizer and or synchronizer . Database or storage may be implemented locally with respect to platform or alternatively remotely over a network. For example database or storage may be implemented as a part of an enterprise information system EIS of an organization or enterprise entity such as an ERP enterprise resource planning system.

Similarly computing platform includes but is not limited to an electronic organizer user interface and a synchronizer . Electronic organizer may be a calendar application or tool available from a variety of vendors as described above. Electronic organizer may includes some or all of the necessary or well known components that are normally available in a standard electronic organizer. User interface may be used to present or display the data or information provided by the electronic organizer including for example scheduled events or meetings etc.

In addition according to one embodiment synchronizer is coupled to the organizer and or user interface to synchronize other event data or calendar data from a remote organizer of a remote platform such as organizer of platform over a network. Synchronizer may be implemented as a part of organizer . Alternatively synchronizer may be implemented as a stand alone application communicatively coupled to the organizer e.g. via an API or a plug in interface .

Further according to one embodiment computing platform may be communicatively coupled one or more databases or storages for storing data or information utilized by the organizer and or synchronizer . Database or storage may be implemented locally with respect to platform or alternatively remotely over a network. For example database or storage may be implemented as a part of an enterprise information system EIS of an organization or enterprise entity such as an ERP enterprise resource planning system.

According to one embodiment typically when platforms belong to different organization or enterprise entities and their respective electronic organizers and are incompatible e.g. from different proprietary vendors the organizers and may dynamically access via synchronizers and respectively the data or information provided by a remote organizer. As a result the remote data and the local data of the organizers can be displayed appropriately in the respective user interfaces and .

For example when a user for organizing an event of platform that include a user of platform as an attendee the organizer may invoke synchronizer to dynamically communicate with platform to access the event data of organizer stored in the database or storage . After properly authenticating the user of platform platform returns the requested data which is in a format compatible with the electronic organizer to platform . Since the data received from platform is incompatible with the electronic organizer synchronizer is configured to perform real time transformation of the data into a format recognizable by the electronic organizer . As a result both local data stored in database or storage and remote data from database or storage may be displayed within the user interface as if they are generated locally similar to those as shown in .

Please note that platforms may be associated with the same organization or enterprise entity but using different types of electronic organizers. Further data stored in databases or storages and may be stored in a centralized server or servers coupled to the network . Further electronic organizers and or as well as synchronizers and or may be implemented in software hardware or a combination of both. Other configurations may exist.

Referring to at block a second electronic organizer e.g. second electronic calendar accesses via an API a first electronic organizer e.g. first electronic calendar over a network where the first and second electronic organizers are incompatible. At block the second electronic organizer retrieves second event data e.g. calendar data from the first electronic organizer over the network where the event data represents one or more events scheduled by the first electronic organizer. At block the first event data is transformed e.g. via a synchronizer to a format recognizable by the second electronic organizer. At block the transformed event data is presented in a user interface associated with the second electronic organizer along with the second event data generated by the second electronic organizer e.g. the local event data where the second event data represents one or more events scheduled by the second electronic organizer. Other operations may also be performed.

According to one embodiment an organizer s calendar tool utilizes multiple channels to read the external calendar data. is a block diagram illustrating a system configuration according to one embodiment of the invention. Referring to similar to the configuration of system includes a local calendar communicatively coupled to an external or remote calendar over a network which may be a LAN or WAN. Again for the purposes of illustration a calendar is utilized as an example of an electronic organizer.

In this example similar to computing platforms and or of local calendar includes a user interface synchronizer and calendar data repository which may be located locally or remotely over a network. Remote calendar may have architecture similar to calendar . In this example for the purposes of illustration a remote or external calendar is implemented using Java technologies.

According to one embodiment referring to after a calendar application e.g. local calendar passes security of another calendar tool such as for example the security management of an external calendar database the external calendar data is transmitted to the organizer s calendar e.g. local calendar such as for example a calendar data format synchronization module . The synchronize module transforms the external calendar data format to a format the organizer s calendar tool can accept or recognize. Both the external calendar data and local calendar data are loaded to calendar tool s UI user interface e.g. user interface such that the organizer can see the schedule e.g. free time of external attendees as if the organizer sees the calendar data of internal people. It appears on the user interface that there is no or minimum difference between external calendar data and internal calendar data . The whole process is transparent to the organizer.

In one embodiment the external calendar data may be stored or maintained in an enterprise information system EIS tier of an external organization which may be different or the same as the organization of the organizer. In order to protect the private information of external calendar data in one embodiment there is a security management module in the EIS tier . There may be some authorization mechanisms e.g. access control list or ACL mechanism such as for example certification username password etc. to limit certain users to access calendar data . Furthermore according to another embodiment the external calendar database may only allow certain users to know the local user s schedule information such as free time. However certain information such as detailed information about each event may not be allowed to access by users other the owner of the calendar data. Such privileges may be configured by one with an administration privileges. For example certain access controls may be in placed based on certain rules associated with the users such as those set up by an identity and access management e.g. roles duties and or responsibilities system of an EIS e.g. EIS .

In a particular embodiment there are three possible ways through which external calendar data can be transmitted to a calendar data format synchronize module. In one embodiment there is a Java EE enterprise edition engine on the top of EIS tier . EIS data are exposed to users by Web services . External data is transmit to the calendar data format synchronize module through Web services via path .

According to an alternatively embodiment there is a Java EE engine on the top of EIS tier and EIS data is exposed to a user via path by a servlet or Java server page JSP . External data is transmitted to the calendar data format synchronize module through HTTP hypertext transport protocol or HTTPS secure HTTP protocol.

According to another embodiment EIS tier exposes its data to external users by APIs application programming interfaces such as C language API or dynamic link library DLL directly via path . Therefore the calendar data format synchronize module can call the APIs of EIS or use a DLL of EIS to retrieve external calendar data directly. Note that Java is utilized herein as an example for the illustration purposes only. It will be appreciated that other cross platform and or object oriented techniques may also be applied.

In one embodiment the calendar data format synchronize module is configured to transform the external data to a predetermined format a commonly used format such as iCalendar data format. The data format of iCalendar is defined in international standard RFC 2445 Internet Calendaring and Scheduling Core Object Specification by the Internet Engineering Task Force IETF . RFC 2445 specifies an Internet standards protocol for calendar data format for the Internet communications. Currently many calendar tools support iCalendar format. If the calendar tool of organizer support iCalendar the calendar UI can load iCalendar data from the calendar data format synchronize module directly otherwise the iCalendar data are transformed to the data format that organizer s calendar UI can accept or recognize. Using this architecture to synchronize the external calendar users can access external calendar as if they use their local calendar.

With the expansion of the global community people are distributed all over the world. When an organizer schedules a meeting the organizer can determine whether a certain time such as 10 00 AM is suitable for the organizer as well asany attendees who are located in the same time zone with the organizer. In addition the organizer may also determine whether this time is suitable for others in different time zones. Currently most conventional calendars do not show the attendee s local time and normal working time e.g. from AM 8 00 to 5 00 PM of local time in the user interface when a user schedules a meeting. So the organizer has to calculate the attendee s local time manually before the organizer schedules a meeting. If several attendees are distributed in multiple time zones the calculating process becomes more complex and inconvenient.

In one embodiment an exemplary calendar tool is configured to show attendee localities such as for example local time and or time zone information in the organizer s calendar UI. Additional information such as for example local time rest time free time etc. may also be shown in the organizer s calendar UI. The organizer just takes a glance at the UI in order to know what time is a fine time for all attendees. Such a UI feature gives a totally new user experience which is especially useful in a global working environment. Again throughout this application an electronic calendar is used as an example for an electronic organizer. However it will be appreciated that other types of event organizers may also be utilized. Also a local time is utilized as an example of a locality however other localities may also be applied.

User s calendar data is read to user s calendar tool using some or all of the techniques described above and kept alignment with user s time in the corresponding range. As for user the corresponding start time of the meeting is 4 00 PM Aug. 21 2006 Monday and the corresponding end time is 2 00 AM Aug. 22 2006 Tuesday. Because user s time zone is different from user user s local time and time zone are also shown in user s calendar tool UI.

User s calendar data shows that it has an event at 4 30 5 00 PM Aug. 21 2006 Monday and the rest time begins at 5 00 PM. So there is only 4 00 4 30 PM Aug. 21 2006 Monday available for user . After knowing the local time of user user may schedule a reasonable meeting time which is suitable for both not only suitable for user . Without any additional manual computation user can arrange an international meeting by taking a glace at its calendar UI. The whole process is very simple and convenient.

Referring to according to one embodiment similar to system of system configuration includes but is not limited to a first computing platform communicatively coupled to a second computing platform over a network . Computing platforms may be a personal computer e.g. a desktop laptop or workstation a portable device e.g. a media player a personal digital assistant PDA a cellular phone a personal communicator e.g. a Blackberry or similar devices or a combination of at least two of these. Computing platforms may be implemented similar to those configurations as shown in which will be described in details further below.

In one embodiment network may be a local area network LAN e.g. Intranet or a wide area network WAN e.g. Internet . Network may include multiple networks or sub networks. Platforms may communicate with each other in a client server configuration or alternatively platforms may communicate with each other in a peer to peer configuration. Platforms may communicate with each other via a variety of communication protocols such as for example TCP IP transport control protocol Internet protocol or Ethernet protocols. Although only two computing platforms are shown for the purposes of illustration more or fewer computing platforms may be applied.

Referring back to in one embodiment computing platform includes but is not limited to an electronic organizer user interface and a synchronizer . Electronic organizer may be a calendar application or tool available from a variety of vendors such as Outlook from Microsoft or electronic organizer from IBM Lotus or electronic organizer from Google. Electronic organizer may includes some or all of the necessary or well known components that are normally available in a standard electronic organizer. User interface may be used to present or display the data or information provided by the electronic organizer including for example scheduled events or meetings etc.

In addition according to one embodiment synchronizer is coupled to the organizer and or user interface to synchronize other event data or calendar data from a remote organizer of a remote platform such as organizer of platform over a network e.g. network using some or all of the synchronization techniques described above. Synchronizer may be implemented as a part of organizer . Alternatively synchronizer may be implemented as a stand alone application communicatively coupled to the organizer e.g. via an API or a plug in interface .

Further according to one embodiment computing platform may be communicatively coupled one or more databases or storages for storing data or information utilized by the organizer and or synchronizer . Database or storage may be implemented locally with respect to platform or alternatively remotely over a network. For example database or storage may be implemented as a part of an enterprise information system EIS of an organization or enterprise entity such as an ERP enterprise resource planning system.

Similarly computing platform includes but is not limited to an electronic organizer user interface and a synchronizer . Electronic organizer may be a calendar application or tool available from a variety of vendors as described above. Electronic organizer may includes some or all of the necessary or well known components that are normally available in a standard electronic organizer. User interface may be used to present or display the data or information provided by the electronic organizer including for example scheduled events or meetings etc.

In addition according to one embodiment synchronizer is coupled to the organizer and or user interface to synchronize other event data or calendar data from a remote organizer of a remote platform such as organizer of platform over a network. Synchronizer may be implemented as a part of organizer . Alternatively synchronizer may be implemented as a stand alone application communicatively coupled to the organizer e.g. via an API or a plug in interface .

Further according to one embodiment computing platform may be communicatively coupled one or more databases or storages for storing data or information utilized by the organizer and or synchronizer . Database or storage may be implemented locally with respect to platform or alternatively remotely over a network. For example database or storage may be implemented as a part of an enterprise information system EIS of an organization or enterprise entity such as an ERP enterprise resource planning system.

Furthermore according to one embodiment computing platform further includes a locality processing unit coupled to or associated with the electronic organizer to process locality information of a remote event data such as those retrieved from platform . As result multiple users event schedules may be presented according to different localities associated with the different user respectively as shown in . Similarly platform may also include a locality processing unit for similar purposes of locality processing unit of platform . In one embodiment the locality information may be retrieved directly from each platform similar to a peer to peer configuration.

In another embodiment time zone information for each calendar user may be stored in a database accessible by each calendar user serviced by a server. For example as shown in one or more databases may be maintained in a calendar central system such as server accessible over network . The one or more databases may be used to maintain locality information such as the time zone information of each calendar user. According to one embodiment the time zone information is updated when calendar user changes its time zone information in its computer operating system such as Microsoft Windows XP . When a user travels to another time zone area usually the user will change the time zone in user s computing device. So the new time zone information may be updated in the central calendar system.

According to one embodiment when an organizer schedules a meeting with several attendees for each attendee the calendar reads the start time and end time of the organizer s calendar tool UI. The organizer s calendar tool may determine e.g. from a server over a network or from a respective peer whether the attendee is in the same time zone with the organizer. If they are not in the same time zone the organizer s calendar tool may take the attendee s time zone into consideration and transform the above start time and end time to the attendee s local time. Further organizer s calendar may read the attendee s calendar data in the range of local start time and local end time.

When the attendees is in the same company with the organizer according to one embodiment the calendar tool reads attendee s calendar data from local calendar data repository e.g. from a server over a network or from a respective peer . When the attendee is in a different company from the organizer the calendar reads external calendar data via an API using the techniques set forth above.

If the attendee is in the same time zone with the organizer the organizer s calendar shows the attendee s free time in the range of start time and end time in the organizer s calendar tool UI. If the attendee is in a different time zone from the organizer the organizer s calendar shows the attendee s local time which is aligned with the organizer s time and shows the free time and rest time of attendee as well as shown in .

Furthermore according to one embodiment the calendar tool UI of organizer can show the lunch time e.g. from 12 00 AM to 1 00 PM of local time . The calendar tool UI may also use a predetermined or special color to show the recommending time boxes which are suitable for all attendees to schedule an event. Note that some or all of the functional units as shown in may be implemented in software hardware or a combination of both.

Referring to at block processing logic accesses a first electronic organizer e.g. electronic calendar from a second electronic organizer over a network where the first and second electronic organizers have different localities e.g. different time zones . At block processing logic retrieves first event data e.g. calendar data from the first electronic organizer over the network where the first event data represents one or more events scheduled by the first electronic organizer. At block processing logic determines a difference between the localities of the first and second electronic organizers e.g. from a central server or via a peer to peer configuration . At block processing logic presents the first event data within the second electronic organizer along with the second event data generated by the second electronic organizer where the first and second event data are presented based on different localities e.g. different time zones . Other operations may also be performed.

As described above currently most calendar tools provide a reminder function but the reminder time is fixed when the organizer schedules the event. Because the attendee s contexts are different a fixed reminder time is not reasonable for all attendees. For example it is common that the sales people have a face to face meeting with their customers. The location for meeting is either in the sales people s company or in the customer s company or in the third location. If the meeting is held in customer s company or the third location the sales people have to travel to the location for meeting. The fixed reminder time does not make sense because certain external or extrinsic factors such as for example live traffic between two locations are changing constantly or periodically.

In one embodiment the extrinsic factors e.g. live traffic information are taken into consideration when designing the calendar tool s reminder function. The calendar tools will give different reasonable reminder time for each attendee according to the attendee s context. The reasonable reminder time ensures all attendees can make good use of their time neither having to spend too much time on waiting nor being too late for the event or meeting. Note that throughout this application live traffic is used as an example of external or extrinsic factors however it is not so limited other factors may be considered.

Currently many map service companies such as ESRI and Yahoo provide live traffic service. In those map service it will design a route for driving and give an approximate time for driving taking the live traffic information into consideration. It also gives some other information which will influence driving such as road constructing.

For example as shown in diagram of a map service provider may provide the following driving direction and estimate of time 

In one embodiment after taking the live traffic information e.g. an estimate time from the starting location to the destination into consideration the remainder of calendar tool can provide a reasonable reminder time to a user. In one embodiment the calendar tool provides an interface where the calendar tool s user can register its address. The calendar tool scans each event in local calendar data repository periodically and the reminder time is computed accordingly.

Referring to according to one embodiment similar to system of and or system of system configuration includes but is not limited to a first computing platform communicatively coupled to a second computing platform over a network which may be a LAN or WAN. Computing platforms may be a personal computer e.g. a desktop laptop or workstation a portable device e.g. a media player a personal digital assistant PDA a cellular phone a personal communicator e.g. a Blackberry or similar devices or a combination of at least two of these. Computing platforms may be implemented similar to those configurations as shown in which will be described in details further below.

Referring back to in one embodiment computing platform includes but is not limited to an electronic organizer user interface and a synchronizer . Electronic organizer may be a calendar application or tool available from a variety of vendors such as Outlook from Microsoft or electronic organizer from IBM Lotus or electronic organizer from Google. Electronic organizer may includes some or all of the necessary or well known components that are normally available in a standard electronic organizer. User interface may be used to present or display the data or information provided by the electronic organizer including for example scheduled events or meetings etc.

In addition according to one embodiment synchronizer is coupled to the organizer and or user interface to synchronize other event data or calendar data from a remote organizer of a remote platform such as organizer of platform over a network e.g. network using some or all of the synchronization techniques described above. Synchronizer may be implemented as a part of organizer . Alternatively synchronizer may be implemented as a stand alone application communicatively coupled to the organizer e.g. via an API or a plug in interface .

Further according to one embodiment computing platform may be communicatively coupled one or more databases or storages for storing data or information utilized by the organizer and or synchronizer . Database or storage may be implemented locally with respect to platform or alternatively remotely over a network. For example database or storage may be implemented as a part of an enterprise information system EIS of an organization or enterprise entity such as an ERP enterprise resource planning system.

Similarly computing platform includes but is not limited to an electronic organizer user interface and a synchronizer . Electronic organizer may be a calendar application or tool available from a variety of vendors as described above. Electronic organizer may includes some or all of the necessary or well known components that are normally available in a standard electronic organizer. User interface may be used to present or display the data or information provided by the electronic organizer including for example scheduled events or meetings etc.

In addition according to one embodiment synchronizer is coupled to the organizer and or user interface to synchronize other event data or calendar data from a remote organizer of a remote platform such as organizer of platform over a network. Synchronizer may be implemented as a part of organizer . Alternatively synchronizer may be implemented as a stand alone application communicatively coupled to the organizer e.g. via an API or a plug in interface .

Further according to one embodiment computing platform may be communicatively coupled one or more databases or storages for storing data or information utilized by the organizer and or synchronizer . Database or storage may be implemented locally with respect to platform or alternatively remotely over a network. For example database or storage may be implemented as a part of an enterprise information system EIS of an organization or enterprise entity such as an ERP enterprise resource planning system.

Furthermore according to one embodiment computing platform further includes an extrinsic factor or information processing unit coupled to or associated with the electronic organizer to process extrinsic information e.g. live traffic information retrieved from an extrinsic information provider e.g. a live traffic or map service provider . As result a reminder service can be provided to a user based on the user s respective context such as locality of the respective user. Similarly platform may also include an extrinsic factor or information processing unit for similar purposes of the extrinsic factor or information processing unit of platform .

In a particular embodiment the calendar tool extracts a location of a meeting from the event organizer and takes the address of calendar tool s user as the start point and the location of meeting as end point. The calendar tool then takes the live traffic as an extrinsic parameter and communicates with a map service provider to get the approximate time and route for reach the destination. Assumed that the approximate driving time is marked as X. If the location of meeting is in the same address of the user X is assigned to zero. In order to avoid some accidental issues on the road the reminder time may increase an X certain percent such as for example 10 . That is to say X

Assumed that the user of calendar tool needs a certain time to prepare necessary documents for the meeting. Here the calendar tool may mark the time for preparation of meeting as Y where Y can be a fixed time such as for example 10 minuses. Therefore the reasonable time for a reminder may be X Y. When the reminding time arrives a pop up message may be displayed to notify the user to prepare the meeting before the time X Y. In one embodiment a map for driving is also shown. In addition according to one embodiment if the user of calendar also registers its mobile device the map for driving may be transmitted to its mobile device.

Referring to at block processing logic schedules an event via an electronic organizer to be held at a predetermined time and a predetermined location. At block processing logic configures a reminder having a first reminder time with respect to the predetermined time e.g. a period of time ahead of the scheduled event time for reminding a user of the electronic organizer regarding the scheduled event. At block processing logic dynamically determines one or more real time extrinsic factors e.g. live traffic information that will affect the time to reach the location of the event from a location of the electronic organizer. In one embodiment a third party service provider e.g. live traffic information provider may be invoked for such a purpose. At block processing logic adjusts the reminder of the scheduled event based on the real time factors. Other operations may also be performed.

As shown in the system which is a form of a data processing system includes a bus or interconnect which is coupled to one or more microprocessors and a ROM a volatile RAM and a non volatile memory . The microprocessor which may be for example a PowerPC microprocessor or an Intel Pentium processor is coupled to cache memory as shown in the example of . The bus interconnects these various components together and also interconnects these components and to a display controller and display device as well as to input output I O devices which may be mice keyboards modems network interfaces printers and other devices which are well known in the art.

Typically the input output devices are coupled to the system through input output controllers . The volatile RAM is typically implemented as dynamic RAM DRAM which requires power continuously in order to refresh or maintain the data in the memory. The non volatile memory is typically a magnetic hard drive a magnetic optical drive an optical drive or a DVD RAM or other type of memory system which maintains data even after power is removed from the system. Typically the non volatile memory will also be a random access memory although this is not required.

While shows that the non volatile memory is a local device coupled directly to the rest of the components in the data processing system the present invention may utilize a non volatile memory which is remote from the system such as a network storage device which is coupled to the data processing system through a network interface such as a modem or Ethernet interface. The bus may include one or more buses connected to each other through various bridges controllers and or adapters as is well known in the art. In one embodiment the I O controller includes a USB Universal Serial Bus adapter for controlling USB peripherals. Alternatively I O controller may include an IEEE 1394 adapter also known as FireWire adapter for controlling FireWire devices.

Thus techniques for organizing events via an electronic organizer have been described herein. Portions of what was described above may be implemented with logic circuitry such as a dedicated logic circuit or with a microcontroller or other form of processing core that executes program code instructions. Thus processes taught by the discussion above may be performed with program code such as machine executable instructions that cause a machine that executes these instructions to perform certain functions. In this context a machine may be a machine that converts intermediate form or abstract instructions into processor specific instructions e.g. an abstract execution environment such as a virtual machine e.g. a Java Virtual Machine an interpreter a Common Language Runtime a high level language virtual machine etc. and or electronic circuitry disposed on a semiconductor chip e.g. logic circuitry implemented with transistors designed to execute instructions such as a general purpose processor and or a special purpose processor. Processes taught by the discussion above may also be performed by in the alternative to a machine or in combination with a machine electronic circuitry designed to perform the processes or a portion thereof without the execution of program code.

It is believed that processes taught by the discussion above may also be described in source level program code in various object orientated or non object orientated computer programming languages e.g. Java C VB Python C C J APL Cobol ABAP Fortran Pascal Perl etc. supported by various software development frameworks e.g. Microsoft Corporation s .NET Mono Java Oracle Corporation s Fusion etc. . The source level program code may be converted into an intermediate form of program code such as Java byte code Microsoft Intermediate Language etc. that is understandable to an abstract execution environment e.g. a Java Virtual Machine a Common Language Runtime a high level language virtual machine an interpreter etc. or a more specific form of program code that is targeted for a specific processor.

Some portions of the preceding detailed descriptions have been presented in terms of algorithms and symbolic representations of operations on data bits within a computer memory. These algorithmic descriptions and representations are the ways used by those skilled in the data processing arts to most effectively convey the substance of their work to others skilled in the art. An algorithm is here and generally conceived to be a self consistent sequence of operations leading to a desired result. The operations are those requiring physical manipulations of physical quantities. Usually though not necessarily these quantities take the form of electrical or magnetic signals capable of being stored transferred combined compared and otherwise manipulated. It has proven convenient at times principally for reasons of common usage to refer to these signals as bits values elements symbols characters terms numbers or the like.

It should be borne in mind however that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated otherwise as apparent from the above discussion it is appreciated that throughout the description discussions utilizing terms such as processing or computing or calculating or determining or displaying or the like refer to the action and processes of a computer system or similar electronic computing device that manipulates and transforms data represented as physical electronic quantities within the computer system s registers and memories into other data similarly represented as physical quantities within the computer system memories or registers or other such information storage transmission or display devices.

Embodiments of the present invention also relate to an apparatus for performing the operations herein. This apparatus may be specially constructed for the required purposes or it may comprise a general purpose computer selectively activated or reconfigured by a computer program stored in the computer. Such a computer program may be stored in a computer readable storage medium such as but is not limited to any type of disk including floppy disks optical disks CD ROMs and magnetic optical disks read only memories ROMs random access memories RAMs erasable programmable ROMs EPROMs electrically erasable programmable ROMs EEPROMs magnetic or optical cards or any type of media suitable for storing electronic instructions and each coupled to a computer system bus.

The algorithms and displays presented herein are not inherently related to any particular computer or other apparatus. Various general purpose systems may be used with programs in accordance with the teachings herein or it may prove convenient to construct more specialized apparatus to perform the required method operations. The required structure for a variety of these systems will appear from the description below. In addition embodiments of the present invention are not described with reference to any particular programming language. It will be appreciated that a variety of programming languages may be used to implement the teachings of embodiments of the invention as described herein.

A machine readable medium may include any mechanism for storing or transmitting information in a form readable by a machine e.g. a computer . For example a machine readable medium includes read only memory ROM random access memory RAM magnetic disk storage media optical storage media flash memory devices electrical optical acoustical or other form of propagated signals e.g. carrier waves infrared signals digital signals etc. etc.

In the foregoing specification embodiments of the invention have been described with reference to specific exemplary embodiments thereof. It will be evident that various modifications may be made thereto without departing from the broader spirit and scope of the invention as set forth in the following claims. The specification and drawings are accordingly to be regarded in an illustrative sense rather than a restrictive sense.

