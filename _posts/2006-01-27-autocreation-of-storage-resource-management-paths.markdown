---

title: Auto-creation of storage resource management paths
abstract: A method and an apparatus to automatically create storage resource management (SRM) paths have been presented. In one embodiment, the method includes monitoring a data storage system to collect configuration data of storage objects in the data storage system and automatically creating a storage resource management (SRM) path for a storage object in the data storage system using at least a portion of the configuration data in response to a user request to scan the storage object.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07912942&OS=07912942&RS=07912942
owner: NetApp, Inc.
number: 07912942
owner_city: Sunnyvale
owner_country: US
publication_date: 20060127
---
Some embodiments of the present invention pertain to networked storage systems and more particularly to a method and apparatus for automatically creating storage resource management SRM paths.

A storage appliance is a type of storage server which operates on behalf of one or more clients to store and manage shared data in a set of mass storage devices such as magnetic or optical storage based disks. The mass storage devices are typically organized as one or more groups of Redundant Array of Independent or Inexpensive Disks RAID . One configuration in which storage appliances can be used is a network attached storage NAS configuration. In a NAS configuration a storage appliance can be implemented as a file server or filer attached to a network such as a local area network LAN or a corporate intranet. An example of such a storage appliance is any of the NetApp Filer products made by Network Appliance Inc. in Sunnyvale Calif. Alternatively storage appliances can be used in a storage area network SAN environment. A SAN is a highly efficient network of interconnected shared storage devices. In a SAN the storage appliance may provide a remote host with block level access to stored data.

A filer may be coupled to a network and may serve as a storage device for several users or clients of the network. For example the filer may store user directories and files for a corporate network or other network such as a LAN or a wide area network WAN . Users of the network can each be assigned an individual directory in which they can store personal files. A user s directory can then be accessed from computers coupled to the network.

A system administrator can maintain the filer ensuring that the filer continues to have adequate free space that certain users are not monopolizing storage on the filer etc. A typical Multi Appliance Management Application MMA can be used to monitor the storage on the filer. An example of such an MMA is the DataFabric Manager DFM products made by Network Appliance Inc. in Sunnyvale Calif. The MMA may provide a Graphical User Interface GUI that allows the administrator to more easily observe the condition of the filer.

Using some conventional MMAs the administrator may schedule a scan of a specific storage object on the filer to collect file level information and or statistics. Storage objects are logical units of storage within a single name space such as a directory tree. One example of a storage object is a volume. However conventional MMAs typically require administrators to provide the directory path via which the storage object is to be scanned. For large data storage systems maintained by multiple administrators each administrator may not know the directory path of every storage object in the system. Furthermore it is burdensome and inconvenient for the administrators to keep track of the current directory paths of all storage objects in the system. As a result many administrators find the scanning tools provided by these conventional MMAs difficult to use.

A method and an apparatus for automatically creating SRM paths are disclosed. In one embodiment the method includes monitoring a data storage system to collect configuration data of storage objects in the data storage system and automatically creating a storage resource management SRM path for a storage object in the data storage system using at least a portion of the configuration data in response to a user request to scan the storage object.

Other aspects of the invention will be apparent from the accompanying figures and from the detailed description which follows.

Described herein are methods and apparatuses to automatically create storage resource management SRM paths. Note that in this description references to one embodiment an embodiment or other similar phrasing means that the feature being referred to is included in at least one embodiment of the present invention. Further such references do not necessarily all refer to the same embodiment. Thus the present invention can include a variety of combinations and or integrations of the embodiments described herein.

According to an embodiment of the invention a data storage system is monitored to collect configuration data of storage objects in the data storage system. When a user requests to scan one of the storage objects a storage resource management SRM path for the storage object is automatically created using at least a portion of the configuration data and therefore relieving the user of the task of creating the SRM path. Consequently the user e.g. system administrator does not have to be aware of the interconnections of the storage object to other components such as host agents within the data storage system in order to be able to initiate a scan of the storage object. Details of the above terms will be discussed below with reference to various embodiments of the present invention.

In one embodiment the MMA runs on an independent server and is responsible for storage resource management SRM . SRM includes monitoring and management of storage resources within the system such as for example applications files file systems networks etc. The MMA may scan storage objects to collect information about storage objects on or managed by the filer to report back to a system administrator by scanning the storage objects. To collect information about a storage object the MMA may recursively examine a directory path of the storage object for information about the storage object e.g. file level statistics . As is well known in the related art recursive examination involves the use of a procedure subroutine function or algorithm that calls itself in a step having a predetermined termination condition so that successive repetitions of the procedure subroutine function or algorithm are processed until the predetermined termination condition is met at which time the rest of each repetition is processed from the last one called to the first. Such scanning is hereinafter referred to as a path walk also known as file walk or filewalk .

Storage objects are logical units of storage within a single name space such as a directory tree. One example of storage objects is a quota tree also known as a Qtree . A Qtree is a top level subdirectory i.e. the level of director immediately beneath a root of a directory tree which has special properties for managing quotas. For example a quota may be set on a Qtree that limits to a total size of all files inside the Qtree. In some cases quotas are associated with users so that a user may not create files totaling more than a predetermined size. Another example of a storage object is a volume. In some embodiments a volume is a logical data set that involves a group of storage devices e.g. magnetic disks optical disks etc. which may be assigned a name and be viewed as a file system. In some systems a volume is the largest unit of storage that contains a file system on a filer such as the volume on the filer in .

Some storage objects may be accessed via one or more shares such as volumes. A share is a set of data sets such as files also known as a directory tree . In some data storage systems a share may be assigned a name and made available to other components e.g. storage appliances servers etc. in the system through a data sharing protocol e.g. Common Internet File System CIFS Network File System NFS etc. . Alternatively some storage objects may be directly accessed such as a storage device having a logical unit number assigned also referred to as a LUN .

In some embodiments the storage appliance is coupled to the volume . The volume may include one or more physical hard drives or removable storage drives that comprise the storage for the storage appliance . For example the volume may comprise a RAID structure. The storage appliance may also be coupled to additional volumes that comprise storage. In some instances the volume may appear and function as a single entity even though the volume may contain several separate physical drives. As mentioned above the volume may be viewed as a storage object on which a path walk can be performed.

To perform a path walk on a storage object as defined above the MMA may schedule the path walk and a host agent e.g. the host agents and may execute the path walk. In some embodiments the host agent walks the specified directory path and gathers per file and or per directory data. During the path walk the MMA may determine some characteristics of the files stored on the storage appliance . Examples of some characteristics of the files include the file names size of the files location of files the location of directories relative to each other basic structure of a directory tree stored thereon etc. These results can be accumulated sorted and stored in a database where the administrator can later access them. The MMA may also summarize the results of the path walk so that they are more readable and more easily understood by the administrator.

Before performing path walks on storage objects the MMA may periodically monitor the system to collect configuration data of the storage objects. Configuration data of a storage object includes information on the setup of the storage object and interconnections between the storage object and other components within the data storage system such as for example the host agent on which the storage object is mounted the shares through which the storage object is exported etc. In one embodiment the MMA uses the configuration data to create SRM paths for the storage objects.

In some embodiments a SRM path of a storage object is a directory path defined to allow the gathering of file level statistics of the storage object for example the oldest files in the storage object the largest files in the storage object etc. In a large data storage system maintained by multiple administrators it is difficult for every administrator to know the current SRM path of each storage object in the data storage system. Thus having the MMA create a SRM path for a storage object automatically when an administrator requests a path walk on the storage object more details of some embodiments of the MMA creating the SRM path are discussed below with reference to relieves the administrators from keeping track of the SRM paths of all of the storage objects in the system which could be an overwhelming and burdensome task. More details of some embodiments of the MMA creating the SRM path are discussed below with reference to .

After the MMA has scheduled a path walk the host agents and may execute the path walk for the MMA . A host agent may be implemented on an independent server. Storage appliances may be mounted on one or more host agents. For instance the filer is mounted on both host agents and . The host agents and may allow the MMA to access the filer in a secure and platform independent way. By having the host agents and or to execute path walks rather than having the MMA to execute path walks the MMA can save its resources for other tasks such as monitoring current activity on the filer . Moreover multiple host agents can be added to the system to perform a complete path walk in less time.

According to one embodiment of the invention the host agents and may use different file sharing protocols. For example the host agent uses CIFS while the host agent uses NFS. In some embodiments the host agent is coupled to storage to store the results of a path walk while the path walk is still in progress and before the results are transferred to the MMA . The host agent may or may not be coupled to any storage for this purpose.

The results of a path walk may be transferred to and stored on the database server after the path walk is complete. The database server can then be accessed by the GUI so that system administrator can search the results of the path walk. Through the GUI the administrator may perform various tasks such as parsing the results of a specific file walk and monitoring the total size of files stored on the filer the size of particular directories and their subdirectories the parents of specific directories etc. According to one embodiment the GUI may be a web based Java application.

The processor may be any appropriate microprocessor or central processing unit CPU . The memory may include a main random access memory RAM as well as other memories including read only memories ROM flash memories etc. The operating system is stored in the memory . The operating system may be any computer operating system such as a Unix or Windows based system. The network adapter allows the server to communicate with remote computers over the network . For example the server may send data to the database via the network in some embodiments. The server may also communicate with host agents and via the network .

In one embodiment configuration data of storage objects within the system may change over time. Thus processing logic may periodically monitor a data storage system in order to update its knowledge of the current configuration of storage objects within the system processing block . To periodically monitor the data storage system processing logic may check the configuration of the data storage system at regular time intervals. Processing logic may collect configuration data of various storage objects within the data storage system in order to prepare for creating SRM paths for the storage objects. To collect configuration data of a storage object processing logic may recursively examine the directory path of the storage object to gather configuration data of the storage object. As discussed above configuration data of a storage object includes information on the setup and connection of the storage object within the data storage system. More details of processing block are discussed below with the reference to .

Processing logic checks whether a user such as a system administrator requests to scan any of the storage objects processing block . If no user request is received processing logic returns to processing block to repeat the periodic monitoring of the data storage system. Otherwise processing logic creates a SRM path for the storage object in response to the user request processing block . To create the SRM path for the storage object processing logic generates a directory path via which the storage object may be accessed in order to be scanned where the directory path may include a drive name assigned to the storage object names of folders within which the storage object resides names of shares through which the storage object is exported etc. In some embodiments processing logic uses the configuration data collected to put together a SRM path for the storage object. For instance processing logic may use a mount and a share discovered during the periodic monitoring to create the directory path corresponding to the storage object. Via the SRM path created processing logic then scans the storage object to service the user request processing block .

In one embodiment processing logic monitors host agents in the data storage system to determine which storage objects are mounted on which host agents processing block . Note that multiple storage objects may be mounted on a single host agent and likewise a single storage object may be mounted on multiple host agents such as the storage objects on the filer in . Processing logic discovers shares through which the storage objects are exported processing block . In some embodiments a share is a set of data sets such as files also known as directory tree which is assigned a name and is made available to other components in the system through a data sharing protocol e.g. CIFS NFS etc. . The shares may include NFS shares and or CIFS shares for example. Processing logic then updates configuration data such as the mounts and the shares determined above in an appropriate data structure or structures such as a NFS export table a CIFS shares table etc. processing block . In one embodiment these tables may be stored in a storage device within a server running a MMA e.g. the server in . Details of some embodiments of the monitor database are discussed below with reference to .

After updating the monitor database processing logic waits a predetermined period of time such as 30 minutes processing block . Then processing logic transitions back to processing block after waiting the predetermined period of time to repeat the processing blocks to monitor the data storage system. In some embodiments the predetermined period of time may be set by a user with administrative privileges during initial setup of the data storage system. Alternatively a default period of time may be used. Moreover users with administrative privileges may modify the period of time later.

In some embodiments the storage appliance includes a filer. The storage appliance may be coupled to some storage devices such as magnetic disks optical drives etc. The storage devices may be organized into volumes and be accessed through the storage appliance . The storage appliance may be further coupled to the host agent . The host agent may have a UNIX operating system a Linux operating system a Windows operating system etc.

In one embodiment the server includes a MMA module a monitor database and a user interface module . The MMA module is logically coupled to the monitor database which is further logically coupled to the user interface module . The MMA module includes a storage resource management monitor module and a ShareMon module . The storage resource management monitor module is a module to monitor data resources within the system . In some embodiments the storage resource management monitor module periodically monitors the NFS mounts in host agent having a UNIX or Linux operating system. In some embodiments the ShareMon module discovers shares through which storage objects of the storage appliance are exported. In one embodiment the storage appliance exports details about the shares through application programming interface APIs . The ShareMon module uses these APIs to retrieve the details about the shares and store the details in one or more tables in the Monitor Database . The shares may include NFS shares if the storage appliance is accessed through a UNIX or Linux operating system. Alternatively the shares may include CIFS shares if the storage appliance is accessed through a Windows operating system. In other embodiments the host agent may implement an operating system other than the above mentioned operating systems to access the storage appliance .

As mentioned above the MMA module is coupled to the monitor database . The monitor database stores configuration data of the data storage system . In one embodiment the monitor database includes various tables to store the configuration data such as a LUN path table a NFS exports table a CIFS shares table a SRM file system table a Hosts table and a SRM links table . In some embodiments the storage resource management monitor module updates the SRM file system table with the current NFS mounts in the host agent . Both the device name and the path name of each NFS mount may be stored in the SRM file system table . In some embodiments the ShareMon module updates the NFS exports table with NFS shares discovered. Moreover the ShareMon module may update the CIFS shares table with CIFS shares discovered. In some embodiments the SRM links table stores the mapping between the storage objects and SRM paths. The SRM links table may contain a SRM path identification ID and a Storage Object ID for each mapping. In some embodiments LUN exports may be stored in the LUN paths table .

To further illustrate the above concept consider the following example. Suppose the NFS exports table has the following entries for a storage appliance Filer 

Further suppose that the CIFS shares table stores the following entries for another storage appliance Filer 

Moreover the Hosts table as shown in has a list of host agents in the system including HostAgent and HostAgent in the current example. HostAgent is a UNIX host agent and HostAgent is a Windows host agent.

In one case a user requests to perform a path walk on the storage object vol vol. In response to the user s request the MMA module finds the device name for vol vol using the SRM file systems table . According to the first entry in the SRM file systems table above the device name corresponding to the storage object vol vol is mntvol. Therefore the SRM path created for the storage object vol vol is HostAgent mntvol. HostAgent is able to access Filer using NFS protocol.

In another case the user requests to perform a path walk on the storage object vol vol. The MMA module uses the information from the CIFS shares table to determine that the storage object vol vol may be accessed through the CIFS share csvol and the storage object vol vol is on the storage appliance Filer. The MMA module goes through each Windows host agent in the Hosts table and verifies if the Window host agent can access the storage object vol vol using the CIFS share csvol. As soon as the MMA module finds a Windows host agent that can access the storage object vol vol using the CIFS share csvol which is HostAgent in the current example the MMA module creates the SRM path for vol vol using the host agent s name the storage appliance s name and the CIFS share s name. In the current example the SRM path created for vol vol is HostAgent Filer csvol.

In some embodiments the MMA Module updates the SRM links table to store the mapping between the storage objects vol vol and vol vol and their corresponding SRM paths. The updated SRM links table includes the following entries 

Referring to the monitor database resides within the server . Alternatively the monitor database may reside on a data storage device external to the server . As mentioned above the monitor database is further coupled to the user interface module .

In one embodiment the user interface module includes a graphical user interface module and a command line interface module . The graphical user interface module may include a web graphical user interface module operable to interact with a web browser on a client computing device e.g. a personal computer a workstation etc. coupled to the server . Alternatively a user may access the command line interface module using telnet from a client computing device coupled to the server . The client computing device may be coupled to the server wirelessly or via wirelines. Moreover the client computing device may locate at the same physical location as the server or at a different physical location from the server .

Many of the techniques introduced above have been described in the context of a network attached storage NAS environment. However these techniques can also be applied in various other contexts. For example the techniques introduced above can be applied in a storage area network SAN environment. A SAN is a highly efficient network of interconnected shared storage devices. One difference between NAS and SAN is that in a SAN the storage server which may be an appliance provides a remote host with block level access to stored data whereas in a NAS configuration the storage server provides clients with file level access to stored data. For example the SRM path creation techniques described above may be applied to LUNs in SAN.

This invention has been described with reference to specific exemplary embodiments thereof. It will however be evident to persons having the benefit of this disclosure that various modifications and changes may be made to these embodiments without departing from the broader spirit and scope of the invention. The specification and drawings are accordingly to be regarded in an illustrative rather than in a restrictive sense.

