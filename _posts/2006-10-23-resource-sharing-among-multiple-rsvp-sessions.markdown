---

title: Resource sharing among multiple RSVP sessions
abstract: In one embodiment, a technique is provided to share resources among data flows. An apparatus receives a request for a new data flow where the new data flow is associated with a session group (ID). The apparatus determines that the session group ID of the new data flow matches a session group ID of one or more existing data flows, and that the one or more existing data flows are not already sharing resources with another data flow that has a session group ID different from the first session group ID. Provided this is true, the apparatus shares resources reserved for the one or more existing data flows with the new data flow.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07454504&OS=07454504&RS=07454504
owner: Cisco Technology, Inc.
number: 07454504
owner_city: San Jose
owner_country: US
publication_date: 20061023
---
The present application is a continuation in part of and commonly assigned U.S. patent application Ser. No. 09 871 108 titled System For Sharing Resources Among RSVP Sessions which was filed on May 31 2001 and now issued as U.S. Pat. No. 7 281 043 and which application is hereby incorporated by reference as though fully set forth herein The present application is also a divisional of and commonly assigned U.S. patent application Ser. No. 10 039 088 titled Resource Sharing Among Multiple RSVP Sessions filed on Jan. 3 2002 and now issued as U.S. Pat. No. 7 143 168.

This invention relates to computer networks and more specifically to resource sharing among RSVP sessions.

Computer networks typically comprise a plurality of interconnected entities. An entity may consist of any device such as a computer or end station that sources i.e. transmits or sinks i.e. receives datagrams e.g. packets and or frames . A common type of computer network is a local area network LAN which typically refers to a privately owned network within a single building or campus. LANs typically employ a data communication protocol LAN standard such as Ethernet FDDI or token ring that defines the functions performed by the data link and physical layers of a communications architecture i.e. a protocol stack . In many instances several LANs may be interconnected by point to point links microwave transceivers satellite hook ups etc. to form a wide area network WAN or intranet that may span an entire country or continent.

One or more intermediate network devices are often used to couple LANs together and allow the corresponding entities to exchange information. For example a bridge may be used to provide a bridging function between two or more LANs. Alternatively a switch may be utilized to provide a switching function for transferring information between a plurality of LANs or end stations. Bridges and switches may operate at various levels of the communication protocol stack. For example a switch may operate at layer 2 which in the Open Systems Interconnection OSI Reference Model is called the data link layer and includes the Logical Link Control LLC and Media Access Control MAC sub layers. Data frames at the data link layer typically include a header containing the MAC address of the entity sourcing the message referred to as the source address and the MAC address of the entity to whom the message is being sent referred to as the destination address. To perform the switching function layer 2 switches examine the MAC destination address of each data frame received on a source port. The frame is then switched onto the destination port s associated with that MAC destination address.

Other network devices commonly referred to as routers may operate at higher communication layers such as layers 3 and 4 of the OSI Reference Model which in Transmission Control Protocol Internet Protocol TCP IP networks corresponds to the IP and the TCP User Datagram Protocol TCP UDP layers. Data frames at the IP layer include a header which contains an IP source address and an IP destination address while frames at the TCP UDP layer include source and destination port numbers. Routers or layer 3 switches may re assemble or convert received data frames from one LAN standard e.g. Ethernet to another e.g. token ring . Thus layer 3 devices are often used to interconnect dissimilar subnetworks.

Traditionally computer networks were used to exchange static files or data such as text and spreadsheet files while the Public Switched Telephone Network PSTN was used to exchange voice information. Computer networks however are increasingly being used to transport voice information. Voice over IP VoIP typically refers to a group of technologies used to transmit voice information over computer networks. Such networks include a plurality of voice agents that convert voice information from its traditional telephony form to a form that is suitable for packet transmission. In other words the voice agent encodes compresses and encapsulates the voice information into a plurality of data packets. Examples of voice agents include IP telephones VoIP gateways certain private branch exchanges PBXs personal computers PCs running communication applications network devices providing voice gateway services etc. A calling party uses a voice agent to initiate a VoIP call. Once the voice information has been converted into packet format it is carried by the computer network to a second voice agent configured to serve the called party. Voice traffic unlike static data files or records is highly sensitive to delay and to lost packets. That is delays in receiving data packets carrying voice information at the called party s voice agent can seriously degrade the quality of the call. Accordingly packets carrying voice information must be delivered to the called party with high probability and in a timely manner.

Computer networks include numerous services and resources for use in forwarding network traffic. For example different network links such as Fast Ethernet Asynchronous Transfer Mode ATM channels SONET links satellite links etc. offer different speed and bandwidth capabilities. Particular intermediate devices also include specific resources or services such as priority queues filter settings traffic shapers queue selection strategies congestion control algorithms etc. that affect the rate at which traffic moves through the device and thus across the network. Depending on the selection or allocation of such resources or services network traffic for different sources and sinks can be forwarded at different speeds or rates thereby controlling the loss and or delay experienced by the traffic.

As set forth above to support VoIP packets carrying voice information must typically be delivered within narrow time constraints. Although many computer networks have the resources and services to meet the delivery requirements of VoIP these resources and services must be allocated preferably in advance to the correct network traffic. The Resource reSerVation Protocol RSVP which is set forth in Request For Comments RFC 2205 is a signaling protocol that was developed so that entities typically referred to as receivers could reserve bandwidth within their computer networks to receive a desired data flow such as a multimedia stream from one or more sourcing entities.

A data flow is a sequence of messages that have the same source address and same destination address unicast or multicast . A session is a collection of one or more data flows that have the same unicast or multicast destination address. Sessions differ from data flows in that a session may have multiple senders whereas a data flow only originates from a single sender.

In a protocol such as RSVP resource reservation messages are used to establish a reservation of resources. The RSVP protocol defines two fundamental types of resource reservation messages the RSVP Path message and the RSVP Resv message.

Pursuant to RSVP sources send RSVP Path messages identifying themselves and indicating the bandwidth needed to receive their programming or content. These messages proceed hop by hop through the intermediate network devices making those devices aware of the possibility that a reservation of resources may be required. If a receiver is interested in the programming or content offered by a particular source it responds with a request for resources in the form of a RSVP reservation request Resv message which travels hop by hop back to the source. At each hop the corresponding intermediate device establishes a session for the receiver and sets aside sufficient resources to provide the requested bandwidth for the desired data flow. These resources are immediately made available to the data flow. If sufficient resources are not available the reservation is refused explicitly so that the receiver knows it cannot depend on the corresponding resources being devoted to its traffic. By using RSVP packets carrying voice information can be accorded the resources and services they need to ensure timely delivery.

Resv messages typically include a set of options that are collectively called the reservation style. These options are specified in the option vector field of the style object that is included in the Resv message. One option sharing control concerns the treatment of reservations for different senders within the same session. This option can be specified to establish a distinct reservation for each upstream sender distinct option or make a single reservation that is shared among all packets of selected senders shared option . Specifying the shared option enables the new reservation request to share resources that have already been allocated to an existing prior reservation. The shared option is typically used for those sessions in which multiple data sources are unlikely to transmit simultaneously.

Another reservation option sender selection control controls the selection of senders to the session. This option can be specified to select senders from a list of explicit senders explicit option or to select senders using a wildcard that implicitly selects all senders to the session wildcard option . The sharing control in combination with the sender selection control imply specifies the reservation style associated with the reservation request.

For example the shared explicit SE style is specified by the combination of the shared and explicit options. A SE style reservation creates a single reservation that is shared among a specific set of senders that are sending data to a given destination. The set explicit list of senders are specified using filter spec objects that are included in the Resv message. Likewise the wildcard filter WF style is specified by the combination of the shared and wildcard options. A WF style reservation creates a single reservation into which data flows from all upstream senders are mixed. As new senders appear the reservation is extended to include these new senders.

The sharing control and sender selection control options defined by the RSVP standard provide one technique for sharing resources among RSVP sessions. Another technique that can be used to share resources is described in co pending and commonly assigned U.S. patent application Ser. No. 09 871 108 titled System Sharing Resources Among RSVP Sessions. This technique uses a session group identifier SGID to enable resource sharing between distinct RSVP sessions that originate from a common source sender of traffic. Sessions that meet certain criteria defined by the technique are associated with a group that is designated by a SGID. Sessions within the same group share the resources that have been reserved for that group.

Specifically a sourcing entity generates a locally unique resource identifier. The sourcing entity then uses this resource ID in the signaling to reserve resources for a first session. The sourcing entity may then decide to have these resources shared with a second session by reusing this same resource ID in the signaling to reserve resources associated with the second session. When the second session is being created intermediate devices are configured to recognize that a reservation associated with this resource ID already exists. The intermediate devices are further configured to share the previously reserved resources between the first and second sessions rather than reserve additional or further resources for the second session.

One problem that arises in networks that use both a shared class method such as the SE style or the WF style and the SGID method to share resources is that the rules for how the resources may be shared are not adequately defined. For example resource sharing using the shared class method shares resources between data flows that have the same destination but different sources. On the other hand resource sharing using the SGID method shares resources between data flows that have the same source but different destinations. A conflict may arise when both techniques are used in the same system to share resources because resources allocated using one technique may appear to be shareable to the other technique when in fact they are not.

Briefly the present invention relates to a technique for correctly allocating shared resources among RSVP sessions while taking maximal advantage of resource sharing opportunities. In accordance with the present invention resources are shared if one of two of the following rules for sharing is satisfied 

In the illustrative embodiment voice agents comprise network devices that have been configured to provide VoIP gateway support to other devices or entities such as conventional analog telephone sets coupled thereto. Suitable VoIP gateway devices include the 3600 series of routers from Cisco Systems Inc. of San Jose Calif.

The RSVP entity is also in communicating relationship with the communication facility and can thus exchange information including network packets and frames with facility . In accordance with the present invention RSVP entity further includes a resource identifier ID generator . As described below resource ID generator is configured to generate IDs for use by the RSVP entity in reserving resources within computer network .

The communication facility preferably includes one or more software libraries for implementing a communication protocol stack allowing a voice agent such as to exchange messages with other entities of network such as voice agents and . The communication facility may for example include software layers corresponding to the Transmission Control Protocol Internet Protocol TCP IP communication stack although other communication protocols such as Asynchronous Transfer Mode ATM cells the Internet Packet Exchange IPX protocol the AppleTalk protocol the DECNet protocol and or NetBIOS Extended User Interface NetBEUI could be utilized. Communication facility further includes transmitting and receiving circuitry and components including one or more network interface cards NICs that establish one or more physical ports for exchanging data packets and frames with a network entity to which it is connected such as router .

In accordance with the preferred embodiment voice agent includes programmable processing elements not shown which may contain software program instructions pertaining to the methods of the present invention. Other computer readable media may also be used to store the program instructions of the present invention.

Router further includes one or more resource allocation and reservation components. In the preferred embodiment router includes a RSVP entity or engine a packet frame classification engine and an admission control entity . The RSVP engine moreover includes a RSVP message generator a RSVP state machine engine and a data structure for storing RSVP information. RSVP engine similarly operates except as described herein in accordance with the RFC 2205 specification standard. Router also includes programmable processing elements not shown which may contain software program instructions pertaining to the methods of the present invention. Other computer readable media may also be used to store the program instructions of the present invention.

A suitable platform for router is the 7200 or 4700 series of routers from Cisco Systems Inc. Nonetheless those skilled in the art will recognize that the present invention or parts thereof may be implemented in other network devices and or entities such as switches router switches bridges repeaters servers etc.

In response voice agent generates a locally unique resource ID value e.g. 42578 for use with the reservation of network resources about to be made for the session with voice agent as indicated at block . In this context locally unique means that the chosen resource ID value is not currently in use by voice agent for any other call. Call signaling entity may for example issue one or more Application Programming Interface API system calls to RSVP entity causing it to have the resource ID generator produce a resource ID value. The resource ID generator may be configured as a random number generator for producing 32 bit strings. The RSVP message generator then formulates one or more RSVP Path messages that incorporate the generated resource ID value as indicated at block . Another API system call may be used by the call signaling entity to direct the RSVP entity to generate the Path message.

The sender Tspec object includes length field class number and class type fields . It further includes a token bucket rate field a token bucket size field a peak data rate field a minimum policed unit field and a maximum packet size field among others. The session object includes length class number and class type fields . It further includes IP destination address DA and destination port fields . The resource ID object includes length class number and class type fields . It further includes a resource ID field .

Message generator loads header sender Template object sender Tspec object and session object in a conventional manner. In particular it loads the IP SA and source port fields with the IP address and Transmission Control Protocol User Datagram Protocol TCP UDP port being utilized by voice agent . It similarly loads the IP DA and destination port fields with the IP address and TCP UDP port if known for voice agent . Message generator loads the sender Tspec object with values corresponding to the network resources e.g. the bandwidth that voice agent believes will be required to support the anticipated traffic flow to voice agent

The value generated by the resource ID generator i.e. 42578 is loaded into the resource ID field of the resource ID object . Class number and class type fields of object are preferably loaded with preselected values which suitably configured network devices and entities recognize as indicating that object carries a resource ID for use as described herein.

It should be understood that Path message may include other objects such as an adspec object carrying parameters that may be used to characterize the path taken by the traffic flow or session.

The RSVP entity then passes the Path message to the voice agent s communication facility for transmission toward voice agent via network as indicated at block . The Path message is first received at router . The packet frame receiver transmitter object of router recognizes the received message as an RSVP Path message and accordingly passes it to the RSVP engine for processing as indicated at block . The RSVP engine stores the contents of the Path message in data structure as indicated at block .

It should be understood that data structure may include additional information such as whether or not resources have been reserved for the respective data flows the reserved bandwidth protocol etc.

RSVP engine first establishes a new row or entry for the data flow with voice agent . The RSVP engine then populates the cells or records of this entry with the contents of the received Path message . For example RSVP engine loads the source address and source port from fields into the cells of table entry that correspond to columns . It loads the destination address and destination port from fields into the cells that correspond to columns . It loads the address of the previous hop node into the cell corresponding to column and it loads the resource ID value from field i.e. 42578 into the cell corresponding to column .

Router then loads its IP address into a previous hop object not shown that it adds to the Path message and forwards the message toward voice agent as indicated at block . Router may consult a routing table not shown to determine the interface from which the Path message is to be forwarded. At each hop along the route to voice agent the respective intermediate network device processes the Path message in the same manner as described above. In particular each device stores the information contained in the Path message in its table . Each intermediate device also loads its IP address into the previous hop object before forwarding the Path message to the next intermediate network device along the route. Thus when the Path message reaches its destination e.g. voice agent each intermediate network device along the route from the sourcing entity will have stored the address of the previous hop along that route so that it will be able to forward messages back to the sourcing entity along the same route used by the Path message .

Voice agent preferably responds to the Path message by generating one or more RSVP Reservation Resv messages and sending these messages toward the source entity as indicated at block . More specifically the communication facility of voice agent recognizes the message as a Path message and sends it to the RSVP entity for further processing.

The RSVP entity loads the header object and session object in a conventional manner. More specifically the RSVP entity loads the source address and source port information contained in the Path message into the destination address and destination port fields of the Resv message . Further the RSVP entity of the receiver voice agent determines if the call signaling entity desires to share resources using the SE style or WF style and if so sets the appropriate values in the option vector field to select the desired sharing style accordingly. In addition if the SE style is selected filter spec objects are added to represent each data flow in the RSVP session. Assuming the RSVP entity concludes that sharing is not appropriate sharing is not specified in the option vector field of the style object .

The Resv message travels hop by hop back to voice agent following the same route used by the Path message . At each hop the Resv message from voice agent is processed by the respective intermediate network device . More specifically the Resv message is initially received at router . The packet frame receiver transmitter object of router recognizes the received message as a Resv message and accordingly passes it to the RSVP engine for processing as indicated at block .

The RSVP engine first searches its RSVP session table to identify the matching entry for this Resv message as indicated at block . In particular the RSVP engine looks for an entry of table whose source address source port destination address and destination port match those contained in the received Resv message. As described above a separate entry of table is established for each data flow.

Upon locating the matching entry the RSVP engine derives or computes a logical session group ID for this reservation request by concatenating the source address with the resource ID value from the cells corresponding to columns and of the matching entry as indicated at block .

At decision block the RSVP engine determines if a shared reservation class is specified in the Resv message i.e. does the Resv message contain a style object that specifies a SE or WF style. Since sharing was not specified in the style object of the Resv message as stated above the RSVP engine follows NO arrow and proceeds to block .

At block the RSVP engine searches the table and locates all other entries in the table whose session group identifier SGID matches the SGID that was derived from the matching entry at step . At decision block the RSVP engine determines if any additional matching entries were found. Assuming no additional matching entries were found the RSVP engine follows the NO arrow to block .

At decision block the RSVP engine performs admission control on the reservation request. More specifically using the contents of the Tspec object the RSVP engine queries admission control entity to determine whether router has sufficient available resources to support the requested reservation. RSVP engine may also determine whether or not the party making the reservation e.g. voice agent has administrative permission to make the reservation specified in the RSVP Resv message.

Assuming the reservation represented by the received Resv message passes admission control the RSVP engine then instructs the packet frame classification engine to identify received traffic i.e. packets matching the criteria contained in the Resv message such as the filter spec and session spec objects as indicated at block and directs the traffic scheduler to apply the necessary resources to received traffic matching that criteria to meet the bandwidth requirements contained in the Resv message as indicated at block . In other words the RSVP engine reserves sufficient resources to support the timing requirements of the session from voice agent to voice agent

Using the stored previous hop address from the matching entry of its table intermediate device then forwards the Resv message to the next hop toward the sourcing entity i.e. toward voice agent as indicated at block . If in response to decision block the reservation fails admission control the RSVP message generator formulates a reservation error ResvErr message and sends it back toward the destination receiving entity i.e. voice agent as indicated at block .

The above described processing of the Resv message is preferably repeated at each intermediate device along the route from voice agent to voice agent

At this point resources are reserved along the entire route from voice agent to voice agent e.g. at routers and to support the data traffic flow containing voice information from voice agent to voice agent . It should be understood that a similar reservation of resources is made in the opposite direction. That is voice agent preferably sends one or more Path messages to voice agent and voice agent responds with one or more Resv messages.

Suppose that while the first party at voice agent is talking to the second party at voice agent a third party at voice agent places a call to the first party as indicated at block . The call signaling entity at voice agent at block preferably alerts the first party of the incoming call. Suppose further that voice agent supports call waiting and that the first party decides to place the second party on hold and answer the call from the third party as indicated at block . Call signaling entity at block detects the first party s transition from the second party i.e. from voice agent to the third party i.e. to voice agent . To support the anticipated flow of voice traffic from the first party to the third party which represents a new session the call signaling entity at voice agent directs the RSVP entity to ensure that sufficient network resources are made available to support this new traffic flow.

More specifically call signaling entity directs the RSVP entity to generate and transmit one or more Path messages to voice agent as indicated at block . However because the first party will at any given instant only be sending voice traffic to voice agent or if he or she switches back to the first call to voice agent the call signaling entity concludes that the network resources reserved for the session to voice agent may be shared with the anticipated session to voice agent . Accordingly the call signaling entity directs the RSVP entity to configure the reservation request such that the previously reserved network resources are shared with the anticipated session to voice agent . In particular call signaling entity directs RSVP entity to re use the same resource ID i.e. 42578 that was established for the traffic flow to voice agent in the Path message to be transmitted to voice agent as also indicated at block .

In response the message generator of RSVP entity creates one or more Path messages . In fields of the session object the RSVP entity loads the IP address and port number for voice agent . In the resource ID field of object the RSVP entity loads the same value i.e. 42578 used in the Path message that was sent to voice agent as described above. RSVP entity then passes the Path message to communication facility for transmission to voice agent via network as indicated by block which returns processing to block .

As indicated by blocks at each hop along the route to voice agent the respective intermediate network device processes the Path message.

In particular each device creates a new entry in its RSVP session table and stores the information contained in the Path message in that new entry. Each intermediate device also loads its IP address into the previous hop object before forwarding it to the next intermediate network device along the route.

Voice agent preferably responds to the Path message from voice agent by generating one or more RSVP Resv messages as indicated at block . The RSVP entity loads the header object and session object in a conventional manner as described above. Further the RSVP entity determines if it can share resources using the SE style or WF style and if so specifies sharing by setting the appropriate values in the option vector field to select the desired sharing style accordingly. Assuming the RSVP entity concludes that resources cannot be shared sharing is not specified in the option vector field of the style object .

The Resv message travels hop by hop back to voice agent following the same route used by the Path message that traveled from voice agent to voice agent . At each hop the Resv message from voice agent is processed by the respective intermediate network device . More specifically the Resv message is initially received at intermediate network device . The packet frame receiver transmitter object of intermediate network device recognizes the received message as a Resv message and accordingly passes it to the RSVP engine for processing as indicated at block . The RSVP engine first searches its table to identify the matching entry for this Resv message as indicated at block and upon locating the matching entry the RSVP engine computes or derives a logical session group ID for this reservation request as indicated at block .

At decision block the RSVP engine determines if a shared reservation class is specified in the Resv message i.e. the style object in the Resv message style object specifies sharing. Since sharing was not specified as stated above the RSVP engine follows NO arrow and proceeds to block .

At block the RSVP engine searches the table and locates all other entries in the table whose session group identifier SGID matches the SGID that was derived from the matching entry at step . At decision block the RSVP engine determines if any additional matching entries were found. Because the same resource ID value i.e. 42578 was used in the previous Path message from voice agent to voice agent there will be at least one matching entry. In response to detecting a matching entry intermediate network device selects the YES path of decision block and progresses to decision block .

At decision block device searches table and determines if any of the previously found matching entries is already sharing resources using the shared class method with another session that has a different session group ID. Assuming that no matching entry is already sharing resources using the shared class method the NO path is taken and device proceeds to block .

At this point the intermediate network device considers the two sessions from voice agent i.e. the traffic flow to voice agent and the traffic flow to voice agent to belong to the same group. At block the entry and all other matching entries are preferably marked to indicate they are sharing resources using the SGID method. Further since no additional resources need be reserved RSVP entity does not perform admission control on the reservation request as indicated at block .

Once it has been established that the correct amount of resources are available RSVP entity directs the packet frame classification engine to identify received traffic i.e. packets matching the criteria contained in the Resv message from voice agent such as the filter spec and session objects as indicated at block and directs the traffic scheduler to apply the resources previously reserved for the traffic flow from voice agent to voice agent to be applied to this traffic flow i.e. to the traffic flow from voice agent to voice agent as indicated at block . Thus the network resources reserved to support the session to voice agent are shared with the session to voice agent . Intermediate network device then forwards the Resv message to the next hop toward the sourcing entity i.e. toward voice agent as indicated at block .

Now suppose for example a fourth party at voice agent places a call to the third party at voice agent while the third party is engaged with a call to the first party . Further assume that voice agent supports call waiting thus enabling it to place a current party on hold while it answers a call from another party.

The party at voice agent may dial a series of numbers at the analog voice telephone set that correspond to the voice agent . The call signaling entity at voice agent detects the start of call and notifies the RSVP entity to generate a resource ID number e.g. 726 and one or more Path messages as described above and as indicated in blocks . These Path messages are then forwarded towards voice agent and processed by the intermediate network devices creating entry in table as set forth above and indicated in blocks .

On receiving the Path message the voice agent alerts the third party to the incoming call. In response the third party places the first party on hold and answers the incoming call from the fourth party . The call signaling entity at voice agent detects the transition from the current call to the waiting call and directs the RSVP entity to generate a Resv message to respond to the received Path message. Assuming the RSVP state machine determines that the voice agent can only talk to one of the first party or the fourth party and that the resource requirements set forth in the Path message can be satisfied using the resources allocated to support the call from the first party the RSVP state machine concludes that it can share resources allocated for the call to the first party with the call to the fourth party . The RSVP state machine indicates this preference in the Resv message by setting the option vector field of the style object to indicate sharing. Preferably the RSVP state machine further sets the option vector field to imply the SE style of sharing and adds the necessary filter spec objects to represent the first and fourth parties and in the explicit set of senders. The remainder of the Resv message is initialized in a conventional manner as set forth above and the Resv message is then sent towards the sourcing entity as indicated in block .

The Resv message travels hop by hop back to voice agent following the same route used by the Path message . At each hop the Resv message is processed by the respective intermediate network device . More specifically the Resv message is initially received at device . The packet frame receiver transmitter object of device recognizes the received message as a Resv message and accordingly passes it to the RSVP engine for processing as indicated at block .

The RSVP engine first searches its RSVP session table to identify the matching entry for this Resv message as indicated at block . Upon locating the matching entry the RSVP engine derives or computes a logical session group ID for this reservation request by concatenating the source address with the resource ID value from the cells corresponding to columns and of the matching entry as indicated at block .

At decision block the RSVP engine determines if a shared reservation class is specified in the Resv message . More specifically the RSVP engine examines the option vector field of the Resv message to determine if sharing is specified. Since sharing was specified in the Resv message as stated above the RSVP engine follows the YES arrow and proceeds to block .

At block the RSVP engine locates those entries in the table that could potentially share resources with the data flow represented in the Resv message using the shared reservation class method. In the preferred embodiment the SE style is specified in the Resv message thus this step would preferably locate those entries whose source address matches the IP address specified in one of the filter spec objects of the Resv message. In another embodiment of the invention the WF style is specified thus step would preferably locate those entries whose destination address field matches the destination address specified in the Resv message. In the illustrated embodiment this block locates entry as it is the only entry whose source address and source port fields of entry match the IP address and port specified in the filter object of the Resv message.

For each entry located the RSVP engine examines the shared field to determine if it is sharing resources using the SGID method as indicated at decision block . Since the entry is already sharing resources using the SGID with another data flow e.g. the data flow represented by entry the RSVP engine concludes that resources cannot be shared and device follows the YES arrow to decision block to perform admission control.

At decision block the RSVP engine performs admission control on the reservation request. Assuming the reservation represented by the received Resv message passes admission control the RSVP engine then instructs the packet frame classification engine to identify received traffic i.e. packets matching the criteria contained in the Resv message such as the filter spec and session spec objects as indicated at block and directs the traffic scheduler to apply the necessary resources to received traffic matching that criteria to meet the bandwidth requirements contained in the Resv message as indicated at block . Using the stored previous hop address from the matching entry of its table intermediate device then forwards the Resv message to the next hop toward the sourcing entity i.e. toward voice agent as indicated at block .

The above described processing of the Resv message is preferably repeated at each intermediate device along the route from voice agent to voice agent . At this point resources are reserved along the entire route from voice agent to voice agent to support the data flow containing voice information from voice agent to voice agent

Now suppose for example that no prior RSVP data flows have been established in the network when a first party at voice agent places a call to a second party at voice agent . Following the procedure set forth above a RSVP data flow is established between the two voice agents and the resources necessary to support the traffic flow between voice agent and have been reserved. Further assume that the data flow has been assigned a resource ID value of 42578 by voice agent and that the entry in the RSVP session table associated with the data flow is entry

At this point suppose that a third party at voice agent places a call to the second party at voice agent and the second party places the first party on hold and answers the call from . A data flow is then established between voice agent and voice agent in the manner as set forth above. Further assume that this data flow has been assigned a resource ID value of 500 by voice agent and is represented in the table as entry

Now suppose the first party at voice agent calls a fourth party at voice agent . The first party places the second party on hold and dials a series of numbers corresponding to voice agent . Specifically the call signaling entity at voice agent detects the start of call and determines that it can only talk to one of the second party or fourth party and concludes that it can share resources that have already been reserved for the data flow between it and the second party. In particular call signaling entity directs RSVP entity to re use the same resource ID i.e. 42578 that was established for the traffic flow to voice agent in the Path message to be transmitted to voice agent . The Path message is then forwarded towards the destination entity i.e. voice agent as indicated in block .

At each intermediate network device along the path between voice agent and voice agent the Path message is processed as set forth above entry in table is created in response to the Path message and the Path message is passed towards the voice agent as indicated by blocks .

The Path message is received by voice agent and the destination entity responds to the Path message by generating a Resv message . Specifically the RSVP entity at voice agent initializes the header and session objects of the Resv message in a conventional manner. In addition since voice agent is not currently engaged in any data flows that it can share resources with it concludes there are no RSVP resources to share and therefore does not specify sharing in the style object that is included in the Resv message. The Resv message is then forwarded towards the sourcing entity as indicated in block .

The Resv message is received at intermediate network device and sent to the RSVP engine for processing as indicated in step . Specifically the RSVP engine searches the session table for matching entry and derives a session group ID from the matching entry as indicated in blocks . Since the style object in the Resv message does not indicate sharing at decision block the device follows the NO arrow to block .

At decision block the device searches the session table to locate the those entries whose session group ID matches the derived session group ID. Specifically the device locates the session table entry corresponding to the call between the first party and the second party as its session group ID matches the derived session group ID. At decision block since a matching entry has been found i.e. entry the device follows the YES arrow and proceeds to decision block .

At decision block device examines the shared field of the matching entry and determines that the data flow associated with entry is already sharing resources using the shared class method thus device concludes that it cannot share resources using the SGID method and follows the YES arrow to decision block to perform admission control.

At decision block the RSVP engine performs admission control on the reservation request. Assuming the reservation represented by the received Resv message passes admission control the RSVP engine then instructs the packet frame classification engine to identify received traffic i.e. packets matching the criteria contained in the Resv message such as the filter spec and session spec objects as indicated at block and directs the traffic scheduler to apply the necessary resources to received traffic matching that criteria to meet the bandwidth requirements contained in the Resv message as indicated at block . In other words the RSVP engine reserves sufficient resources to support the timing requirements of the session from voice agent to voice agent

Using the stored previous hop address from the matching entry of its table intermediate device then forwards the Resv message to the next hop toward the sourcing entity i.e. toward voice agent as indicated at block . If in response to decision block the reservation fails admission control the RSVP message generator formulates a reservation error ResvErr message and sends it back toward the destination receiving entity i.e. voice agent as indicated at block .

The above described processing of the Resv message is preferably repeated at each intermediate device along the route from voice agent to voice agent . At this point resources are reserved along the entire route from voice agent to voice agent e.g. at routers and to support the data traffic flow containing voice information from voice agent to voice agent

It should be understood that the RSVP engines of the intermediate network devices may also confirm that resources have already been reserved and assigned to the matching traffic flow before determining that the two sessions may share the same resources. If resources have not yet been reserved to the prior session then the RSVP engines perform admission control and reserve resources for the subsequent session in a conventional manner. Furthermore if the resources required by the new session exceed those currently allocated to the prior session then the incremental resources need to be reserved. In this case admission control is required.

It should be understood that voice agents periodically issue Path and Resv messages in order to refresh the soft states maintained by the state machine engines of the network devices. The Path messages used to refresh RSVP state preferably contain the same resource ID used in the first Path message for the respective session. Accordingly each voice agent preferably stores the resource IDs in use by them.

Intermediate network devices that have not been configured to recognize the resource ID object simply process the Path messages containing such objects in a conventional manner. That is these legacy devices look for entries matching the session ID of received Resv messages and do not share resources among different sessions even if those sessions will not be transmitting traffic at the same time.

It should further be understood that the present invention can be used with other reservation or signaling protocols besides RSVP. For example the present invention can be advantageously used with ATM signaling protocols such as Q.2931.

It should be further understood that the resource ID generator may be disposed at or otherwise be accessible to the call signaling entity . In this case the call signaling entity would generate the resource ID and pass it to the RSVP entity for use in RSVP reservation requests. The resource ID values could also be alphanumeric strings or other locally unique values.

It should also be understood that the present invention can be implemented with is other voice agents such as personal computers PCs running one or more communication applications that include RSVP support such as NetMeeting from Microsoft Corp. of Redmond Wash. and or Intel Internet Phone from Intel Corp. of Santa Clara Calif. VoIP or Internet telephones may also be used as voice agents in the manner described herein.

Also it should be understood that the voice traffic described herein may be exchanged between multimedia terminal adapters coupled to cable modems which in turn are connected to a cable network. In this case the corresponding multimedia terminal adapters MTAs would generate the Path messages containing the resource ID objects .

The foregoing description has been directed to specific embodiments of this invention. It will be apparent however that other variations and modifications may be made to the described embodiments with the attainment of some or all of their advantages. For example the present invention can be used with other time sensitive or high bandwidth traffic flows besides voice such as video or multimedia traffic flows. Therefore it is an object of the appended claims to cover all such variations and modifications as come within the true spirit and scope of the invention.

