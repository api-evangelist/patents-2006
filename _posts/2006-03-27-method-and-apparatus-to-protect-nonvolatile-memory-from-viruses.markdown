---

title: Method and apparatus to protect nonvolatile memory from viruses
abstract: An apparatus, system, method, and article for protecting nonvolatile memory from viruses are described. The apparatus may include a nonvolatile memory comprising one or more protected storage areas. The nonvolatile memory may be arranged to transform buffered information to be programmed in the protected areas and to program transformed information in the protected storage areas. Other embodiments are described and claimed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07411821&OS=07411821&RS=07411821
owner: Intel Corporation
number: 07411821
owner_city: Santa Clara
owner_country: US
publication_date: 20060327
---
Nonvolatile memory such as flash memory is capable of retaining digital information until the memory is erased. Due to its high reliability density and speed as well as its low cost and power consumption flash memory is well positioned to meet the increasing performance requirements of the wireless device industry.

Security for nonvolatile memory is an important consideration as wireless devices such as mobile telephones and handheld computers adopt color screens cameras Web browsing video and music capabilities as standard features. In particular it is important to provide security measures for protecting nonvolatile memory from infection by computer viruses to prevent corruption and or loss of data files and operational code. Therefore there is a need for systems and techniques to provide improved virus protection for nonvolatile memory.

Various embodiments are directed to protecting nonvolatile memory such as flash memory. In one embodiment for example a nonvolatile memory may comprise one or more protected storage areas such as one more protected nonvolatile memory blocks of a nonvolatile memory array. The nonvolatile memory may be arranged to transform information that is to be programmed in the protected storage areas and to program transformed information in the protected storage areas.

In various implementations the nonvolatile memory may be arranged to buffer information into a program buffer and to perform a transformation operation such as a one way decryption operation on buffered information that is to be programmed in the protected storage areas. If the information was encrypted appropriately prior to being buffered into the program buffer the transformed information to be programmed may include correct information. As such subsequently reading the protected storage areas will obtain the correct information. If the information buffered into the program buffer includes clear data and or improperly encrypted data from a virus for example the transformed information to be programmed may include scrambled jumbled unintelligible and or meaningless information. Accordingly the various embodiments may provide protection against malicious attempts by a virus to modify the nonvolatile memory.

Numerous specific details have been set forth herein to provide a thorough understanding of the embodiments. It will be understood by those skilled in the art however that the embodiments may be practiced without these specific details. In other instances well known operations components and circuits have not been described in detail so as not to obscure the embodiments. It can be appreciated that the specific structural and functional details disclosed herein may be representative and do not necessarily limit the scope of the embodiments.

In various embodiments the computing system may comprise or be implemented by a wireless device such as a mobile telephone a handheld computer a personal digital assistant PDA a combination mobile telephone PDA a smartphone a handset a one way pager a two way pager a data transmission device a wireless access point a base station BS a subscriber station SS a mobile subscriber center MSC a radio network controller RNC and so forth. In such embodiments the computing system may comprise one more interfaces and or components for wireless communication such as one or more antennas transmitters receivers transceivers amplifiers filters control logic and so forth.

Although some embodiments may be described with the computing system implemented as a wireless device by way of example it may be appreciated that the embodiments are not limited in this context. For example in some embodiments the computing system may comprise or be implemented as a personal computer PC a desktop computer a laptop computer a notebook PC a workstation a terminal a server an appliance a PDA a digital music player a set top box STB or other type of computer system or sub system.

As shown the computing system may comprise a nonvolatile memory . The nonvolatile memory may comprise for example one or more chips or integrated circuits ICs . In various embodiments the nonvolatile may be implemented by flash memory such as NOR or NAND flash memory. Examples of flash memory include for example Intel Flash Memory products such as StrataFlash Cellular Memory and Intel Wireless Flash Memory and other types of flash memory. It can be appreciated that although some embodiments may be described with the nonvolatile memory implemented by flash memory the embodiments are not limited in this context. For example in some embodiments the nonvolatile memory may be implemented by polymer memory ferroelectric memory magnetic memory or other nonvolatile storage medium.

The nonvolatile memory may be arranged to store various types of information such as data instructions and code. The information may include for example image information e.g. digital photographs user interfaces Web pages graphics audio information e.g. music sounds ring tones video information audio video A V information e.g. video files video clips movies broadcast programming voice information textual information e.g. encryption keys serial numbers e mail messages text messages instant messages contact lists telephone numbers task lists calendar entries hyperlinks numerical information alphanumeric information character symbols and so forth. The information may include command information control information routing information processing information system file information system library information software e.g. operating system software file system software application software game software firmware an application programming interface API a program an applet a subroutine an instruction set an instruction computing code logic words values symbols and so forth. In various embodiments instructions and or code may be stored contiguously in the nonvolatile memory to allow the instructions and or code to be executed in place XIP . The embodiments are not limited in this context.

The information stored by the nonvolatile memory may comprise static and or dynamic information. Static information may comprise any information that may not be altered changed or updated. Examples of static information may include read only data instructions and code. Dynamic information may comprise any information that may be altered changed and or updated. Examples of dynamic information may include read write data instructions and code. The embodiments are not limited in this context.

In various embodiments the nonvolatile memory may be arranged to store information in a file system including one or more nonvolatile memory arrays such as nonvolatile memory array . The nonvolatile memory array may be implemented for example by an array of floating gate transistors or nonvolatile memory cells e.g. flash memory cells . The nonvolatile memory cells may comprise single bit cells that allow one bit of information to be stored in each cell and or multi level cells that allow more than one bit of information to be stored in each cell. For example two bits of information may be stored in a multi level cell by controlling programming and reading in order to have four states within a single transistor.

As shown the memory array may include a plurality of nonvolatile memory blocks such as nonvolatile memory blocks where n represents a positive integer value. Each of the nonvolatile memory blocks may comprise for example a plurality of memory cells capable of storing at least one bit of information. In various implementations the memory array may be arranged to have a symmetrical or asymmetrical blocking architecture. For example the memory array may comprise a symmetrically blocked array with each memory block having a size of 256 kilobytes KB .

In various embodiments the memory blocks may be grouped into partitions e.g. 16 or 32 memory blocks per partition and or may be divided into regions e.g. 256 one kilobyte memory regions per memory block within the memory array . In some implementations the nonvolatile memory may be arranged to store data and code in separate partitions.

In various implementations regions may be programmed in one or more modes such as in an object mode or a control mode. An object mode programming region may comprise for example a one time write or write restricted memory region for storing static information such as objects or payloads that rarely change. A control mode programming region may comprise for example a rewritable memory region that supports multiple programming operations for writing erasing rewriting over writing augmenting altering changing and or updating dynamic information. In some cases the full data storage capacity e.g. 1 KB of a programming region may be available for data storage. In other cases less than the full data storage capacity e.g. 512 bytes of a programming region may be available for data storage.

In various embodiments the nonvolatile memory may include features to provide protection against malicious attempts by a virus to modify the nonvolatile memory . For example a virus may exploit a browser vulnerability and attempt to program malicious information the nonvolatile memory . Such features to protect the nonvolatile memory may comprise or be implemented by hardware software and or any combination thereof as desired for a given set of design parameters or performance constraints.

The nonvolatile memory may comprise one or more protected storage areas. In one embodiment the protected storage areas may comprise one or more nonvolatile memory blocks of the nonvolatile memory array . As shown in the protected storage areas may include nonvolatile memory blocks and of the nonvolatile memory array . The embodiments however are not limited to the example of .

In various embodiments the nonvolatile memory array may comprise a plurality of protected status cells where n represents a positive integer value. The protection status cells may comprise for example a nonvolatile storage area within the nonvolatile memory array . Each of the protected status cells may include a nonvolatile memory cell e.g. flash memory cell arranged to store a protected status bit. In one embodiment each of the protected status cells may comprise a one time programmable OTP cell or other unmodifiable nonvolatile storage area that once programmed may be locked to prevent further reprogramming.

The protected status cells may be programmed to identify one or more of the nonvolatile memory blocks as a protected storage area. The protected status cells may be associated with or correspond to a particular group of nonvolatile memory blocks such as nonvolatile memory blocks . In one embodiment each of the protected status cells may be programmed with a protected status bit e.g. 1 protected 0 normal to identify one or more of the nonvolatile memory blocks as protected storage area. As shown in each the protected status cells and includes protected status bit set to one indicating nonvolatile memory blocks and are protected storage areas. The embodiments however are not limited to the example of .

In various embodiments the nonvolatile memory array may comprise a protected key storage area . The protected key storage area may be associated with or correspond to a particular group of memory blocks such as memory blocks . The protected key storage area may comprise for example a nonvolatile storage area within the nonvolatile memory array . In one embodiment the protected key storage area may comprise an OTP storage area that once programmed may be locked to prevent further reprogramming.

The protected key storage area may be arranged to be programmed with a security key. In various embodiments the security key may be used to perform one or more operations on information to be programmed in one or more protected storage areas such as protected nonvolatile memory blocks and . The security key may comprise for example a public asymmetric key. The security key may include a name or other identification information an expiration date a serial number and or other information. In various implementations the security key may be used to perform one or more operations such as encryption decryption data digital signature generation authenticating operations and so forth.

In various embodiments the protected security key may be associated with or correspond to a particular provider such as an original equipment manufacturer OEM an original design manufacturer ODM an Over The Air OTA third party vendor TPV an independent software vendor ISV an independent hardware vendor IHV an operating system vendor OSV an independent content provider ICP a service provider a chipset provider a flash memory customer and so forth. In various implementations the provider e.g. OEM may program the protected status cells and the protected key storage area . For example the provider may program the protection status cells to configure particular nonvolatile memory blocks as protected storage areas and may program the protected key storage area with a public asymmetric key associated with the provider that may be used to perform operations on information to be programmed in the protected storage areas.

The nonvolatile memory may comprise one or more buffers such as a program buffer . The program buffer may comprise for example a rewritable nonvolatile storage area within the nonvolatile memory configured to perform buffering of information to be programmed in the nonvolatile memory array . In various embodiments the nonvolatile memory may be arranged to buffer information in the program buffer prior to programming the information in the nonvolatile memory array . In various implementations the program buffer may be arranged to queue multiple items to be programmed in the nonvolatile memory array .

The nonvolatile memory may be arranged to transform information that is to be programmed in one or more protected storage areas such as protected nonvolatile memory blocks and . The nonvolatile memory may be arranged for example to transform the buffered information in the program buffer . In various embodiments the nonvolatile memory may be arranged to perform a one way transformation operation such as a one way decryption operation. In such embodiments the nonvolatile memory may perform dynamic or on the fly one way decryption of the information in the program buffer during programming of one or more protected storage areas such as protected nonvolatile memory blocks and . In one embodiment the decryption may comprise Rivest Shamir Adleman RSA decryption.

The nonvolatile memory may be arranged to perform the transformation of information using a controller and or a transformation block . In various embodiments the controller may comprise for example a microcontroller embedded in or integrated with the nonvolatile memory and the nonvolatile memory may comprise instructions and or code to be executed by the controller . In various implementations the controller may be arranged to perform transformation operations on information to be programmed in the nonvolatile memory array such as buffered information in the program buffer .

It can be appreciated that although some embodiments may be described with the controller implemented by a microcontroller the embodiments are not limited in this context. For example in some embodiments the controller may be implemented by a processor such as a general purpose processor a chip multiprocessor CMP a dedicated processor an embedded processor a digital signal processor DSP a network processor a media processor an input output I O processor a media access control MAC processor a radio baseband processor a co processor a microprocessor and so forth. The controller also may be implemented by an application specific integrated circuit ASIC a field programmable gate array FPGA a programmable logic device PLD and so forth.

In various embodiments the nonvolatile memory may comprise a transformation block . The transformation block may be implemented for example by hardware and or software in the nonvolatile memory . The transformation block may comprise for example instructions and or code in the nonvolatile memory to be executed by the controller . In various implementations the transformation block may integrate security features such as a decryption protocol directly into the nonvolatile memory . As such the transformation block may implement a hardware mechanism for securing the nonvolatile memory against a virus that attempts to program malicious information to the nonvolatile memory array .

The transformation block may comprise logic for transforming information that is to be programmed in one or more protected storage areas. The protected storage areas may comprise for example one or more nonvolatile memory blocks of the nonvolatile memory array in the nonvolatile memory . The information to be programmed may comprise for example information buffered in the program buffer .

In various embodiments transforming may comprise determining the protection status of one or more nonvolatile memory blocks of the memory array and transforming information in the program buffer . For example if the protection status bit for a memory block is set 1 protected the information buffered in the program buffer may be transformed. If the protection status bit for a memory block is reset 0 normal the information buffered in the program buffer may be programmed normally to the nonvolatile memory array of the nonvolatile memory .

The transformation block may provide a mechanism for performing a one way transformation of information to be programmed to the nonvolatile memory array of the nonvolatile memory . In various embodiments the transformation block may enforce the one way transformation on a block granularity. The transformation block may enforce such one way transformation on all information that is to be programmed to protected storage areas of a nonvolatile memory array effectively eliminating the nonvolatile memory array as an attack point for a virus. In various implementations the a one way transformation may comprise a dynamic or on the fly one way decryption e.g. RSA decryption of information in the program buffer during programming of one or more protected nonvolatile memory blocks such as protected nonvolatile memory blocks and 

In various embodiments the security key stored in the protected key storage area may used to transform the information to be programmed in one or more protected storage areas such as protected nonvolatile memory blocks and . For example the information buffered in the program buffer may be transformed using the security key. In some implementations transforming the buffered information in the program buffer may comprise using a public asymmetric key to perform one way decrypting of information that previously was encrypted with a private key. In such implementations the transformed information may include properly decrypted and or clear information. In some implementations transforming the buffered information in the program buffer may comprise one way decrypting improperly encrypted information and or clear or unencrypted information from a virus. In such implementations the transformed information may include scrambled jumbled unintelligible and or meaningless information such as a meaningless byte stream for example.

By transforming information with a security key e.g. asymmetric public key before the information is programmed the nonvolatile memory array may be protected from attack by a virus attempting to program malicious information. Because the virus will not have a private key for creating an appropriate signature and properly encrypting information decrypting information using a public key will modify and render malicious information from a virus harmless to the nonvolatile memory array .

In various embodiments the nonvolatile memory may be arranged to require a particular provider e.g. OEM to encrypt information to be programmed in one or more protected storage areas such as protected nonvolatile memory blocks and . The information from the provider may comprise for example software and or firmware such as an initial installation of software and or firmware or an update to previously installed software and or firmware. The information may include one or more binary images. The binary images may comprise for example a pre compiled set of files e.g. executables drivers data to load and or install software and or firmware. In various implementations the information from the provider may be segmented into a series of data packets or windows. Each data packet or window may comprise for example a discrete data set having a fixed or varying size represented in terms of bits or bytes such as 1 KB. It can be appreciated that the described embodiments are applicable to any type of communication content or format such as packets windows files cells frames fragments units and so forth.

For example a provider e.g. OEM may segment a binary image into a series of packets or windows to be programmed to one or more protected storage areas of the nonvolatile memory . Each of the packets or windows may be encrypted with a private key associated with the provider. By transforming each of the packets using the asymmetric public key of the provider before programming the transformed information to be programmed may include properly decrypted and or clear information. In some implementations the provider may append a cyclic redundancy check CRC to each packet. In such implementations the provider may encrypt the packet and or the CRC with the private key associated with the provider.

The nonvolatile memory may be arranged to program the transformed information. In various embodiments the nonvolatile memory may be arranged to program the transformed information in the protected storage areas such as protected nonvolatile memory blocks and . In some implementations the transformed information may comprise clear and or correct information for example if the information was encrypted appropriately prior to being buffered in the program buffer . As such subsequently reading the protected storage areas will obtain the correct information. In some implementations the transformed information may comprise scrambled jumbled unintelligible and or meaningless information such as a meaningless byte stream for example if the information buffered into the program buffer includes clear data and or improperly encrypted data from a virus.

By transforming program operations the nonvolatile memory may be protected against a virus that attempts to write malicious information directly to a protected storage area of the nonvolatile memory . For example if a virus attempts to program malicious information to a protected storage area of the nonvolatile memory the malicious information will be modified by the transformation operation. Because the malicious information is transformed only meaningless information may be programmed and the nonvolatile memory will be protected.

In various embodiments the transformation block may comprise part of a file system manager of the nonvolatile memory . The file system manager may be implemented for example by instructions and or code stored in the nonvolatile memory . In various embodiments the file system manager may comprise logic to manage and store information in the nonvolatile memory . The file system manager may be arranged to issue read write and erase commands for the nonvolatile memory and to translate file system volumes into memory arrays. In various implementations the file system manager may provide one or more interfaces between the hardware of the nonvolatile memory and a client application and or an operating system OS such as a real time operating system RTOS .

In various embodiments the file system manager may comprise instructions and or code to be executed by the controller . In some embodiments the controller may be arranged to perform various operations for managing and storing information in the nonvolatile memory . The operations performed by the controller may comprise for example standard operations such as read program and erase operations. The controller also may be arranged to perform operations to increase and or optimize system performance. For example the controller may allow some operations to be performed simultaneously such as reading and executing code while programming data. The controller also may allow some operations to be suspended and resumed. The controller may perform various operations in one or more modes such as an asynchronous mode synchronous mode word mode page mode and burst mode for example.

In various embodiments the file system manager may comprise an authentication block . The authentication block may be implemented for example by hardware and or software in the nonvolatile memory . The authentication block may comprise for example instructions and or code to be executed by the controller . In various implementations the authentication block may integrate security features such authenticated operations directly into the nonvolatile memory .

In various implementations the authentication block may provide the nonvolatile memory with the capability to internally authenticate certain operations for further protection against malicious or inadvertent modifications. For example if a requested operation passes authentication the nonvolatile memory will perform the requested operation. If the requested operation does not pass authentication the nonvolatile memory will not perform the requested operation.

The authentication block may comprise logic for providing a series of authenticated operations such as authenticated read authenticated write authenticated patch and authenticated key operations. In various embodiments the controller may manage the operation of the authentication block . As shown the authentication block may comprise one or mechanisms for authenticating a requested operation such as a random number generator RNG block a secure hash generator SHA block a RSA block and a secure key storage SKS block . In various implementations the RNG block the SHA block and the RSA block may be used for example to verify a digital signature and or a hash value and to perform encryption and or decryption. The SKS block may be used to store security key such as an asymmetric pubic key.

In various embodiments the nonvolatile memory may be arranged to transform information to be programmed in one or more protected storage areas in conjunction with or as part of performing authenticated operations. In one embodiment for example the authentication block may be arranged to transform e.g. decrypt the buffered information in the program buffer using the RSA and a security key stored in the SKS block .

In various embodiments the nonvolatile memory may be arranged to receive information from a processor such as a central processing unit CPU for example. In various embodiments the controller may perform one or more operations in nonvolatile memory in response to information received from the processor . As shown the processor may comprise a discrete component separate from and coupled to the nonvolatile memory . In various implementations the nonvolatile memory may store instructions and or code to be executed by the processor .

The processor generally may be implemented using any processor or logic device. In various embodiments the processor may be implemented as a general purpose processor a CMP a dedicated processor an embedded processor a DSP a network processor a media processor an I O processor a MAC processor a radio baseband processor a co processor a microprocessor a controller a microcontroller an ASIC a FPGA a PLD and so forth. In various implementations the processor may include at least one core comprising for example an arithmetic logic unit ALU and a number of registers. The core may be arranged to execute digital logic and may provide for multiple threads of execution.

In various embodiments the nonvolatile memory may be arranged to receive information over one or more communications media . The communications media generally may comprise any medium capable of carrying information signals such as wired communication media wireless communication media or a combination of both as desired for a given implementation. The communications media may comprise for example wired communication media such as a bus to interconnect various functional units of the computing system . Other examples of wired communications media may include a wire a cable a printed circuit board PCB a backplane a switch fabric semiconductor material twisted pair wire co axial cable fiber optics and so forth. An example of wireless communication media may include portions of a wireless spectrum such as the radio frequency RF spectrum. The embodiments are not limited in this context.

In various embodiments the nonvolatile memory may be arranged to receive information through a communications interface . The communications interface may comprises any suitable hardware software or combination of hardware and software that is capable of coupling the computing system to one or more networks and or network devices. The communications interface may be arranged to operate with any suitable technique for controlling information signals using a desired set of communications protocols services or operating procedures. The communications interface may include the appropriate physical connectors to connect with a corresponding communications medium.

In various embodiments the communications interface may comprise one or more interfaces such as for example a wireless communications interface a wired communications interface a network interface a transmit interface a receive interface a media interface a system interface a component interface a switching interface a chip interface a controller e.g. disc controller video controller audio controller and so forth. When implemented by a wireless device or wireless system for example the computing system may include a wireless interface comprising one or more antennas transmitters receivers transceivers amplifiers filters control logic and so forth.

In various embodiments the nonvolatile memory may include features to provide protection against malicious attempts by a virus to modify the nonvolatile memory . Such features may comprise or be implemented by hardware software and or any combination thereof as desired for a given set of design parameters or performance constraints.

As shown the nonvolatile memory may comprise a program buffer and a nonvolatile memory array . In various embodiments the nonvolatile memory may be arranged to buffer information in the program buffer prior to programming the information in the nonvolatile memory array .

The nonvolatile memory may comprise one or more protected storage areas. In one embodiment the protected storage areas may comprise one or more nonvolatile memory blocks of the nonvolatile memory array . As shown in the protected storage areas may include nonvolatile memory blocks and of the nonvolatile memory array . The embodiments however are not limited to the example of .

The nonvolatile memory array may comprise a plurality of protected status cells where n represents a positive integer value. In various embodiments the protected status cells may be programmed to identify one or more of the nonvolatile memory blocks as a protected storage area. As shown in each the protected status cells and includes protected status bit set to one indicating nonvolatile memory blocks and are protected storage areas. The embodiments however are not limited to the example of .

The nonvolatile memory array may comprise a protected key storage area . In various embodiments the protected key storage area may be arranged to be programmed with a security key. The security key may comprise for example a public asymmetric key to be used to transform e.g. decrypt information buffered in the program buffer .

The nonvolatile memory may be arranged to determine the protection status of on or more nonvolatile memory blocks of the memory array . If the protection status bit is set 1 protected the nonvolatile memory may perform transformation of the information in the program buffer . If the protection status bit is reset 0 normal the nonvolatile memory may perform a normal programming operation.

The nonvolatile memory may be arranged to transform information that is to be programmed in one or more of the protected nonvolatile memory blocks and . The nonvolatile memory may be arranged for example to transform the buffered information in the program buffer . In various embodiments the nonvolatile memory may be arranged to perform a one way transformation operation such as a one way decryption operation. In such embodiments the nonvolatile memory may perform dynamic or on the fly one way decryption of the information in the program buffer during programming of the protected nonvolatile memory blocks and 

Referring to the program buffer may receive encrypted information to be programmed in one of the protected nonvolatile memory blocks and . The nonvolatile memory may be arranged to perform a one way transformation operation such as a one way decryption operation on the encrypted information buffered in the program buffer . In various embodiments the transformation operation may be performed using the security key programmed in the protected key storage area . If the information was encrypted appropriately prior to being buffered in the program buffer the result of the transformation is clear information to be programmed in one of the protected nonvolatile memory blocks and . As such subsequently reading one of the protected nonvolatile memory blocks and will obtain the correct information.

Referring to the program buffer may receive clear information to be programmed in one of the normal e.g. unprotected nonvolatile memory blocks . The nonvolatile memory may be arranged to perform normal programming and to store the clear information in one of the normal nonvolatile memory blocks .

Referring to the program buffer may receive clear information from a virus to be programmed in one of the protected nonvolatile memory blocks and . The nonvolatile memory may be arranged to perform a one way transformation operation such as a one way decryption operation on the encrypted information buffered in the program buffer . In various embodiments the transformation operation may be performed using the security key programmed in the protected key storage area . Because the information buffered into the program buffer included clear data the result of the transformation is scrambled jumbled unintelligible and or meaningless information to be programmed in one of the protected nonvolatile memory blocks and . Accordingly the nonvolatile memory may provide protection against malicious attempts by a virus to modify the nonvolatile memory .

Operations for various embodiments may be further described with reference to the following figures and accompanying examples. Some of the figures may include a logic flow. It can be appreciated that the logic flow merely provides one example of how the described functionality may be implemented. Further the given logic flow does not necessarily have to be executed in the order presented unless otherwise indicated. In addition the logic flow may be implemented by a hardware element a software element executed by a processor or any combination thereof. The embodiments are not limited in this context.

The logic flow may comprise configuring one or more protected storage areas in a nonvolatile memory block . In various embodiments the protected storage areas may comprise one or more nonvolatile memory blocks of a nonvolatile memory array in the nonvolatile memory. Configuring a protected storage area may comprise for example programming a protected status cell to identify a nonvolatile memory block as a protected storage area. Programming a protected status cell may comprise setting a protected status bit set to indicate that a nonvolatile memory block associated with the protected status cell is a protected storage area.

The logic flow may comprise storing a security key associated with the one or more protected storage areas block . In various embodiments the security key may comprise a public asymmetric key to be used to transform e.g. decrypt information. Storing the security key may comprise for example programming the security key in a protected key storage area of a nonvolatile memory array.

The logic flow may comprise buffering information to be programmed in the nonvolatile memory block . In various embodiments the nonvolatile memory may comprise a program buffer arranged to buffer information prior to programming the information in a nonvolatile memory array.

The logic flow may comprise transforming information to be programmed in one or more protected storage areas block . In various embodiments the protected storage areas may comprise one or more nonvolatile memory blocks of a nonvolatile memory array in the nonvolatile memory. The information to be programmed may comprise information buffered in a program buffer. Transforming may comprise for example determining the protection status of one or more nonvolatile memory blocks of a memory array and performing transformation of information in a program buffer if the information is to be programmed in a protected nonvolatile memory block. Transforming may comprise performing a one way transformation operation such as performing dynamic or on the fly one way decryption of information in a program buffer during programming of a protected nonvolatile memory block.

The logic flow may comprise programming one or more protected storage areas with transformed information block . The transformed information may comprise clear and or correct information if the information was encrypted appropriately prior to being buffered in the program buffer. As such subsequently reading the protected storage areas will obtain the correct information. The transformed information may comprise scrambled jumbled unintelligible and or meaningless information if the information buffered into the program buffer includes clear data and or improperly encrypted data from a virus for example. As shown the logic flow may comprise repeating the buffering of information block the transforming of information block and the programming of transformed information block . The embodiments however are not limited in this context.

In various implementations the described embodiments may comprise or form part of a wired communication system a wireless communication system or a combination of both. Although certain embodiments may be illustrated using a particular communications media by way of example it may be appreciated that the principles and techniques discussed herein may be implemented using various communication media and accompanying technology.

In various implementations the described embodiments may comprise or form part of a network such as a Wide Area Network WAN a Local Area Network LAN a Metropolitan Area Network MAN a wireless WAN WWAN a wireless LAN WLAN a wireless MAN WMAN a wireless personal area network WPAN a WiMAX network a broadband wireless access BWA network the Internet the World Wide Web a telephone network a radio network a television network a cable network a satellite network a Code Division Multiple Access CDMA network a third generation 3G network such as Wide band CDMA WCDMA a fourth generation 4G network a Time Division Multiple Access TDMA network an Extended TDMA E TDMA cellular radiotelephone network a Global System for Mobile Communications GSM network a Synchronous Division Multiple Access SDMA network a Time Division Synchronous CDMA TD SCDMA network an Orthogonal Frequency Division Multiplexing OFDM network an Orthogonal Frequency Division Multiple Access OFDMA network a North American Digital Cellular NADC cellular radiotelephone network a Narrowband Advanced Mobile Phone Service NAMPS network a Universal Mobile Telephone System UMTS network and or any other wired or wireless communications network configured to carry data.

In various implementations the described embodiments may be arranged to communicate using a number of different WWAN data communication services. Examples of cellular data communication systems offering WWAN data communication services may include a GSM with General Packet Radio Service GPRS systems GSM GPRS CDMA 1 RTT systems Enhanced Data Rates for Global Evolution EDGE systems Evolution Data Only or Evolution Data Optimized EV DO systems Evolution For Data and Voice EV DV systems High Speed Downlink Packet Access HSDPA systems and so forth.

In various implementations the described embodiments may be arranged to communicate in accordance with a number of wireless protocols. Examples of wireless protocols may include various WLAN protocols including the Institute of Electrical and Electronics Engineers IEEE 802.xx series of protocols such as IEEE 802.11a b g n IEEE 802.16 IEEE 802.20 and so forth. Other examples of wireless protocols may include various WWAN protocols such as GSM cellular radiotelephone system protocols with GPRS CDMA cellular radiotelephone communication systems with 1 RTT EDGE systems EV DO systems EV DV systems HSDPA systems and so forth. Further examples of wireless protocols may include WPAN protocols such as an Infrared protocol a protocol from the Bluetooth Special Interest Group SIG series of protocols including Bluetooth Specification versions v1.0 v1.1 v1.2 v2.0 v2.0 with Enhanced Data Rate EDR as well as one or more Bluetooth Profiles and so forth. Other examples of wireless protocols may include near field communication techniques and protocols such as electromagnetic induction EMI techniques. An example of EMI techniques may include passive or active radio frequency identification RFID protocols and devices. Other suitable protocols may include Ultra Wide Band UWB Digital Office DO Digital Home Trusted Platform Module TPM ZigBee and other protocols.

In various implementations the described embodiments may employ one or more protocols such as medium access control MAC protocol Physical Layer Convergence Protocol PLCP Simple Network Management Protocol SNMP Asynchronous Transfer Mode ATM protocol Frame Relay protocol Systems Network Architecture SNA protocol Transport Control Protocol TCP Internet Protocol IP TCP IP X.25 Hypertext Transfer Protocol HTTP User Datagram Protocol UDP and so forth.

Unless specifically stated otherwise it may be appreciated that terms such as processing computing calculating determining or the like refer to the action and or processes of a computer or computing system or similar electronic computing device that manipulates and or transforms data represented as physical quantities e.g. electronic within the computing system s registers and or memories into other data similarly represented as physical quantities within the computing system s memories registers or other such information storage transmission or display devices.

Some embodiments may be implemented for example using a machine readable medium or article which may store an instruction or a set of instructions that if executed by a machine may cause the machine to perform a method and or operations in accordance with the embodiments. Such a machine may include for example any suitable processing platform computing platform computing device processing device computing system processing system computer processor or the like and may be implemented using any suitable combination of hardware and or software. The machine readable medium or article may include for example any suitable type of memory unit memory device memory article memory medium storage device storage article storage medium and or storage unit for example memory removable or non removable media erasable or non erasable media writeable or re writeable media digital or analog media hard disk floppy disk Compact Disk Read Only Memory CD ROM Compact Disk Recordable CD R Compact Disk Rewriteable CD RW optical disk magnetic media magneto optical media removable memory cards or disks various types of Digital Versatile Disk DVD a tape a cassette or the like. The instructions may include any suitable type of code such as source code compiled code interpreted code executable code static code dynamic code and the like. The instructions may be implemented using any suitable high level low level object oriented visual compiled and or interpreted programming language such as C C Java BASIC Perl Matlab Pascal Visual BASIC assembly language machine code and so forth.

Some embodiments may be implemented using an architecture that may vary in accordance with any number of factors such as desired computational rate power levels heat tolerances processing cycle budget input data rates output data rates memory resources data bus speeds and other performance constraints. For example an embodiment may be implemented using software executed by a general purpose or special purpose processor. In another example an embodiment may be implemented as dedicated hardware such as a circuit an ASIC PLD or DSP and so forth. In yet another example an embodiment may be implemented by any combination of programmed general purpose computer components and custom hardware components.

It is also worthy to note that any reference to one embodiment or an embodiment means that a particular feature structure or characteristic described in connection with the embodiment is included in at least one embodiment. The appearances of the phrase in one embodiment in various places in the specification are not necessarily all referring to the same embodiment.

While certain features of the embodiments have been illustrated as described herein many modifications substitutions changes and equivalents will now occur to those skilled in the art. It is therefore to be understood that the appended claims are intended to cover all such modifications and changes as fall within the true spirit of the embodiments.

