---

title: Remote feature activation authentication file system
abstract: A system for providing a user with authorization to perform one or more functions using or otherwise involving a computational component is provided. The system includes an authentication file system  operable to (a) receive a request from a user for a second set of authentication information permitting a second set of operations to be performed on a computational component, wherein the computational component is operable to be installed by the user on the computational system, wherein the computational component contains a first set of authentication information permitting a first set of operations to be performed on the computational component; and wherein the first and second sets of operations are different; (b) generate an authentication file containing the second set of authentication information; and (c) transmit the authentication file to the computational system.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07913301&OS=07913301&RS=07913301
owner: Avaya Inc.
number: 07913301
owner_city: Basking Ridge
owner_country: US
publication_date: 20061030
---
This application is a divisional of U.S. application Ser. No. 10 348 107 filed Jan. 20 2003 to Walker et al. which claims the benefits under 35 U.S.C. 119 of U.S. Provisional Patent Application Ser. No. 60 436 874 filed Dec. 26 2002 to Walker et al. each of which is incorporated herein by this reference.

The present invention is directed specifically to authentication systems and specifically to authentication systems for telecommunication systems.

When software is installed in a system particularly a telecommunication system it is often necessary to establish service logins within the system for maintenance personnel. These service logins must be very secure to prevent the existence of the login not only from presenting a security risk for the customer but also from being compromised by the customer who can then change the software and right to use restrictions for the software. As used herein a login refers to a sequence of symbols or a combination of symbol sequences such as a user ID or login name and a password and or a key that must be correctly inputted into a computational component for a user to be authorized to perform one or more functions using or otherwise involving the computational component. As will be appreciated a password is a unique character or sequence of characters known to a computational component and to a user who must specify the character or character sequence to be authorized to perform one or more functions using or otherwise involving the computational component and a key is a sequence of symbols used with a cryptographic algorithm for encrypting or decrypting data. Examples of keys include key encrypting keys key exchange keys master keys private keys and public keys.

In designing a method for initializing the service logins on the system it is desirable to meet a number of criteria. First for maximum security each service login should have a unique access key. Second the service login access keys should be established in the system software not only when it is shipped with the system but also at the time of system installation. Default passwords once compromised provide little if any meaningful security. The software that is shipped with the system should be capable of being distributed electronically and of being copied so that a single copy can be used to install multiple systems. Third the service logins should be capable of being initialized by a non trusted person who does not have login privileges without compromising the login access keys. For example many telecommunication systems are installed by technicians and business partners that are not allowed to have knowledge of the access keys. Fourth once the logins are initialized the access key information must be known to the manufacturer or system maintenance provider. This is needed to permit service personnel to login using the access keys in the future for system maintenance. Fifth the service logins should be able to be initialized without requiring a network or data connection from the manufacturer s or system maintenance provider s system directly to the customer s system as such direct communication is not always possible. Sixth any system to initialize services logins should be available globally as most manufacturer s sell systems internationally. Seventh a mechanism should be provided to ensure that the service logins are initialized on the customer s system before installation can be completed. Systems cannot be serviced without the service logins being initialized. Eighth the access keys should be able to be updated or changed after initialization in the event that an access key is compromised. Finally a mechanism should be provided to ensure that the login access keys for a given system can only be installed on the intended system. If the access key is installed on the wrong system it would not be possible to access that system since its access keys would be different than those listed in the manufacturer s maintenance provider s database.

These and other needs are addressed by the various embodiments and configurations of the present invention. The present invention is directed to an architecture and process for providing authentication information typically in encrypted form remotely to a computational system. As used herein authentication refers to verification of the identity of a user or the user s eligibility to access an object and authentication information refers to information such as passwords names and keys used by a computational component or system to perform verification of the user s identity or eligibility to access the object.

In one embodiment of the present invention a process for providing a user with authorization to perform one or more functions using or otherwise involving the computational component is provided. The process includes the steps of 

 a Providing a computational component e.g. contact switching routing or handling hardware and or software for installation by a user e.g. a trusted or non trusted party on a computational system e.g. a telecommunication switch or server . The computational component has a first set of authentication information e.g. a login name and or default password permitting a first set of operations to be performed on the computational component.

 b Receiving a request from the user for a second set of authentication information e.g. a login name and a password and or key permitting a second set of operations to be performed on the computational component. The first and second sets of operations are different.

In one configuration the first set of authentication information includes a default password and the first set of operations includes the operation of requesting delivery of the authentication file. The default password provides limited or no ability of the user to access or alter information or objects stored or otherwise contained in the computational component.

In one configuration the computational system is associated with a unique identifier and the authentication file includes the unique identifier. The unique identifier for example can be a serial number or other type of identifier of the computational component being installed or already in the computational system such as a processor. In this manner the authentication file is linked one to one with the computational system and cannot be used on a different computational system.

In yet another embodiment a process for installing a computational component on the computational system is provided. The process includes the steps of 

 a Providing a computational component for installation by a user on a computational system the computational component having a first set of authentication information permitting a first set of operations to be performed on the computational component 

 b Receiving the first set of authentication information from the user before during or after installation of the computational component on the computational system.

 d When the first set of authentication information is successfully verified receiving a request from the user for a second set of authentication information permitting a second set of operations to be performed on the computational component.

In one configuration the loading step includes the step of validating and decrypting the authentication file. The validating step typically includes at least one of the following operations a determining whether or not a serial number contained in the authentication file matches a serial number associated with the computational system b determining whether or not a right to use the computational component has expired c determining whether or not a version contained in the authentication file matches a version of the computational component d verifying data integrity of the authentication file and e determining whether or not the authentication file length and format are correct.

In yet another embodiment an authentication file for use in controlling access to a computational system is provided. The data structures in the file include 

The file can also include one or more of the following a platform type associated with the computational system a software release associated with software operating on the computational system and a right to use expiration date associated with the software.

In an exemplary configuration the steps are performed in response to a technician logging onto a central website to request an authentication file for the computational component. The website is used for license creation and delivery for computational components and already has a database record for the computational system that was generated to obtain a right to use license. The technician identifies the appropriate database record for the system and requests delivery of the authentication file. Password s key s and or other authentication information are then collected and assembled into the authentication file. The file is encrypted and delivered to the technician via e mail and downloaded to the technician s computer. The key generation and creation of authentication files is done automatically without presenting any key information to the technician. Because the file is encrypted when delivered and the security rules governing the default password severely limit the use privileges of the user the access keys within the file are not compromised when the file is delivered to the technician. The technician can therefore be a trusted or non trusted party. As used herein a non trusted party refers to a party who is not provided with access to and or the ability to alter a defined set of information or objects. A trusted party on the other hand is a party who is provided with access to and or the ability to alter the defined set of information or objects. Examples of a non trusted party are a purchaser of the computational component and maintenance personnel who are not employees of the manufacturer of the computational component. The computational component can thus be installed and login initialization performed by any person without regard to his or her trustworthiness. Because the login access keys are contained in a data file the keys can be transferred to the system software without direct communication between the manufacturer and the system software. The data file can be transported to the system via magnetic media optical media e mail or other means not requiring a real time connection.

The invention can provide a number of advantages compared to conventional systems. For example each service login can have a unique access key thereby providing maximum security. Second the service login access keys can be established in the system software not only when the software is shipped with the system but also at the time of system installation. The default password even if compromised has extremely limited use privileges thereby maintaining meaningful levels of security. The software that is shipped with the system is capable of being distributed electronically and of being copied so that a single copy can be used to install multiple systems. Third the service logins can be initialized by a non trusted person who does not have login privileges without compromising the login access keys. For example telecommunication systems can be readily installed by technicians and business partners without providing them with access keys. Fourth once the logins are initialized the access key information can be readily available to the manufacturer or system maintenance provider. This permits service personnel to login using the access keys in the future for system maintenance. Fifth the service logins can be initialized without requiring a network or data connection from the manufacturer s or system maintenance provider s system directly to the customer s system. Sixth the system to initialize service logins can be available globally to accommodate international sales. Seventh the service logins can be initialized on the customer s system before installation can be completed. Systems can thereby be immediately serviced. Eighth the access keys can be updated or changed after initialization in the event that an access key is compromised. Ninth due to the use of a unique identifier in the authentication file login access keys for a given system can only be installed on the intended system.

The above described embodiments and configurations are neither complete nor exhaustive. As will be appreciated other embodiments of the invention are possible utilizing alone or in combination one or more of the features set forth above or described in detail below.

Referring to the authentication file system comprises a remote feature activation or RFA system to create encrypt and deliver authentication files a password change system scheduler that periodically requests the RFA system to provide authentication files containing new passwords according to predetermined authentication information aging policies password storage for storing and retrieving passwords and related information e.g. a unique platform identifier or PID a unique system identifier or SID a unique module identifier or MID a functional location and platform type associated with each stored password a password retrieval agent for adding updating modifying and validating of entries in the password storage based on predetermined rules or policies and retrieving stored passwords a first business application programming interface or BAPI to process messages between the RFA system and password retrieval agent key storage for storing keys and associated key information e.g. PID SID MID and platform type associated with each stored access key a key manager for creating keys for adding updating modifying and validating of entries in the key storage based on predetermined rules or policies and for retrieving stored keys and a second BAPI to process messages between the RFA system and key manager .

The RFA system comprises a remote feature activator to supervise the operation of the remote feature activation system and completion of the transaction records to update an authentication file history log discussed below an authentication file generator to generate authentication files a password creator discussed below to create a random password in response to a password creation request from the authentication file generator a platform login table containing a listing of the logins for each platform type based on the software release an authentication file history log containing a record of all authentication file activity e.g. the SID associated with a switch server MID associated with the switch server PID associated with the switch server software release request or transaction number request or transaction type source of the request date and time of transaction success failure of the request and any error messages and the authentication file encryptor that converts the generic plain text authentication file into an encrypted authentication file that is ready for delivery to the target system.

The data structures in the platform login table are shown in . As can be seen from for each platform type and release typically of the software loaded onto the switch server a serial swap out indicator that indicates whether or not a new authentication file is required when the license file serial number is changed in the remote feature activation system record the location in password storage of the corresponding record containing password s a listing of logins or login names an identifier associated with the user whether a password is required yes no any default passwords used before installation of an authentication file the password length for new password creation and existing password verification availability of key protection yes no and the key setting on off . The platform login table is used by the authentication file generator to determine what logins to put in the authentication file. The table also defines which logins require keys and which logins require passwords. The logins required for a switch server are based on the platform or switch server type or model and the software release.

Referring to the authentication file typically includes the platform type serial number associated with the switch server typically the serial number of an associated processor in the switch server software release right to use expiration date for the loaded software platform ID a listing of login names and associated passwords and a listing of login names and associated keys. The file typically contains password definitions for the logins requiring passwords and key definitions for the logins requiring keys.

A telecommunication switch server such as the DEFINITY 58700 58300 and 58100 switches servers sold by Avaya Inc. is in communication with the authentication file system via PSTN . The switch server comprises memory and a processor . The switch server comprises an authentication file delivered by the system and a local access controller for generating authentication file delivery requests and installing received encrypted authentication files on the switch server. A terminal such as a PC is connected to the switch server to permit users to interface with the switch server. The terminal preferably includes a graphical user interface for the user.

The authentication file system delivers authentication files to target or requesting switches servers that typically run on an open operating system. These authentication files contain the non default passwords and keys for services logins to these switches servers. Authentication file delivery generates the encrypted authentication file for delivery to the system over a geographically distributed processing network. The authentication file generator interfaces with the password retrieval agent for password storage and retrieval and with the key manager for key generation storage and retrieval. The password change system scheduler interfaces with the remote feature activator to request authentication files periodically with new passwords and existing keys. This is done by submitting a password change request to the authentication file system . The activator issues an authentication file request for each switch server identified in the password change request.

Secure and unsecure users with basic low level logins can request authentication file delivery remotely from the authentication file system . The file can be delivered by any medium such as via a switch contact via direct dial in to the switch server email or Web download. The authentication files can include new or existing passwords or keys. When system records are created for switches servers requiring authentication files and when upgrade modules are added to a switch server requiring password files and reflected in existing system records for the switch server the remote feature activator sends a record creation request to the password retrieval agent and key manager as discussed below with reference to . The records in password storage and key storage are needed to store the passwords and keys for the switch server. When there is an existing record for a switch server the remote feature activator sends an authentication file request where an authentication file comprising a new or existing password or new or existing key is required. This process is discussed below with reference to and . A license file or authentication file cannot be delivered for a switch server unless a record creation request has been successfully completed for that switch server.

When a computational component such as hardware or software is installed on the switch server administrative personnel must have the ability to log onto the system as an authentication file has not yet been delivered. Typically the hardware or software is installed with a default password. The default password permits the user to issue a request for an authentication file to be installed on the switch server. The default password has extremely limited use privileges which are typically limited to the right to request installation of an authentication file and certain software hardware installation commands. In one configuration the user cannot logon to the software being installed using the default password or otherwise access or alter the information or objects in the software. In the event that the authentication file after installation is erased or otherwise unusable the default password is retained in memory to permit the user to re install the authentication file.

Referring to the process to create a record will now be discussed. The remote feature activator in step initially receives a record creation request. The request can be sent by maintenance personnel at the time of sale or installation of the switch server or at the time of sale or installation of upgrades to the switch server. In step the record creation request is forwarded to the authentication file generator . The record creation request includes the system ID or SID module ID or MID request number request type module add or application add platform type software release applications for module add this is a listing of the applications for a given module and for application add this is a listing of all the applications that were added to the module software version for each application in the record creation request platform ID or PID serial number associated with the switch server and the like .

Referring now to the record creation request in step is received by the authentication file generator . The authentication file generator in step forwards the record creation request to the key manager and password retrieval agent . The record creation request to the password retrieval agent and key manager includes the SID MID and PID.

Referring to the password retrieval agent in step receives the record creation request from the generator and in step processes the request. The agent sets up a record for the switch server by either creating a new record or modifying an existing record and assigning a platform PID if needed to the switch server. In step the agent returns a record creation response authentication file generator . The response includes the SID MID PID an indicator regarding whether or not the record was successfully created and any error messages.

Referring now to the key manager in step receives the record creation request from the generator . In decision diamond the manager determines whether or not the platform PID included within the request is already in an existing record in key storage . If the PID in the request is not already in a record the manager in step creates new keys for each login and a new record. Key storage stores one or more versions of the confirmed keys for each switch server and the last delivered keys if they have not yet been confirmed. This storage allows login to the switch server when the last delivered authentication file was not successfully installed. If the PID in the request is already in a record the record creation request fails.

In step the manager generates and sends a record creation response containing the platform PID to the authentication file generator . The response includes an indicator of the success or failure of the request.

Referring again to the authentication file generator when record creation responses from both the password retrieval agent and key manager are received determines in step whether the response is a pass or fail.

When the response from the key manager indicates a failure due to there being an existing record in key storage the generator in step generates and sends a record update request to the key manager . The update request includes the SID MID and PID associated with the switch server. Referring to the manager in step receives the record update request and in step updates the existing record in key storage containing the platform PID. In step the manager generates and sends a record update response to the authentication file generator . The response contains the SID MID an indicator of the success or failure of the record update request and any error messages. As will be appreciated failure is deemed to exist when a record having the platform PID in the update request cannot be located in key storage . In step of the generator receives the response.

After step or when the record creation response from the password retrieval agent includes a failure indicator or when the record creation response from the agent or manager includes a success indicator the generator performs step . In step the generator generates and sends an overall record creation response to the remote feature activator . The response includes the SID MID PID request number the success or failure of the record creation operation in password storage and key storage and any error messages.

Returning again to the remote feature activator in step receives the overall record creation response logs the response into the authentication file history log and generates and sends a response to the requester. If the response includes an error message indicating that a record creation request failed or if the activator gets no response from the generator to a record creation request the response to the requester shall be an error message and no requests for a license file or authentication file delivery shall be allowed. Such requests will only be allowed if a record creation request is successfully acted upon.

In step an authentication file delivery request is received by the remote feature activator from the user of the terminal or a user connected directly to the authentication file system .

In step an authentication file request is generated by the remote feature activator and in step sent to the authentication file generator . The authentication file request is either for new or existing passwords and or new or existing keys. The authentication file request typically includes the SID associated with the switch server the MID associated with the switch server a request number a platform type an application description a software version the PID associated with the switch server a serial number associated with the switch server an expiration date of a right to use a password type new or existing and a key type new or existing .

Referring to the authentication file generator receives in step the authentication file request from the activator . The generator determines whether there is a pending authentication file request for the specified switch server SID or PID i.e. an authentication file has been delivered to the activator but the activator has not yet responded with a delete information request . If there is a pending request for the switch server the passwords and keys delivered in the authentication file shall be the same passwords as delivered in the pending request. If there is not a pending request for the switch server the generator in step determines the type of authentication file request received from the activator .

When the request is for new passwords the generator proceeds to step and generates and sends a password creation request to the password creator one request per login . Referring to the creator receives the password creation request in step and creates the requested random password s according to predefined rules in step one password login . The password length of the new passwords is specified in the platform login table. In step the creator generates and sends the newly created password s back to the generator in a password creation response.

Returning to the generator in step receives the password creation response. The generator does not allow the passwords for different logins to be the same. If this occurs the generator requests another new password. The generator then proceeds to step discussed below .

When the request is for existing password s the generator proceeds to step and generates and sends a password retrieval request to the password retrieval agent . The password retrieval request includes the SID MID and login names for which passwords are needed. The password retrieval agent retrieves the password s and sends a password retrieval response including the SID MID a success failure indicator and if located the password s for each login name back to the generator . The password retrieval response is received by the generator in step .

In decision diamond the generator determines whether there is an existing valid password s for a login that requires a password e.g. there is a password the password is of the length specified in the platform login table the password is the default as specified in the platform login table . If there is no existing valid password the generator proceeds to step discussed above. If there is an existing valid password the generator proceeds to step .

In step the generator determines whether the authentication file request is for new or existing keys. When the request is for new keys the generator proceeds to decision diamond and when the request is for existing keys proceeds to decision diamond .

In decision diamond the generator determines whether there are any unconfirmed keys. As used herein an unconfirmed key refers to a key that has been generated but has not been successfully delivered while a confirmed key refers to a key that has been generated and successfully delivered. This is done by sending a key confirmation status request containing the SID and MID to the key manager . In response the key manager returns a message including the SID MID and an indicator if there any unconfirmed keys for the switch server are present. When there are unconfirmed keys and an authentication file with existing keys is to be generated the generator returns an error message to the remote feature activator in step indicating that existing keys were previously provided. The generator then proceeds to step discussed below . When there are no unconfirmed keys and an authentication file with existing keys is to be generated the generator in step issues a new key request to the key manager for each login specified in the platform login table. The new key request includes the SID MID and login for which the key is needed. In step the requested new keys are received by the generator .

In decision diamond the generator determines whether there are any unconfirmed keys. This is done by sending a key confirmation request to the key manager. When there are unconfirmed keys the generator in step queries the key manager for the unconfirmed key. When there are no unconfirmed keys the generator in step queries the key manager for the confirmed keys. The key request includes the SID MID key type current key or unconfirmed key and the login for which the key is needed. The unconfirmed or unconfirmed keys as the case may be are received by the generator in step and later used in the authentication file.

Referring to the generator assembles the authentication file in plain text form in step and provides the plain text file to the encryptor in step . Referring now to the encryptor receives the encryption request containing the plain text file in step encrypts the file in step and returns an encryption response containing the encrypted authentication file to the generator in step .

In step the generator receives the encryption response from the encryptor and in step generates and sends an authentication file response to the remote feature activator . The response includes the SID MID request number the success or failure of the authentication file request encrypted authentication file information e.g. file name and location new or existing password s new or existing keys and any error messages.

Referring again to the remote feature activator receives the authentication file response from the generator in step . In step the encrypted authentication file is delivered via PSTN to the switch server and or via network to the terminal for installation on the switch server. In step the activity is logged into the authentication file history log e.g. including request type source of the request date and time success failure of the request and any error messages . In step a delivery status message is generated and sent to the generator including the SID MID request number and the success or failure of the delivery to the switch server or terminal. A successful delivery is not necessarily the same event as a successful installation on the switch server. An authentication file can be successfully delivered but never installed on the switch server.

Referring again to the generator in step receives the delivery status message. In decision diamond the generator determines if the delivery status message indicates a delivery success or failure. If the delivery was successful the generator in step generates and sends a key confirmation message to the key manager . The key confirmation message contains the delivered newly created keys and the PID of the switch server. Only newly created or otherwise unconfirmed keys require confirmation to the key manager. The key manager confirms the keys for the switch server and sends a key confirmation response back to the generator indicating that the keys were successfully confirmed. The key confirmation response is received by the generator in step .

In decision diamond the generator next determines whether new password s were provided to the switch server. When new password s were provided to the switch server the generator in step generates and sends a password store request to the password retrieval agent . The password store request includes the SID MID PID and the new password s . The agent updates the record corresponding to the switch server in password store and generates and sends a password store response to the generator . The response includes the SID MID an indicator of the successful completion of or failure to complete the password store request and any error messages. The response is received by the generator in step . When no new password s were provided to the switch server decision diamond when the delivery status message indicates a failure decision diamond or after completion of step the generator generates and sends a delivery status response message to the remote feature activator . The message includes the SID MID request number the success failure of the key confirmation the message ID of the password storage request and any error messages. Once any new passwords have been successfully stored in password storage the activator sends a delete information request which includes the SID MID and request number to the generator indicating that the temporary record created by the generator with the encrypted authentication file can be deleted. In response to the delete information request from the activator the generator deletes the record associated with the authentication file delivery e.g. the record containing the plain text authentication file and returns a response message to the activator indicating the success failure of the record deletion. The response message includes the SID MID request number and the success failure of the record deletion.

In decision diamond the local access controller performs a series of checks to determine if the authentication file is valid. The local access controller confirms that the serial number contained in the authentication file matches the serial number of the active processor in the switch server that the right to use has not expired that the version or release contained in the authentication file matches the software version or release loaded onto the switch server the authentication file has data integrity by using a checksum or other suitable approach and that the authentication file length and format are correct.

If one or more of the preceding queries is not confirmed the local access controller proceeds to step and displays a suitable error message to the user and terminates operation.

If each of the queries is confirmed the new authentication file is stored in translation in step . The new authentication file overwrites the authentication file already in memory.

Once the file is installed the logins are initialized and the access keys within the file are used by the controller to authenticate users attempting to login using a service login. To ensure that the file is installed and service logins are activated the controller will not provide full functionality until a valid authentication file is installed. The authentication file delivery and loading steps in the installation process cannot be skipped or forgotten because additional installation steps cannot be completed unless the authentication file is in place.

If it is necessary or desired to change the access keys after initial installation of the telecommunication switch server a new authentication file with new access keys can be requested from the authentication file system website delivered to the technician and installed on the switch server . A date time stamp is used in each authentication file to ensure that when a new authentication file is installed in place of an existing authentication file on a switch server the new file is in fact newer than the existing file. This prevents accidental installation of an older file which would result in the access keys of record in the key storage differing from the access keys on the switch server.

When it is necessary to log into the authentication file system using a service login the key manager accesses key storage to locate and retrieve the unique key for the switch server from which the login request is received. The key is used to successfully provide the correct response to the access challenge generated by the authentication file system based on the same access key in the authentication file installed on the switch server .

A number of variations and modifications of the invention can be used. It would be possible to provide for some features of the invention without providing others.

For example in one alternative embodiment the various modules referenced herein are implemented as software hardware e.g. a logic circuit or a combination thereof.

In another alternative embodiment the division of the various functions performed by the various modules in the authentication file system are different.

In another alternative embodiment the authentication file can include fields for any number of unique identifiers for the same or differing types of hardware components. For example for validation of the authentication file to be successful the local access controller could require that there be matches for serial numbers not only of a control processor but also of an application specific integrated circuit or another type of hardware component.

The present invention in various embodiments includes components methods processes systems and or apparatus substantially as depicted and described herein including various embodiments subcombinations and subsets thereof. Those of skill in the art will understand how to make and use the present invention after understanding the present disclosure. The present invention in various embodiments includes providing devices and processes in the absence of items not depicted and or described herein or in various embodiments hereof including in the absence of such items as may have been used in previous devices or processes e.g. for improving performance achieving ease and or reducing cost of implementation.

The foregoing discussion of the invention has been presented for purposes of illustration and description. The foregoing is not intended to limit the invention to the form or forms disclosed herein. In the foregoing Detailed Description for example various features of the invention are grouped together in one or more embodiments for the purpose of streamlining the disclosure. This method of disclosure is not to be interpreted as reflecting an intention that the claimed invention requires more features than are expressly recited in each claim. Rather as the following claims reflect inventive aspects he in less than all features of a single foregoing disclosed embodiment. Thus the following claims are hereby incorporated into this Detailed Description with each claim standing on its own as a separate preferred embodiment of the invention.

Moreover though the description of the invention has included description of one or more embodiments and certain variations and modifications other variations and modifications are within the scope of the invention e.g. as may be within the skill and knowledge of those in the art after understanding the present disclosure. It is intended to obtain rights which include alternative embodiments to the extent permitted including alternate interchangeable and or equivalent structures functions ranges or steps to those claimed whether or not such alternate interchangeable and or equivalent structures functions ranges or steps are disclosed herein and without intending to publicly dedicate any patentable subject matter.

