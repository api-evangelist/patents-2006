---

title: System and method for representing digital media
abstract: A computerized system for representing a digital media using both a bit stream and an associated metadata includes a codec configured to encode the digital media to the bit stream. The codec is further configured to generate a metadata representation stream of the bit stream that encapsulates information embedded in the bit stream and at least one type of media-related information. The system also includes a manager configured to assure synchronization between the bit stream and the metadata representation stream during streaming of the bit stream and the metadata representation stream.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07692562&OS=07692562&RS=07692562
owner: Hewlett-Packard Development Company, L.P.
number: 07692562
owner_city: Houston
owner_country: US
publication_date: 20061018
---
Digital entertainment DE applications typically involve relatively extensive interaction between consumers and the media. In DE applications therefore media is often captured edited managed rendered and distributed. An example of a DE application is a video editing application through which consumers annotate and modify the media. In other words DE applications differ from traditional playback types of applications because of the level of interactivity provided to the consumers. As such DE applications typically impact the media by adding a greater level of complexity which ranges from labeling a certain video frame as a keyframe but not changing the bit stream itself to reproduction of the bit stream itself such as splitting a media into multiple segments.

DE applications often need to access information embedded with media. For instance a media is often rendered on different output devices such as a printer a television a high definition television and a computer monitor. In order to determine the optimal rendering strategy for each of these output devices different applications request information pertaining to the media such as image aspect ratio and frame rate at different points in time. As another example in video editing and reproduction applications many tasks such as keyframe extraction high resolution frame production and panorama from multiple frames require motion information among video frames as a required piece of information. As such the motion information of the media is accessed frequently by the video editing and reproduction applications.

In DE applications the media itself is often represented in a coded bit stream such as MPEG 1 or MPEG 2 after being captured. These types of coded bit streams are the main forms of media representation in traditional media playback and media distribution applications mainly due to certain advantages associated with their compression and transmission. However in order to achieve the compactness that is required for compression and transmission of the coded bit streams relatively complex schemes have been adopted to encode the digital media to thereby generate the coded bit stream with relatively complicated data structures. The relatively complex coding mechanisms and coded bit streams often require sophisticated and complex mechanisms to access the information embedded in the coded bit streams.

Although these conventional methods of bit stream representation of digital media are suitable for general compression and decompression applications they are inefficient for DE applications due for instance to their complex requirements on media objects.

For simplicity and illustrative purposes the present invention is described by referring mainly to an exemplary embodiment thereof. In the following description numerous specific details are set forth in order to provide a thorough understanding of the present invention. It will be apparent however to one of ordinary skill in the art that the present invention may be practiced without limitation to these specific details. In other instances well known methods and structures have not been described in detail so as not to unnecessarily obscure the present invention.

Disclosed herein are a system and method for representing digital media in a form that may be suited for digital entertainment DE applications. More particularly disclosed herein are a system and method for generating and deploying media representations of digital media objects that use both coded bit streams and their associated metadata in the representations which may assist developers in the development of the DE applications. In one regard the associated metadata representations of the coded bit streams may more easily be accessed by the developers as compared with the coded bit streams themselves which may reduce the overall costs associated with the development of the DE applications.

In addition the system and method disclosed herein include a means for encapsulating the bit stream and the metadata to thereby assure the two stay synchronized throughout DE applications. In this regard the bit stream and the metadata may remain synchronized following changes to the bit stream.

With reference first to there is shown a block diagram of a conventional framework of how a media is represented and deployed in digital entertainment DE applications . As shown the coded bit stream is produced by passing the digital media through a codec that is responsible for encoding the digital media to the bit stream and to decode the bit stream . In addition the coded bit stream interacts with one or more DE applications through one of two possible paths a bit stream path depicted as dotted arrows and a metadata path depicted as solid arrows.

When the bit stream interacts with an application using the bit stream path the application operates on the bit stream directly. That is the application calls the codec functions to probe into the bit stream to retrieve the information needed by the application . If the application requires modification of the bit stream such as splitting the bit stream merging two bit streams scaling bit streams etc. the application also has to call codec functions to perform these tasks.

A relatively large number of conventional rendering and distribution applications interact through the bit stream path . For instance to print a frame from a video sequence a printing application extracts the frame pixels from the bit stream . As another example a display device such as a television monitor PDA etc. retrieves frames from the bit stream and outputs them to the display device to display a video sequence.

In the metadata path the bit stream is sent to an application metadata extraction module not shown which probes into the bit stream to compute the application oriented metadata . The application utilizes the metadata to support different media operations. In addition the application may also modify the application metadata . A number of editing applications have adopted the metadata path in their operations. For instance mpeg 7 has adopted the metadata path in a number of video management applications for describing the media content.

Generally speaking bit stream representations of digital media are relatively complex and it is thus relatively difficult to know where in the bit stream to find information about the bit stream such as how the pixels in an image are compressed. Application developers typically require this type of information and are often required to spend great amounts of time in locating needed information from the bit stream . One result of this requirement is that application developers often spend a large amount of time in dealing with all of the details at the bit stream level instead of on the application development which often results in higher application development costs.

In contrast to the conventional system for encoding and transmitting the bit stream a metadata centered media representation and deployment system is depicted in according to an example of the invention. Generally speaking the system may be employed to generate a representation of the bit stream that includes a metadata stream which encapsulates at least one type of media related information that is useful in DE applications.

Users such as application developers may thus obtain the useful information pertaining to the bit stream from the metadata stream. As such for instance the users do not have to probe into the bit stream to obtain the useful information because it is contained in the metadata stream. In addition because information contained in the metadata stream is easier and less costly to access than the bit stream the costs associated with accessing the useful information is substantially reduced over conventional systems.

As shown in the media representation communicated to one or more DE applications is labeled as mWeaver according to an example of the invention. As described in greater detail below mWeaver generally comprises a representation of the digital media which uses both the coded bit stream and metadata associated with the coded bit stream . In one example the mWeaver may be stored in extensible markup language XML to facilitate discovery and access to the data contained therein.

The mWeaver more particularly is generated by a relatively specialized codec labeled as mCodec in . The mCodec is similar to conventional codecs and is thus configured to encode the digital media to a bit stream and to also decode the bit stream . In one regard therefore the coded media bit stream may follow the same coding structure of existing bit streams such as mpeg 1 mpeg 2 etc. The mCodec differs however from conventional codecs because the mCodec is also configured to generate a metadata representation that encapsulates information embedded in the bit stream and at least one type of media related information. The metadata representation is denoted as mStream in .

The media related information may more particularly include information that is known to be useful in or associated with DE applications . The information to be presented in the mStream may generally comprise any of a number of different types of information. In one example the types of information to be presented may be selected according to the frequencies with which the information is typically accessed and retrieved from bit streams. That is those types of information that are more commonly and frequently accessed may be presented in the mStream over those types of information that are less frequently accessed.

By way of example one type of information presented in the mStream may include motion information which is widely used in supporting editing applications for keyframe extraction motion intensity descriptor computation etc. As another example in scalable transmission frame type information may be presented because the bandwidth requirement poses the need to drop a certain number of B frames and in mpeg 1 and mpeg 2 bit streams to satisfy a certain frame rate.

On the other hand types of information that are rarely found useful such as various flag header information embedded in the bit stream for parsing bits etc. may be omitted from the mStream . As another example and in certain instances types of information that are useful in some applications such as DCT coefficients of frames etc. may be omitted from the mStream because the costs associated with presenting and accessing these types of information may reach as high as the costs associated with probing into the bit stream to obtain the information.

In situations where information embedded in the bit stream has not been presented in the mStream the mCodec may probe into the bit stream to access and retrieve that information should that information be desired.

According to another example the mStream may encapsulate additional information in addition to the information embedded in the bit stream . The additional information may include information that is considered to be unrelated to compression transmission data such as media capture metadata. The media capture metadata may include for instance information pertaining to the lighting condition of the captured media color profile information etc. The color profile information may be useful for instance in rendering the media stream on projectors printing devices or the like.

With particular reference back to the system is further depicted as including an mManager . As shown therein the mManager may also be contained in the mWeaver representation and may be streamed transmitted or circulated along with the mStream and the bit stream to the DE applications . Alternatively however a pointer to the mManager may be transmitted with the mStream and the bit stream . In any regard the mManager generally operates to assure synchronization between the bit stream and the mStream because in order for a DE application to access either the mStream or the bit stream the DE application must call the APIs of the mManager as described in greater detail herein below. The mManager therefore assures that the mStream and the bit stream remain synchronized by preventing the DE applications from having direct access to either the bit stream or the mStream .

Generally speaking the mManager responds to requests from the applications through either the metadata path or the bit stream path . The requests from the applications may be classified into a first category called a breaking request which includes requests that require changing of the bit stream and thus the associated metadata representation mStream . The requests may also be classified into a second category called a retrieving request which includes requests that require retrieval of embedded metadata information from the mStream and not of the bit stream .

In one regard the mManager generally includes a set of application programming interfaces APIs that may be called to respond to the different types of requests. For retrieving requests the mManager may call APIs that operate on the mStream only. For breaking requests since the mManager may call APIs that instruct the mCodec to produce a new synchronized bit stream and mStream . In this case changes to the bit stream are guaranteed to also be reflected on the new mStream .

The mManager may thus support users in developing applications because the mManager automatically synchronizes the bit stream and the mStream as changes to the digital media are made based upon requests by the users. Thus for instance if a user wants to break a video down into two segments the mManager may automatically break down the video provide the parameters concerning the time stamp and may also synchronize the two segments. In addition therefore because synchronization between segments of the digital media are assured by the mManager users need only call a high level API to instruct the API to perform a desired operation on the digital media such as splitting the video combining multiple videos etc.

Through implementation of the system DE applications may not have direct access to the bit stream and the mStream but instead may call APIs exposed in the mManager . In this regard breaking requests sent to the mManager are answered by the mManager by calling the mCodec to generate a new bit stream and mStream . This encapsulation by the mCodec generally assures that the bit stream and the mStream stay intact and synchronized. In addition the encapsulation substantially prevents the bit stream from being wrongfully manipulated.

An additional benefit of encapsulating the bit stream and the mStream as disclosed herein is that a digital media may present itself as a functional object rather than a bit stream in DE applications . This is beneficial because in many DE applications handling bit streams is a relatively demanding task and each application often has to deal with the same task of determining how to retrieve information from the bit stream and how to modify the bit stream. Through the encapsulation and the exposure of functionalities through mManager the bit stream operations remain hidden from the DE applications which may greatly simplify the development of the DE applications .

According to an example and as shown in a media management system may employ various examples of the metadata centered media representation and deployment system according to an example. The media management system is depicted as including a communications interface processing circuitry storage circuitry a user interface a media input device and a database . The media management system may include additional components and some of the components described herein may be removed and or modified without departing from a scope of the media management system .

The communications interface is arranged to implement communications of the media management system which may be embodied in a computing device with respect to external devices which are not shown. For instance the communications interface may be arranged to communicate information bi directionally with respect to another computing device. The communications interface may be implemented as a network interface card NIC serial or parallel connection USB port Firewire interface flash memory interface floppy disk drive or any other suitable arrangement for communicating with respect to the media management system .

In one example the processing circuitry is arranged to process data control data access and storage issue commands and control other desired operations. The processing circuitry may include circuitry configured to implement desired programming provided by appropriate applications such as the methods discussed herein below. For instance the processing circuitry may be implemented as one or more of a processor and other structure configured to execute executable instructions including for example software firmware and or hardware circuitry instructions. The processing circuitry may thus include for instance hardware logic PGA FPGA ASIC state machines or other structures alone or in combination with a processor.

More particularly for instance the processing circuitry may execute or otherwise implement the mCodec and the mManager discussed above to represent a media through mWeaver . In addition the code for the mCodec and the mManager as well as additional code used to control the processing circuitry may be stored as part of the processing circuitry . In addition or alternatively this code may be stored in the storage circuitry .

The storage circuitry is configured to store programming such as executable code or instructions for instance software firmware or both electronic data image data meta data associated with image data databases or other digital information and may include processor usable media. Processor usable media may be embodied in any computer program product s or article of manufacture s which may contain store or maintain programming data and or digital information for use by or in connection with an instruction execution system including the processing circuitry . For instance the processor usable media may include any one of physical media such as electronic magnetic optical electromagnetic infrared or semiconductor media. Additional examples of processor usable media include for instance a portable magnetic computer diskette such as a floppy diskette zip disk hard drive random access memory read only memory flash memory cache memory and other configurations capable of storing programming data or other digital information.

At least some of the examples or aspects described herein may be implemented using programming stored within appropriate storage circuitry described above and or communicated through a network or other transmission media and configured to control appropriate processing circuitry. For instance programming may be provided through appropriate media including for instance embodied within articles of manufacture embodied within a data signal for instance modulated carrier wave data packets digital representations etc. communicated through an appropriate transmission medium such as a communication network for instance the Internet a private network or both wired electrical connection optical connection electromagnetic energy for instance through a communications interface or provided using other appropriate communication structure or medium. For instance programming including processor usable code may be communicated as a data signal embodied in a carrier wave.

The storage circuitry may further be in communication with the database which may be created by the processing circuitry to store data pertaining to the media including the bit stream and the mStream .

The user interface is configured to interact with a user by for instance displaying data for observation by the user audibly communicating data to a user etc. as well as receiving inputs from the user for instance tactile input voice instruction etc. As such for instance the user interface may include a display for instance a cathode ray tube LCD etc. configured to depict visual information and a keyboard mouse and or other suitable input device for enabling user interaction with the media management system . In one example a user may employ the user interface in developing a DE application stored in the storage circuitry .

The media input device may be implemented as any suitable device configured to provide electronic media data corresponding to media provided to the media management system . The media input device may include for instance a scanning device such as a digital camera a digital video camera another media management system a data storage device etc.

Turning now to there is shown a flow diagram of a method of representing a digital media according to an example. The method may be performed using the processing circuitry . However other methods may include more less and or alternative steps in other examples.

At step a digital media may be accessed. In other words for instance the processing circuitry may access digital media stored in the storage circuitry . As another example the processing circuitry may access digital media received through the media input device .

In any regard at step the processing circuitry may encode a bit stream of the digital media . The processing circuitry may invoke the mCodec to encode the bit stream as discussed above. In addition the coded media bit stream may follow the same coding structure of existing bit streams such as mpeg 1 mpeg 2 etc.

At step the processing circuitry may invoke the mCodec to generate a metadata representation of the bit stream which is described herein as the mStream . More particularly for instance the mStream is generated as a metadata representation that encapsulates information embedded in the bit stream and at least one type of media related information as discussed above. By way of example the media related information may include information known to be useful in or associated with DE applications .

At step the processing circuitry may generate pointers to the API s of the mManager . As discussed below implementation of the mManager may generally assures that the bit stream and the mStream are synchronized with each other and that they remain synchronized as changes to the bit stream and the mStream are made.

At step the processing circuitry may enable the streaming or circulation of the synchronized bit stream the mStream and the API pointers to one or more applications . Alternatively however the mManager may be streamed or circulated instead of the API pointers. The API pointers or the mManager may assure synchronization between the bit stream and the mStream because an application may be unable to access either the bit stream or the mStream without calling the APIs of the mManager . As such the mManager generally prevents the applications from having direct access to either the bit stream or the mStream as discussed below with respect to .

In one example the one or more applications may be stored in the storage circuitry such that the processing circuitry is configured to invoke the one or more applications . In addition or alternatively the one or more applications may be stored externally to the media management system in which case the synchronized bit stream and the mStream may be streamed through the communications interface .

With reference now to there is shown a flow diagram of a method of managing media having the mWeaver representation according to an example. The method may be performed using the processing circuitry . However other methods may include more less and or alternative steps in other examples.

At step the processing circuitry may receive a request from an application through either the metadata path or the bit stream path . The application may be internal or external to the media management system and the request may thus also be originated internally or externally to the media management system .

In any regard at step the processing circuitry may determine the request type. The processing circuitry may more particularly determine whether the request is a retrieving request or a breaking request. As described above a retrieving request includes requests that only require retrieval of embedded metadata information from the mStream . In this regard if the processing circuitry determines that the request is a retrieving request the processing circuitry may invoke the mManager to call APIs that operate on the mStream and not on the bit stream as indicated at step . In addition the processing circuitry may send the retrieved mStream to the requesting application at step .

As also discussed above a breaking request includes requests that require changing of the bit stream and the associated metadata representation the mStream . If the processing circuitry determines that the request is a breaking request the processing circuitry may invoke the APIs of the mManager to call the mCodec such that the mCodec generates a new bit stream and a new mStream based upon the new bit stream as indicated at step .

At step the processing circuitry may invoke the mManager to generally assure that the new bit stream and the new mStream are synchronized with each other. As such step is similar to step discussed above. In addition the processing circuitry may send the new bit stream and the new mStream to the requesting application at step .

What has been described and illustrated herein is a preferred embodiment of the invention along with some of its variations. The terms descriptions and figures used herein are set forth by way of illustration only and are not meant as limitations. Those skilled in the art will recognize that many variations are possible within the spirit and scope of the invention which is intended to be defined by the following claims and their equivalents in which all terms are meant in their broadest reasonable sense unless otherwise indicated.

